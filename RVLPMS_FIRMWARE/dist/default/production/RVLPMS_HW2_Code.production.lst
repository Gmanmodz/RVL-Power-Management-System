

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 14 09:03:46 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F15324
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    43                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	intentry,global,class=CODE,delta=2
    70                           	dabs	1,0x7E,2
    71  0000                     
    72                           ; Version 2.10
    73                           ; Generated 31/07/2019 GMT
    74                           ; 
    75                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC16F15324 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000E                     	;# 
   120  0012                     	;# 
   121  0014                     	;# 
   122  0018                     	;# 
   123  001A                     	;# 
   124  009B                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0119                     	;# 
   131  0119                     	;# 
   132  0119                     	;# 
   133  011A                     	;# 
   134  011A                     	;# 
   135  011A                     	;# 
   136  011B                     	;# 
   137  011B                     	;# 
   138  011B                     	;# 
   139  011B                     	;# 
   140  011B                     	;# 
   141  011C                     	;# 
   142  011C                     	;# 
   143  011C                     	;# 
   144  011D                     	;# 
   145  011D                     	;# 
   146  011D                     	;# 
   147  011E                     	;# 
   148  011E                     	;# 
   149  011E                     	;# 
   150  011F                     	;# 
   151  011F                     	;# 
   152  011F                     	;# 
   153  011F                     	;# 
   154  011F                     	;# 
   155  018C                     	;# 
   156  018D                     	;# 
   157  018E                     	;# 
   158  018F                     	;# 
   159  0190                     	;# 
   160  0191                     	;# 
   161  0192                     	;# 
   162  020C                     	;# 
   163  020C                     	;# 
   164  020D                     	;# 
   165  020E                     	;# 
   166  020F                     	;# 
   167  020F                     	;# 
   168  0210                     	;# 
   169  0210                     	;# 
   170  0211                     	;# 
   171  0211                     	;# 
   172  028C                     	;# 
   173  028C                     	;# 
   174  028D                     	;# 
   175  028D                     	;# 
   176  028E                     	;# 
   177  028F                     	;# 
   178  0290                     	;# 
   179  0291                     	;# 
   180  030C                     	;# 
   181  030C                     	;# 
   182  030D                     	;# 
   183  030E                     	;# 
   184  030F                     	;# 
   185  0310                     	;# 
   186  0310                     	;# 
   187  0311                     	;# 
   188  0312                     	;# 
   189  0313                     	;# 
   190  0314                     	;# 
   191  0314                     	;# 
   192  0315                     	;# 
   193  0316                     	;# 
   194  0318                     	;# 
   195  0318                     	;# 
   196  0319                     	;# 
   197  031A                     	;# 
   198  031C                     	;# 
   199  031C                     	;# 
   200  031D                     	;# 
   201  031E                     	;# 
   202  038C                     	;# 
   203  038C                     	;# 
   204  038D                     	;# 
   205  038E                     	;# 
   206  058C                     	;# 
   207  058C                     	;# 
   208  058D                     	;# 
   209  058E                     	;# 
   210  058F                     	;# 
   211  058F                     	;# 
   212  0590                     	;# 
   213  0591                     	;# 
   214  0592                     	;# 
   215  0593                     	;# 
   216  059C                     	;# 
   217  059C                     	;# 
   218  059D                     	;# 
   219  059D                     	;# 
   220  059E                     	;# 
   221  059F                     	;# 
   222  060C                     	;# 
   223  060D                     	;# 
   224  060E                     	;# 
   225  060F                     	;# 
   226  0610                     	;# 
   227  0611                     	;# 
   228  0612                     	;# 
   229  0613                     	;# 
   230  0614                     	;# 
   231  070C                     	;# 
   232  070D                     	;# 
   233  070E                     	;# 
   234  070F                     	;# 
   235  0710                     	;# 
   236  0711                     	;# 
   237  0712                     	;# 
   238  0713                     	;# 
   239  0716                     	;# 
   240  0717                     	;# 
   241  0718                     	;# 
   242  0719                     	;# 
   243  071A                     	;# 
   244  071B                     	;# 
   245  071C                     	;# 
   246  071D                     	;# 
   247  0796                     	;# 
   248  0797                     	;# 
   249  0798                     	;# 
   250  0799                     	;# 
   251  079A                     	;# 
   252  079B                     	;# 
   253  080C                     	;# 
   254  080D                     	;# 
   255  080E                     	;# 
   256  080F                     	;# 
   257  0810                     	;# 
   258  0811                     	;# 
   259  0812                     	;# 
   260  0813                     	;# 
   261  0814                     	;# 
   262  081A                     	;# 
   263  081A                     	;# 
   264  081B                     	;# 
   265  081C                     	;# 
   266  081C                     	;# 
   267  081D                     	;# 
   268  081E                     	;# 
   269  081F                     	;# 
   270  088C                     	;# 
   271  088D                     	;# 
   272  088E                     	;# 
   273  088F                     	;# 
   274  0890                     	;# 
   275  0891                     	;# 
   276  0892                     	;# 
   277  0893                     	;# 
   278  0895                     	;# 
   279  0896                     	;# 
   280  090C                     	;# 
   281  090E                     	;# 
   282  090F                     	;# 
   283  091F                     	;# 
   284  098F                     	;# 
   285  098F                     	;# 
   286  0990                     	;# 
   287  0991                     	;# 
   288  0992                     	;# 
   289  0993                     	;# 
   290  0994                     	;# 
   291  0995                     	;# 
   292  0996                     	;# 
   293  0997                     	;# 
   294  0A19                     	;# 
   295  0A19                     	;# 
   296  0A1A                     	;# 
   297  0A1A                     	;# 
   298  0A1B                     	;# 
   299  0A1B                     	;# 
   300  0A1B                     	;# 
   301  0A1C                     	;# 
   302  0A1C                     	;# 
   303  0A1D                     	;# 
   304  0A1D                     	;# 
   305  0A1E                     	;# 
   306  0A1E                     	;# 
   307  0A1F                     	;# 
   308  0A1F                     	;# 
   309  0A1F                     	;# 
   310  1E0F                     	;# 
   311  1E10                     	;# 
   312  1E11                     	;# 
   313  1E12                     	;# 
   314  1E13                     	;# 
   315  1E14                     	;# 
   316  1E15                     	;# 
   317  1E16                     	;# 
   318  1E17                     	;# 
   319  1E18                     	;# 
   320  1E19                     	;# 
   321  1E1A                     	;# 
   322  1E1B                     	;# 
   323  1E1C                     	;# 
   324  1E1D                     	;# 
   325  1E1E                     	;# 
   326  1E1F                     	;# 
   327  1E20                     	;# 
   328  1E21                     	;# 
   329  1E22                     	;# 
   330  1E23                     	;# 
   331  1E24                     	;# 
   332  1E25                     	;# 
   333  1E26                     	;# 
   334  1E27                     	;# 
   335  1E28                     	;# 
   336  1E29                     	;# 
   337  1E2A                     	;# 
   338  1E2B                     	;# 
   339  1E2C                     	;# 
   340  1E2D                     	;# 
   341  1E2E                     	;# 
   342  1E2F                     	;# 
   343  1E30                     	;# 
   344  1E31                     	;# 
   345  1E32                     	;# 
   346  1E33                     	;# 
   347  1E34                     	;# 
   348  1E35                     	;# 
   349  1E36                     	;# 
   350  1E37                     	;# 
   351  1E8F                     	;# 
   352  1E90                     	;# 
   353  1E91                     	;# 
   354  1E92                     	;# 
   355  1E93                     	;# 
   356  1E9C                     	;# 
   357  1EA1                     	;# 
   358  1EA2                     	;# 
   359  1EB1                     	;# 
   360  1EBB                     	;# 
   361  1EBC                     	;# 
   362  1EBD                     	;# 
   363  1EBE                     	;# 
   364  1EC3                     	;# 
   365  1EC5                     	;# 
   366  1EC6                     	;# 
   367  1EC7                     	;# 
   368  1ECB                     	;# 
   369  1ECC                     	;# 
   370  1ECD                     	;# 
   371  1ECE                     	;# 
   372  1F10                     	;# 
   373  1F11                     	;# 
   374  1F12                     	;# 
   375  1F13                     	;# 
   376  1F14                     	;# 
   377  1F15                     	;# 
   378  1F20                     	;# 
   379  1F21                     	;# 
   380  1F22                     	;# 
   381  1F23                     	;# 
   382  1F24                     	;# 
   383  1F25                     	;# 
   384  1F38                     	;# 
   385  1F39                     	;# 
   386  1F3A                     	;# 
   387  1F3B                     	;# 
   388  1F3C                     	;# 
   389  1F3D                     	;# 
   390  1F3E                     	;# 
   391  1F3F                     	;# 
   392  1F4E                     	;# 
   393  1F4F                     	;# 
   394  1F50                     	;# 
   395  1F51                     	;# 
   396  1F52                     	;# 
   397  1F53                     	;# 
   398  1F54                     	;# 
   399  1F55                     	;# 
   400  1FE4                     	;# 
   401  1FE5                     	;# 
   402  1FE6                     	;# 
   403  1FE7                     	;# 
   404  1FE8                     	;# 
   405  1FE8                     	;# 
   406  1FE9                     	;# 
   407  1FEA                     	;# 
   408  1FEA                     	;# 
   409  1FEB                     	;# 
   410  1FED                     	;# 
   411  1FEE                     	;# 
   412  1FEF                     	;# 
   413  0000                     	;# 
   414  0001                     	;# 
   415  0002                     	;# 
   416  0003                     	;# 
   417  0004                     	;# 
   418  0005                     	;# 
   419  0006                     	;# 
   420  0007                     	;# 
   421  0008                     	;# 
   422  0009                     	;# 
   423  000A                     	;# 
   424  000B                     	;# 
   425  000C                     	;# 
   426  000E                     	;# 
   427  0012                     	;# 
   428  0014                     	;# 
   429  0018                     	;# 
   430  001A                     	;# 
   431  009B                     	;# 
   432  009B                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  009F                     	;# 
   437  0119                     	;# 
   438  0119                     	;# 
   439  0119                     	;# 
   440  011A                     	;# 
   441  011A                     	;# 
   442  011A                     	;# 
   443  011B                     	;# 
   444  011B                     	;# 
   445  011B                     	;# 
   446  011B                     	;# 
   447  011B                     	;# 
   448  011C                     	;# 
   449  011C                     	;# 
   450  011C                     	;# 
   451  011D                     	;# 
   452  011D                     	;# 
   453  011D                     	;# 
   454  011E                     	;# 
   455  011E                     	;# 
   456  011E                     	;# 
   457  011F                     	;# 
   458  011F                     	;# 
   459  011F                     	;# 
   460  011F                     	;# 
   461  011F                     	;# 
   462  018C                     	;# 
   463  018D                     	;# 
   464  018E                     	;# 
   465  018F                     	;# 
   466  0190                     	;# 
   467  0191                     	;# 
   468  0192                     	;# 
   469  020C                     	;# 
   470  020C                     	;# 
   471  020D                     	;# 
   472  020E                     	;# 
   473  020F                     	;# 
   474  020F                     	;# 
   475  0210                     	;# 
   476  0210                     	;# 
   477  0211                     	;# 
   478  0211                     	;# 
   479  028C                     	;# 
   480  028C                     	;# 
   481  028D                     	;# 
   482  028D                     	;# 
   483  028E                     	;# 
   484  028F                     	;# 
   485  0290                     	;# 
   486  0291                     	;# 
   487  030C                     	;# 
   488  030C                     	;# 
   489  030D                     	;# 
   490  030E                     	;# 
   491  030F                     	;# 
   492  0310                     	;# 
   493  0310                     	;# 
   494  0311                     	;# 
   495  0312                     	;# 
   496  0313                     	;# 
   497  0314                     	;# 
   498  0314                     	;# 
   499  0315                     	;# 
   500  0316                     	;# 
   501  0318                     	;# 
   502  0318                     	;# 
   503  0319                     	;# 
   504  031A                     	;# 
   505  031C                     	;# 
   506  031C                     	;# 
   507  031D                     	;# 
   508  031E                     	;# 
   509  038C                     	;# 
   510  038C                     	;# 
   511  038D                     	;# 
   512  038E                     	;# 
   513  058C                     	;# 
   514  058C                     	;# 
   515  058D                     	;# 
   516  058E                     	;# 
   517  058F                     	;# 
   518  058F                     	;# 
   519  0590                     	;# 
   520  0591                     	;# 
   521  0592                     	;# 
   522  0593                     	;# 
   523  059C                     	;# 
   524  059C                     	;# 
   525  059D                     	;# 
   526  059D                     	;# 
   527  059E                     	;# 
   528  059F                     	;# 
   529  060C                     	;# 
   530  060D                     	;# 
   531  060E                     	;# 
   532  060F                     	;# 
   533  0610                     	;# 
   534  0611                     	;# 
   535  0612                     	;# 
   536  0613                     	;# 
   537  0614                     	;# 
   538  070C                     	;# 
   539  070D                     	;# 
   540  070E                     	;# 
   541  070F                     	;# 
   542  0710                     	;# 
   543  0711                     	;# 
   544  0712                     	;# 
   545  0713                     	;# 
   546  0716                     	;# 
   547  0717                     	;# 
   548  0718                     	;# 
   549  0719                     	;# 
   550  071A                     	;# 
   551  071B                     	;# 
   552  071C                     	;# 
   553  071D                     	;# 
   554  0796                     	;# 
   555  0797                     	;# 
   556  0798                     	;# 
   557  0799                     	;# 
   558  079A                     	;# 
   559  079B                     	;# 
   560  080C                     	;# 
   561  080D                     	;# 
   562  080E                     	;# 
   563  080F                     	;# 
   564  0810                     	;# 
   565  0811                     	;# 
   566  0812                     	;# 
   567  0813                     	;# 
   568  0814                     	;# 
   569  081A                     	;# 
   570  081A                     	;# 
   571  081B                     	;# 
   572  081C                     	;# 
   573  081C                     	;# 
   574  081D                     	;# 
   575  081E                     	;# 
   576  081F                     	;# 
   577  088C                     	;# 
   578  088D                     	;# 
   579  088E                     	;# 
   580  088F                     	;# 
   581  0890                     	;# 
   582  0891                     	;# 
   583  0892                     	;# 
   584  0893                     	;# 
   585  0895                     	;# 
   586  0896                     	;# 
   587  090C                     	;# 
   588  090E                     	;# 
   589  090F                     	;# 
   590  091F                     	;# 
   591  098F                     	;# 
   592  098F                     	;# 
   593  0990                     	;# 
   594  0991                     	;# 
   595  0992                     	;# 
   596  0993                     	;# 
   597  0994                     	;# 
   598  0995                     	;# 
   599  0996                     	;# 
   600  0997                     	;# 
   601  0A19                     	;# 
   602  0A19                     	;# 
   603  0A1A                     	;# 
   604  0A1A                     	;# 
   605  0A1B                     	;# 
   606  0A1B                     	;# 
   607  0A1B                     	;# 
   608  0A1C                     	;# 
   609  0A1C                     	;# 
   610  0A1D                     	;# 
   611  0A1D                     	;# 
   612  0A1E                     	;# 
   613  0A1E                     	;# 
   614  0A1F                     	;# 
   615  0A1F                     	;# 
   616  0A1F                     	;# 
   617  1E0F                     	;# 
   618  1E10                     	;# 
   619  1E11                     	;# 
   620  1E12                     	;# 
   621  1E13                     	;# 
   622  1E14                     	;# 
   623  1E15                     	;# 
   624  1E16                     	;# 
   625  1E17                     	;# 
   626  1E18                     	;# 
   627  1E19                     	;# 
   628  1E1A                     	;# 
   629  1E1B                     	;# 
   630  1E1C                     	;# 
   631  1E1D                     	;# 
   632  1E1E                     	;# 
   633  1E1F                     	;# 
   634  1E20                     	;# 
   635  1E21                     	;# 
   636  1E22                     	;# 
   637  1E23                     	;# 
   638  1E24                     	;# 
   639  1E25                     	;# 
   640  1E26                     	;# 
   641  1E27                     	;# 
   642  1E28                     	;# 
   643  1E29                     	;# 
   644  1E2A                     	;# 
   645  1E2B                     	;# 
   646  1E2C                     	;# 
   647  1E2D                     	;# 
   648  1E2E                     	;# 
   649  1E2F                     	;# 
   650  1E30                     	;# 
   651  1E31                     	;# 
   652  1E32                     	;# 
   653  1E33                     	;# 
   654  1E34                     	;# 
   655  1E35                     	;# 
   656  1E36                     	;# 
   657  1E37                     	;# 
   658  1E8F                     	;# 
   659  1E90                     	;# 
   660  1E91                     	;# 
   661  1E92                     	;# 
   662  1E93                     	;# 
   663  1E9C                     	;# 
   664  1EA1                     	;# 
   665  1EA2                     	;# 
   666  1EB1                     	;# 
   667  1EBB                     	;# 
   668  1EBC                     	;# 
   669  1EBD                     	;# 
   670  1EBE                     	;# 
   671  1EC3                     	;# 
   672  1EC5                     	;# 
   673  1EC6                     	;# 
   674  1EC7                     	;# 
   675  1ECB                     	;# 
   676  1ECC                     	;# 
   677  1ECD                     	;# 
   678  1ECE                     	;# 
   679  1F10                     	;# 
   680  1F11                     	;# 
   681  1F12                     	;# 
   682  1F13                     	;# 
   683  1F14                     	;# 
   684  1F15                     	;# 
   685  1F20                     	;# 
   686  1F21                     	;# 
   687  1F22                     	;# 
   688  1F23                     	;# 
   689  1F24                     	;# 
   690  1F25                     	;# 
   691  1F38                     	;# 
   692  1F39                     	;# 
   693  1F3A                     	;# 
   694  1F3B                     	;# 
   695  1F3C                     	;# 
   696  1F3D                     	;# 
   697  1F3E                     	;# 
   698  1F3F                     	;# 
   699  1F4E                     	;# 
   700  1F4F                     	;# 
   701  1F50                     	;# 
   702  1F51                     	;# 
   703  1F52                     	;# 
   704  1F53                     	;# 
   705  1F54                     	;# 
   706  1F55                     	;# 
   707  1FE4                     	;# 
   708  1FE5                     	;# 
   709  1FE6                     	;# 
   710  1FE7                     	;# 
   711  1FE8                     	;# 
   712  1FE8                     	;# 
   713  1FE9                     	;# 
   714  1FEA                     	;# 
   715  1FEA                     	;# 
   716  1FEB                     	;# 
   717  1FED                     	;# 
   718  1FEE                     	;# 
   719  1FEF                     	;# 
   720  0000                     	;# 
   721  0001                     	;# 
   722  0002                     	;# 
   723  0003                     	;# 
   724  0004                     	;# 
   725  0005                     	;# 
   726  0006                     	;# 
   727  0007                     	;# 
   728  0008                     	;# 
   729  0009                     	;# 
   730  000A                     	;# 
   731  000B                     	;# 
   732  000C                     	;# 
   733  000E                     	;# 
   734  0012                     	;# 
   735  0014                     	;# 
   736  0018                     	;# 
   737  001A                     	;# 
   738  009B                     	;# 
   739  009B                     	;# 
   740  009C                     	;# 
   741  009D                     	;# 
   742  009E                     	;# 
   743  009F                     	;# 
   744  0119                     	;# 
   745  0119                     	;# 
   746  0119                     	;# 
   747  011A                     	;# 
   748  011A                     	;# 
   749  011A                     	;# 
   750  011B                     	;# 
   751  011B                     	;# 
   752  011B                     	;# 
   753  011B                     	;# 
   754  011B                     	;# 
   755  011C                     	;# 
   756  011C                     	;# 
   757  011C                     	;# 
   758  011D                     	;# 
   759  011D                     	;# 
   760  011D                     	;# 
   761  011E                     	;# 
   762  011E                     	;# 
   763  011E                     	;# 
   764  011F                     	;# 
   765  011F                     	;# 
   766  011F                     	;# 
   767  011F                     	;# 
   768  011F                     	;# 
   769  018C                     	;# 
   770  018D                     	;# 
   771  018E                     	;# 
   772  018F                     	;# 
   773  0190                     	;# 
   774  0191                     	;# 
   775  0192                     	;# 
   776  020C                     	;# 
   777  020C                     	;# 
   778  020D                     	;# 
   779  020E                     	;# 
   780  020F                     	;# 
   781  020F                     	;# 
   782  0210                     	;# 
   783  0210                     	;# 
   784  0211                     	;# 
   785  0211                     	;# 
   786  028C                     	;# 
   787  028C                     	;# 
   788  028D                     	;# 
   789  028D                     	;# 
   790  028E                     	;# 
   791  028F                     	;# 
   792  0290                     	;# 
   793  0291                     	;# 
   794  030C                     	;# 
   795  030C                     	;# 
   796  030D                     	;# 
   797  030E                     	;# 
   798  030F                     	;# 
   799  0310                     	;# 
   800  0310                     	;# 
   801  0311                     	;# 
   802  0312                     	;# 
   803  0313                     	;# 
   804  0314                     	;# 
   805  0314                     	;# 
   806  0315                     	;# 
   807  0316                     	;# 
   808  0318                     	;# 
   809  0318                     	;# 
   810  0319                     	;# 
   811  031A                     	;# 
   812  031C                     	;# 
   813  031C                     	;# 
   814  031D                     	;# 
   815  031E                     	;# 
   816  038C                     	;# 
   817  038C                     	;# 
   818  038D                     	;# 
   819  038E                     	;# 
   820  058C                     	;# 
   821  058C                     	;# 
   822  058D                     	;# 
   823  058E                     	;# 
   824  058F                     	;# 
   825  058F                     	;# 
   826  0590                     	;# 
   827  0591                     	;# 
   828  0592                     	;# 
   829  0593                     	;# 
   830  059C                     	;# 
   831  059C                     	;# 
   832  059D                     	;# 
   833  059D                     	;# 
   834  059E                     	;# 
   835  059F                     	;# 
   836  060C                     	;# 
   837  060D                     	;# 
   838  060E                     	;# 
   839  060F                     	;# 
   840  0610                     	;# 
   841  0611                     	;# 
   842  0612                     	;# 
   843  0613                     	;# 
   844  0614                     	;# 
   845  070C                     	;# 
   846  070D                     	;# 
   847  070E                     	;# 
   848  070F                     	;# 
   849  0710                     	;# 
   850  0711                     	;# 
   851  0712                     	;# 
   852  0713                     	;# 
   853  0716                     	;# 
   854  0717                     	;# 
   855  0718                     	;# 
   856  0719                     	;# 
   857  071A                     	;# 
   858  071B                     	;# 
   859  071C                     	;# 
   860  071D                     	;# 
   861  0796                     	;# 
   862  0797                     	;# 
   863  0798                     	;# 
   864  0799                     	;# 
   865  079A                     	;# 
   866  079B                     	;# 
   867  080C                     	;# 
   868  080D                     	;# 
   869  080E                     	;# 
   870  080F                     	;# 
   871  0810                     	;# 
   872  0811                     	;# 
   873  0812                     	;# 
   874  0813                     	;# 
   875  0814                     	;# 
   876  081A                     	;# 
   877  081A                     	;# 
   878  081B                     	;# 
   879  081C                     	;# 
   880  081C                     	;# 
   881  081D                     	;# 
   882  081E                     	;# 
   883  081F                     	;# 
   884  088C                     	;# 
   885  088D                     	;# 
   886  088E                     	;# 
   887  088F                     	;# 
   888  0890                     	;# 
   889  0891                     	;# 
   890  0892                     	;# 
   891  0893                     	;# 
   892  0895                     	;# 
   893  0896                     	;# 
   894  090C                     	;# 
   895  090E                     	;# 
   896  090F                     	;# 
   897  091F                     	;# 
   898  098F                     	;# 
   899  098F                     	;# 
   900  0990                     	;# 
   901  0991                     	;# 
   902  0992                     	;# 
   903  0993                     	;# 
   904  0994                     	;# 
   905  0995                     	;# 
   906  0996                     	;# 
   907  0997                     	;# 
   908  0A19                     	;# 
   909  0A19                     	;# 
   910  0A1A                     	;# 
   911  0A1A                     	;# 
   912  0A1B                     	;# 
   913  0A1B                     	;# 
   914  0A1B                     	;# 
   915  0A1C                     	;# 
   916  0A1C                     	;# 
   917  0A1D                     	;# 
   918  0A1D                     	;# 
   919  0A1E                     	;# 
   920  0A1E                     	;# 
   921  0A1F                     	;# 
   922  0A1F                     	;# 
   923  0A1F                     	;# 
   924  1E0F                     	;# 
   925  1E10                     	;# 
   926  1E11                     	;# 
   927  1E12                     	;# 
   928  1E13                     	;# 
   929  1E14                     	;# 
   930  1E15                     	;# 
   931  1E16                     	;# 
   932  1E17                     	;# 
   933  1E18                     	;# 
   934  1E19                     	;# 
   935  1E1A                     	;# 
   936  1E1B                     	;# 
   937  1E1C                     	;# 
   938  1E1D                     	;# 
   939  1E1E                     	;# 
   940  1E1F                     	;# 
   941  1E20                     	;# 
   942  1E21                     	;# 
   943  1E22                     	;# 
   944  1E23                     	;# 
   945  1E24                     	;# 
   946  1E25                     	;# 
   947  1E26                     	;# 
   948  1E27                     	;# 
   949  1E28                     	;# 
   950  1E29                     	;# 
   951  1E2A                     	;# 
   952  1E2B                     	;# 
   953  1E2C                     	;# 
   954  1E2D                     	;# 
   955  1E2E                     	;# 
   956  1E2F                     	;# 
   957  1E30                     	;# 
   958  1E31                     	;# 
   959  1E32                     	;# 
   960  1E33                     	;# 
   961  1E34                     	;# 
   962  1E35                     	;# 
   963  1E36                     	;# 
   964  1E37                     	;# 
   965  1E8F                     	;# 
   966  1E90                     	;# 
   967  1E91                     	;# 
   968  1E92                     	;# 
   969  1E93                     	;# 
   970  1E9C                     	;# 
   971  1EA1                     	;# 
   972  1EA2                     	;# 
   973  1EB1                     	;# 
   974  1EBB                     	;# 
   975  1EBC                     	;# 
   976  1EBD                     	;# 
   977  1EBE                     	;# 
   978  1EC3                     	;# 
   979  1EC5                     	;# 
   980  1EC6                     	;# 
   981  1EC7                     	;# 
   982  1ECB                     	;# 
   983  1ECC                     	;# 
   984  1ECD                     	;# 
   985  1ECE                     	;# 
   986  1F10                     	;# 
   987  1F11                     	;# 
   988  1F12                     	;# 
   989  1F13                     	;# 
   990  1F14                     	;# 
   991  1F15                     	;# 
   992  1F20                     	;# 
   993  1F21                     	;# 
   994  1F22                     	;# 
   995  1F23                     	;# 
   996  1F24                     	;# 
   997  1F25                     	;# 
   998  1F38                     	;# 
   999  1F39                     	;# 
  1000  1F3A                     	;# 
  1001  1F3B                     	;# 
  1002  1F3C                     	;# 
  1003  1F3D                     	;# 
  1004  1F3E                     	;# 
  1005  1F3F                     	;# 
  1006  1F4E                     	;# 
  1007  1F4F                     	;# 
  1008  1F50                     	;# 
  1009  1F51                     	;# 
  1010  1F52                     	;# 
  1011  1F53                     	;# 
  1012  1F54                     	;# 
  1013  1F55                     	;# 
  1014  1FE4                     	;# 
  1015  1FE5                     	;# 
  1016  1FE6                     	;# 
  1017  1FE7                     	;# 
  1018  1FE8                     	;# 
  1019  1FE8                     	;# 
  1020  1FE9                     	;# 
  1021  1FEA                     	;# 
  1022  1FEA                     	;# 
  1023  1FEB                     	;# 
  1024  1FED                     	;# 
  1025  1FEE                     	;# 
  1026  1FEF                     	;# 
  1027  0000                     	;# 
  1028  0001                     	;# 
  1029  0002                     	;# 
  1030  0003                     	;# 
  1031  0004                     	;# 
  1032  0005                     	;# 
  1033  0006                     	;# 
  1034  0007                     	;# 
  1035  0008                     	;# 
  1036  0009                     	;# 
  1037  000A                     	;# 
  1038  000B                     	;# 
  1039  000C                     	;# 
  1040  000E                     	;# 
  1041  0012                     	;# 
  1042  0014                     	;# 
  1043  0018                     	;# 
  1044  001A                     	;# 
  1045  009B                     	;# 
  1046  009B                     	;# 
  1047  009C                     	;# 
  1048  009D                     	;# 
  1049  009E                     	;# 
  1050  009F                     	;# 
  1051  0119                     	;# 
  1052  0119                     	;# 
  1053  0119                     	;# 
  1054  011A                     	;# 
  1055  011A                     	;# 
  1056  011A                     	;# 
  1057  011B                     	;# 
  1058  011B                     	;# 
  1059  011B                     	;# 
  1060  011B                     	;# 
  1061  011B                     	;# 
  1062  011C                     	;# 
  1063  011C                     	;# 
  1064  011C                     	;# 
  1065  011D                     	;# 
  1066  011D                     	;# 
  1067  011D                     	;# 
  1068  011E                     	;# 
  1069  011E                     	;# 
  1070  011E                     	;# 
  1071  011F                     	;# 
  1072  011F                     	;# 
  1073  011F                     	;# 
  1074  011F                     	;# 
  1075  011F                     	;# 
  1076  018C                     	;# 
  1077  018D                     	;# 
  1078  018E                     	;# 
  1079  018F                     	;# 
  1080  0190                     	;# 
  1081  0191                     	;# 
  1082  0192                     	;# 
  1083  020C                     	;# 
  1084  020C                     	;# 
  1085  020D                     	;# 
  1086  020E                     	;# 
  1087  020F                     	;# 
  1088  020F                     	;# 
  1089  0210                     	;# 
  1090  0210                     	;# 
  1091  0211                     	;# 
  1092  0211                     	;# 
  1093  028C                     	;# 
  1094  028C                     	;# 
  1095  028D                     	;# 
  1096  028D                     	;# 
  1097  028E                     	;# 
  1098  028F                     	;# 
  1099  0290                     	;# 
  1100  0291                     	;# 
  1101  030C                     	;# 
  1102  030C                     	;# 
  1103  030D                     	;# 
  1104  030E                     	;# 
  1105  030F                     	;# 
  1106  0310                     	;# 
  1107  0310                     	;# 
  1108  0311                     	;# 
  1109  0312                     	;# 
  1110  0313                     	;# 
  1111  0314                     	;# 
  1112  0314                     	;# 
  1113  0315                     	;# 
  1114  0316                     	;# 
  1115  0318                     	;# 
  1116  0318                     	;# 
  1117  0319                     	;# 
  1118  031A                     	;# 
  1119  031C                     	;# 
  1120  031C                     	;# 
  1121  031D                     	;# 
  1122  031E                     	;# 
  1123  038C                     	;# 
  1124  038C                     	;# 
  1125  038D                     	;# 
  1126  038E                     	;# 
  1127  058C                     	;# 
  1128  058C                     	;# 
  1129  058D                     	;# 
  1130  058E                     	;# 
  1131  058F                     	;# 
  1132  058F                     	;# 
  1133  0590                     	;# 
  1134  0591                     	;# 
  1135  0592                     	;# 
  1136  0593                     	;# 
  1137  059C                     	;# 
  1138  059C                     	;# 
  1139  059D                     	;# 
  1140  059D                     	;# 
  1141  059E                     	;# 
  1142  059F                     	;# 
  1143  060C                     	;# 
  1144  060D                     	;# 
  1145  060E                     	;# 
  1146  060F                     	;# 
  1147  0610                     	;# 
  1148  0611                     	;# 
  1149  0612                     	;# 
  1150  0613                     	;# 
  1151  0614                     	;# 
  1152  070C                     	;# 
  1153  070D                     	;# 
  1154  070E                     	;# 
  1155  070F                     	;# 
  1156  0710                     	;# 
  1157  0711                     	;# 
  1158  0712                     	;# 
  1159  0713                     	;# 
  1160  0716                     	;# 
  1161  0717                     	;# 
  1162  0718                     	;# 
  1163  0719                     	;# 
  1164  071A                     	;# 
  1165  071B                     	;# 
  1166  071C                     	;# 
  1167  071D                     	;# 
  1168  0796                     	;# 
  1169  0797                     	;# 
  1170  0798                     	;# 
  1171  0799                     	;# 
  1172  079A                     	;# 
  1173  079B                     	;# 
  1174  080C                     	;# 
  1175  080D                     	;# 
  1176  080E                     	;# 
  1177  080F                     	;# 
  1178  0810                     	;# 
  1179  0811                     	;# 
  1180  0812                     	;# 
  1181  0813                     	;# 
  1182  0814                     	;# 
  1183  081A                     	;# 
  1184  081A                     	;# 
  1185  081B                     	;# 
  1186  081C                     	;# 
  1187  081C                     	;# 
  1188  081D                     	;# 
  1189  081E                     	;# 
  1190  081F                     	;# 
  1191  088C                     	;# 
  1192  088D                     	;# 
  1193  088E                     	;# 
  1194  088F                     	;# 
  1195  0890                     	;# 
  1196  0891                     	;# 
  1197  0892                     	;# 
  1198  0893                     	;# 
  1199  0895                     	;# 
  1200  0896                     	;# 
  1201  090C                     	;# 
  1202  090E                     	;# 
  1203  090F                     	;# 
  1204  091F                     	;# 
  1205  098F                     	;# 
  1206  098F                     	;# 
  1207  0990                     	;# 
  1208  0991                     	;# 
  1209  0992                     	;# 
  1210  0993                     	;# 
  1211  0994                     	;# 
  1212  0995                     	;# 
  1213  0996                     	;# 
  1214  0997                     	;# 
  1215  0A19                     	;# 
  1216  0A19                     	;# 
  1217  0A1A                     	;# 
  1218  0A1A                     	;# 
  1219  0A1B                     	;# 
  1220  0A1B                     	;# 
  1221  0A1B                     	;# 
  1222  0A1C                     	;# 
  1223  0A1C                     	;# 
  1224  0A1D                     	;# 
  1225  0A1D                     	;# 
  1226  0A1E                     	;# 
  1227  0A1E                     	;# 
  1228  0A1F                     	;# 
  1229  0A1F                     	;# 
  1230  0A1F                     	;# 
  1231  1E0F                     	;# 
  1232  1E10                     	;# 
  1233  1E11                     	;# 
  1234  1E12                     	;# 
  1235  1E13                     	;# 
  1236  1E14                     	;# 
  1237  1E15                     	;# 
  1238  1E16                     	;# 
  1239  1E17                     	;# 
  1240  1E18                     	;# 
  1241  1E19                     	;# 
  1242  1E1A                     	;# 
  1243  1E1B                     	;# 
  1244  1E1C                     	;# 
  1245  1E1D                     	;# 
  1246  1E1E                     	;# 
  1247  1E1F                     	;# 
  1248  1E20                     	;# 
  1249  1E21                     	;# 
  1250  1E22                     	;# 
  1251  1E23                     	;# 
  1252  1E24                     	;# 
  1253  1E25                     	;# 
  1254  1E26                     	;# 
  1255  1E27                     	;# 
  1256  1E28                     	;# 
  1257  1E29                     	;# 
  1258  1E2A                     	;# 
  1259  1E2B                     	;# 
  1260  1E2C                     	;# 
  1261  1E2D                     	;# 
  1262  1E2E                     	;# 
  1263  1E2F                     	;# 
  1264  1E30                     	;# 
  1265  1E31                     	;# 
  1266  1E32                     	;# 
  1267  1E33                     	;# 
  1268  1E34                     	;# 
  1269  1E35                     	;# 
  1270  1E36                     	;# 
  1271  1E37                     	;# 
  1272  1E8F                     	;# 
  1273  1E90                     	;# 
  1274  1E91                     	;# 
  1275  1E92                     	;# 
  1276  1E93                     	;# 
  1277  1E9C                     	;# 
  1278  1EA1                     	;# 
  1279  1EA2                     	;# 
  1280  1EB1                     	;# 
  1281  1EBB                     	;# 
  1282  1EBC                     	;# 
  1283  1EBD                     	;# 
  1284  1EBE                     	;# 
  1285  1EC3                     	;# 
  1286  1EC5                     	;# 
  1287  1EC6                     	;# 
  1288  1EC7                     	;# 
  1289  1ECB                     	;# 
  1290  1ECC                     	;# 
  1291  1ECD                     	;# 
  1292  1ECE                     	;# 
  1293  1F10                     	;# 
  1294  1F11                     	;# 
  1295  1F12                     	;# 
  1296  1F13                     	;# 
  1297  1F14                     	;# 
  1298  1F15                     	;# 
  1299  1F20                     	;# 
  1300  1F21                     	;# 
  1301  1F22                     	;# 
  1302  1F23                     	;# 
  1303  1F24                     	;# 
  1304  1F25                     	;# 
  1305  1F38                     	;# 
  1306  1F39                     	;# 
  1307  1F3A                     	;# 
  1308  1F3B                     	;# 
  1309  1F3C                     	;# 
  1310  1F3D                     	;# 
  1311  1F3E                     	;# 
  1312  1F3F                     	;# 
  1313  1F4E                     	;# 
  1314  1F4F                     	;# 
  1315  1F50                     	;# 
  1316  1F51                     	;# 
  1317  1F52                     	;# 
  1318  1F53                     	;# 
  1319  1F54                     	;# 
  1320  1F55                     	;# 
  1321  1FE4                     	;# 
  1322  1FE5                     	;# 
  1323  1FE6                     	;# 
  1324  1FE7                     	;# 
  1325  1FE8                     	;# 
  1326  1FE8                     	;# 
  1327  1FE9                     	;# 
  1328  1FEA                     	;# 
  1329  1FEA                     	;# 
  1330  1FEB                     	;# 
  1331  1FED                     	;# 
  1332  1FEE                     	;# 
  1333  1FEF                     	;# 
  1334  0000                     	;# 
  1335  0001                     	;# 
  1336  0002                     	;# 
  1337  0003                     	;# 
  1338  0004                     	;# 
  1339  0005                     	;# 
  1340  0006                     	;# 
  1341  0007                     	;# 
  1342  0008                     	;# 
  1343  0009                     	;# 
  1344  000A                     	;# 
  1345  000B                     	;# 
  1346  000C                     	;# 
  1347  000E                     	;# 
  1348  0012                     	;# 
  1349  0014                     	;# 
  1350  0018                     	;# 
  1351  001A                     	;# 
  1352  009B                     	;# 
  1353  009B                     	;# 
  1354  009C                     	;# 
  1355  009D                     	;# 
  1356  009E                     	;# 
  1357  009F                     	;# 
  1358  0119                     	;# 
  1359  0119                     	;# 
  1360  0119                     	;# 
  1361  011A                     	;# 
  1362  011A                     	;# 
  1363  011A                     	;# 
  1364  011B                     	;# 
  1365  011B                     	;# 
  1366  011B                     	;# 
  1367  011B                     	;# 
  1368  011B                     	;# 
  1369  011C                     	;# 
  1370  011C                     	;# 
  1371  011C                     	;# 
  1372  011D                     	;# 
  1373  011D                     	;# 
  1374  011D                     	;# 
  1375  011E                     	;# 
  1376  011E                     	;# 
  1377  011E                     	;# 
  1378  011F                     	;# 
  1379  011F                     	;# 
  1380  011F                     	;# 
  1381  011F                     	;# 
  1382  011F                     	;# 
  1383  018C                     	;# 
  1384  018D                     	;# 
  1385  018E                     	;# 
  1386  018F                     	;# 
  1387  0190                     	;# 
  1388  0191                     	;# 
  1389  0192                     	;# 
  1390  020C                     	;# 
  1391  020C                     	;# 
  1392  020D                     	;# 
  1393  020E                     	;# 
  1394  020F                     	;# 
  1395  020F                     	;# 
  1396  0210                     	;# 
  1397  0210                     	;# 
  1398  0211                     	;# 
  1399  0211                     	;# 
  1400  028C                     	;# 
  1401  028C                     	;# 
  1402  028D                     	;# 
  1403  028D                     	;# 
  1404  028E                     	;# 
  1405  028F                     	;# 
  1406  0290                     	;# 
  1407  0291                     	;# 
  1408  030C                     	;# 
  1409  030C                     	;# 
  1410  030D                     	;# 
  1411  030E                     	;# 
  1412  030F                     	;# 
  1413  0310                     	;# 
  1414  0310                     	;# 
  1415  0311                     	;# 
  1416  0312                     	;# 
  1417  0313                     	;# 
  1418  0314                     	;# 
  1419  0314                     	;# 
  1420  0315                     	;# 
  1421  0316                     	;# 
  1422  0318                     	;# 
  1423  0318                     	;# 
  1424  0319                     	;# 
  1425  031A                     	;# 
  1426  031C                     	;# 
  1427  031C                     	;# 
  1428  031D                     	;# 
  1429  031E                     	;# 
  1430  038C                     	;# 
  1431  038C                     	;# 
  1432  038D                     	;# 
  1433  038E                     	;# 
  1434  058C                     	;# 
  1435  058C                     	;# 
  1436  058D                     	;# 
  1437  058E                     	;# 
  1438  058F                     	;# 
  1439  058F                     	;# 
  1440  0590                     	;# 
  1441  0591                     	;# 
  1442  0592                     	;# 
  1443  0593                     	;# 
  1444  059C                     	;# 
  1445  059C                     	;# 
  1446  059D                     	;# 
  1447  059D                     	;# 
  1448  059E                     	;# 
  1449  059F                     	;# 
  1450  060C                     	;# 
  1451  060D                     	;# 
  1452  060E                     	;# 
  1453  060F                     	;# 
  1454  0610                     	;# 
  1455  0611                     	;# 
  1456  0612                     	;# 
  1457  0613                     	;# 
  1458  0614                     	;# 
  1459  070C                     	;# 
  1460  070D                     	;# 
  1461  070E                     	;# 
  1462  070F                     	;# 
  1463  0710                     	;# 
  1464  0711                     	;# 
  1465  0712                     	;# 
  1466  0713                     	;# 
  1467  0716                     	;# 
  1468  0717                     	;# 
  1469  0718                     	;# 
  1470  0719                     	;# 
  1471  071A                     	;# 
  1472  071B                     	;# 
  1473  071C                     	;# 
  1474  071D                     	;# 
  1475  0796                     	;# 
  1476  0797                     	;# 
  1477  0798                     	;# 
  1478  0799                     	;# 
  1479  079A                     	;# 
  1480  079B                     	;# 
  1481  080C                     	;# 
  1482  080D                     	;# 
  1483  080E                     	;# 
  1484  080F                     	;# 
  1485  0810                     	;# 
  1486  0811                     	;# 
  1487  0812                     	;# 
  1488  0813                     	;# 
  1489  0814                     	;# 
  1490  081A                     	;# 
  1491  081A                     	;# 
  1492  081B                     	;# 
  1493  081C                     	;# 
  1494  081C                     	;# 
  1495  081D                     	;# 
  1496  081E                     	;# 
  1497  081F                     	;# 
  1498  088C                     	;# 
  1499  088D                     	;# 
  1500  088E                     	;# 
  1501  088F                     	;# 
  1502  0890                     	;# 
  1503  0891                     	;# 
  1504  0892                     	;# 
  1505  0893                     	;# 
  1506  0895                     	;# 
  1507  0896                     	;# 
  1508  090C                     	;# 
  1509  090E                     	;# 
  1510  090F                     	;# 
  1511  091F                     	;# 
  1512  098F                     	;# 
  1513  098F                     	;# 
  1514  0990                     	;# 
  1515  0991                     	;# 
  1516  0992                     	;# 
  1517  0993                     	;# 
  1518  0994                     	;# 
  1519  0995                     	;# 
  1520  0996                     	;# 
  1521  0997                     	;# 
  1522  0A19                     	;# 
  1523  0A19                     	;# 
  1524  0A1A                     	;# 
  1525  0A1A                     	;# 
  1526  0A1B                     	;# 
  1527  0A1B                     	;# 
  1528  0A1B                     	;# 
  1529  0A1C                     	;# 
  1530  0A1C                     	;# 
  1531  0A1D                     	;# 
  1532  0A1D                     	;# 
  1533  0A1E                     	;# 
  1534  0A1E                     	;# 
  1535  0A1F                     	;# 
  1536  0A1F                     	;# 
  1537  0A1F                     	;# 
  1538  1E0F                     	;# 
  1539  1E10                     	;# 
  1540  1E11                     	;# 
  1541  1E12                     	;# 
  1542  1E13                     	;# 
  1543  1E14                     	;# 
  1544  1E15                     	;# 
  1545  1E16                     	;# 
  1546  1E17                     	;# 
  1547  1E18                     	;# 
  1548  1E19                     	;# 
  1549  1E1A                     	;# 
  1550  1E1B                     	;# 
  1551  1E1C                     	;# 
  1552  1E1D                     	;# 
  1553  1E1E                     	;# 
  1554  1E1F                     	;# 
  1555  1E20                     	;# 
  1556  1E21                     	;# 
  1557  1E22                     	;# 
  1558  1E23                     	;# 
  1559  1E24                     	;# 
  1560  1E25                     	;# 
  1561  1E26                     	;# 
  1562  1E27                     	;# 
  1563  1E28                     	;# 
  1564  1E29                     	;# 
  1565  1E2A                     	;# 
  1566  1E2B                     	;# 
  1567  1E2C                     	;# 
  1568  1E2D                     	;# 
  1569  1E2E                     	;# 
  1570  1E2F                     	;# 
  1571  1E30                     	;# 
  1572  1E31                     	;# 
  1573  1E32                     	;# 
  1574  1E33                     	;# 
  1575  1E34                     	;# 
  1576  1E35                     	;# 
  1577  1E36                     	;# 
  1578  1E37                     	;# 
  1579  1E8F                     	;# 
  1580  1E90                     	;# 
  1581  1E91                     	;# 
  1582  1E92                     	;# 
  1583  1E93                     	;# 
  1584  1E9C                     	;# 
  1585  1EA1                     	;# 
  1586  1EA2                     	;# 
  1587  1EB1                     	;# 
  1588  1EBB                     	;# 
  1589  1EBC                     	;# 
  1590  1EBD                     	;# 
  1591  1EBE                     	;# 
  1592  1EC3                     	;# 
  1593  1EC5                     	;# 
  1594  1EC6                     	;# 
  1595  1EC7                     	;# 
  1596  1ECB                     	;# 
  1597  1ECC                     	;# 
  1598  1ECD                     	;# 
  1599  1ECE                     	;# 
  1600  1F10                     	;# 
  1601  1F11                     	;# 
  1602  1F12                     	;# 
  1603  1F13                     	;# 
  1604  1F14                     	;# 
  1605  1F15                     	;# 
  1606  1F20                     	;# 
  1607  1F21                     	;# 
  1608  1F22                     	;# 
  1609  1F23                     	;# 
  1610  1F24                     	;# 
  1611  1F25                     	;# 
  1612  1F38                     	;# 
  1613  1F39                     	;# 
  1614  1F3A                     	;# 
  1615  1F3B                     	;# 
  1616  1F3C                     	;# 
  1617  1F3D                     	;# 
  1618  1F3E                     	;# 
  1619  1F3F                     	;# 
  1620  1F4E                     	;# 
  1621  1F4F                     	;# 
  1622  1F50                     	;# 
  1623  1F51                     	;# 
  1624  1F52                     	;# 
  1625  1F53                     	;# 
  1626  1F54                     	;# 
  1627  1F55                     	;# 
  1628  1FE4                     	;# 
  1629  1FE5                     	;# 
  1630  1FE6                     	;# 
  1631  1FE7                     	;# 
  1632  1FE8                     	;# 
  1633  1FE8                     	;# 
  1634  1FE9                     	;# 
  1635  1FEA                     	;# 
  1636  1FEA                     	;# 
  1637  1FEB                     	;# 
  1638  1FED                     	;# 
  1639  1FEE                     	;# 
  1640  1FEF                     	;# 
  1641  0000                     	;# 
  1642  0001                     	;# 
  1643  0002                     	;# 
  1644  0003                     	;# 
  1645  0004                     	;# 
  1646  0005                     	;# 
  1647  0006                     	;# 
  1648  0007                     	;# 
  1649  0008                     	;# 
  1650  0009                     	;# 
  1651  000A                     	;# 
  1652  000B                     	;# 
  1653  000C                     	;# 
  1654  000E                     	;# 
  1655  0012                     	;# 
  1656  0014                     	;# 
  1657  0018                     	;# 
  1658  001A                     	;# 
  1659  009B                     	;# 
  1660  009B                     	;# 
  1661  009C                     	;# 
  1662  009D                     	;# 
  1663  009E                     	;# 
  1664  009F                     	;# 
  1665  0119                     	;# 
  1666  0119                     	;# 
  1667  0119                     	;# 
  1668  011A                     	;# 
  1669  011A                     	;# 
  1670  011A                     	;# 
  1671  011B                     	;# 
  1672  011B                     	;# 
  1673  011B                     	;# 
  1674  011B                     	;# 
  1675  011B                     	;# 
  1676  011C                     	;# 
  1677  011C                     	;# 
  1678  011C                     	;# 
  1679  011D                     	;# 
  1680  011D                     	;# 
  1681  011D                     	;# 
  1682  011E                     	;# 
  1683  011E                     	;# 
  1684  011E                     	;# 
  1685  011F                     	;# 
  1686  011F                     	;# 
  1687  011F                     	;# 
  1688  011F                     	;# 
  1689  011F                     	;# 
  1690  018C                     	;# 
  1691  018D                     	;# 
  1692  018E                     	;# 
  1693  018F                     	;# 
  1694  0190                     	;# 
  1695  0191                     	;# 
  1696  0192                     	;# 
  1697  020C                     	;# 
  1698  020C                     	;# 
  1699  020D                     	;# 
  1700  020E                     	;# 
  1701  020F                     	;# 
  1702  020F                     	;# 
  1703  0210                     	;# 
  1704  0210                     	;# 
  1705  0211                     	;# 
  1706  0211                     	;# 
  1707  028C                     	;# 
  1708  028C                     	;# 
  1709  028D                     	;# 
  1710  028D                     	;# 
  1711  028E                     	;# 
  1712  028F                     	;# 
  1713  0290                     	;# 
  1714  0291                     	;# 
  1715  030C                     	;# 
  1716  030C                     	;# 
  1717  030D                     	;# 
  1718  030E                     	;# 
  1719  030F                     	;# 
  1720  0310                     	;# 
  1721  0310                     	;# 
  1722  0311                     	;# 
  1723  0312                     	;# 
  1724  0313                     	;# 
  1725  0314                     	;# 
  1726  0314                     	;# 
  1727  0315                     	;# 
  1728  0316                     	;# 
  1729  0318                     	;# 
  1730  0318                     	;# 
  1731  0319                     	;# 
  1732  031A                     	;# 
  1733  031C                     	;# 
  1734  031C                     	;# 
  1735  031D                     	;# 
  1736  031E                     	;# 
  1737  038C                     	;# 
  1738  038C                     	;# 
  1739  038D                     	;# 
  1740  038E                     	;# 
  1741  058C                     	;# 
  1742  058C                     	;# 
  1743  058D                     	;# 
  1744  058E                     	;# 
  1745  058F                     	;# 
  1746  058F                     	;# 
  1747  0590                     	;# 
  1748  0591                     	;# 
  1749  0592                     	;# 
  1750  0593                     	;# 
  1751  059C                     	;# 
  1752  059C                     	;# 
  1753  059D                     	;# 
  1754  059D                     	;# 
  1755  059E                     	;# 
  1756  059F                     	;# 
  1757  060C                     	;# 
  1758  060D                     	;# 
  1759  060E                     	;# 
  1760  060F                     	;# 
  1761  0610                     	;# 
  1762  0611                     	;# 
  1763  0612                     	;# 
  1764  0613                     	;# 
  1765  0614                     	;# 
  1766  070C                     	;# 
  1767  070D                     	;# 
  1768  070E                     	;# 
  1769  070F                     	;# 
  1770  0710                     	;# 
  1771  0711                     	;# 
  1772  0712                     	;# 
  1773  0713                     	;# 
  1774  0716                     	;# 
  1775  0717                     	;# 
  1776  0718                     	;# 
  1777  0719                     	;# 
  1778  071A                     	;# 
  1779  071B                     	;# 
  1780  071C                     	;# 
  1781  071D                     	;# 
  1782  0796                     	;# 
  1783  0797                     	;# 
  1784  0798                     	;# 
  1785  0799                     	;# 
  1786  079A                     	;# 
  1787  079B                     	;# 
  1788  080C                     	;# 
  1789  080D                     	;# 
  1790  080E                     	;# 
  1791  080F                     	;# 
  1792  0810                     	;# 
  1793  0811                     	;# 
  1794  0812                     	;# 
  1795  0813                     	;# 
  1796  0814                     	;# 
  1797  081A                     	;# 
  1798  081A                     	;# 
  1799  081B                     	;# 
  1800  081C                     	;# 
  1801  081C                     	;# 
  1802  081D                     	;# 
  1803  081E                     	;# 
  1804  081F                     	;# 
  1805  088C                     	;# 
  1806  088D                     	;# 
  1807  088E                     	;# 
  1808  088F                     	;# 
  1809  0890                     	;# 
  1810  0891                     	;# 
  1811  0892                     	;# 
  1812  0893                     	;# 
  1813  0895                     	;# 
  1814  0896                     	;# 
  1815  090C                     	;# 
  1816  090E                     	;# 
  1817  090F                     	;# 
  1818  091F                     	;# 
  1819  098F                     	;# 
  1820  098F                     	;# 
  1821  0990                     	;# 
  1822  0991                     	;# 
  1823  0992                     	;# 
  1824  0993                     	;# 
  1825  0994                     	;# 
  1826  0995                     	;# 
  1827  0996                     	;# 
  1828  0997                     	;# 
  1829  0A19                     	;# 
  1830  0A19                     	;# 
  1831  0A1A                     	;# 
  1832  0A1A                     	;# 
  1833  0A1B                     	;# 
  1834  0A1B                     	;# 
  1835  0A1B                     	;# 
  1836  0A1C                     	;# 
  1837  0A1C                     	;# 
  1838  0A1D                     	;# 
  1839  0A1D                     	;# 
  1840  0A1E                     	;# 
  1841  0A1E                     	;# 
  1842  0A1F                     	;# 
  1843  0A1F                     	;# 
  1844  0A1F                     	;# 
  1845  1E0F                     	;# 
  1846  1E10                     	;# 
  1847  1E11                     	;# 
  1848  1E12                     	;# 
  1849  1E13                     	;# 
  1850  1E14                     	;# 
  1851  1E15                     	;# 
  1852  1E16                     	;# 
  1853  1E17                     	;# 
  1854  1E18                     	;# 
  1855  1E19                     	;# 
  1856  1E1A                     	;# 
  1857  1E1B                     	;# 
  1858  1E1C                     	;# 
  1859  1E1D                     	;# 
  1860  1E1E                     	;# 
  1861  1E1F                     	;# 
  1862  1E20                     	;# 
  1863  1E21                     	;# 
  1864  1E22                     	;# 
  1865  1E23                     	;# 
  1866  1E24                     	;# 
  1867  1E25                     	;# 
  1868  1E26                     	;# 
  1869  1E27                     	;# 
  1870  1E28                     	;# 
  1871  1E29                     	;# 
  1872  1E2A                     	;# 
  1873  1E2B                     	;# 
  1874  1E2C                     	;# 
  1875  1E2D                     	;# 
  1876  1E2E                     	;# 
  1877  1E2F                     	;# 
  1878  1E30                     	;# 
  1879  1E31                     	;# 
  1880  1E32                     	;# 
  1881  1E33                     	;# 
  1882  1E34                     	;# 
  1883  1E35                     	;# 
  1884  1E36                     	;# 
  1885  1E37                     	;# 
  1886  1E8F                     	;# 
  1887  1E90                     	;# 
  1888  1E91                     	;# 
  1889  1E92                     	;# 
  1890  1E93                     	;# 
  1891  1E9C                     	;# 
  1892  1EA1                     	;# 
  1893  1EA2                     	;# 
  1894  1EB1                     	;# 
  1895  1EBB                     	;# 
  1896  1EBC                     	;# 
  1897  1EBD                     	;# 
  1898  1EBE                     	;# 
  1899  1EC3                     	;# 
  1900  1EC5                     	;# 
  1901  1EC6                     	;# 
  1902  1EC7                     	;# 
  1903  1ECB                     	;# 
  1904  1ECC                     	;# 
  1905  1ECD                     	;# 
  1906  1ECE                     	;# 
  1907  1F10                     	;# 
  1908  1F11                     	;# 
  1909  1F12                     	;# 
  1910  1F13                     	;# 
  1911  1F14                     	;# 
  1912  1F15                     	;# 
  1913  1F20                     	;# 
  1914  1F21                     	;# 
  1915  1F22                     	;# 
  1916  1F23                     	;# 
  1917  1F24                     	;# 
  1918  1F25                     	;# 
  1919  1F38                     	;# 
  1920  1F39                     	;# 
  1921  1F3A                     	;# 
  1922  1F3B                     	;# 
  1923  1F3C                     	;# 
  1924  1F3D                     	;# 
  1925  1F3E                     	;# 
  1926  1F3F                     	;# 
  1927  1F4E                     	;# 
  1928  1F4F                     	;# 
  1929  1F50                     	;# 
  1930  1F51                     	;# 
  1931  1F52                     	;# 
  1932  1F53                     	;# 
  1933  1F54                     	;# 
  1934  1F55                     	;# 
  1935  1FE4                     	;# 
  1936  1FE5                     	;# 
  1937  1FE6                     	;# 
  1938  1FE7                     	;# 
  1939  1FE8                     	;# 
  1940  1FE8                     	;# 
  1941  1FE9                     	;# 
  1942  1FEA                     	;# 
  1943  1FEA                     	;# 
  1944  1FEB                     	;# 
  1945  1FED                     	;# 
  1946  1FEE                     	;# 
  1947  1FEF                     	;# 
  1948  0000                     	;# 
  1949  0001                     	;# 
  1950  0002                     	;# 
  1951  0003                     	;# 
  1952  0004                     	;# 
  1953  0005                     	;# 
  1954  0006                     	;# 
  1955  0007                     	;# 
  1956  0008                     	;# 
  1957  0009                     	;# 
  1958  000A                     	;# 
  1959  000B                     	;# 
  1960  000C                     	;# 
  1961  000E                     	;# 
  1962  0012                     	;# 
  1963  0014                     	;# 
  1964  0018                     	;# 
  1965  001A                     	;# 
  1966  009B                     	;# 
  1967  009B                     	;# 
  1968  009C                     	;# 
  1969  009D                     	;# 
  1970  009E                     	;# 
  1971  009F                     	;# 
  1972  0119                     	;# 
  1973  0119                     	;# 
  1974  0119                     	;# 
  1975  011A                     	;# 
  1976  011A                     	;# 
  1977  011A                     	;# 
  1978  011B                     	;# 
  1979  011B                     	;# 
  1980  011B                     	;# 
  1981  011B                     	;# 
  1982  011B                     	;# 
  1983  011C                     	;# 
  1984  011C                     	;# 
  1985  011C                     	;# 
  1986  011D                     	;# 
  1987  011D                     	;# 
  1988  011D                     	;# 
  1989  011E                     	;# 
  1990  011E                     	;# 
  1991  011E                     	;# 
  1992  011F                     	;# 
  1993  011F                     	;# 
  1994  011F                     	;# 
  1995  011F                     	;# 
  1996  011F                     	;# 
  1997  018C                     	;# 
  1998  018D                     	;# 
  1999  018E                     	;# 
  2000  018F                     	;# 
  2001  0190                     	;# 
  2002  0191                     	;# 
  2003  0192                     	;# 
  2004  020C                     	;# 
  2005  020C                     	;# 
  2006  020D                     	;# 
  2007  020E                     	;# 
  2008  020F                     	;# 
  2009  020F                     	;# 
  2010  0210                     	;# 
  2011  0210                     	;# 
  2012  0211                     	;# 
  2013  0211                     	;# 
  2014  028C                     	;# 
  2015  028C                     	;# 
  2016  028D                     	;# 
  2017  028D                     	;# 
  2018  028E                     	;# 
  2019  028F                     	;# 
  2020  0290                     	;# 
  2021  0291                     	;# 
  2022  030C                     	;# 
  2023  030C                     	;# 
  2024  030D                     	;# 
  2025  030E                     	;# 
  2026  030F                     	;# 
  2027  0310                     	;# 
  2028  0310                     	;# 
  2029  0311                     	;# 
  2030  0312                     	;# 
  2031  0313                     	;# 
  2032  0314                     	;# 
  2033  0314                     	;# 
  2034  0315                     	;# 
  2035  0316                     	;# 
  2036  0318                     	;# 
  2037  0318                     	;# 
  2038  0319                     	;# 
  2039  031A                     	;# 
  2040  031C                     	;# 
  2041  031C                     	;# 
  2042  031D                     	;# 
  2043  031E                     	;# 
  2044  038C                     	;# 
  2045  038C                     	;# 
  2046  038D                     	;# 
  2047  038E                     	;# 
  2048  058C                     	;# 
  2049  058C                     	;# 
  2050  058D                     	;# 
  2051  058E                     	;# 
  2052  058F                     	;# 
  2053  058F                     	;# 
  2054  0590                     	;# 
  2055  0591                     	;# 
  2056  0592                     	;# 
  2057  0593                     	;# 
  2058  059C                     	;# 
  2059  059C                     	;# 
  2060  059D                     	;# 
  2061  059D                     	;# 
  2062  059E                     	;# 
  2063  059F                     	;# 
  2064  060C                     	;# 
  2065  060D                     	;# 
  2066  060E                     	;# 
  2067  060F                     	;# 
  2068  0610                     	;# 
  2069  0611                     	;# 
  2070  0612                     	;# 
  2071  0613                     	;# 
  2072  0614                     	;# 
  2073  070C                     	;# 
  2074  070D                     	;# 
  2075  070E                     	;# 
  2076  070F                     	;# 
  2077  0710                     	;# 
  2078  0711                     	;# 
  2079  0712                     	;# 
  2080  0713                     	;# 
  2081  0716                     	;# 
  2082  0717                     	;# 
  2083  0718                     	;# 
  2084  0719                     	;# 
  2085  071A                     	;# 
  2086  071B                     	;# 
  2087  071C                     	;# 
  2088  071D                     	;# 
  2089  0796                     	;# 
  2090  0797                     	;# 
  2091  0798                     	;# 
  2092  0799                     	;# 
  2093  079A                     	;# 
  2094  079B                     	;# 
  2095  080C                     	;# 
  2096  080D                     	;# 
  2097  080E                     	;# 
  2098  080F                     	;# 
  2099  0810                     	;# 
  2100  0811                     	;# 
  2101  0812                     	;# 
  2102  0813                     	;# 
  2103  0814                     	;# 
  2104  081A                     	;# 
  2105  081A                     	;# 
  2106  081B                     	;# 
  2107  081C                     	;# 
  2108  081C                     	;# 
  2109  081D                     	;# 
  2110  081E                     	;# 
  2111  081F                     	;# 
  2112  088C                     	;# 
  2113  088D                     	;# 
  2114  088E                     	;# 
  2115  088F                     	;# 
  2116  0890                     	;# 
  2117  0891                     	;# 
  2118  0892                     	;# 
  2119  0893                     	;# 
  2120  0895                     	;# 
  2121  0896                     	;# 
  2122  090C                     	;# 
  2123  090E                     	;# 
  2124  090F                     	;# 
  2125  091F                     	;# 
  2126  098F                     	;# 
  2127  098F                     	;# 
  2128  0990                     	;# 
  2129  0991                     	;# 
  2130  0992                     	;# 
  2131  0993                     	;# 
  2132  0994                     	;# 
  2133  0995                     	;# 
  2134  0996                     	;# 
  2135  0997                     	;# 
  2136  0A19                     	;# 
  2137  0A19                     	;# 
  2138  0A1A                     	;# 
  2139  0A1A                     	;# 
  2140  0A1B                     	;# 
  2141  0A1B                     	;# 
  2142  0A1B                     	;# 
  2143  0A1C                     	;# 
  2144  0A1C                     	;# 
  2145  0A1D                     	;# 
  2146  0A1D                     	;# 
  2147  0A1E                     	;# 
  2148  0A1E                     	;# 
  2149  0A1F                     	;# 
  2150  0A1F                     	;# 
  2151  0A1F                     	;# 
  2152  1E0F                     	;# 
  2153  1E10                     	;# 
  2154  1E11                     	;# 
  2155  1E12                     	;# 
  2156  1E13                     	;# 
  2157  1E14                     	;# 
  2158  1E15                     	;# 
  2159  1E16                     	;# 
  2160  1E17                     	;# 
  2161  1E18                     	;# 
  2162  1E19                     	;# 
  2163  1E1A                     	;# 
  2164  1E1B                     	;# 
  2165  1E1C                     	;# 
  2166  1E1D                     	;# 
  2167  1E1E                     	;# 
  2168  1E1F                     	;# 
  2169  1E20                     	;# 
  2170  1E21                     	;# 
  2171  1E22                     	;# 
  2172  1E23                     	;# 
  2173  1E24                     	;# 
  2174  1E25                     	;# 
  2175  1E26                     	;# 
  2176  1E27                     	;# 
  2177  1E28                     	;# 
  2178  1E29                     	;# 
  2179  1E2A                     	;# 
  2180  1E2B                     	;# 
  2181  1E2C                     	;# 
  2182  1E2D                     	;# 
  2183  1E2E                     	;# 
  2184  1E2F                     	;# 
  2185  1E30                     	;# 
  2186  1E31                     	;# 
  2187  1E32                     	;# 
  2188  1E33                     	;# 
  2189  1E34                     	;# 
  2190  1E35                     	;# 
  2191  1E36                     	;# 
  2192  1E37                     	;# 
  2193  1E8F                     	;# 
  2194  1E90                     	;# 
  2195  1E91                     	;# 
  2196  1E92                     	;# 
  2197  1E93                     	;# 
  2198  1E9C                     	;# 
  2199  1EA1                     	;# 
  2200  1EA2                     	;# 
  2201  1EB1                     	;# 
  2202  1EBB                     	;# 
  2203  1EBC                     	;# 
  2204  1EBD                     	;# 
  2205  1EBE                     	;# 
  2206  1EC3                     	;# 
  2207  1EC5                     	;# 
  2208  1EC6                     	;# 
  2209  1EC7                     	;# 
  2210  1ECB                     	;# 
  2211  1ECC                     	;# 
  2212  1ECD                     	;# 
  2213  1ECE                     	;# 
  2214  1F10                     	;# 
  2215  1F11                     	;# 
  2216  1F12                     	;# 
  2217  1F13                     	;# 
  2218  1F14                     	;# 
  2219  1F15                     	;# 
  2220  1F20                     	;# 
  2221  1F21                     	;# 
  2222  1F22                     	;# 
  2223  1F23                     	;# 
  2224  1F24                     	;# 
  2225  1F25                     	;# 
  2226  1F38                     	;# 
  2227  1F39                     	;# 
  2228  1F3A                     	;# 
  2229  1F3B                     	;# 
  2230  1F3C                     	;# 
  2231  1F3D                     	;# 
  2232  1F3E                     	;# 
  2233  1F3F                     	;# 
  2234  1F4E                     	;# 
  2235  1F4F                     	;# 
  2236  1F50                     	;# 
  2237  1F51                     	;# 
  2238  1F52                     	;# 
  2239  1F53                     	;# 
  2240  1F54                     	;# 
  2241  1F55                     	;# 
  2242  1FE4                     	;# 
  2243  1FE5                     	;# 
  2244  1FE6                     	;# 
  2245  1FE7                     	;# 
  2246  1FE8                     	;# 
  2247  1FE8                     	;# 
  2248  1FE9                     	;# 
  2249  1FEA                     	;# 
  2250  1FEA                     	;# 
  2251  1FEB                     	;# 
  2252  1FED                     	;# 
  2253  1FEE                     	;# 
  2254  1FEF                     	;# 
  2255  0000                     	;# 
  2256  0001                     	;# 
  2257  0002                     	;# 
  2258  0003                     	;# 
  2259  0004                     	;# 
  2260  0005                     	;# 
  2261  0006                     	;# 
  2262  0007                     	;# 
  2263  0008                     	;# 
  2264  0009                     	;# 
  2265  000A                     	;# 
  2266  000B                     	;# 
  2267  000C                     	;# 
  2268  000E                     	;# 
  2269  0012                     	;# 
  2270  0014                     	;# 
  2271  0018                     	;# 
  2272  001A                     	;# 
  2273  009B                     	;# 
  2274  009B                     	;# 
  2275  009C                     	;# 
  2276  009D                     	;# 
  2277  009E                     	;# 
  2278  009F                     	;# 
  2279  0119                     	;# 
  2280  0119                     	;# 
  2281  0119                     	;# 
  2282  011A                     	;# 
  2283  011A                     	;# 
  2284  011A                     	;# 
  2285  011B                     	;# 
  2286  011B                     	;# 
  2287  011B                     	;# 
  2288  011B                     	;# 
  2289  011B                     	;# 
  2290  011C                     	;# 
  2291  011C                     	;# 
  2292  011C                     	;# 
  2293  011D                     	;# 
  2294  011D                     	;# 
  2295  011D                     	;# 
  2296  011E                     	;# 
  2297  011E                     	;# 
  2298  011E                     	;# 
  2299  011F                     	;# 
  2300  011F                     	;# 
  2301  011F                     	;# 
  2302  011F                     	;# 
  2303  011F                     	;# 
  2304  018C                     	;# 
  2305  018D                     	;# 
  2306  018E                     	;# 
  2307  018F                     	;# 
  2308  0190                     	;# 
  2309  0191                     	;# 
  2310  0192                     	;# 
  2311  020C                     	;# 
  2312  020C                     	;# 
  2313  020D                     	;# 
  2314  020E                     	;# 
  2315  020F                     	;# 
  2316  020F                     	;# 
  2317  0210                     	;# 
  2318  0210                     	;# 
  2319  0211                     	;# 
  2320  0211                     	;# 
  2321  028C                     	;# 
  2322  028C                     	;# 
  2323  028D                     	;# 
  2324  028D                     	;# 
  2325  028E                     	;# 
  2326  028F                     	;# 
  2327  0290                     	;# 
  2328  0291                     	;# 
  2329  030C                     	;# 
  2330  030C                     	;# 
  2331  030D                     	;# 
  2332  030E                     	;# 
  2333  030F                     	;# 
  2334  0310                     	;# 
  2335  0310                     	;# 
  2336  0311                     	;# 
  2337  0312                     	;# 
  2338  0313                     	;# 
  2339  0314                     	;# 
  2340  0314                     	;# 
  2341  0315                     	;# 
  2342  0316                     	;# 
  2343  0318                     	;# 
  2344  0318                     	;# 
  2345  0319                     	;# 
  2346  031A                     	;# 
  2347  031C                     	;# 
  2348  031C                     	;# 
  2349  031D                     	;# 
  2350  031E                     	;# 
  2351  038C                     	;# 
  2352  038C                     	;# 
  2353  038D                     	;# 
  2354  038E                     	;# 
  2355  058C                     	;# 
  2356  058C                     	;# 
  2357  058D                     	;# 
  2358  058E                     	;# 
  2359  058F                     	;# 
  2360  058F                     	;# 
  2361  0590                     	;# 
  2362  0591                     	;# 
  2363  0592                     	;# 
  2364  0593                     	;# 
  2365  059C                     	;# 
  2366  059C                     	;# 
  2367  059D                     	;# 
  2368  059D                     	;# 
  2369  059E                     	;# 
  2370  059F                     	;# 
  2371  060C                     	;# 
  2372  060D                     	;# 
  2373  060E                     	;# 
  2374  060F                     	;# 
  2375  0610                     	;# 
  2376  0611                     	;# 
  2377  0612                     	;# 
  2378  0613                     	;# 
  2379  0614                     	;# 
  2380  070C                     	;# 
  2381  070D                     	;# 
  2382  070E                     	;# 
  2383  070F                     	;# 
  2384  0710                     	;# 
  2385  0711                     	;# 
  2386  0712                     	;# 
  2387  0713                     	;# 
  2388  0716                     	;# 
  2389  0717                     	;# 
  2390  0718                     	;# 
  2391  0719                     	;# 
  2392  071A                     	;# 
  2393  071B                     	;# 
  2394  071C                     	;# 
  2395  071D                     	;# 
  2396  0796                     	;# 
  2397  0797                     	;# 
  2398  0798                     	;# 
  2399  0799                     	;# 
  2400  079A                     	;# 
  2401  079B                     	;# 
  2402  080C                     	;# 
  2403  080D                     	;# 
  2404  080E                     	;# 
  2405  080F                     	;# 
  2406  0810                     	;# 
  2407  0811                     	;# 
  2408  0812                     	;# 
  2409  0813                     	;# 
  2410  0814                     	;# 
  2411  081A                     	;# 
  2412  081A                     	;# 
  2413  081B                     	;# 
  2414  081C                     	;# 
  2415  081C                     	;# 
  2416  081D                     	;# 
  2417  081E                     	;# 
  2418  081F                     	;# 
  2419  088C                     	;# 
  2420  088D                     	;# 
  2421  088E                     	;# 
  2422  088F                     	;# 
  2423  0890                     	;# 
  2424  0891                     	;# 
  2425  0892                     	;# 
  2426  0893                     	;# 
  2427  0895                     	;# 
  2428  0896                     	;# 
  2429  090C                     	;# 
  2430  090E                     	;# 
  2431  090F                     	;# 
  2432  091F                     	;# 
  2433  098F                     	;# 
  2434  098F                     	;# 
  2435  0990                     	;# 
  2436  0991                     	;# 
  2437  0992                     	;# 
  2438  0993                     	;# 
  2439  0994                     	;# 
  2440  0995                     	;# 
  2441  0996                     	;# 
  2442  0997                     	;# 
  2443  0A19                     	;# 
  2444  0A19                     	;# 
  2445  0A1A                     	;# 
  2446  0A1A                     	;# 
  2447  0A1B                     	;# 
  2448  0A1B                     	;# 
  2449  0A1B                     	;# 
  2450  0A1C                     	;# 
  2451  0A1C                     	;# 
  2452  0A1D                     	;# 
  2453  0A1D                     	;# 
  2454  0A1E                     	;# 
  2455  0A1E                     	;# 
  2456  0A1F                     	;# 
  2457  0A1F                     	;# 
  2458  0A1F                     	;# 
  2459  1E0F                     	;# 
  2460  1E10                     	;# 
  2461  1E11                     	;# 
  2462  1E12                     	;# 
  2463  1E13                     	;# 
  2464  1E14                     	;# 
  2465  1E15                     	;# 
  2466  1E16                     	;# 
  2467  1E17                     	;# 
  2468  1E18                     	;# 
  2469  1E19                     	;# 
  2470  1E1A                     	;# 
  2471  1E1B                     	;# 
  2472  1E1C                     	;# 
  2473  1E1D                     	;# 
  2474  1E1E                     	;# 
  2475  1E1F                     	;# 
  2476  1E20                     	;# 
  2477  1E21                     	;# 
  2478  1E22                     	;# 
  2479  1E23                     	;# 
  2480  1E24                     	;# 
  2481  1E25                     	;# 
  2482  1E26                     	;# 
  2483  1E27                     	;# 
  2484  1E28                     	;# 
  2485  1E29                     	;# 
  2486  1E2A                     	;# 
  2487  1E2B                     	;# 
  2488  1E2C                     	;# 
  2489  1E2D                     	;# 
  2490  1E2E                     	;# 
  2491  1E2F                     	;# 
  2492  1E30                     	;# 
  2493  1E31                     	;# 
  2494  1E32                     	;# 
  2495  1E33                     	;# 
  2496  1E34                     	;# 
  2497  1E35                     	;# 
  2498  1E36                     	;# 
  2499  1E37                     	;# 
  2500  1E8F                     	;# 
  2501  1E90                     	;# 
  2502  1E91                     	;# 
  2503  1E92                     	;# 
  2504  1E93                     	;# 
  2505  1E9C                     	;# 
  2506  1EA1                     	;# 
  2507  1EA2                     	;# 
  2508  1EB1                     	;# 
  2509  1EBB                     	;# 
  2510  1EBC                     	;# 
  2511  1EBD                     	;# 
  2512  1EBE                     	;# 
  2513  1EC3                     	;# 
  2514  1EC5                     	;# 
  2515  1EC6                     	;# 
  2516  1EC7                     	;# 
  2517  1ECB                     	;# 
  2518  1ECC                     	;# 
  2519  1ECD                     	;# 
  2520  1ECE                     	;# 
  2521  1F10                     	;# 
  2522  1F11                     	;# 
  2523  1F12                     	;# 
  2524  1F13                     	;# 
  2525  1F14                     	;# 
  2526  1F15                     	;# 
  2527  1F20                     	;# 
  2528  1F21                     	;# 
  2529  1F22                     	;# 
  2530  1F23                     	;# 
  2531  1F24                     	;# 
  2532  1F25                     	;# 
  2533  1F38                     	;# 
  2534  1F39                     	;# 
  2535  1F3A                     	;# 
  2536  1F3B                     	;# 
  2537  1F3C                     	;# 
  2538  1F3D                     	;# 
  2539  1F3E                     	;# 
  2540  1F3F                     	;# 
  2541  1F4E                     	;# 
  2542  1F4F                     	;# 
  2543  1F50                     	;# 
  2544  1F51                     	;# 
  2545  1F52                     	;# 
  2546  1F53                     	;# 
  2547  1F54                     	;# 
  2548  1F55                     	;# 
  2549  1FE4                     	;# 
  2550  1FE5                     	;# 
  2551  1FE6                     	;# 
  2552  1FE7                     	;# 
  2553  1FE8                     	;# 
  2554  1FE8                     	;# 
  2555  1FE9                     	;# 
  2556  1FEA                     	;# 
  2557  1FEA                     	;# 
  2558  1FEB                     	;# 
  2559  1FED                     	;# 
  2560  1FEE                     	;# 
  2561  1FEF                     	;# 
  2562  0000                     	;# 
  2563  0001                     	;# 
  2564  0002                     	;# 
  2565  0003                     	;# 
  2566  0004                     	;# 
  2567  0005                     	;# 
  2568  0006                     	;# 
  2569  0007                     	;# 
  2570  0008                     	;# 
  2571  0009                     	;# 
  2572  000A                     	;# 
  2573  000B                     	;# 
  2574  000C                     	;# 
  2575  000E                     	;# 
  2576  0012                     	;# 
  2577  0014                     	;# 
  2578  0018                     	;# 
  2579  001A                     	;# 
  2580  009B                     	;# 
  2581  009B                     	;# 
  2582  009C                     	;# 
  2583  009D                     	;# 
  2584  009E                     	;# 
  2585  009F                     	;# 
  2586  0119                     	;# 
  2587  0119                     	;# 
  2588  0119                     	;# 
  2589  011A                     	;# 
  2590  011A                     	;# 
  2591  011A                     	;# 
  2592  011B                     	;# 
  2593  011B                     	;# 
  2594  011B                     	;# 
  2595  011B                     	;# 
  2596  011B                     	;# 
  2597  011C                     	;# 
  2598  011C                     	;# 
  2599  011C                     	;# 
  2600  011D                     	;# 
  2601  011D                     	;# 
  2602  011D                     	;# 
  2603  011E                     	;# 
  2604  011E                     	;# 
  2605  011E                     	;# 
  2606  011F                     	;# 
  2607  011F                     	;# 
  2608  011F                     	;# 
  2609  011F                     	;# 
  2610  011F                     	;# 
  2611  018C                     	;# 
  2612  018D                     	;# 
  2613  018E                     	;# 
  2614  018F                     	;# 
  2615  0190                     	;# 
  2616  0191                     	;# 
  2617  0192                     	;# 
  2618  020C                     	;# 
  2619  020C                     	;# 
  2620  020D                     	;# 
  2621  020E                     	;# 
  2622  020F                     	;# 
  2623  020F                     	;# 
  2624  0210                     	;# 
  2625  0210                     	;# 
  2626  0211                     	;# 
  2627  0211                     	;# 
  2628  028C                     	;# 
  2629  028C                     	;# 
  2630  028D                     	;# 
  2631  028D                     	;# 
  2632  028E                     	;# 
  2633  028F                     	;# 
  2634  0290                     	;# 
  2635  0291                     	;# 
  2636  030C                     	;# 
  2637  030C                     	;# 
  2638  030D                     	;# 
  2639  030E                     	;# 
  2640  030F                     	;# 
  2641  0310                     	;# 
  2642  0310                     	;# 
  2643  0311                     	;# 
  2644  0312                     	;# 
  2645  0313                     	;# 
  2646  0314                     	;# 
  2647  0314                     	;# 
  2648  0315                     	;# 
  2649  0316                     	;# 
  2650  0318                     	;# 
  2651  0318                     	;# 
  2652  0319                     	;# 
  2653  031A                     	;# 
  2654  031C                     	;# 
  2655  031C                     	;# 
  2656  031D                     	;# 
  2657  031E                     	;# 
  2658  038C                     	;# 
  2659  038C                     	;# 
  2660  038D                     	;# 
  2661  038E                     	;# 
  2662  058C                     	;# 
  2663  058C                     	;# 
  2664  058D                     	;# 
  2665  058E                     	;# 
  2666  058F                     	;# 
  2667  058F                     	;# 
  2668  0590                     	;# 
  2669  0591                     	;# 
  2670  0592                     	;# 
  2671  0593                     	;# 
  2672  059C                     	;# 
  2673  059C                     	;# 
  2674  059D                     	;# 
  2675  059D                     	;# 
  2676  059E                     	;# 
  2677  059F                     	;# 
  2678  060C                     	;# 
  2679  060D                     	;# 
  2680  060E                     	;# 
  2681  060F                     	;# 
  2682  0610                     	;# 
  2683  0611                     	;# 
  2684  0612                     	;# 
  2685  0613                     	;# 
  2686  0614                     	;# 
  2687  070C                     	;# 
  2688  070D                     	;# 
  2689  070E                     	;# 
  2690  070F                     	;# 
  2691  0710                     	;# 
  2692  0711                     	;# 
  2693  0712                     	;# 
  2694  0713                     	;# 
  2695  0716                     	;# 
  2696  0717                     	;# 
  2697  0718                     	;# 
  2698  0719                     	;# 
  2699  071A                     	;# 
  2700  071B                     	;# 
  2701  071C                     	;# 
  2702  071D                     	;# 
  2703  0796                     	;# 
  2704  0797                     	;# 
  2705  0798                     	;# 
  2706  0799                     	;# 
  2707  079A                     	;# 
  2708  079B                     	;# 
  2709  080C                     	;# 
  2710  080D                     	;# 
  2711  080E                     	;# 
  2712  080F                     	;# 
  2713  0810                     	;# 
  2714  0811                     	;# 
  2715  0812                     	;# 
  2716  0813                     	;# 
  2717  0814                     	;# 
  2718  081A                     	;# 
  2719  081A                     	;# 
  2720  081B                     	;# 
  2721  081C                     	;# 
  2722  081C                     	;# 
  2723  081D                     	;# 
  2724  081E                     	;# 
  2725  081F                     	;# 
  2726  088C                     	;# 
  2727  088D                     	;# 
  2728  088E                     	;# 
  2729  088F                     	;# 
  2730  0890                     	;# 
  2731  0891                     	;# 
  2732  0892                     	;# 
  2733  0893                     	;# 
  2734  0895                     	;# 
  2735  0896                     	;# 
  2736  090C                     	;# 
  2737  090E                     	;# 
  2738  090F                     	;# 
  2739  091F                     	;# 
  2740  098F                     	;# 
  2741  098F                     	;# 
  2742  0990                     	;# 
  2743  0991                     	;# 
  2744  0992                     	;# 
  2745  0993                     	;# 
  2746  0994                     	;# 
  2747  0995                     	;# 
  2748  0996                     	;# 
  2749  0997                     	;# 
  2750  0A19                     	;# 
  2751  0A19                     	;# 
  2752  0A1A                     	;# 
  2753  0A1A                     	;# 
  2754  0A1B                     	;# 
  2755  0A1B                     	;# 
  2756  0A1B                     	;# 
  2757  0A1C                     	;# 
  2758  0A1C                     	;# 
  2759  0A1D                     	;# 
  2760  0A1D                     	;# 
  2761  0A1E                     	;# 
  2762  0A1E                     	;# 
  2763  0A1F                     	;# 
  2764  0A1F                     	;# 
  2765  0A1F                     	;# 
  2766  1E0F                     	;# 
  2767  1E10                     	;# 
  2768  1E11                     	;# 
  2769  1E12                     	;# 
  2770  1E13                     	;# 
  2771  1E14                     	;# 
  2772  1E15                     	;# 
  2773  1E16                     	;# 
  2774  1E17                     	;# 
  2775  1E18                     	;# 
  2776  1E19                     	;# 
  2777  1E1A                     	;# 
  2778  1E1B                     	;# 
  2779  1E1C                     	;# 
  2780  1E1D                     	;# 
  2781  1E1E                     	;# 
  2782  1E1F                     	;# 
  2783  1E20                     	;# 
  2784  1E21                     	;# 
  2785  1E22                     	;# 
  2786  1E23                     	;# 
  2787  1E24                     	;# 
  2788  1E25                     	;# 
  2789  1E26                     	;# 
  2790  1E27                     	;# 
  2791  1E28                     	;# 
  2792  1E29                     	;# 
  2793  1E2A                     	;# 
  2794  1E2B                     	;# 
  2795  1E2C                     	;# 
  2796  1E2D                     	;# 
  2797  1E2E                     	;# 
  2798  1E2F                     	;# 
  2799  1E30                     	;# 
  2800  1E31                     	;# 
  2801  1E32                     	;# 
  2802  1E33                     	;# 
  2803  1E34                     	;# 
  2804  1E35                     	;# 
  2805  1E36                     	;# 
  2806  1E37                     	;# 
  2807  1E8F                     	;# 
  2808  1E90                     	;# 
  2809  1E91                     	;# 
  2810  1E92                     	;# 
  2811  1E93                     	;# 
  2812  1E9C                     	;# 
  2813  1EA1                     	;# 
  2814  1EA2                     	;# 
  2815  1EB1                     	;# 
  2816  1EBB                     	;# 
  2817  1EBC                     	;# 
  2818  1EBD                     	;# 
  2819  1EBE                     	;# 
  2820  1EC3                     	;# 
  2821  1EC5                     	;# 
  2822  1EC6                     	;# 
  2823  1EC7                     	;# 
  2824  1ECB                     	;# 
  2825  1ECC                     	;# 
  2826  1ECD                     	;# 
  2827  1ECE                     	;# 
  2828  1F10                     	;# 
  2829  1F11                     	;# 
  2830  1F12                     	;# 
  2831  1F13                     	;# 
  2832  1F14                     	;# 
  2833  1F15                     	;# 
  2834  1F20                     	;# 
  2835  1F21                     	;# 
  2836  1F22                     	;# 
  2837  1F23                     	;# 
  2838  1F24                     	;# 
  2839  1F25                     	;# 
  2840  1F38                     	;# 
  2841  1F39                     	;# 
  2842  1F3A                     	;# 
  2843  1F3B                     	;# 
  2844  1F3C                     	;# 
  2845  1F3D                     	;# 
  2846  1F3E                     	;# 
  2847  1F3F                     	;# 
  2848  1F4E                     	;# 
  2849  1F4F                     	;# 
  2850  1F50                     	;# 
  2851  1F51                     	;# 
  2852  1F52                     	;# 
  2853  1F53                     	;# 
  2854  1F54                     	;# 
  2855  1F55                     	;# 
  2856  1FE4                     	;# 
  2857  1FE5                     	;# 
  2858  1FE6                     	;# 
  2859  1FE7                     	;# 
  2860  1FE8                     	;# 
  2861  1FE8                     	;# 
  2862  1FE9                     	;# 
  2863  1FEA                     	;# 
  2864  1FEA                     	;# 
  2865  1FEB                     	;# 
  2866  1FED                     	;# 
  2867  1FEE                     	;# 
  2868  1FEF                     	;# 
  2869  0000                     	;# 
  2870  0001                     	;# 
  2871  0002                     	;# 
  2872  0003                     	;# 
  2873  0004                     	;# 
  2874  0005                     	;# 
  2875  0006                     	;# 
  2876  0007                     	;# 
  2877  0008                     	;# 
  2878  0009                     	;# 
  2879  000A                     	;# 
  2880  000B                     	;# 
  2881  000C                     	;# 
  2882  000E                     	;# 
  2883  0012                     	;# 
  2884  0014                     	;# 
  2885  0018                     	;# 
  2886  001A                     	;# 
  2887  009B                     	;# 
  2888  009B                     	;# 
  2889  009C                     	;# 
  2890  009D                     	;# 
  2891  009E                     	;# 
  2892  009F                     	;# 
  2893  0119                     	;# 
  2894  0119                     	;# 
  2895  0119                     	;# 
  2896  011A                     	;# 
  2897  011A                     	;# 
  2898  011A                     	;# 
  2899  011B                     	;# 
  2900  011B                     	;# 
  2901  011B                     	;# 
  2902  011B                     	;# 
  2903  011B                     	;# 
  2904  011C                     	;# 
  2905  011C                     	;# 
  2906  011C                     	;# 
  2907  011D                     	;# 
  2908  011D                     	;# 
  2909  011D                     	;# 
  2910  011E                     	;# 
  2911  011E                     	;# 
  2912  011E                     	;# 
  2913  011F                     	;# 
  2914  011F                     	;# 
  2915  011F                     	;# 
  2916  011F                     	;# 
  2917  011F                     	;# 
  2918  018C                     	;# 
  2919  018D                     	;# 
  2920  018E                     	;# 
  2921  018F                     	;# 
  2922  0190                     	;# 
  2923  0191                     	;# 
  2924  0192                     	;# 
  2925  020C                     	;# 
  2926  020C                     	;# 
  2927  020D                     	;# 
  2928  020E                     	;# 
  2929  020F                     	;# 
  2930  020F                     	;# 
  2931  0210                     	;# 
  2932  0210                     	;# 
  2933  0211                     	;# 
  2934  0211                     	;# 
  2935  028C                     	;# 
  2936  028C                     	;# 
  2937  028D                     	;# 
  2938  028D                     	;# 
  2939  028E                     	;# 
  2940  028F                     	;# 
  2941  0290                     	;# 
  2942  0291                     	;# 
  2943  030C                     	;# 
  2944  030C                     	;# 
  2945  030D                     	;# 
  2946  030E                     	;# 
  2947  030F                     	;# 
  2948  0310                     	;# 
  2949  0310                     	;# 
  2950  0311                     	;# 
  2951  0312                     	;# 
  2952  0313                     	;# 
  2953  0314                     	;# 
  2954  0314                     	;# 
  2955  0315                     	;# 
  2956  0316                     	;# 
  2957  0318                     	;# 
  2958  0318                     	;# 
  2959  0319                     	;# 
  2960  031A                     	;# 
  2961  031C                     	;# 
  2962  031C                     	;# 
  2963  031D                     	;# 
  2964  031E                     	;# 
  2965  038C                     	;# 
  2966  038C                     	;# 
  2967  038D                     	;# 
  2968  038E                     	;# 
  2969  058C                     	;# 
  2970  058C                     	;# 
  2971  058D                     	;# 
  2972  058E                     	;# 
  2973  058F                     	;# 
  2974  058F                     	;# 
  2975  0590                     	;# 
  2976  0591                     	;# 
  2977  0592                     	;# 
  2978  0593                     	;# 
  2979  059C                     	;# 
  2980  059C                     	;# 
  2981  059D                     	;# 
  2982  059D                     	;# 
  2983  059E                     	;# 
  2984  059F                     	;# 
  2985  060C                     	;# 
  2986  060D                     	;# 
  2987  060E                     	;# 
  2988  060F                     	;# 
  2989  0610                     	;# 
  2990  0611                     	;# 
  2991  0612                     	;# 
  2992  0613                     	;# 
  2993  0614                     	;# 
  2994  070C                     	;# 
  2995  070D                     	;# 
  2996  070E                     	;# 
  2997  070F                     	;# 
  2998  0710                     	;# 
  2999  0711                     	;# 
  3000  0712                     	;# 
  3001  0713                     	;# 
  3002  0716                     	;# 
  3003  0717                     	;# 
  3004  0718                     	;# 
  3005  0719                     	;# 
  3006  071A                     	;# 
  3007  071B                     	;# 
  3008  071C                     	;# 
  3009  071D                     	;# 
  3010  0796                     	;# 
  3011  0797                     	;# 
  3012  0798                     	;# 
  3013  0799                     	;# 
  3014  079A                     	;# 
  3015  079B                     	;# 
  3016  080C                     	;# 
  3017  080D                     	;# 
  3018  080E                     	;# 
  3019  080F                     	;# 
  3020  0810                     	;# 
  3021  0811                     	;# 
  3022  0812                     	;# 
  3023  0813                     	;# 
  3024  0814                     	;# 
  3025  081A                     	;# 
  3026  081A                     	;# 
  3027  081B                     	;# 
  3028  081C                     	;# 
  3029  081C                     	;# 
  3030  081D                     	;# 
  3031  081E                     	;# 
  3032  081F                     	;# 
  3033  088C                     	;# 
  3034  088D                     	;# 
  3035  088E                     	;# 
  3036  088F                     	;# 
  3037  0890                     	;# 
  3038  0891                     	;# 
  3039  0892                     	;# 
  3040  0893                     	;# 
  3041  0895                     	;# 
  3042  0896                     	;# 
  3043  090C                     	;# 
  3044  090E                     	;# 
  3045  090F                     	;# 
  3046  091F                     	;# 
  3047  098F                     	;# 
  3048  098F                     	;# 
  3049  0990                     	;# 
  3050  0991                     	;# 
  3051  0992                     	;# 
  3052  0993                     	;# 
  3053  0994                     	;# 
  3054  0995                     	;# 
  3055  0996                     	;# 
  3056  0997                     	;# 
  3057  0A19                     	;# 
  3058  0A19                     	;# 
  3059  0A1A                     	;# 
  3060  0A1A                     	;# 
  3061  0A1B                     	;# 
  3062  0A1B                     	;# 
  3063  0A1B                     	;# 
  3064  0A1C                     	;# 
  3065  0A1C                     	;# 
  3066  0A1D                     	;# 
  3067  0A1D                     	;# 
  3068  0A1E                     	;# 
  3069  0A1E                     	;# 
  3070  0A1F                     	;# 
  3071  0A1F                     	;# 
  3072  0A1F                     	;# 
  3073  1E0F                     	;# 
  3074  1E10                     	;# 
  3075  1E11                     	;# 
  3076  1E12                     	;# 
  3077  1E13                     	;# 
  3078  1E14                     	;# 
  3079  1E15                     	;# 
  3080  1E16                     	;# 
  3081  1E17                     	;# 
  3082  1E18                     	;# 
  3083  1E19                     	;# 
  3084  1E1A                     	;# 
  3085  1E1B                     	;# 
  3086  1E1C                     	;# 
  3087  1E1D                     	;# 
  3088  1E1E                     	;# 
  3089  1E1F                     	;# 
  3090  1E20                     	;# 
  3091  1E21                     	;# 
  3092  1E22                     	;# 
  3093  1E23                     	;# 
  3094  1E24                     	;# 
  3095  1E25                     	;# 
  3096  1E26                     	;# 
  3097  1E27                     	;# 
  3098  1E28                     	;# 
  3099  1E29                     	;# 
  3100  1E2A                     	;# 
  3101  1E2B                     	;# 
  3102  1E2C                     	;# 
  3103  1E2D                     	;# 
  3104  1E2E                     	;# 
  3105  1E2F                     	;# 
  3106  1E30                     	;# 
  3107  1E31                     	;# 
  3108  1E32                     	;# 
  3109  1E33                     	;# 
  3110  1E34                     	;# 
  3111  1E35                     	;# 
  3112  1E36                     	;# 
  3113  1E37                     	;# 
  3114  1E8F                     	;# 
  3115  1E90                     	;# 
  3116  1E91                     	;# 
  3117  1E92                     	;# 
  3118  1E93                     	;# 
  3119  1E9C                     	;# 
  3120  1EA1                     	;# 
  3121  1EA2                     	;# 
  3122  1EB1                     	;# 
  3123  1EBB                     	;# 
  3124  1EBC                     	;# 
  3125  1EBD                     	;# 
  3126  1EBE                     	;# 
  3127  1EC3                     	;# 
  3128  1EC5                     	;# 
  3129  1EC6                     	;# 
  3130  1EC7                     	;# 
  3131  1ECB                     	;# 
  3132  1ECC                     	;# 
  3133  1ECD                     	;# 
  3134  1ECE                     	;# 
  3135  1F10                     	;# 
  3136  1F11                     	;# 
  3137  1F12                     	;# 
  3138  1F13                     	;# 
  3139  1F14                     	;# 
  3140  1F15                     	;# 
  3141  1F20                     	;# 
  3142  1F21                     	;# 
  3143  1F22                     	;# 
  3144  1F23                     	;# 
  3145  1F24                     	;# 
  3146  1F25                     	;# 
  3147  1F38                     	;# 
  3148  1F39                     	;# 
  3149  1F3A                     	;# 
  3150  1F3B                     	;# 
  3151  1F3C                     	;# 
  3152  1F3D                     	;# 
  3153  1F3E                     	;# 
  3154  1F3F                     	;# 
  3155  1F4E                     	;# 
  3156  1F4F                     	;# 
  3157  1F50                     	;# 
  3158  1F51                     	;# 
  3159  1F52                     	;# 
  3160  1F53                     	;# 
  3161  1F54                     	;# 
  3162  1F55                     	;# 
  3163  1FE4                     	;# 
  3164  1FE5                     	;# 
  3165  1FE6                     	;# 
  3166  1FE7                     	;# 
  3167  1FE8                     	;# 
  3168  1FE8                     	;# 
  3169  1FE9                     	;# 
  3170  1FEA                     	;# 
  3171  1FEA                     	;# 
  3172  1FEB                     	;# 
  3173  1FED                     	;# 
  3174  1FEE                     	;# 
  3175  1FEF                     	;# 
  3176                           
  3177                           	psect	idataBANK1
  3178  0B66                     __pidataBANK1:	
  3179                           
  3180                           ;initializer for _AUTO_DPDM_EN
  3181  0B66  3401               	retlw	1
  3182                           
  3183                           ;initializer for _ICO_EN
  3184  0B67  3401               	retlw	1
  3185                           
  3186                           ;initializer for _BOOST_FREQ
  3187  0B68  3401               	retlw	1
  3188                           
  3189                           ;initializer for _VINDPM_OS
  3190  0B69  3406               	retlw	6
  3191                           
  3192                           ;initializer for _INILIM
  3193  0B6A  343A               	retlw	58
  3194                           
  3195                           ;initializer for _EN_ILIM
  3196  0B6B  3401               	retlw	1
  3197                           
  3198                           ;initializer for _btn_high_edge
  3199  0B6C  3401               	retlw	1
  3200                           
  3201                           ;initializer for _mode
  3202  0B6D  3402               	retlw	2
  3203                           
  3204                           	psect	idataBANK2
  3205  0B78                     __pidataBANK2:	
  3206                           
  3207                           ;initializer for _TREG
  3208  0B78  3401               	retlw	1
  3209                           
  3210                           ;initializer for _CHG_TIMER
  3211  0B79  340A               	retlw	10
  3212                           
  3213                           ;initializer for _EN_TIMER
  3214  0B7A  3401               	retlw	1
  3215                           
  3216                           ;initializer for _STAT_DIS
  3217  0B7B  3401               	retlw	1
  3218                           
  3219                           ;initializer for _EN_TERM
  3220  0B7C  3401               	retlw	1
  3221                           
  3222                           ;initializer for _VREG
  3223  0B7D  3416               	retlw	22
  3224                           
  3225                           ;initializer for _ITERM
  3226  0B7E  3403               	retlw	3
  3227                           
  3228                           ;initializer for _IPRECHG
  3229  0B7F  3401               	retlw	1
  3230                           
  3231                           ;initializer for _ICHG
  3232  0B80  3460               	retlw	96
  3233                           
  3234                           ;initializer for _SYS_MIN
  3235  0B81  3405               	retlw	5
  3236                           
  3237                           ;initializer for _CHG_CONFIG
  3238  0B82  3401               	retlw	1
  3239  0012                     _TRISAbits	set	18
  3240  0014                     _TRISCbits	set	20
  3241  000B                     _INTCONbits	set	11
  3242  0014                     _TRISC	set	20
  3243  0012                     _TRISA	set	18
  3244  0070                     _RC0	set	112
  3245  0071                     _RC1	set	113
  3246  0074                     _RC4	set	116
  3247  0073                     _RC3	set	115
  3248  0072                     _RC2	set	114
  3249  0075                     _RC5	set	117
  3250  0065                     _RA5	set	101
  3251  0062                     _RA2	set	98
  3252  009C                     _ADRESH	set	156
  3253  009D                     _ADCON0bits	set	157
  3254  009D                     _ADCON0	set	157
  3255  009E                     _ADCON1	set	158
  3256  0192                     _SSP1CON3	set	402
  3257  018C                     _SSP1BUF	set	396
  3258  0191                     _SSP1CON2bits	set	401
  3259  018F                     _SSP1STAT	set	399
  3260  018D                     _SSP1ADD	set	397
  3261  0191                     _SSP1CON2	set	401
  3262  0190                     _SSP1CON1	set	400
  3263  020C                     _TMR1	set	524
  3264  0211                     _T1CLK	set	529
  3265  020F                     _T1GCONbits	set	527
  3266  020E                     _T1CONbits	set	526
  3267  028C                     _TMR2	set	652
  3268  0290                     _T2CLKCON	set	656
  3269  028D                     _PR2	set	653
  3270  1473                     _T2OUTPS3	set	5235
  3271  1472                     _T2OUTPS2	set	5234
  3272  1471                     _T2OUTPS1	set	5233
  3273  1470                     _T2OUTPS0	set	5232
  3274  1476                     _T2CKPS2	set	5238
  3275  1475                     _T2CKPS1	set	5237
  3276  1474                     _T2CKPS0	set	5236
  3277  1477                     _TMR2ON	set	5239
  3278  031E                     _PWM5CONbits	set	798
  3279  031A                     _PWM4CONbits	set	794
  3280  0316                     _PWM3CONbits	set	790
  3281  031C                     _PWM5DCL	set	796
  3282  031D                     _PWM5DCH	set	797
  3283  031E                     _PWM5CON	set	798
  3284  0318                     _PWM4DCL	set	792
  3285  0319                     _PWM4DCH	set	793
  3286  031A                     _PWM4CON	set	794
  3287  0314                     _PWM3DCL	set	788
  3288  0315                     _PWM3DCH	set	789
  3289  0316                     _PWM3CON	set	790
  3290  0716                     _PIE0bits	set	1814
  3291  071A                     _PIE4bits	set	1818
  3292  3881                     _TMR2IF	set	14465
  3293  3880                     _TMR1IF	set	14464
  3294  0812                     _VREGCON	set	2066
  3295  088C                     _CPUDOZEbits	set	2188
  3296  1E8F                     _PPSLOCK	set	7823
  3297  1EC5                     _SSP1CLKPPS	set	7877
  3298  1EC6                     _SSP1DATPPS	set	7878
  3299  1F24                     _RC4PPS	set	7972
  3300  1F23                     _RC3PPS	set	7971
  3301  1F22                     _RC2PPS	set	7970
  3302  1F20                     _RC0PPS	set	7968
  3303  1F21                     _RC1PPS	set	7969
  3304  1F3F                     _IOCAF	set	7999
  3305  1F3E                     _IOCAN	set	7998
  3306  1F3D                     _IOCAP	set	7997
  3307  1F39                     _WPUA	set	7993
  3308  1F38                     _ANSELAbits	set	7992
  3309  1F4E                     _ANSELC	set	8014
  3310  1F38                     _ANSELA	set	7992
  3311  F9FD                     _IOCAF5	set	63997
  3312                           
  3313                           ; #config settings
  3314  0000                     
  3315                           	psect	cinit
  3316  0027                     start_initialization:	
  3317  0027                     __initialization:	
  3318                           
  3319                           ; Initialize objects allocated to BANK1
  3320  0027  3066               	movlw	low __pidataBANK1
  3321  0028  0084               	movwf	4
  3322  0029  308B               	movlw	(high __pidataBANK1)| (0+128)
  3323  002A  0085               	movwf	5
  3324  002B  30E8               	movlw	low __pdataBANK1
  3325  002C  0086               	movwf	6
  3326  002D  3000               	movlw	high __pdataBANK1
  3327  002E  0087               	movwf	7
  3328  002F  3008               	movlw	8
  3329  0030  318B  2349  3180   	fcall	init_ram
  3330                           
  3331                           ; Initialize objects allocated to BANK2
  3332  0033  3078               	movlw	low __pidataBANK2
  3333  0034  0084               	movwf	4
  3334  0035  308B               	movlw	(high __pidataBANK2)| (0+128)
  3335  0036  0085               	movwf	5
  3336  0037  3049               	movlw	low __pdataBANK2
  3337  0038  0086               	movwf	6
  3338  0039  3001               	movlw	high __pdataBANK2
  3339  003A  0087               	movwf	7
  3340  003B  300B               	movlw	11
  3341  003C  318B  2349  3180   	fcall	init_ram
  3342                           
  3343                           ; Clear objects allocated to BANK0
  3344  003F  01EB               	clrf	__pbssBANK0& (0+127)
  3345  0040  01EC               	clrf	(__pbssBANK0+1)& (0+127)
  3346  0041  01ED               	clrf	(__pbssBANK0+2)& (0+127)
  3347  0042  01EE               	clrf	(__pbssBANK0+3)& (0+127)
  3348  0043  01EF               	clrf	(__pbssBANK0+4)& (0+127)
  3349                           
  3350                           ; Clear objects allocated to BANK1
  3351  0044  30CA               	movlw	low __pbssBANK1
  3352  0045  0084               	movwf	4
  3353  0046  3000               	movlw	high __pbssBANK1
  3354  0047  0085               	movwf	5
  3355  0048  301E               	movlw	30
  3356  0049  318B  2343  3180   	fcall	clear_ram0
  3357                           
  3358                           ; Clear objects allocated to BANK2
  3359  004C  3020               	movlw	low __pbssBANK2
  3360  004D  0084               	movwf	4
  3361  004E  3001               	movlw	high __pbssBANK2
  3362  004F  0085               	movwf	5
  3363  0050  3029               	movlw	41
  3364  0051  318B  2343  3180   	fcall	clear_ram0
  3365  0054                     end_of_initialization:	
  3366                           ;End of C runtime variable initialization code
  3367                           
  3368  0054                     __end_of__initialization:	
  3369  0054  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3370  0055  0140               	movlb	0
  3371  0056  3180  2858         	ljmp	_main	;jump to C main() function
  3372                           
  3373                           	psect	bssBANK0
  3374  006B                     __pbssBANK0:	
  3375  006B                     _flash_state:	
  3376  006B                     	ds	1
  3377  006C                     _dir:	
  3378  006C                     	ds	1
  3379  006D                     _color:	
  3380  006D                     	ds	1
  3381  006E                     _c:	
  3382  006E                     	ds	1
  3383  006F                     _i:	
  3384  006F                     	ds	1
  3385                           
  3386                           	psect	bssBANK1
  3387  00CA                     __pbssBANK1:	
  3388  00CA                     _VBUS_CHRG_STATE:	
  3389  00CA                     	ds	2
  3390  00CC                     _OTG_CONFIG:	
  3391  00CC                     	ds	1
  3392  00CD                     _WD_RST:	
  3393  00CD                     	ds	1
  3394  00CE                     _FORCE_DPDM:	
  3395  00CE                     	ds	1
  3396  00CF                     _MAXC_EN:	
  3397  00CF                     	ds	1
  3398  00D0                     _HVDCP_EN:	
  3399  00D0                     	ds	1
  3400  00D1                     _CONV_RATE:	
  3401  00D1                     	ds	1
  3402  00D2                     _CONV_START:	
  3403  00D2                     	ds	1
  3404  00D3                     _BCOLD:	
  3405  00D3                     	ds	1
  3406  00D4                     _BHOT:	
  3407  00D4                     	ds	1
  3408  00D5                     _EN_HIZ:	
  3409  00D5                     	ds	1
  3410  00D6                     _REG08_config:	
  3411  00D6                     	ds	1
  3412  00D7                     _REG07_config:	
  3413  00D7                     	ds	1
  3414  00D8                     _REG06_config:	
  3415  00D8                     	ds	1
  3416  00D9                     _REG05_config:	
  3417  00D9                     	ds	1
  3418  00DA                     _REG04_config:	
  3419  00DA                     	ds	1
  3420  00DB                     _REG03_config:	
  3421  00DB                     	ds	1
  3422  00DC                     _REG02_config:	
  3423  00DC                     	ds	1
  3424  00DD                     _REG01_config:	
  3425  00DD                     	ds	1
  3426  00DE                     _REG00_config:	
  3427  00DE                     	ds	1
  3428  00DF                     _set_stusb4500:	
  3429  00DF                     	ds	1
  3430  00E0                     _btn_long_edge:	
  3431  00E0                     	ds	1
  3432  00E1                     _btn_press_count:	
  3433  00E1                     	ds	1
  3434  00E2                     _btn_state:	
  3435  00E2                     	ds	1
  3436  00E3                     _pwr_btn_temp_prev:	
  3437  00E3                     	ds	1
  3438  00E4                     _pwr_btn_temp:	
  3439  00E4                     	ds	1
  3440  00E5                     _SYS_ENABLE:	
  3441  00E5                     	ds	1
  3442  00E6                     _BQ_adc_state:	
  3443  00E6                     	ds	1
  3444  00E7                     _BATTERY_VOLTAGE:	
  3445  00E7                     	ds	1
  3446                           
  3447                           	psect	dataBANK1
  3448  00E8                     __pdataBANK1:	
  3449  00E8                     _AUTO_DPDM_EN:	
  3450  00E8                     	ds	1
  3451  00E9                     _ICO_EN:	
  3452  00E9                     	ds	1
  3453  00EA                     _BOOST_FREQ:	
  3454  00EA                     	ds	1
  3455  00EB                     _VINDPM_OS:	
  3456  00EB                     	ds	1
  3457  00EC                     _INILIM:	
  3458  00EC                     	ds	1
  3459  00ED                     _EN_ILIM:	
  3460  00ED                     	ds	1
  3461  00EE                     _btn_high_edge:	
  3462  00EE                     	ds	1
  3463  00EF                     _mode:	
  3464  00EF                     	ds	1
  3465                           
  3466                           	psect	bssBANK2
  3467  0120                     __pbssBANK2:	
  3468  0120                     _flash_time:	
  3469  0120                     	ds	4
  3470  0124                     _chrg_delay:	
  3471  0124                     	ds	4
  3472  0128                     _rgb_delay:	
  3473  0128                     	ds	4
  3474  012C                     _BQ_adc_time:	
  3475  012C                     	ds	4
  3476  0130                     _stusb4500_timeout:	
  3477  0130                     	ds	4
  3478  0134                     _btn_press_timer:	
  3479  0134                     	ds	4
  3480  0138                     _btn_time_pressed:	
  3481  0138                     	ds	4
  3482  013C                     _btn_time_start:	
  3483  013C                     	ds	4
  3484  0140                     _timer_counter:	
  3485  0140                     	ds	4
  3486  0144                     _VCLAMP:	
  3487  0144                     	ds	1
  3488  0145                     _BAT_COMP:	
  3489  0145                     	ds	1
  3490  0146                     _WATCHDOG:	
  3491  0146                     	ds	1
  3492  0147                     _VRECHG:	
  3493  0147                     	ds	1
  3494  0148                     _BATLOWV:	
  3495  0148                     	ds	1
  3496                           
  3497                           	psect	dataBANK2
  3498  0149                     __pdataBANK2:	
  3499  0149                     _TREG:	
  3500  0149                     	ds	1
  3501  014A                     _CHG_TIMER:	
  3502  014A                     	ds	1
  3503  014B                     _EN_TIMER:	
  3504  014B                     	ds	1
  3505  014C                     _STAT_DIS:	
  3506  014C                     	ds	1
  3507  014D                     _EN_TERM:	
  3508  014D                     	ds	1
  3509  014E                     _VREG:	
  3510  014E                     	ds	1
  3511  014F                     _ITERM:	
  3512  014F                     	ds	1
  3513  0150                     _IPRECHG:	
  3514  0150                     	ds	1
  3515  0151                     _ICHG:	
  3516  0151                     	ds	1
  3517  0152                     _SYS_MIN:	
  3518  0152                     	ds	1
  3519  0153                     _CHG_CONFIG:	
  3520  0153                     	ds	1
  3521                           
  3522                           	psect	inittext
  3523  0B49                     init_ram:	
  3524  0B49  00FE               	movwf	btemp
  3525  0B4A                     initloop:	
  3526  0B4A  0012               	moviw fsr0++
  3527  0B4B  001E               	movwi fsr1++
  3528  0B4C  0BFE               	decfsz	btemp,f
  3529  0B4D  2B4A               	goto	initloop
  3530  0B4E  3400               	retlw	0
  3531                           
  3532                           	psect	clrtext
  3533  0B43                     clear_ram0:	
  3534                           ;	Called with FSR0 containing the base address, and
  3535                           ;	WREG with the size to clear
  3536                           
  3537  0B43  0064               	clrwdt	;clear the watchdog before getting into this loop
  3538  0B44                     clrloop0:	
  3539  0B44  0180               	clrf	0	;clear RAM location pointed to by FSR
  3540  0B45  3101               	addfsr 0,1
  3541  0B46  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3542  0B47  2B44               	goto	clrloop0	;have we reached the end yet?
  3543  0B48  3400               	retlw	0	;all done for this memory range, return
  3544                           
  3545                           	psect	cstackBANK1
  3546  00A0                     __pcstackBANK1:	
  3547  00A0                     stusb_negotiate@buffer:	
  3548                           
  3549                           ; 40 bytes @ 0x0
  3550  00A0                     	ds	40
  3551  00C8                     stusb_negotiate@header:	
  3552                           
  3553                           ; 2 bytes @ 0x28
  3554  00C8                     	ds	2
  3555                           
  3556                           	psect	cstackCOMMON
  3557  0070                     __pcstackCOMMON:	
  3558  0070                     ?_I2C_bus_reset:	
  3559  0070                     ??_I2C_bus_reset:	
  3560                           ; 1 bytes @ 0x0
  3561                           
  3562  0070                     ?_PPS_unlock:	
  3563                           ; 1 bytes @ 0x0
  3564                           
  3565  0070                     ??_PPS_unlock:	
  3566                           ; 1 bytes @ 0x0
  3567                           
  3568  0070                     ?_PPS_lock:	
  3569                           ; 1 bytes @ 0x0
  3570                           
  3571  0070                     ??_PPS_lock:	
  3572                           ; 1 bytes @ 0x0
  3573                           
  3574  0070                     ?_BQ_CONFIG_INIT:	
  3575                           ; 1 bytes @ 0x0
  3576                           
  3577  0070                     ??_BQ_CONFIG_INIT:	
  3578                           ; 1 bytes @ 0x0
  3579                           
  3580  0070                     ?_BQ_INIT:	
  3581                           ; 1 bytes @ 0x0
  3582                           
  3583  0070                     ?_PWM_INIT:	
  3584                           ; 1 bytes @ 0x0
  3585                           
  3586  0070                     ??_PWM_INIT:	
  3587                           ; 1 bytes @ 0x0
  3588                           
  3589  0070                     ?_BQ_UPDATE:	
  3590                           ; 1 bytes @ 0x0
  3591                           
  3592  0070                     ?_led_modes:	
  3593                           ; 1 bytes @ 0x0
  3594                           
  3595  0070                     ?_chrg_led:	
  3596                           ; 1 bytes @ 0x0
  3597                           
  3598  0070                     ?_PWM_power_down:	
  3599                           ; 1 bytes @ 0x0
  3600                           
  3601  0070                     ??_PWM_power_down:	
  3602                           ; 1 bytes @ 0x0
  3603                           
  3604  0070                     ?_PIC_SETUP:	
  3605                           ; 1 bytes @ 0x0
  3606                           
  3607  0070                     ??_PIC_SETUP:	
  3608                           ; 1 bytes @ 0x0
  3609                           
  3610  0070                     ?_ISR:	
  3611                           ; 1 bytes @ 0x0
  3612                           
  3613  0070                     ??_ISR:	
  3614                           ; 1 bytes @ 0x0
  3615                           
  3616  0070                     ?_thermal_protection:	
  3617                           ; 1 bytes @ 0x0
  3618                           
  3619  0070                     ?_main:	
  3620                           ; 1 bytes @ 0x0
  3621                           
  3622  0070                     ?_I2C_Master_Wait:	
  3623                           ; 1 bytes @ 0x0
  3624                           
  3625  0070                     ??_I2C_Master_Wait:	
  3626                           ; 1 bytes @ 0x0
  3627                           
  3628  0070                     ?_I2C_Master_Start:	
  3629                           ; 1 bytes @ 0x0
  3630                           
  3631  0070                     ??_I2C_Master_Start:	
  3632                           ; 1 bytes @ 0x0
  3633                           
  3634  0070                     ?_I2C_Master_Stop:	
  3635                           ; 1 bytes @ 0x0
  3636                           
  3637  0070                     ??_I2C_Master_Stop:	
  3638                           ; 1 bytes @ 0x0
  3639                           
  3640  0070                     ?_I2C_Master_Write:	
  3641                           ; 1 bytes @ 0x0
  3642                           
  3643  0070                     ??_I2C_Master_Write:	
  3644                           ; 1 bytes @ 0x0
  3645                           
  3646  0070                     ?_I2C_Master_Ack:	
  3647                           ; 1 bytes @ 0x0
  3648                           
  3649  0070                     ??_I2C_Master_Ack:	
  3650                           ; 1 bytes @ 0x0
  3651                           
  3652  0070                     ?_I2C_Master_nAck:	
  3653                           ; 1 bytes @ 0x0
  3654                           
  3655  0070                     ??_I2C_Master_nAck:	
  3656                           ; 1 bytes @ 0x0
  3657                           
  3658  0070                     ?_I2C_Master_Read:	
  3659                           ; 1 bytes @ 0x0
  3660                           
  3661  0070                     ??_I2C_Master_Read:	
  3662                           ; 1 bytes @ 0x0
  3663                           
  3664  0070                     ?_BQ_get_chrg_state:	
  3665                           ; 1 bytes @ 0x0
  3666                           
  3667  0070                     ?_RGB_fade:	
  3668                           ; 1 bytes @ 0x0
  3669                           
  3670  0070                     ?_battery_fade:	
  3671                           ; 1 bytes @ 0x0
  3672                           
  3673  0070                     ?_flash_led:	
  3674                           ; 1 bytes @ 0x0
  3675                           
  3676  0070                     ?_i2c_master_wait:	
  3677                           ; 1 bytes @ 0x0
  3678                           
  3679  0070                     ??_i2c_master_wait:	
  3680                           ; 1 bytes @ 0x0
  3681                           
  3682  0070                     ?_i2c_master_start:	
  3683                           ; 1 bytes @ 0x0
  3684                           
  3685  0070                     ??_i2c_master_start:	
  3686                           ; 1 bytes @ 0x0
  3687                           
  3688  0070                     ?_i2c_master_repeat_start:	
  3689                           ; 1 bytes @ 0x0
  3690                           
  3691  0070                     ??_i2c_master_repeat_start:	
  3692                           ; 1 bytes @ 0x0
  3693                           
  3694  0070                     ?_i2c_master_stop:	
  3695                           ; 1 bytes @ 0x0
  3696                           
  3697  0070                     ??_i2c_master_stop:	
  3698                           ; 1 bytes @ 0x0
  3699                           
  3700  0070                     ?_i2c_master_receive_byte:	
  3701                           ; 1 bytes @ 0x0
  3702                           
  3703  0070                     ??_i2c_master_receive_byte:	
  3704                           ; 1 bytes @ 0x0
  3705                           
  3706  0070                     ?_readADC:	
  3707                           ; 1 bytes @ 0x0
  3708                           
  3709  0070                     ?_stusb_negotiate:	
  3710                           ; 2 bytes @ 0x0
  3711                           
  3712  0070                     ?_i2c_master_send_byte:	
  3713                           ; 2 bytes @ 0x0
  3714                           
  3715  0070                     ?___wmul:	
  3716                           ; 2 bytes @ 0x0
  3717                           
  3718  0070                     ?___lwdiv:	
  3719                           ; 2 bytes @ 0x0
  3720                           
  3721  0070                     ?_get_time:	
  3722                           ; 2 bytes @ 0x0
  3723                           
  3724  0070                     ?_timer_diff:	
  3725                           ; 4 bytes @ 0x0
  3726                           
  3727  0070                     ?___lmul:	
  3728                           ; 4 bytes @ 0x0
  3729                           
  3730  0070                     I2C_Master_Write@data:	
  3731                           ; 4 bytes @ 0x0
  3732                           
  3733  0070                     ___wmul@multiplier:	
  3734                           ; 1 bytes @ 0x0
  3735                           
  3736  0070                     ___lwdiv@divisor:	
  3737                           ; 2 bytes @ 0x0
  3738                           
  3739  0070                     timer_diff@t:	
  3740                           ; 2 bytes @ 0x0
  3741                           
  3742  0070                     ___lmul@multiplier:	
  3743                           ; 4 bytes @ 0x0
  3744                           
  3745                           
  3746                           ; 4 bytes @ 0x0
  3747  0070                     	ds	1
  3748  0071                     ?_BQ_Write:	
  3749  0071                     I2C_bus_reset@i:	
  3750                           ; 1 bytes @ 0x1
  3751                           
  3752  0071                     I2C_Master_Read@ack:	
  3753                           ; 1 bytes @ 0x1
  3754                           
  3755  0071                     BQ_Write@data:	
  3756                           ; 1 bytes @ 0x1
  3757                           
  3758  0071                     i2c_master_receive_byte@ack:	
  3759                           ; 1 bytes @ 0x1
  3760                           
  3761                           
  3762                           ; 1 bytes @ 0x1
  3763  0071                     	ds	1
  3764  0072                     ??_readADC:	
  3765  0072                     ??_BQ_Write:	
  3766                           ; 1 bytes @ 0x2
  3767                           
  3768  0072                     I2C_Master_Read@data:	
  3769                           ; 1 bytes @ 0x2
  3770                           
  3771  0072                     BQ_Write@reg:	
  3772                           ; 1 bytes @ 0x2
  3773                           
  3774  0072                     i2c_master_receive_byte@data:	
  3775                           ; 1 bytes @ 0x2
  3776                           
  3777  0072                     ___wmul@multiplicand:	
  3778                           ; 1 bytes @ 0x2
  3779                           
  3780  0072                     ___lwdiv@dividend:	
  3781                           ; 2 bytes @ 0x2
  3782                           
  3783                           
  3784                           ; 2 bytes @ 0x2
  3785  0072                     	ds	1
  3786  0073                     ??_BQ_INIT:	
  3787  0073                     ??_i2c_master_send_byte:	
  3788                           ; 1 bytes @ 0x3
  3789                           
  3790  0073                     ?_BQ_Read:	
  3791                           ; 1 bytes @ 0x3
  3792                           
  3793  0073                     i2c_master_send_byte@data:	
  3794                           ; 2 bytes @ 0x3
  3795                           
  3796                           
  3797                           ; 1 bytes @ 0x3
  3798  0073                     	ds	1
  3799  0074                     ??_get_time:	
  3800  0074                     ??_timer_diff:	
  3801                           ; 1 bytes @ 0x4
  3802                           
  3803  0074                     ??___wmul:	
  3804                           ; 1 bytes @ 0x4
  3805                           
  3806  0074                     ??___lwdiv:	
  3807                           ; 1 bytes @ 0x4
  3808                           
  3809  0074                     ?_i2c_master_read:	
  3810                           ; 1 bytes @ 0x4
  3811                           
  3812  0074                     ?_i2c_master_write:	
  3813                           ; 2 bytes @ 0x4
  3814                           
  3815  0074                     readADC@channel:	
  3816                           ; 2 bytes @ 0x4
  3817                           
  3818  0074                     i2c_master_write@reg:	
  3819                           ; 1 bytes @ 0x4
  3820                           
  3821  0074                     i2c_master_read@reg:	
  3822                           ; 1 bytes @ 0x4
  3823                           
  3824  0074                     ___wmul@product:	
  3825                           ; 1 bytes @ 0x4
  3826                           
  3827  0074                     ___lmul@multiplicand:	
  3828                           ; 2 bytes @ 0x4
  3829                           
  3830                           
  3831                           ; 4 bytes @ 0x4
  3832  0074                     	ds	1
  3833  0075                     ??_thermal_protection:	
  3834  0075                     ??_BQ_Read:	
  3835                           ; 1 bytes @ 0x5
  3836                           
  3837  0075                     i2c_master_write@buf:	
  3838                           ; 1 bytes @ 0x5
  3839                           
  3840  0075                     i2c_master_read@buf:	
  3841                           ; 1 bytes @ 0x5
  3842                           
  3843  0075                     ___lwdiv@quotient:	
  3844                           ; 1 bytes @ 0x5
  3845                           
  3846                           
  3847                           ; 2 bytes @ 0x5
  3848  0075                     	ds	1
  3849  0076                     ?___awdiv:	
  3850  0076                     i2c_master_write@len:	
  3851                           ; 2 bytes @ 0x6
  3852                           
  3853  0076                     i2c_master_read@len:	
  3854                           ; 2 bytes @ 0x6
  3855                           
  3856  0076                     ___awdiv@divisor:	
  3857                           ; 2 bytes @ 0x6
  3858                           
  3859                           
  3860                           ; 2 bytes @ 0x6
  3861  0076                     	ds	1
  3862  0077                     BQ_Read@reg:	
  3863  0077                     ___lwdiv@counter:	
  3864                           ; 1 bytes @ 0x7
  3865                           
  3866                           
  3867                           ; 1 bytes @ 0x7
  3868  0077                     	ds	1
  3869  0078                     ??_chrg_led:	
  3870  0078                     ??_i2c_master_read:	
  3871                           ; 1 bytes @ 0x8
  3872                           
  3873  0078                     ??_RGB_fade:	
  3874                           ; 1 bytes @ 0x8
  3875                           
  3876  0078                     ??_flash_led:	
  3877                           ; 1 bytes @ 0x8
  3878                           
  3879  0078                     ??_i2c_master_write:	
  3880                           ; 1 bytes @ 0x8
  3881                           
  3882  0078                     ??___lmul:	
  3883                           ; 1 bytes @ 0x8
  3884                           
  3885  0078                     BQ_Read@data:	
  3886                           ; 1 bytes @ 0x8
  3887                           
  3888  0078                     ___awdiv@dividend:	
  3889                           ; 1 bytes @ 0x8
  3890                           
  3891  0078                     ___lmul@product:	
  3892                           ; 2 bytes @ 0x8
  3893                           
  3894                           
  3895                           ; 4 bytes @ 0x8
  3896  0078                     	ds	1
  3897  0079                     ??_BQ_get_chrg_state:	
  3898  0079                     i2c_master_write@device:	
  3899                           ; 1 bytes @ 0x9
  3900                           
  3901  0079                     i2c_master_read@device:	
  3902                           ; 1 bytes @ 0x9
  3903                           
  3904                           
  3905                           ; 1 bytes @ 0x9
  3906  0079                     	ds	1
  3907  007A                     ??___awdiv:	
  3908  007A                     i2c_master_write@data:	
  3909                           ; 1 bytes @ 0xA
  3910                           
  3911  007A                     i2c_master_read@data:	
  3912                           ; 1 bytes @ 0xA
  3913                           
  3914                           
  3915                           ; 1 bytes @ 0xA
  3916  007A                     	ds	1
  3917  007B                     ??_Map:	
  3918  007B                     BQ_get_chrg_state@temp:	
  3919                           ; 1 bytes @ 0xB
  3920                           
  3921  007B                     i2c_master_write@ok:	
  3922                           ; 1 bytes @ 0xB
  3923                           
  3924  007B                     i2c_master_read@ok:	
  3925                           ; 2 bytes @ 0xB
  3926                           
  3927                           
  3928                           ; 2 bytes @ 0xB
  3929  007B                     	ds	1
  3930  007C                     ??_BQ_UPDATE:	
  3931  007C                     ??___lldiv:	
  3932                           ; 1 bytes @ 0xC
  3933                           
  3934                           
  3935                           ; 1 bytes @ 0xC
  3936  007C                     	ds	1
  3937  007D                     ??_led_modes:	
  3938  007D                     i2c_master_write_u8@device:	
  3939                           ; 1 bytes @ 0xD
  3940                           
  3941  007D                     i2c_master_write_u32@device:	
  3942                           ; 1 bytes @ 0xD
  3943                           
  3944  007D                     i2c_master_read_u8@device:	
  3945                           ; 1 bytes @ 0xD
  3946                           
  3947  007D                     i2c_master_read_u16@device:	
  3948                           ; 1 bytes @ 0xD
  3949                           
  3950                           
  3951                           ; 1 bytes @ 0xD
  3952  007D                     	ds	1
  3953                           
  3954                           	psect	cstackBANK0
  3955  0021                     __pcstackBANK0:	
  3956  0021                     ?_i2c_master_write_u8:	
  3957  0021                     ?_i2c_master_read_u8:	
  3958                           ; 2 bytes @ 0x0
  3959                           
  3960  0021                     ?_i2c_master_write_u32:	
  3961                           ; 2 bytes @ 0x0
  3962                           
  3963  0021                     ?_i2c_master_read_u16:	
  3964                           ; 2 bytes @ 0x0
  3965                           
  3966  0021                     ?___lldiv:	
  3967                           ; 2 bytes @ 0x0
  3968                           
  3969  0021                     i2c_master_write_u8@reg:	
  3970                           ; 4 bytes @ 0x0
  3971                           
  3972  0021                     i2c_master_write_u32@reg:	
  3973                           ; 1 bytes @ 0x0
  3974                           
  3975  0021                     i2c_master_read_u8@reg:	
  3976                           ; 1 bytes @ 0x0
  3977                           
  3978  0021                     i2c_master_read_u16@reg:	
  3979                           ; 1 bytes @ 0x0
  3980                           
  3981  0021                     ___awdiv@counter:	
  3982                           ; 1 bytes @ 0x0
  3983                           
  3984  0021                     ___lldiv@divisor:	
  3985                           ; 1 bytes @ 0x0
  3986                           
  3987                           
  3988                           ; 4 bytes @ 0x0
  3989  0021                     	ds	1
  3990  0022                     i2c_master_write_u8@data:	
  3991  0022                     i2c_master_read_u8@data:	
  3992                           ; 1 bytes @ 0x1
  3993                           
  3994  0022                     i2c_master_read_u16@data:	
  3995                           ; 1 bytes @ 0x1
  3996                           
  3997  0022                     ___awdiv@sign:	
  3998                           ; 1 bytes @ 0x1
  3999                           
  4000  0022                     i2c_master_write_u32@data:	
  4001                           ; 1 bytes @ 0x1
  4002                           
  4003                           
  4004                           ; 4 bytes @ 0x1
  4005  0022                     	ds	1
  4006  0023                     ??_i2c_master_write_u8:	
  4007  0023                     ??_i2c_master_read_u8:	
  4008                           ; 1 bytes @ 0x2
  4009                           
  4010  0023                     ??_i2c_master_read_u16:	
  4011                           ; 1 bytes @ 0x2
  4012                           
  4013  0023                     ___awdiv@quotient:	
  4014                           ; 1 bytes @ 0x2
  4015                           
  4016                           
  4017                           ; 2 bytes @ 0x2
  4018  0023                     	ds	2
  4019  0025                     ?_Map:	
  4020  0025                     ?_reset:	
  4021                           ; 1 bytes @ 0x4
  4022                           
  4023  0025                     Map@x:	
  4024                           ; 2 bytes @ 0x4
  4025                           
  4026  0025                     ___lldiv@dividend:	
  4027                           ; 2 bytes @ 0x4
  4028                           
  4029                           
  4030                           ; 4 bytes @ 0x4
  4031  0025                     	ds	1
  4032  0026                     ??_i2c_master_write_u32:	
  4033                           
  4034                           ; 1 bytes @ 0x5
  4035  0026                     	ds	1
  4036  0027                     ??_reset:	
  4037  0027                     Map@inMin:	
  4038                           ; 1 bytes @ 0x6
  4039                           
  4040                           
  4041                           ; 1 bytes @ 0x6
  4042  0027                     	ds	1
  4043  0028                     Map@inMax:	
  4044                           
  4045                           ; 1 bytes @ 0x7
  4046  0028                     	ds	1
  4047  0029                     Map@outMin:	
  4048  0029                     reset@res:	
  4049                           ; 1 bytes @ 0x8
  4050                           
  4051  0029                     ___lldiv@quotient:	
  4052                           ; 1 bytes @ 0x8
  4053                           
  4054                           
  4055                           ; 4 bytes @ 0x8
  4056  0029                     	ds	1
  4057  002A                     Map@outMax:	
  4058  002A                     reset@ok:	
  4059                           ; 1 bytes @ 0x9
  4060                           
  4061                           
  4062                           ; 2 bytes @ 0x9
  4063  002A                     	ds	1
  4064  002B                     ??_battery_fade:	
  4065                           
  4066                           ; 1 bytes @ 0xA
  4067  002B                     	ds	1
  4068  002C                     ?_write_pdo:	
  4069  002C                     write_pdo@current_mA:	
  4070                           ; 2 bytes @ 0xB
  4071                           
  4072                           
  4073                           ; 2 bytes @ 0xB
  4074  002C                     	ds	1
  4075  002D                     ___lldiv@counter:	
  4076                           
  4077                           ; 1 bytes @ 0xC
  4078  002D                     	ds	1
  4079  002E                     ?_I2C_Master_Init:	
  4080  002E                     write_pdo@voltage_mV:	
  4081                           ; 1 bytes @ 0xD
  4082                           
  4083  002E                     I2C_Master_Init@clk:	
  4084                           ; 2 bytes @ 0xD
  4085                           
  4086                           
  4087                           ; 4 bytes @ 0xD
  4088  002E                     	ds	2
  4089  0030                     write_pdo@pdo_num:	
  4090                           
  4091                           ; 1 bytes @ 0xF
  4092  0030                     	ds	1
  4093  0031                     ??_write_pdo:	
  4094                           
  4095                           ; 1 bytes @ 0x10
  4096  0031                     	ds	1
  4097  0032                     ??_I2C_Master_Init:	
  4098                           
  4099                           ; 1 bytes @ 0x11
  4100  0032                     	ds	1
  4101  0033                     battery_fade@v:	
  4102                           
  4103                           ; 1 bytes @ 0x12
  4104  0033                     	ds	10
  4105  003D                     write_pdo@pdo:	
  4106                           
  4107                           ; 4 bytes @ 0x1C
  4108  003D                     	ds	4
  4109  0041                     ?_negotiate_optimal_pdo:	
  4110  0041                     negotiate_optimal_pdo@num_pdos:	
  4111                           ; 2 bytes @ 0x20
  4112                           
  4113                           
  4114                           ; 1 bytes @ 0x20
  4115  0041                     	ds	2
  4116  0043                     ??_negotiate_optimal_pdo:	
  4117                           
  4118                           ; 1 bytes @ 0x22
  4119  0043                     	ds	8
  4120  004B                     negotiate_optimal_pdo@opt_pdo_power:	
  4121                           
  4122                           ; 4 bytes @ 0x2A
  4123  004B                     	ds	4
  4124  004F                     negotiate_optimal_pdo@opt_pdo_current:	
  4125                           
  4126                           ; 2 bytes @ 0x2E
  4127  004F                     	ds	2
  4128  0051                     negotiate_optimal_pdo@opt_pdo_voltage:	
  4129                           
  4130                           ; 2 bytes @ 0x30
  4131  0051                     	ds	2
  4132  0053                     negotiate_optimal_pdo@src_pdos:	
  4133                           
  4134                           ; 1 bytes @ 0x32
  4135  0053                     	ds	1
  4136  0054                     negotiate_optimal_pdo@pdo_power:	
  4137                           
  4138                           ; 4 bytes @ 0x33
  4139  0054                     	ds	4
  4140  0058                     negotiate_optimal_pdo@pdo_current:	
  4141                           
  4142                           ; 2 bytes @ 0x37
  4143  0058                     	ds	2
  4144  005A                     negotiate_optimal_pdo@i:	
  4145                           
  4146                           ; 2 bytes @ 0x39
  4147  005A                     	ds	2
  4148  005C                     negotiate_optimal_pdo@ok:	
  4149                           
  4150                           ; 2 bytes @ 0x3B
  4151  005C                     	ds	2
  4152  005E                     negotiate_optimal_pdo@pdo:	
  4153                           
  4154                           ; 4 bytes @ 0x3D
  4155  005E                     	ds	4
  4156  0062                     negotiate_optimal_pdo@pdo_voltage:	
  4157                           
  4158                           ; 2 bytes @ 0x41
  4159  0062                     	ds	2
  4160  0064                     ??_stusb_negotiate:	
  4161                           
  4162                           ; 1 bytes @ 0x43
  4163  0064                     	ds	6
  4164  006A                     ??_main:	
  4165                           
  4166                           ; 1 bytes @ 0x49
  4167  006A                     	ds	1
  4168                           
  4169                           	psect	maintext
  4170  0058                     __pmaintext:	
  4171 ;;
  4172 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4173 ;;
  4174 ;; *************** function _main *****************
  4175 ;; Defined at:
  4176 ;;		line 101 in file "main.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;		None
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;		None
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      void 
  4183 ;; Registers used:
  4184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4185 ;; Tracked objects:
  4186 ;;		On entry : B3F/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4190 ;;      Params:         0       0       0       0       0       0       0       0
  4191 ;;      Locals:         0       0       0       0       0       0       0       0
  4192 ;;      Temps:          0       1       0       0       0       0       0       0
  4193 ;;      Totals:         0       1       0       0       0       0       0       0
  4194 ;;Total ram usage:        1 bytes
  4195 ;; Hardware stack levels required when called:    9
  4196 ;; This function calls:
  4197 ;;		_BQ_CONFIG_INIT
  4198 ;;		_BQ_INIT
  4199 ;;		_BQ_UPDATE
  4200 ;;		_BQ_Write
  4201 ;;		_I2C_Master_Init
  4202 ;;		_I2C_bus_reset
  4203 ;;		_PIC_SETUP
  4204 ;;		_PPS_lock
  4205 ;;		_PPS_unlock
  4206 ;;		_PWM_INIT
  4207 ;;		_PWM_power_down
  4208 ;;		_chrg_led
  4209 ;;		_get_time
  4210 ;;		_led_modes
  4211 ;;		_stusb_negotiate
  4212 ;;		_thermal_protection
  4213 ;;		_timer_diff
  4214 ;; This function is called by:
  4215 ;;		Startup code after reset
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           
  4220                           ;psect for function _main
  4221  0058                     _main:	
  4222  0058                     l3076:	
  4223                           ;incstack = 0
  4224                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4225                           
  4226                           
  4227                           ;main.c: 103: PIC_SETUP();
  4228  0058  318D  259B  3180   	fcall	_PIC_SETUP
  4229                           
  4230                           ;main.c: 106: I2C_bus_reset();
  4231  005B  318E  26B8  3180   	fcall	_I2C_bus_reset
  4232                           
  4233                           ;main.c: 109: PPS_unlock();
  4234  005E  318B  234F  3180   	fcall	_PPS_unlock
  4235  0061                     l3078:	
  4236                           
  4237                           ;main.c: 110: SSP1DATPPS = 0x11;
  4238  0061  3011               	movlw	17
  4239  0062  017D               	movlb	61	; select bank61
  4240  0063  00C6               	movwf	70	;volatile
  4241  0064                     l3080:	
  4242                           
  4243                           ;main.c: 111: RC1PPS = 0x16;
  4244  0064  3016               	movlw	22
  4245  0065  017E               	movlb	62	; select bank62
  4246  0066  00A1               	movwf	33	;volatile
  4247  0067                     l3082:	
  4248                           
  4249                           ;main.c: 112: SSP1CLKPPS = 0x10;
  4250  0067  3010               	movlw	16
  4251  0068  017D               	movlb	61	; select bank61
  4252  0069  00C5               	movwf	69	;volatile
  4253  006A                     l3084:	
  4254                           
  4255                           ;main.c: 113: RC0PPS = 0x15;
  4256  006A  3015               	movlw	21
  4257  006B  017E               	movlb	62	; select bank62
  4258  006C  00A0               	movwf	32	;volatile
  4259                           
  4260                           ;main.c: 114: PPS_lock();
  4261  006D  318B  235E  3180   	fcall	_PPS_lock
  4262                           
  4263                           ;main.c: 115: I2C_Master_Init(350000);
  4264  0070  3000               	movlw	0
  4265  0071  0140               	movlb	0	; select bank0
  4266  0072  00B1               	movwf	I2C_Master_Init@clk+3
  4267  0073  3005               	movlw	5
  4268  0074  00B0               	movwf	I2C_Master_Init@clk+2
  4269  0075  3057               	movlw	87
  4270  0076  00AF               	movwf	I2C_Master_Init@clk+1
  4271  0077  3030               	movlw	48
  4272  0078  00AE               	movwf	I2C_Master_Init@clk
  4273  0079  318D  25C6  3180   	fcall	_I2C_Master_Init
  4274                           
  4275                           ;main.c: 117: BQ_CONFIG_INIT();
  4276  007C  318D  2504  3180   	fcall	_BQ_CONFIG_INIT
  4277                           
  4278                           ;main.c: 118: BQ_INIT();
  4279  007F  318E  26FE  3180   	fcall	_BQ_INIT
  4280                           
  4281                           ;main.c: 120: PWM_INIT();
  4282  0082  318E  2674  3180   	fcall	_PWM_INIT
  4283  0085                     l148:	
  4284                           ;main.c: 122: while(1) {
  4285                           
  4286  0085  0064               	clrwdt	;# 
  4287  0086                     l3086:	
  4288                           
  4289                           ;main.c: 127: pwr_btn_temp = RA5;
  4290  0086  3000               	movlw	0
  4291  0087  0140               	movlb	0	; select bank0
  4292  0088  1A8C               	btfsc	12,5	;volatile
  4293  0089  3001               	movlw	1
  4294  008A  0141               	movlb	1	; select bank1
  4295  008B  00E4               	movwf	_pwr_btn_temp^(0+128)
  4296  008C                     l3088:	
  4297                           
  4298                           ;main.c: 128: if(pwr_btn_temp ^ pwr_btn_temp_prev) {
  4299  008C  0864               	movf	_pwr_btn_temp^(0+128),w
  4300  008D  0663               	xorwf	_pwr_btn_temp_prev^(0+128),w
  4301  008E  1903               	btfsc	3,2
  4302  008F  2891               	goto	u2631
  4303  0090  2892               	goto	u2630
  4304  0091                     u2631:	
  4305  0091  28A1               	goto	l3094
  4306  0092                     u2630:	
  4307  0092                     l3090:	
  4308                           
  4309                           ;main.c: 129: btn_time_start = get_time();
  4310  0092  318B  236E  3180   	fcall	_get_time
  4311  0095  0873               	movf	?_get_time+3,w
  4312  0096  0142               	movlb	2	; select bank2
  4313  0097  00BF               	movwf	(_btn_time_start+3)^(0+256)
  4314  0098  0872               	movf	?_get_time+2,w
  4315  0099  00BE               	movwf	(_btn_time_start+2)^(0+256)
  4316  009A  0871               	movf	?_get_time+1,w
  4317  009B  00BD               	movwf	(_btn_time_start+1)^(0+256)
  4318  009C  0870               	movf	?_get_time,w
  4319  009D  00BC               	movwf	_btn_time_start^(0+256)
  4320  009E                     l3092:	
  4321                           
  4322                           ;main.c: 130: btn_state = 1;
  4323  009E  0141               	movlb	1	; select bank1
  4324  009F  01E2               	clrf	_btn_state^(0+128)
  4325  00A0  0AE2               	incf	_btn_state^(0+128),f
  4326  00A1                     l3094:	
  4327                           
  4328                           ;main.c: 131: };main.c: 132: if(timer_diff(btn_time_start) > 4) {
  4329  00A1  0142               	movlb	2	; select bank2
  4330  00A2  083F               	movf	(_btn_time_start+3)^(0+256),w
  4331  00A3  00F3               	movwf	timer_diff@t+3
  4332  00A4  083E               	movf	(_btn_time_start+2)^(0+256),w
  4333  00A5  00F2               	movwf	timer_diff@t+2
  4334  00A6  083D               	movf	(_btn_time_start+1)^(0+256),w
  4335  00A7  00F1               	movwf	timer_diff@t+1
  4336  00A8  083C               	movf	_btn_time_start^(0+256),w
  4337  00A9  00F0               	movwf	timer_diff@t
  4338  00AA  318B  23C3  3180   	fcall	_timer_diff
  4339  00AD  0873               	movf	?_timer_diff+3,w
  4340  00AE  1D03               	btfss	3,2
  4341  00AF  28BC               	goto	u2640
  4342  00B0  0872               	movf	?_timer_diff+2,w
  4343  00B1  1D03               	btfss	3,2
  4344  00B2  28BC               	goto	u2640
  4345  00B3  0871               	movf	?_timer_diff+1,w
  4346  00B4  1D03               	btfss	3,2
  4347  00B5  28BC               	goto	u2640
  4348  00B6  3005               	movlw	5
  4349  00B7  0270               	subwf	?_timer_diff,w
  4350  00B8  1C03               	btfss	3,0
  4351  00B9  28BB               	goto	u2641
  4352  00BA  28BC               	goto	u2640
  4353  00BB                     u2641:	
  4354  00BB  28DC               	goto	l3106
  4355  00BC                     u2640:	
  4356  00BC                     l3096:	
  4357                           
  4358                           ;main.c: 133: if(!pwr_btn_temp) {
  4359  00BC  0141               	movlb	1	; select bank1
  4360  00BD  0864               	movf	_pwr_btn_temp^(0+128),w
  4361  00BE  1D03               	btfss	3,2
  4362  00BF  28C1               	goto	u2651
  4363  00C0  28C2               	goto	u2650
  4364  00C1                     u2651:	
  4365  00C1  28DB               	goto	l3104
  4366  00C2                     u2650:	
  4367  00C2                     l3098:	
  4368                           
  4369                           ;main.c: 134: if(btn_state != 2) btn_time_pressed = get_time();
  4370  00C2  3002               	movlw	2
  4371  00C3  0662               	xorwf	_btn_state^(0+128),w
  4372  00C4  1903               	btfsc	3,2
  4373  00C5  28C7               	goto	u2661
  4374  00C6  28C8               	goto	u2660
  4375  00C7                     u2661:	
  4376  00C7  28D4               	goto	l3102
  4377  00C8                     u2660:	
  4378  00C8                     l3100:	
  4379  00C8  318B  236E  3180   	fcall	_get_time
  4380  00CB  0873               	movf	?_get_time+3,w
  4381  00CC  0142               	movlb	2	; select bank2
  4382  00CD  00BB               	movwf	(_btn_time_pressed+3)^(0+256)
  4383  00CE  0872               	movf	?_get_time+2,w
  4384  00CF  00BA               	movwf	(_btn_time_pressed+2)^(0+256)
  4385  00D0  0871               	movf	?_get_time+1,w
  4386  00D1  00B9               	movwf	(_btn_time_pressed+1)^(0+256)
  4387  00D2  0870               	movf	?_get_time,w
  4388  00D3  00B8               	movwf	_btn_time_pressed^(0+256)
  4389  00D4                     l3102:	
  4390                           
  4391                           ;main.c: 135: btn_state = 2;
  4392  00D4  3002               	movlw	2
  4393  00D5  0140               	movlb	0	; select bank0
  4394  00D6  00EA               	movwf	??_main
  4395  00D7  086A               	movf	??_main,w
  4396  00D8  0141               	movlb	1	; select bank1
  4397  00D9  00E2               	movwf	_btn_state^(0+128)
  4398                           
  4399                           ;main.c: 136: }
  4400  00DA  28DC               	goto	l3106
  4401  00DB                     l3104:	
  4402                           
  4403                           ;main.c: 137: else {;main.c: 138: btn_state = 0;
  4404  00DB  01E2               	clrf	_btn_state^(0+128)
  4405  00DC                     l3106:	
  4406                           
  4407                           ;main.c: 139: };main.c: 140: };main.c: 141: pwr_btn_temp_prev = pwr_btn_temp;
  4408  00DC  0141               	movlb	1	; select bank1
  4409  00DD  0864               	movf	_pwr_btn_temp^(0+128),w
  4410  00DE  0140               	movlb	0	; select bank0
  4411  00DF  00EA               	movwf	??_main
  4412  00E0  086A               	movf	??_main,w
  4413  00E1  0141               	movlb	1	; select bank1
  4414  00E2  00E3               	movwf	_pwr_btn_temp_prev^(0+128)
  4415  00E3                     l3108:	
  4416                           
  4417                           ;main.c: 144: if(btn_state == 2) {
  4418  00E3  3002               	movlw	2
  4419  00E4  0662               	xorwf	_btn_state^(0+128),w
  4420  00E5  1D03               	btfss	3,2
  4421  00E6  28E8               	goto	u2671
  4422  00E7  28E9               	goto	u2670
  4423  00E8                     u2671:	
  4424  00E8  2936               	goto	l3126
  4425  00E9                     u2670:	
  4426  00E9                     l3110:	
  4427                           
  4428                           ;main.c: 145: if(timer_diff(btn_time_pressed) > 84 && btn_long_edge == 0) {
  4429  00E9  0142               	movlb	2	; select bank2
  4430  00EA  083B               	movf	(_btn_time_pressed+3)^(0+256),w
  4431  00EB  00F3               	movwf	timer_diff@t+3
  4432  00EC  083A               	movf	(_btn_time_pressed+2)^(0+256),w
  4433  00ED  00F2               	movwf	timer_diff@t+2
  4434  00EE  0839               	movf	(_btn_time_pressed+1)^(0+256),w
  4435  00EF  00F1               	movwf	timer_diff@t+1
  4436  00F0  0838               	movf	_btn_time_pressed^(0+256),w
  4437  00F1  00F0               	movwf	timer_diff@t
  4438  00F2  318B  23C3  3180   	fcall	_timer_diff
  4439  00F5  0873               	movf	?_timer_diff+3,w
  4440  00F6  1D03               	btfss	3,2
  4441  00F7  2904               	goto	u2680
  4442  00F8  0872               	movf	?_timer_diff+2,w
  4443  00F9  1D03               	btfss	3,2
  4444  00FA  2904               	goto	u2680
  4445  00FB  0871               	movf	?_timer_diff+1,w
  4446  00FC  1D03               	btfss	3,2
  4447  00FD  2904               	goto	u2680
  4448  00FE  3055               	movlw	85
  4449  00FF  0270               	subwf	?_timer_diff,w
  4450  0100  1C03               	btfss	3,0
  4451  0101  2903               	goto	u2681
  4452  0102  2904               	goto	u2680
  4453  0103                     u2681:	
  4454  0103  2934               	goto	l3124
  4455  0104                     u2680:	
  4456  0104                     l3112:	
  4457  0104  0141               	movlb	1	; select bank1
  4458  0105  0860               	movf	_btn_long_edge^(0+128),w
  4459  0106  1D03               	btfss	3,2
  4460  0107  2909               	goto	u2691
  4461  0108  290A               	goto	u2690
  4462  0109                     u2691:	
  4463  0109  2934               	goto	l3124
  4464  010A                     u2690:	
  4465  010A                     l3114:	
  4466                           
  4467                           ;main.c: 146: SYS_ENABLE = !SYS_ENABLE;
  4468  010A  0865               	movf	_SYS_ENABLE^(0+128),w
  4469  010B  1903               	btfsc	3,2
  4470  010C  290E               	goto	u2701
  4471  010D  2910               	goto	u2700
  4472  010E                     u2701:	
  4473  010E  3001               	movlw	1
  4474  010F  2911               	goto	u2710
  4475  0110                     u2700:	
  4476  0110  3000               	movlw	0
  4477  0111                     u2710:	
  4478  0111  0140               	movlb	0	; select bank0
  4479  0112  00EA               	movwf	??_main
  4480  0113  086A               	movf	??_main,w
  4481  0114  0141               	movlb	1	; select bank1
  4482  0115  00E5               	movwf	_SYS_ENABLE^(0+128)
  4483                           
  4484                           ;main.c: 147: if(SYS_ENABLE) {
  4485  0116  0865               	movf	_SYS_ENABLE^(0+128),w
  4486  0117  1903               	btfsc	3,2
  4487  0118  291A               	goto	u2721
  4488  0119  291B               	goto	u2720
  4489  011A                     u2721:	
  4490  011A  291F               	goto	l156
  4491  011B                     u2720:	
  4492  011B                     l3116:	
  4493                           
  4494                           ;main.c: 148: TRISCbits.TRISC5 = 0;
  4495  011B  0140               	movlb	0	; select bank0
  4496  011C  1294               	bcf	20,5	;volatile
  4497                           
  4498                           ;main.c: 149: RC5 = 1;
  4499  011D  168E               	bsf	14,5	;volatile
  4500                           
  4501                           ;main.c: 151: }
  4502  011E  2931               	goto	l3122
  4503  011F                     l156:	
  4504                           
  4505                           ;main.c: 152: else {;main.c: 153: TRISCbits.TRISC5 = 1;
  4506  011F  0140               	movlb	0	; select bank0
  4507  0120  1694               	bsf	20,5	;volatile
  4508  0121                     l3118:	
  4509                           
  4510                           ;main.c: 154: if(mode == 3) {
  4511  0121  3003               	movlw	3
  4512  0122  0141               	movlb	1	; select bank1
  4513  0123  066F               	xorwf	_mode^(0+128),w
  4514  0124  1D03               	btfss	3,2
  4515  0125  2927               	goto	u2731
  4516  0126  2928               	goto	u2730
  4517  0127                     u2731:	
  4518  0127  2931               	goto	l3122
  4519  0128                     u2730:	
  4520  0128                     l3120:	
  4521                           
  4522                           ;main.c: 155: BQ_Write(0x09, 0b01100100);
  4523  0128  3064               	movlw	100
  4524  0129  0140               	movlb	0	; select bank0
  4525  012A  00EA               	movwf	??_main
  4526  012B  086A               	movf	??_main,w
  4527  012C  00F1               	movwf	BQ_Write@data
  4528  012D  3009               	movlw	9
  4529  012E  318B  239B  3180   	fcall	_BQ_Write
  4530  0131                     l3122:	
  4531                           
  4532                           ;main.c: 156: };main.c: 157: };main.c: 158: btn_long_edge = 1;
  4533  0131  0141               	movlb	1	; select bank1
  4534  0132  01E0               	clrf	_btn_long_edge^(0+128)
  4535  0133  0AE0               	incf	_btn_long_edge^(0+128),f
  4536  0134                     l3124:	
  4537                           
  4538                           ;main.c: 159: };main.c: 160: btn_high_edge = 0;
  4539  0134  0141               	movlb	1	; select bank1
  4540  0135  01EE               	clrf	_btn_high_edge^(0+128)
  4541  0136                     l3126:	
  4542                           
  4543                           ;main.c: 161: };main.c: 162: if(btn_state == 0) {
  4544  0136  0862               	movf	_btn_state^(0+128),w
  4545  0137  1D03               	btfss	3,2
  4546  0138  293A               	goto	u2741
  4547  0139  293B               	goto	u2740
  4548  013A                     u2741:	
  4549  013A  298E               	goto	l3150
  4550  013B                     u2740:	
  4551  013B                     l3128:	
  4552                           
  4553                           ;main.c: 163: if(btn_high_edge == 0) {
  4554  013B  086E               	movf	_btn_high_edge^(0+128),w
  4555  013C  1D03               	btfss	3,2
  4556  013D  293F               	goto	u2751
  4557  013E  2940               	goto	u2750
  4558  013F                     u2751:	
  4559  013F  298A               	goto	l3146
  4560  0140                     u2750:	
  4561  0140                     l3130:	
  4562                           
  4563                           ;main.c: 164: if(SYS_ENABLE && timer_diff(btn_time_pressed)<=50){
  4564  0140  0865               	movf	_SYS_ENABLE^(0+128),w
  4565  0141  1903               	btfsc	3,2
  4566  0142  2944               	goto	u2761
  4567  0143  2945               	goto	u2760
  4568  0144                     u2761:	
  4569  0144  298A               	goto	l3146
  4570  0145                     u2760:	
  4571  0145                     l3132:	
  4572  0145  0142               	movlb	2	; select bank2
  4573  0146  083B               	movf	(_btn_time_pressed+3)^(0+256),w
  4574  0147  00F3               	movwf	timer_diff@t+3
  4575  0148  083A               	movf	(_btn_time_pressed+2)^(0+256),w
  4576  0149  00F2               	movwf	timer_diff@t+2
  4577  014A  0839               	movf	(_btn_time_pressed+1)^(0+256),w
  4578  014B  00F1               	movwf	timer_diff@t+1
  4579  014C  0838               	movf	_btn_time_pressed^(0+256),w
  4580  014D  00F0               	movwf	timer_diff@t
  4581  014E  318B  23C3  3180   	fcall	_timer_diff
  4582  0151  0873               	movf	?_timer_diff+3,w
  4583  0152  1D03               	btfss	3,2
  4584  0153  295F               	goto	u2771
  4585  0154  0872               	movf	?_timer_diff+2,w
  4586  0155  1D03               	btfss	3,2
  4587  0156  295F               	goto	u2771
  4588  0157  0871               	movf	?_timer_diff+1,w
  4589  0158  1D03               	btfss	3,2
  4590  0159  295F               	goto	u2771
  4591  015A  3033               	movlw	51
  4592  015B  0270               	subwf	?_timer_diff,w
  4593  015C  1803               	btfsc	3,0
  4594  015D  295F               	goto	u2771
  4595  015E  2960               	goto	u2770
  4596  015F                     u2771:	
  4597  015F  298A               	goto	l3146
  4598  0160                     u2770:	
  4599  0160                     l3134:	
  4600                           
  4601                           ;main.c: 165: if(btn_press_count == 0) btn_press_timer = get_time();
  4602  0160  0141               	movlb	1	; select bank1
  4603  0161  0861               	movf	_btn_press_count^(0+128),w
  4604  0162  1D03               	btfss	3,2
  4605  0163  2965               	goto	u2781
  4606  0164  2966               	goto	u2780
  4607  0165                     u2781:	
  4608  0165  2972               	goto	l3138
  4609  0166                     u2780:	
  4610  0166                     l3136:	
  4611  0166  318B  236E  3180   	fcall	_get_time
  4612  0169  0873               	movf	?_get_time+3,w
  4613  016A  0142               	movlb	2	; select bank2
  4614  016B  00B7               	movwf	(_btn_press_timer+3)^(0+256)
  4615  016C  0872               	movf	?_get_time+2,w
  4616  016D  00B6               	movwf	(_btn_press_timer+2)^(0+256)
  4617  016E  0871               	movf	?_get_time+1,w
  4618  016F  00B5               	movwf	(_btn_press_timer+1)^(0+256)
  4619  0170  0870               	movf	?_get_time,w
  4620  0171  00B4               	movwf	_btn_press_timer^(0+256)
  4621  0172                     l3138:	
  4622                           
  4623                           ;main.c: 166: btn_press_count++;
  4624  0172  3001               	movlw	1
  4625  0173  0140               	movlb	0	; select bank0
  4626  0174  00EA               	movwf	??_main
  4627  0175  086A               	movf	??_main,w
  4628  0176  0141               	movlb	1	; select bank1
  4629  0177  07E1               	addwf	_btn_press_count^(0+128),f
  4630  0178                     l3140:	
  4631                           
  4632                           ;main.c: 167: if(btn_press_count == 2) {
  4633  0178  3002               	movlw	2
  4634  0179  0661               	xorwf	_btn_press_count^(0+128),w
  4635  017A  1D03               	btfss	3,2
  4636  017B  297D               	goto	u2791
  4637  017C  297E               	goto	u2790
  4638  017D                     u2791:	
  4639  017D  298A               	goto	l3146
  4640  017E                     u2790:	
  4641  017E                     l3142:	
  4642                           
  4643                           ;main.c: 168: if(!VBUS_CHRG_STATE[1]) mode++;
  4644  017E  084B               	movf	(_VBUS_CHRG_STATE^(0+128)+1),w
  4645  017F  1D03               	btfss	3,2
  4646  0180  2982               	goto	u2801
  4647  0181  2983               	goto	u2800
  4648  0182                     u2801:	
  4649  0182  298A               	goto	l161
  4650  0183                     u2800:	
  4651  0183                     l3144:	
  4652  0183  3001               	movlw	1
  4653  0184  0140               	movlb	0	; select bank0
  4654  0185  00EA               	movwf	??_main
  4655  0186  086A               	movf	??_main,w
  4656  0187  0141               	movlb	1	; select bank1
  4657  0188  07EF               	addwf	_mode^(0+128),f
  4658  0189  298A               	goto	l3146
  4659  018A                     l161:	
  4660  018A                     l3146:	
  4661                           
  4662                           ;main.c: 169: };main.c: 170: };main.c: 171: };main.c: 172: btn_high_edge = 1;
  4663  018A  0141               	movlb	1	; select bank1
  4664  018B  01EE               	clrf	_btn_high_edge^(0+128)
  4665  018C  0AEE               	incf	_btn_high_edge^(0+128),f
  4666  018D                     l3148:	
  4667                           
  4668                           ;main.c: 173: btn_long_edge = 0;
  4669  018D  01E0               	clrf	_btn_long_edge^(0+128)
  4670  018E                     l3150:	
  4671                           
  4672                           ;main.c: 174: };main.c: 175: if(timer_diff(btn_press_timer) > 50) btn_press_count = 0;
  4673  018E  0142               	movlb	2	; select bank2
  4674  018F  0837               	movf	(_btn_press_timer+3)^(0+256),w
  4675  0190  00F3               	movwf	timer_diff@t+3
  4676  0191  0836               	movf	(_btn_press_timer+2)^(0+256),w
  4677  0192  00F2               	movwf	timer_diff@t+2
  4678  0193  0835               	movf	(_btn_press_timer+1)^(0+256),w
  4679  0194  00F1               	movwf	timer_diff@t+1
  4680  0195  0834               	movf	_btn_press_timer^(0+256),w
  4681  0196  00F0               	movwf	timer_diff@t
  4682  0197  318B  23C3  3180   	fcall	_timer_diff
  4683  019A  0873               	movf	?_timer_diff+3,w
  4684  019B  1D03               	btfss	3,2
  4685  019C  29A9               	goto	u2810
  4686  019D  0872               	movf	?_timer_diff+2,w
  4687  019E  1D03               	btfss	3,2
  4688  019F  29A9               	goto	u2810
  4689  01A0  0871               	movf	?_timer_diff+1,w
  4690  01A1  1D03               	btfss	3,2
  4691  01A2  29A9               	goto	u2810
  4692  01A3  3033               	movlw	51
  4693  01A4  0270               	subwf	?_timer_diff,w
  4694  01A5  1C03               	btfss	3,0
  4695  01A6  29A8               	goto	u2811
  4696  01A7  29A9               	goto	u2810
  4697  01A8                     u2811:	
  4698  01A8  29AB               	goto	l3154
  4699  01A9                     u2810:	
  4700  01A9                     l3152:	
  4701  01A9  0141               	movlb	1	; select bank1
  4702  01AA  01E1               	clrf	_btn_press_count^(0+128)
  4703  01AB                     l3154:	
  4704                           
  4705                           ;main.c: 177: BQ_UPDATE();
  4706  01AB  3184  243A  3180   	fcall	_BQ_UPDATE
  4707  01AE                     l3156:	
  4708                           
  4709                           ;main.c: 178: thermal_protection();
  4710  01AE  318C  2469  3180   	fcall	_thermal_protection
  4711  01B1                     l3158:	
  4712                           
  4713                           ;main.c: 182: if(BATTERY_VOLTAGE <= 50) mode = 2;
  4714  01B1  3033               	movlw	51
  4715  01B2  0141               	movlb	1	; select bank1
  4716  01B3  0267               	subwf	_BATTERY_VOLTAGE^(0+128),w
  4717  01B4  1803               	skipnc
  4718  01B5  29B7               	goto	u2821
  4719  01B6  29B8               	goto	u2820
  4720  01B7                     u2821:	
  4721  01B7  29BE               	goto	l3162
  4722  01B8                     u2820:	
  4723  01B8                     l3160:	
  4724  01B8  3002               	movlw	2
  4725  01B9  0140               	movlb	0	; select bank0
  4726  01BA  00EA               	movwf	??_main
  4727  01BB  086A               	movf	??_main,w
  4728  01BC  0141               	movlb	1	; select bank1
  4729  01BD  00EF               	movwf	_mode^(0+128)
  4730  01BE                     l3162:	
  4731                           
  4732                           ;main.c: 185: if(VBUS_CHRG_STATE[1] == 0) {
  4733  01BE  084B               	movf	(_VBUS_CHRG_STATE^(0+128)+1),w
  4734  01BF  1D03               	btfss	3,2
  4735  01C0  29C2               	goto	u2831
  4736  01C1  29C3               	goto	u2830
  4737  01C2                     u2831:	
  4738  01C2  29E8               	goto	l3170
  4739  01C3                     u2830:	
  4740  01C3                     l3164:	
  4741                           
  4742                           ;main.c: 186: if(SYS_ENABLE) {
  4743  01C3  0865               	movf	_SYS_ENABLE^(0+128),w
  4744  01C4  1903               	btfsc	3,2
  4745  01C5  29C7               	goto	u2841
  4746  01C6  29C8               	goto	u2840
  4747  01C7                     u2841:	
  4748  01C7  29CB               	goto	l168
  4749  01C8                     u2840:	
  4750  01C8                     l3166:	
  4751                           
  4752                           ;main.c: 187: led_modes();
  4753  01C8  318D  2571  3180   	fcall	_led_modes
  4754  01CB                     l168:	
  4755                           
  4756                           ;main.c: 188: };main.c: 189: if(timer_diff(stusb4500_timeout) >= 500) {
  4757  01CB  0142               	movlb	2	; select bank2
  4758  01CC  0833               	movf	(_stusb4500_timeout+3)^(0+256),w
  4759  01CD  00F3               	movwf	timer_diff@t+3
  4760  01CE  0832               	movf	(_stusb4500_timeout+2)^(0+256),w
  4761  01CF  00F2               	movwf	timer_diff@t+2
  4762  01D0  0831               	movf	(_stusb4500_timeout+1)^(0+256),w
  4763  01D1  00F1               	movwf	timer_diff@t+1
  4764  01D2  0830               	movf	_stusb4500_timeout^(0+256),w
  4765  01D3  00F0               	movwf	timer_diff@t
  4766  01D4  318B  23C3  3180   	fcall	_timer_diff
  4767  01D7  0873               	movf	?_timer_diff+3,w
  4768  01D8  1D03               	btfss	3,2
  4769  01D9  29E5               	goto	u2850
  4770  01DA  0872               	movf	?_timer_diff+2,w
  4771  01DB  1D03               	btfss	3,2
  4772  01DC  29E5               	goto	u2850
  4773  01DD  30F4               	movlw	244
  4774  01DE  0270               	subwf	?_timer_diff,w
  4775  01DF  3001               	movlw	1
  4776  01E0  3B71               	subwfb	?_timer_diff+1,w
  4777  01E1  1C03               	btfss	3,0
  4778  01E2  29E4               	goto	u2851
  4779  01E3  29E5               	goto	u2850
  4780  01E4                     u2851:	
  4781  01E4  2A03               	goto	l3180
  4782  01E5                     u2850:	
  4783  01E5                     l3168:	
  4784                           
  4785                           ;main.c: 190: set_stusb4500 = 0;
  4786  01E5  0141               	movlb	1	; select bank1
  4787  01E6  01DF               	clrf	_set_stusb4500^(0+128)
  4788  01E7  2A03               	goto	l3180
  4789  01E8                     l3170:	
  4790                           
  4791                           ;main.c: 193: else {;main.c: 194: chrg_led();
  4792  01E8  3186  2623  3180   	fcall	_chrg_led
  4793  01EB                     l3172:	
  4794                           
  4795                           ;main.c: 195: if(!set_stusb4500) {
  4796  01EB  0141               	movlb	1	; select bank1
  4797  01EC  085F               	movf	_set_stusb4500^(0+128),w
  4798  01ED  1D03               	btfss	3,2
  4799  01EE  29F0               	goto	u2861
  4800  01EF  29F1               	goto	u2860
  4801  01F0                     u2861:	
  4802  01F0  2A03               	goto	l3180
  4803  01F1                     u2860:	
  4804  01F1                     l3174:	
  4805                           
  4806                           ;main.c: 196: stusb_negotiate();
  4807  01F1  3183  233F  3180   	fcall	_stusb_negotiate
  4808  01F4                     l3176:	
  4809                           
  4810                           ;main.c: 197: set_stusb4500 = 1;
  4811  01F4  0141               	movlb	1	; select bank1
  4812  01F5  01DF               	clrf	_set_stusb4500^(0+128)
  4813  01F6  0ADF               	incf	_set_stusb4500^(0+128),f
  4814  01F7                     l3178:	
  4815                           
  4816                           ;main.c: 198: stusb4500_timeout = get_time();
  4817  01F7  318B  236E  3180   	fcall	_get_time
  4818  01FA  0873               	movf	?_get_time+3,w
  4819  01FB  0142               	movlb	2	; select bank2
  4820  01FC  00B3               	movwf	(_stusb4500_timeout+3)^(0+256)
  4821  01FD  0872               	movf	?_get_time+2,w
  4822  01FE  00B2               	movwf	(_stusb4500_timeout+2)^(0+256)
  4823  01FF  0871               	movf	?_get_time+1,w
  4824  0200  00B1               	movwf	(_stusb4500_timeout+1)^(0+256)
  4825  0201  0870               	movf	?_get_time,w
  4826  0202  00B0               	movwf	_stusb4500_timeout^(0+256)
  4827  0203                     l3180:	
  4828                           
  4829                           ;main.c: 199: };main.c: 200: };main.c: 203: if(!SYS_ENABLE && VBUS_CHRG_STATE[1]==0 && b
      +                          tn_state==0 && BQ_adc_state==0 && !set_stusb4500) {
  4830  0203  0141               	movlb	1	; select bank1
  4831  0204  0865               	movf	_SYS_ENABLE^(0+128),w
  4832  0205  1D03               	btfss	3,2
  4833  0206  2A08               	goto	u2871
  4834  0207  2A09               	goto	u2870
  4835  0208                     u2871:	
  4836  0208  2885               	goto	l148
  4837  0209                     u2870:	
  4838  0209                     l3182:	
  4839  0209  084B               	movf	(_VBUS_CHRG_STATE^(0+128)+1),w
  4840  020A  1D03               	btfss	3,2
  4841  020B  2A0D               	goto	u2881
  4842  020C  2A0E               	goto	u2880
  4843  020D                     u2881:	
  4844  020D  2885               	goto	l148
  4845  020E                     u2880:	
  4846  020E                     l3184:	
  4847  020E  0862               	movf	_btn_state^(0+128),w
  4848  020F  1D03               	btfss	3,2
  4849  0210  2A12               	goto	u2891
  4850  0211  2A13               	goto	u2890
  4851  0212                     u2891:	
  4852  0212  2885               	goto	l148
  4853  0213                     u2890:	
  4854  0213                     l3186:	
  4855  0213  0866               	movf	_BQ_adc_state^(0+128),w
  4856  0214  1D03               	btfss	3,2
  4857  0215  2A17               	goto	u2901
  4858  0216  2A18               	goto	u2900
  4859  0217                     u2901:	
  4860  0217  2885               	goto	l148
  4861  0218                     u2900:	
  4862  0218                     l3188:	
  4863  0218  085F               	movf	_set_stusb4500^(0+128),w
  4864  0219  1D03               	btfss	3,2
  4865  021A  2A1C               	goto	u2911
  4866  021B  2A1D               	goto	u2910
  4867  021C                     u2911:	
  4868  021C  2885               	goto	l148
  4869  021D                     u2910:	
  4870  021D                     l3190:	
  4871                           
  4872                           ;main.c: 204: PWM_power_down();
  4873  021D  318B  23D9  3180   	fcall	_PWM_power_down
  4874  0220  0064               	clrwdt	;# 
  4875  0221  0063               	sleep	;# 
  4876  0222  0001               	reset	;# 
  4877  0223  2885               	goto	l148
  4878  0224  3180  2822         	ljmp	start
  4879  0226                     __end_of_main:	
  4880                           
  4881                           	psect	text1
  4882  0C69                     __ptext1:	
  4883 ;; *************** function _thermal_protection *****************
  4884 ;; Defined at:
  4885 ;;		line 82 in file "main.c"
  4886 ;; Parameters:    Size  Location     Type
  4887 ;;		None
  4888 ;; Auto vars:     Size  Location     Type
  4889 ;;		None
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  1    wreg      void 
  4892 ;; Registers used:
  4893 ;;		wreg, status,2, status,0, pclath, cstack
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4899 ;;      Params:         0       0       0       0       0       0       0       0
  4900 ;;      Locals:         0       0       0       0       0       0       0       0
  4901 ;;      Temps:          1       0       0       0       0       0       0       0
  4902 ;;      Totals:         1       0       0       0       0       0       0       0
  4903 ;;Total ram usage:        1 bytes
  4904 ;; Hardware stack levels used:    1
  4905 ;; Hardware stack levels required when called:    4
  4906 ;; This function calls:
  4907 ;;		_BQ_Write
  4908 ;;		_readADC
  4909 ;; This function is called by:
  4910 ;;		_main
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914                           
  4915                           ;psect for function _thermal_protection
  4916  0C69                     _thermal_protection:	
  4917  0C69                     l2808:	
  4918                           ;incstack = 0
  4919                           ; Regs used in _thermal_protection: [wreg+status,2+status,0+pclath+cstack]
  4920                           
  4921                           
  4922                           ;main.c: 85: if(readADC(0b000100) >= 222) {
  4923  0C69  3004               	movlw	4
  4924  0C6A  318C  24E1  318C   	fcall	_readADC
  4925  0C6D  3000               	movlw	0
  4926  0C6E  0271               	subwf	?_readADC+1,w
  4927  0C6F  30DE               	movlw	222
  4928  0C70  1903               	skipnz
  4929  0C71  0270               	subwf	?_readADC,w
  4930  0C72  1C03               	skipc
  4931  0C73  2C75               	goto	u2301
  4932  0C74  2C76               	goto	u2300
  4933  0C75                     u2301:	
  4934  0C75  2C82               	goto	l140
  4935  0C76                     u2300:	
  4936  0C76                     l2810:	
  4937                           
  4938                           ;main.c: 86: SYS_ENABLE = 0;
  4939  0C76  0141               	movlb	1	; select bank1
  4940  0C77  01E5               	clrf	_SYS_ENABLE^(0+128)
  4941  0C78                     l2812:	
  4942                           
  4943                           ;main.c: 87: TRISCbits.TRISC5 = 1;
  4944  0C78  0140               	movlb	0	; select bank0
  4945  0C79  1694               	bsf	20,5	;volatile
  4946  0C7A                     l2814:	
  4947                           
  4948                           ;main.c: 88: BQ_Write(0x09, 0b01100100);
  4949  0C7A  3064               	movlw	100
  4950  0C7B  00F5               	movwf	??_thermal_protection
  4951  0C7C  0875               	movf	??_thermal_protection,w
  4952  0C7D  00F1               	movwf	BQ_Write@data
  4953  0C7E  3009               	movlw	9
  4954  0C7F  318B  239B  318C   	fcall	_BQ_Write
  4955  0C82                     l140:	
  4956  0C82  0008               	return
  4957  0C83                     __end_of_thermal_protection:	
  4958                           
  4959                           	psect	text2
  4960  0CE1                     __ptext2:	
  4961 ;; *************** function _readADC *****************
  4962 ;; Defined at:
  4963 ;;		line 11 in file "ADC.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;  channel         1    wreg     unsigned char 
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;  channel         1    4[COMMON] unsigned char 
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  2    0[COMMON] unsigned int 
  4970 ;; Registers used:
  4971 ;;		wreg, status,2, status,0
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4977 ;;      Params:         2       0       0       0       0       0       0       0
  4978 ;;      Locals:         1       0       0       0       0       0       0       0
  4979 ;;      Temps:          2       0       0       0       0       0       0       0
  4980 ;;      Totals:         5       0       0       0       0       0       0       0
  4981 ;;Total ram usage:        5 bytes
  4982 ;; Hardware stack levels used:    1
  4983 ;; Hardware stack levels required when called:    1
  4984 ;; This function calls:
  4985 ;;		Nothing
  4986 ;; This function is called by:
  4987 ;;		_thermal_protection
  4988 ;; This function uses a non-reentrant model
  4989 ;;
  4990                           
  4991                           
  4992                           ;psect for function _readADC
  4993  0CE1                     _readADC:	
  4994                           
  4995                           ;incstack = 0
  4996                           ; Regs used in _readADC: [wreg+status,2+status,0]
  4997                           ;readADC@channel stored from wreg
  4998  0CE1  00F4               	movwf	readADC@channel
  4999  0CE2                     l2618:	
  5000                           
  5001                           ;ADC.c: 13: ADCON1 = 0b01100000;
  5002  0CE2  3060               	movlw	96
  5003  0CE3  0141               	movlb	1	; select bank1
  5004  0CE4  009E               	movwf	30	;volatile
  5005  0CE5                     l2620:	
  5006                           
  5007                           ;ADC.c: 14: ADCON0 = (channel << 2) | 0b1;
  5008  0CE5  0874               	movf	readADC@channel,w
  5009  0CE6  00F2               	movwf	??_readADC
  5010  0CE7  3001               	movlw	1
  5011  0CE8                     u2045:	
  5012  0CE8  35F2               	lslf	??_readADC,f
  5013  0CE9  3EFF               	addlw	-1
  5014  0CEA  1D03               	skipz
  5015  0CEB  2CE8               	goto	u2045
  5016  0CEC  3572               	lslf	??_readADC,w
  5017  0CED  3801               	iorlw	1
  5018  0CEE  009D               	movwf	29	;volatile
  5019  0CEF                     l2622:	
  5020                           
  5021                           ;ADC.c: 16: _delay((unsigned long)((5)*(32000000/4000.0)));
  5022  0CEF  3034               	movlw	52
  5023  0CF0  00F2               	movwf	??_readADC
  5024  0CF1  30F2               	movlw	242
  5025  0CF2                     u2937:	
  5026  0CF2  0B89               	decfsz	9,f
  5027  0CF3  2CF2               	goto	u2937
  5028  0CF4  0BF2               	decfsz	??_readADC,f
  5029  0CF5  2CF2               	goto	u2937
  5030  0CF6                     l2624:	
  5031                           
  5032                           ;ADC.c: 18: ADCON0bits.GOnDONE = 1;
  5033  0CF6  0141               	movlb	1	; select bank1
  5034  0CF7  149D               	bsf	29,1	;volatile
  5035  0CF8                     l460:	
  5036                           ;ADC.c: 19: while (ADCON0bits.GOnDONE);
  5037                           
  5038  0CF8  189D               	btfsc	29,1	;volatile
  5039  0CF9  2CFB               	goto	u2051
  5040  0CFA  2CFC               	goto	u2050
  5041  0CFB                     u2051:	
  5042  0CFB  2CF8               	goto	l460
  5043  0CFC                     u2050:	
  5044  0CFC                     l2626:	
  5045                           
  5046                           ;ADC.c: 22: return ADRESH;
  5047  0CFC  081C               	movf	28,w	;volatile
  5048  0CFD  00F2               	movwf	??_readADC
  5049  0CFE  01F3               	clrf	??_readADC+1
  5050  0CFF  0872               	movf	??_readADC,w
  5051  0D00  00F0               	movwf	?_readADC
  5052  0D01  0873               	movf	??_readADC+1,w
  5053  0D02  00F1               	movwf	?_readADC+1
  5054  0D03                     l463:	
  5055  0D03  0008               	return
  5056  0D04                     __end_of_readADC:	
  5057                           
  5058                           	psect	text3
  5059  033F                     __ptext3:	
  5060 ;; *************** function _stusb_negotiate *****************
  5061 ;; Defined at:
  5062 ;;		line 143 in file "stusb4500.c"
  5063 ;; Parameters:    Size  Location     Type
  5064 ;;		None
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;  buffer         40    0[BANK1 ] unsigned char [40]
  5067 ;;  header          2   40[BANK1 ] unsigned int 
  5068 ;; Return value:  Size  Location     Type
  5069 ;;                  2   98[None  ] int 
  5070 ;; Registers used:
  5071 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/0
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5077 ;;      Params:         0       0       0       0       0       0       0       0
  5078 ;;      Locals:         0       0      42       0       0       0       0       0
  5079 ;;      Temps:          0       6       0       0       0       0       0       0
  5080 ;;      Totals:         0       6      42       0       0       0       0       0
  5081 ;;Total ram usage:       48 bytes
  5082 ;; Hardware stack levels used:    1
  5083 ;; Hardware stack levels required when called:    8
  5084 ;; This function calls:
  5085 ;;		_i2c_master_read
  5086 ;;		_i2c_master_read_u16
  5087 ;;		_i2c_master_read_u8
  5088 ;;		_negotiate_optimal_pdo
  5089 ;;		_reset
  5090 ;; This function is called by:
  5091 ;;		_main
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           
  5096                           ;psect for function _stusb_negotiate
  5097  033F                     _stusb_negotiate:	
  5098  033F                     l3006:	
  5099                           ;incstack = 0
  5100                           ; Regs used in _stusb_negotiate: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5101                           
  5102                           
  5103                           ;stusb4500.c: 144: uint8_t buffer[40];;stusb4500.c: 145: uint16_t header;;stusb4500.c: 1
      +                          48: if (;stusb4500.c: 149: i2c_master_read_u8(0x28, 0x0E, buffer) != 0 ||;stusb4500.c: 1
      +                          50: !(buffer[0] & 0x01))
  5104  033F  300E               	movlw	14
  5105  0340  0140               	movlb	0	; select bank0
  5106  0341  00E4               	movwf	??_stusb_negotiate
  5107  0342  0864               	movf	??_stusb_negotiate,w
  5108  0343  00A1               	movwf	i2c_master_read_u8@reg
  5109  0344  30A0               	movlw	(low (stusb_negotiate@buffer| 0))& (0+255)
  5110  0345  00E5               	movwf	??_stusb_negotiate+1
  5111  0346  0865               	movf	??_stusb_negotiate+1,w
  5112  0347  00A2               	movwf	i2c_master_read_u8@data
  5113  0348  3028               	movlw	40
  5114  0349  318C  241F  3183   	fcall	_i2c_master_read_u8
  5115  034C  0140               	movlb	0	; select bank0
  5116  034D  0821               	movf	?_i2c_master_read_u8,w
  5117  034E  0422               	iorwf	?_i2c_master_read_u8+1,w
  5118  034F  1D03               	btfss	3,2
  5119  0350  2B52               	goto	u2501
  5120  0351  2B53               	goto	u2500
  5121  0352                     u2501:	
  5122  0352  2C39               	goto	l610
  5123  0353                     u2500:	
  5124  0353                     l3008:	
  5125  0353  0141               	movlb	1	; select bank1
  5126  0354  1820               	btfsc	stusb_negotiate@buffer^(0+128),0
  5127  0355  2B57               	goto	u2511
  5128  0356  2B58               	goto	u2510
  5129  0357                     u2511:	
  5130  0357  2B59               	goto	l3010
  5131  0358                     u2510:	
  5132  0358  2C39               	goto	l610
  5133  0359                     l3010:	
  5134                           
  5135                           ;stusb4500.c: 154: if (reset() != 0) return -1;
  5136  0359  3186  2694  3183   	fcall	_reset
  5137  035C  0140               	movlb	0	; select bank0
  5138  035D  0825               	movf	?_reset,w
  5139  035E  0426               	iorwf	?_reset+1,w
  5140  035F  1903               	btfsc	3,2
  5141  0360  2B62               	goto	u2521
  5142  0361  2B63               	goto	u2520
  5143  0362                     u2521:	
  5144  0362  2B64               	goto	l3014
  5145  0363                     u2520:	
  5146  0363  2C39               	goto	l610
  5147  0364                     l3014:	
  5148                           
  5149                           ;stusb4500.c: 158: if (i2c_master_read_u8(0x28, 0x16, buffer) != 0)
  5150  0364  3016               	movlw	22
  5151  0365  0140               	movlb	0	; select bank0
  5152  0366  00E4               	movwf	??_stusb_negotiate
  5153  0367  0864               	movf	??_stusb_negotiate,w
  5154  0368  00A1               	movwf	i2c_master_read_u8@reg
  5155  0369  30A0               	movlw	(low (stusb_negotiate@buffer| 0))& (0+255)
  5156  036A  00E5               	movwf	??_stusb_negotiate+1
  5157  036B  0865               	movf	??_stusb_negotiate+1,w
  5158  036C  00A2               	movwf	i2c_master_read_u8@data
  5159  036D  3028               	movlw	40
  5160  036E  318C  241F  3183   	fcall	_i2c_master_read_u8
  5161  0371  0140               	movlb	0	; select bank0
  5162  0372  0821               	movf	?_i2c_master_read_u8,w
  5163  0373  0422               	iorwf	?_i2c_master_read_u8+1,w
  5164  0374  1903               	btfsc	3,2
  5165  0375  2B77               	goto	u2531
  5166  0376  2B78               	goto	u2530
  5167  0377                     u2531:	
  5168  0377  2B79               	goto	l613
  5169  0378                     u2530:	
  5170  0378  2C39               	goto	l610
  5171  0379                     l613:	
  5172                           
  5173                           ;stusb4500.c: 162: if (!(buffer[0] & 0x04)) continue;
  5174  0379  0141               	movlb	1	; select bank1
  5175  037A  1920               	btfsc	stusb_negotiate@buffer^(0+128),2
  5176  037B  2B7D               	goto	u2541
  5177  037C  2B7E               	goto	u2540
  5178  037D                     u2541:	
  5179  037D  2B7F               	goto	l3020
  5180  037E                     u2540:	
  5181  037E  2B64               	goto	l3014
  5182  037F                     l3020:	
  5183                           
  5184                           ;stusb4500.c: 165: if (i2c_master_read_u16(0x28, 0x31, &header) != 0)
  5185  037F  3031               	movlw	49
  5186  0380  0140               	movlb	0	; select bank0
  5187  0381  00E4               	movwf	??_stusb_negotiate
  5188  0382  0864               	movf	??_stusb_negotiate,w
  5189  0383  00A1               	movwf	i2c_master_read_u16@reg
  5190  0384  30C8               	movlw	(low (stusb_negotiate@header| 0))& (0+255)
  5191  0385  00E5               	movwf	??_stusb_negotiate+1
  5192  0386  0865               	movf	??_stusb_negotiate+1,w
  5193  0387  00A2               	movwf	i2c_master_read_u16@data
  5194  0388  3028               	movlw	40
  5195  0389  318B  23EF  3183   	fcall	_i2c_master_read_u16
  5196  038C  0140               	movlb	0	; select bank0
  5197  038D  0821               	movf	?_i2c_master_read_u16,w
  5198  038E  0422               	iorwf	?_i2c_master_read_u16+1,w
  5199  038F  1903               	btfsc	3,2
  5200  0390  2B92               	goto	u2551
  5201  0391  2B93               	goto	u2550
  5202  0392                     u2551:	
  5203  0392  2B94               	goto	l3024
  5204  0393                     u2550:	
  5205  0393  2C39               	goto	l610
  5206  0394                     l3024:	
  5207                           
  5208                           ;stusb4500.c: 169: if (;stusb4500.c: 170: !((header >> 12) & 0x07) ||;stusb4500.c: 171: 
      +                          (header & 0x0F) != 0x01)
  5209  0394  0141               	movlb	1	; select bank1
  5210  0395  0849               	movf	(stusb_negotiate@header+1)^(0+128),w
  5211  0396  0140               	movlb	0	; select bank0
  5212  0397  00E5               	movwf	??_stusb_negotiate+1
  5213  0398  0141               	movlb	1	; select bank1
  5214  0399  0848               	movf	stusb_negotiate@header^(0+128),w
  5215  039A  0140               	movlb	0	; select bank0
  5216  039B  00E4               	movwf	??_stusb_negotiate
  5217  039C  0E65               	swapf	??_stusb_negotiate+1,w
  5218  039D  390F               	andlw	15
  5219  039E  00E4               	movwf	??_stusb_negotiate
  5220  039F  01E5               	clrf	??_stusb_negotiate+1
  5221  03A0  3007               	movlw	7
  5222  03A1  0564               	andwf	??_stusb_negotiate,w
  5223  03A2  00E6               	movwf	??_stusb_negotiate+2
  5224  03A3  3000               	movlw	0
  5225  03A4  0565               	andwf	??_stusb_negotiate+1,w
  5226  03A5  00E7               	movwf	??_stusb_negotiate+3
  5227  03A6  0866               	movf	??_stusb_negotiate+2,w
  5228  03A7  0467               	iorwf	??_stusb_negotiate+3,w
  5229  03A8  1903               	btfsc	3,2
  5230  03A9  2BAB               	goto	u2561
  5231  03AA  2BAC               	goto	u2560
  5232  03AB                     u2561:	
  5233  03AB  2B64               	goto	l3014
  5234  03AC                     u2560:	
  5235  03AC                     l3026:	
  5236  03AC  300F               	movlw	15
  5237  03AD  0141               	movlb	1	; select bank1
  5238  03AE  0548               	andwf	stusb_negotiate@header^(0+128),w
  5239  03AF  0140               	movlb	0	; select bank0
  5240  03B0  00E4               	movwf	??_stusb_negotiate
  5241  03B1  3000               	movlw	0
  5242  03B2  0141               	movlb	1	; select bank1
  5243  03B3  0549               	andwf	(stusb_negotiate@header+1)^(0+128),w
  5244  03B4  0140               	movlb	0	; select bank0
  5245  03B5  00E5               	movwf	??_stusb_negotiate+1
  5246  03B6  0364               	decf	??_stusb_negotiate,w
  5247  03B7  0465               	iorwf	??_stusb_negotiate+1,w
  5248  03B8  1903               	btfsc	3,2
  5249  03B9  2BBB               	goto	u2571
  5250  03BA  2BBC               	goto	u2570
  5251  03BB                     u2571:	
  5252  03BB  2BBD               	goto	l3028
  5253  03BC                     u2570:	
  5254  03BC  2B64               	goto	l3014
  5255  03BD                     l3028:	
  5256                           
  5257                           ;stusb4500.c: 175: if (i2c_master_read_u8(0x28, 0x30, buffer) != 0)
  5258  03BD  3030               	movlw	48
  5259  03BE  00E4               	movwf	??_stusb_negotiate
  5260  03BF  0864               	movf	??_stusb_negotiate,w
  5261  03C0  00A1               	movwf	i2c_master_read_u8@reg
  5262  03C1  30A0               	movlw	(low (stusb_negotiate@buffer| 0))& (0+255)
  5263  03C2  00E5               	movwf	??_stusb_negotiate+1
  5264  03C3  0865               	movf	??_stusb_negotiate+1,w
  5265  03C4  00A2               	movwf	i2c_master_read_u8@data
  5266  03C5  3028               	movlw	40
  5267  03C6  318C  241F  3183   	fcall	_i2c_master_read_u8
  5268  03C9  0140               	movlb	0	; select bank0
  5269  03CA  0821               	movf	?_i2c_master_read_u8,w
  5270  03CB  0422               	iorwf	?_i2c_master_read_u8+1,w
  5271  03CC  1903               	btfsc	3,2
  5272  03CD  2BCF               	goto	u2581
  5273  03CE  2BD0               	goto	u2580
  5274  03CF                     u2581:	
  5275  03CF  2BD1               	goto	l3032
  5276  03D0                     u2580:	
  5277  03D0  2C39               	goto	l610
  5278  03D1                     l3032:	
  5279                           
  5280                           ;stusb4500.c: 179: if (buffer[0] != ((header >> 12) & 0x07) * 4)
  5281  03D1  0141               	movlb	1	; select bank1
  5282  03D2  0849               	movf	(stusb_negotiate@header+1)^(0+128),w
  5283  03D3  0140               	movlb	0	; select bank0
  5284  03D4  00E5               	movwf	??_stusb_negotiate+1
  5285  03D5  0141               	movlb	1	; select bank1
  5286  03D6  0848               	movf	stusb_negotiate@header^(0+128),w
  5287  03D7  0140               	movlb	0	; select bank0
  5288  03D8  00E4               	movwf	??_stusb_negotiate
  5289  03D9  0E65               	swapf	??_stusb_negotiate+1,w
  5290  03DA  390F               	andlw	15
  5291  03DB  00E4               	movwf	??_stusb_negotiate
  5292  03DC  01E5               	clrf	??_stusb_negotiate+1
  5293  03DD  3007               	movlw	7
  5294  03DE  0564               	andwf	??_stusb_negotiate,w
  5295  03DF  00E6               	movwf	??_stusb_negotiate+2
  5296  03E0  3000               	movlw	0
  5297  03E1  0565               	andwf	??_stusb_negotiate+1,w
  5298  03E2  00E7               	movwf	??_stusb_negotiate+3
  5299  03E3  35E6               	lslf	??_stusb_negotiate+2,f
  5300  03E4  0DE7               	rlf	??_stusb_negotiate+3,f
  5301  03E5  35E6               	lslf	??_stusb_negotiate+2,f
  5302  03E6  0DE7               	rlf	??_stusb_negotiate+3,f
  5303  03E7  0141               	movlb	1	; select bank1
  5304  03E8  0820               	movf	stusb_negotiate@buffer^(0+128),w
  5305  03E9  0140               	movlb	0	; select bank0
  5306  03EA  00E8               	movwf	??_stusb_negotiate+4
  5307  03EB  01E9               	clrf	??_stusb_negotiate+5
  5308  03EC  0867               	movf	??_stusb_negotiate+3,w
  5309  03ED  0669               	xorwf	??_stusb_negotiate+5,w
  5310  03EE  1D03               	skipz
  5311  03EF  2BF2               	goto	u2595
  5312  03F0  0866               	movf	??_stusb_negotiate+2,w
  5313  03F1  0668               	xorwf	??_stusb_negotiate+4,w
  5314  03F2                     u2595:	
  5315  03F2  1903               	skipnz
  5316  03F3  2BF5               	goto	u2591
  5317  03F4  2BF6               	goto	u2590
  5318  03F5                     u2591:	
  5319  03F5  2BF7               	goto	l3036
  5320  03F6                     u2590:	
  5321  03F6  2C39               	goto	l610
  5322  03F7                     l3036:	
  5323                           
  5324                           ;stusb4500.c: 183: };stusb4500.c: 189: if (;stusb4500.c: 190: i2c_master_read(;stusb4500
      +                          .c: 191: 0x28, 0x33, buffer, ((header >> 12) & 0x07) * 4) !=;stusb4500.c: 192: 0)
  5325  03F7  3033               	movlw	51
  5326  03F8  00E4               	movwf	??_stusb_negotiate
  5327  03F9  0864               	movf	??_stusb_negotiate,w
  5328  03FA  00F4               	movwf	i2c_master_read@reg
  5329  03FB  30A0               	movlw	(low (stusb_negotiate@buffer| 0))& (0+255)
  5330  03FC  00E5               	movwf	??_stusb_negotiate+1
  5331  03FD  0865               	movf	??_stusb_negotiate+1,w
  5332  03FE  00F5               	movwf	i2c_master_read@buf
  5333  03FF  0141               	movlb	1	; select bank1
  5334  0400  0849               	movf	(stusb_negotiate@header+1)^(0+128),w
  5335  0401  0140               	movlb	0	; select bank0
  5336  0402  00E7               	movwf	??_stusb_negotiate+3
  5337  0403  0141               	movlb	1	; select bank1
  5338  0404  0848               	movf	stusb_negotiate@header^(0+128),w
  5339  0405  0140               	movlb	0	; select bank0
  5340  0406  00E6               	movwf	??_stusb_negotiate+2
  5341  0407  0E67               	swapf	??_stusb_negotiate+3,w
  5342  0408  390F               	andlw	15
  5343  0409  00E6               	movwf	??_stusb_negotiate+2
  5344  040A  01E7               	clrf	??_stusb_negotiate+3
  5345  040B  3007               	movlw	7
  5346  040C  0566               	andwf	??_stusb_negotiate+2,w
  5347  040D  00E8               	movwf	??_stusb_negotiate+4
  5348  040E  3000               	movlw	0
  5349  040F  0567               	andwf	??_stusb_negotiate+3,w
  5350  0410  00E9               	movwf	??_stusb_negotiate+5
  5351  0411  35E8               	lslf	??_stusb_negotiate+4,f
  5352  0412  0DE9               	rlf	??_stusb_negotiate+5,f
  5353  0413  35E8               	lslf	??_stusb_negotiate+4,f
  5354  0414  0DE9               	rlf	??_stusb_negotiate+5,f
  5355  0415  0868               	movf	??_stusb_negotiate+4,w
  5356  0416  00F6               	movwf	i2c_master_read@len
  5357  0417  0869               	movf	??_stusb_negotiate+5,w
  5358  0418  00F7               	movwf	i2c_master_read@len+1
  5359  0419  3028               	movlw	40
  5360  041A  3185  25B0  3183   	fcall	_i2c_master_read
  5361  041D  0874               	movf	?_i2c_master_read,w
  5362  041E  0475               	iorwf	?_i2c_master_read+1,w
  5363  041F  1903               	btfsc	3,2
  5364  0420  2C22               	goto	u2601
  5365  0421  2C23               	goto	u2600
  5366  0422                     u2601:	
  5367  0422  2C24               	goto	l3040
  5368  0423                     u2600:	
  5369  0423  2C39               	goto	l610
  5370  0424                     l3040:	
  5371                           
  5372                           ;stusb4500.c: 196: return negotiate_optimal_pdo(;stusb4500.c: 197: (uint32_t*)buffer, ((
      +                          header >> 12) & 0x07));;	Return value of _stusb_negotiate is never used
  5373  0424  0141               	movlb	1	; select bank1
  5374  0425  0849               	movf	(stusb_negotiate@header+1)^(0+128),w
  5375  0426  0140               	movlb	0	; select bank0
  5376  0427  00E5               	movwf	??_stusb_negotiate+1
  5377  0428  0141               	movlb	1	; select bank1
  5378  0429  0848               	movf	stusb_negotiate@header^(0+128),w
  5379  042A  0140               	movlb	0	; select bank0
  5380  042B  00E4               	movwf	??_stusb_negotiate
  5381  042C  0E65               	swapf	??_stusb_negotiate+1,w
  5382  042D  390F               	andlw	15
  5383  042E  00E4               	movwf	??_stusb_negotiate
  5384  042F  01E5               	clrf	??_stusb_negotiate+1
  5385  0430  0864               	movf	??_stusb_negotiate,w
  5386  0431  3907               	andlw	7
  5387  0432  00E6               	movwf	??_stusb_negotiate+2
  5388  0433  0866               	movf	??_stusb_negotiate+2,w
  5389  0434  00C1               	movwf	negotiate_optimal_pdo@num_pdos
  5390  0435  30A0               	movlw	(low (stusb_negotiate@buffer| 0))& (0+255)
  5391  0436  3182  2226  3183   	fcall	_negotiate_optimal_pdo
  5392  0439                     l610:	
  5393  0439  0008               	return
  5394  043A                     __end_of_stusb_negotiate:	
  5395                           
  5396                           	psect	text4
  5397  0226                     __ptext4:	
  5398 ;; *************** function _negotiate_optimal_pdo *****************
  5399 ;; Defined at:
  5400 ;;		line 109 in file "stusb4500.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;  src_pdos        1    wreg     PTR unsigned long 
  5403 ;;		 -> stusb_negotiate@buffer(40), 
  5404 ;;  num_pdos        1   32[BANK0 ] unsigned char 
  5405 ;; Auto vars:     Size  Location     Type
  5406 ;;  src_pdos        1   50[BANK0 ] PTR unsigned long 
  5407 ;;		 -> stusb_negotiate@buffer(40), 
  5408 ;;  pdo             4   61[BANK0 ] unsigned long 
  5409 ;;  pdo_power       4   51[BANK0 ] unsigned long 
  5410 ;;  pdo_voltage     2   65[BANK0 ] unsigned int 
  5411 ;;  pdo_current     2   55[BANK0 ] unsigned int 
  5412 ;;  i               2   57[BANK0 ] int 
  5413 ;;  opt_pdo_powe    4   42[BANK0 ] unsigned long 
  5414 ;;  ok              2   59[BANK0 ] int 
  5415 ;;  opt_pdo_volt    2   48[BANK0 ] unsigned int 
  5416 ;;  opt_pdo_curr    2   46[BANK0 ] unsigned int 
  5417 ;; Return value:  Size  Location     Type
  5418 ;;                  2   32[BANK0 ] int 
  5419 ;; Registers used:
  5420 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5421 ;; Tracked objects:
  5422 ;;		On entry : 0/0
  5423 ;;		On exit  : 0/0
  5424 ;;		Unchanged: 0/0
  5425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5426 ;;      Params:         0       2       0       0       0       0       0       0
  5427 ;;      Locals:         0      25       0       0       0       0       0       0
  5428 ;;      Temps:          0       8       0       0       0       0       0       0
  5429 ;;      Totals:         0      35       0       0       0       0       0       0
  5430 ;;Total ram usage:       35 bytes
  5431 ;; Hardware stack levels used:    1
  5432 ;; Hardware stack levels required when called:    7
  5433 ;; This function calls:
  5434 ;;		___lldiv
  5435 ;;		___lmul
  5436 ;;		___wmul
  5437 ;;		_write_pdo
  5438 ;; This function is called by:
  5439 ;;		_stusb_negotiate
  5440 ;; This function uses a non-reentrant model
  5441 ;;
  5442                           
  5443                           
  5444                           ;psect for function _negotiate_optimal_pdo
  5445  0226                     _negotiate_optimal_pdo:	
  5446                           
  5447                           ;incstack = 0
  5448                           ; Regs used in _negotiate_optimal_pdo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  5449                           ;negotiate_optimal_pdo@src_pdos stored from wreg
  5450  0226  0140               	movlb	0	; select bank0
  5451  0227  00D3               	movwf	negotiate_optimal_pdo@src_pdos
  5452  0228                     l2726:	
  5453                           
  5454                           ;stusb4500.c: 110: int ok = -1;
  5455  0228  30FF               	movlw	255
  5456  0229  00DC               	movwf	negotiate_optimal_pdo@ok
  5457  022A  30FF               	movlw	255
  5458  022B  00DD               	movwf	negotiate_optimal_pdo@ok+1
  5459  022C                     l2728:	
  5460                           
  5461                           ;stusb4500.c: 112: uint16_t opt_pdo_current = 0;
  5462  022C  01CF               	clrf	negotiate_optimal_pdo@opt_pdo_current
  5463  022D  01D0               	clrf	negotiate_optimal_pdo@opt_pdo_current+1
  5464                           
  5465                           ;stusb4500.c: 113: uint16_t opt_pdo_voltage = 0;
  5466  022E  01D1               	clrf	negotiate_optimal_pdo@opt_pdo_voltage
  5467  022F  01D2               	clrf	negotiate_optimal_pdo@opt_pdo_voltage+1
  5468  0230                     l2730:	
  5469                           
  5470                           ;stusb4500.c: 114: uint32_t opt_pdo_power = 0;
  5471  0230  3000               	movlw	0
  5472  0231  00CE               	movwf	negotiate_optimal_pdo@opt_pdo_power+3
  5473  0232  3000               	movlw	0
  5474  0233  00CD               	movwf	negotiate_optimal_pdo@opt_pdo_power+2
  5475  0234  3000               	movlw	0
  5476  0235  00CC               	movwf	negotiate_optimal_pdo@opt_pdo_power+1
  5477  0236  3000               	movlw	0
  5478  0237  00CB               	movwf	negotiate_optimal_pdo@opt_pdo_power
  5479  0238                     l2732:	
  5480                           
  5481                           ;stusb4500.c: 117: for (int i = 0; i < num_pdos; i++) {
  5482  0238  01DA               	clrf	negotiate_optimal_pdo@i
  5483  0239  01DB               	clrf	negotiate_optimal_pdo@i+1
  5484  023A  2B12               	goto	l2756
  5485  023B                     l2734:	
  5486                           
  5487                           ;stusb4500.c: 118: uint32_t pdo = src_pdos[i];
  5488  023B  0140               	movlb	0	; select bank0
  5489  023C  085A               	movf	negotiate_optimal_pdo@i,w
  5490  023D  00C3               	movwf	??_negotiate_optimal_pdo
  5491  023E  3001               	movlw	1
  5492  023F                     u2215:	
  5493  023F  35C3               	lslf	??_negotiate_optimal_pdo,f
  5494  0240  3EFF               	addlw	-1
  5495  0241  1D03               	skipz
  5496  0242  2A3F               	goto	u2215
  5497  0243  3543               	lslf	??_negotiate_optimal_pdo,w
  5498  0244  0753               	addwf	negotiate_optimal_pdo@src_pdos,w
  5499  0245  00C4               	movwf	??_negotiate_optimal_pdo+1
  5500  0246  0844               	movf	??_negotiate_optimal_pdo+1,w
  5501  0247  0086               	movwf	6
  5502  0248  0187               	clrf	7
  5503  0249  3F40               	moviw [0]fsr1
  5504  024A  00DE               	movwf	negotiate_optimal_pdo@pdo
  5505  024B  3F41               	moviw [1]fsr1
  5506  024C  00DF               	movwf	negotiate_optimal_pdo@pdo+1
  5507  024D  3F42               	moviw [2]fsr1
  5508  024E  00E0               	movwf	negotiate_optimal_pdo@pdo+2
  5509  024F  3F43               	moviw [3]fsr1
  5510  0250  00E1               	movwf	negotiate_optimal_pdo@pdo+3
  5511  0251                     l2736:	
  5512                           
  5513                           ;stusb4500.c: 121: uint16_t pdo_current = ((pdo & 0x03FF) * 10);
  5514  0251  30FF               	movlw	255
  5515  0252  055E               	andwf	negotiate_optimal_pdo@pdo,w
  5516  0253  00F0               	movwf	___wmul@multiplier
  5517  0254  3003               	movlw	3
  5518  0255  055F               	andwf	negotiate_optimal_pdo@pdo+1,w
  5519  0256  00F1               	movwf	___wmul@multiplier+1
  5520  0257  300A               	movlw	10
  5521  0258  00F2               	movwf	___wmul@multiplicand
  5522  0259  3000               	movlw	0
  5523  025A  00F3               	movwf	___wmul@multiplicand+1
  5524  025B  318C  24A2  3182   	fcall	___wmul
  5525  025E  0871               	movf	?___wmul+1,w
  5526  025F  0140               	movlb	0	; select bank0
  5527  0260  00D9               	movwf	negotiate_optimal_pdo@pdo_current+1
  5528  0261  0870               	movf	?___wmul,w
  5529  0262  00D8               	movwf	negotiate_optimal_pdo@pdo_current
  5530  0263                     l2738:	
  5531                           
  5532                           ;stusb4500.c: 122: uint16_t pdo_voltage = (((pdo >> 10) & 0x03FF) * 50);
  5533  0263  085E               	movf	negotiate_optimal_pdo@pdo,w
  5534  0264  00C3               	movwf	??_negotiate_optimal_pdo
  5535  0265  085F               	movf	negotiate_optimal_pdo@pdo+1,w
  5536  0266  00C4               	movwf	??_negotiate_optimal_pdo+1
  5537  0267  0860               	movf	negotiate_optimal_pdo@pdo+2,w
  5538  0268  00C5               	movwf	??_negotiate_optimal_pdo+2
  5539  0269  0861               	movf	negotiate_optimal_pdo@pdo+3,w
  5540  026A  00C6               	movwf	??_negotiate_optimal_pdo+3
  5541  026B  300A               	movlw	10
  5542  026C                     u2225:	
  5543  026C  36C6               	lsrf	??_negotiate_optimal_pdo+3,f
  5544  026D  0CC5               	rrf	??_negotiate_optimal_pdo+2,f
  5545  026E  0CC4               	rrf	??_negotiate_optimal_pdo+1,f
  5546  026F  0CC3               	rrf	??_negotiate_optimal_pdo,f
  5547  0270                     u2220:	
  5548  0270  0B89               	decfsz	9,f
  5549  0271  2A6C               	goto	u2225
  5550  0272  30FF               	movlw	255
  5551  0273  0543               	andwf	??_negotiate_optimal_pdo,w
  5552  0274  00F0               	movwf	___wmul@multiplier
  5553  0275  3003               	movlw	3
  5554  0276  0544               	andwf	??_negotiate_optimal_pdo+1,w
  5555  0277  00F1               	movwf	___wmul@multiplier+1
  5556  0278  3032               	movlw	50
  5557  0279  00F2               	movwf	___wmul@multiplicand
  5558  027A  3000               	movlw	0
  5559  027B  00F3               	movwf	___wmul@multiplicand+1
  5560  027C  318C  24A2  3182   	fcall	___wmul
  5561  027F  0871               	movf	?___wmul+1,w
  5562  0280  0140               	movlb	0	; select bank0
  5563  0281  00E3               	movwf	negotiate_optimal_pdo@pdo_voltage+1
  5564  0282  0870               	movf	?___wmul,w
  5565  0283  00E2               	movwf	negotiate_optimal_pdo@pdo_voltage
  5566  0284                     l2740:	
  5567                           
  5568                           ;stusb4500.c: 123: uint32_t pdo_power = (uint32_t)pdo_current * pdo_voltage / 1000;
  5569  0284  3000               	movlw	0
  5570  0285  00A4               	movwf	___lldiv@divisor+3
  5571  0286  3000               	movlw	0
  5572  0287  00A3               	movwf	___lldiv@divisor+2
  5573  0288  3003               	movlw	3
  5574  0289  00A2               	movwf	___lldiv@divisor+1
  5575  028A  30E8               	movlw	232
  5576  028B  00A1               	movwf	___lldiv@divisor
  5577  028C  0858               	movf	negotiate_optimal_pdo@pdo_current,w
  5578  028D  00F0               	movwf	___lmul@multiplier
  5579  028E  0859               	movf	negotiate_optimal_pdo@pdo_current+1,w
  5580  028F  00F1               	movwf	___lmul@multiplier+1
  5581  0290  01F2               	clrf	___lmul@multiplier+2
  5582  0291  01F3               	clrf	___lmul@multiplier+3
  5583  0292  0862               	movf	negotiate_optimal_pdo@pdo_voltage,w
  5584  0293  00F4               	movwf	___lmul@multiplicand
  5585  0294  0863               	movf	negotiate_optimal_pdo@pdo_voltage+1,w
  5586  0295  00F5               	movwf	___lmul@multiplicand+1
  5587  0296  01F6               	clrf	___lmul@multiplicand+2
  5588  0297  01F7               	clrf	___lmul@multiplicand+3
  5589  0298  3187  27CD  3182   	fcall	___lmul
  5590  029B  0873               	movf	?___lmul+3,w
  5591  029C  0140               	movlb	0	; select bank0
  5592  029D  00A8               	movwf	___lldiv@dividend+3
  5593  029E  0872               	movf	?___lmul+2,w
  5594  029F  00A7               	movwf	___lldiv@dividend+2
  5595  02A0  0871               	movf	?___lmul+1,w
  5596  02A1  00A6               	movwf	___lldiv@dividend+1
  5597  02A2  0870               	movf	?___lmul,w
  5598  02A3  00A5               	movwf	___lldiv@dividend
  5599  02A4  318F  27A5  3182   	fcall	___lldiv
  5600  02A7  0140               	movlb	0	; select bank0
  5601  02A8  0824               	movf	?___lldiv+3,w
  5602  02A9  00D7               	movwf	negotiate_optimal_pdo@pdo_power+3
  5603  02AA  0823               	movf	?___lldiv+2,w
  5604  02AB  00D6               	movwf	negotiate_optimal_pdo@pdo_power+2
  5605  02AC  0822               	movf	?___lldiv+1,w
  5606  02AD  00D5               	movwf	negotiate_optimal_pdo@pdo_power+1
  5607  02AE  0821               	movf	?___lldiv,w
  5608  02AF  00D4               	movwf	negotiate_optimal_pdo@pdo_power
  5609  02B0                     l2742:	
  5610                           
  5611                           ;stusb4500.c: 125: if (;stusb4500.c: 126: ((pdo >> 30) & 0x03) != 0x00 || pdo_current < 
      +                          0 ||;stusb4500.c: 127: pdo_voltage < 5000 || pdo_voltage > 12000)
  5612  02B0  3003               	movlw	3
  5613  02B1  00C3               	movwf	??_negotiate_optimal_pdo
  5614  02B2  3000               	movlw	0
  5615  02B3  00C4               	movwf	??_negotiate_optimal_pdo+1
  5616  02B4  3000               	movlw	0
  5617  02B5  00C5               	movwf	??_negotiate_optimal_pdo+2
  5618  02B6  3000               	movlw	0
  5619  02B7  00C6               	movwf	??_negotiate_optimal_pdo+3
  5620  02B8  085E               	movf	negotiate_optimal_pdo@pdo,w
  5621  02B9  00C7               	movwf	??_negotiate_optimal_pdo+4
  5622  02BA  085F               	movf	negotiate_optimal_pdo@pdo+1,w
  5623  02BB  00C8               	movwf	??_negotiate_optimal_pdo+5
  5624  02BC  0860               	movf	negotiate_optimal_pdo@pdo+2,w
  5625  02BD  00C9               	movwf	??_negotiate_optimal_pdo+6
  5626  02BE  0861               	movf	negotiate_optimal_pdo@pdo+3,w
  5627  02BF  00CA               	movwf	??_negotiate_optimal_pdo+7
  5628  02C0  301E               	movlw	30
  5629  02C1                     u2235:	
  5630  02C1  36CA               	lsrf	??_negotiate_optimal_pdo+7,f
  5631  02C2  0CC9               	rrf	??_negotiate_optimal_pdo+6,f
  5632  02C3  0CC8               	rrf	??_negotiate_optimal_pdo+5,f
  5633  02C4  0CC7               	rrf	??_negotiate_optimal_pdo+4,f
  5634  02C5                     u2230:	
  5635  02C5  0B89               	decfsz	9,f
  5636  02C6  2AC1               	goto	u2235
  5637  02C7  0847               	movf	??_negotiate_optimal_pdo+4,w
  5638  02C8  05C3               	andwf	??_negotiate_optimal_pdo,f
  5639  02C9  0848               	movf	??_negotiate_optimal_pdo+5,w
  5640  02CA  05C4               	andwf	??_negotiate_optimal_pdo+1,f
  5641  02CB  0849               	movf	??_negotiate_optimal_pdo+6,w
  5642  02CC  05C5               	andwf	??_negotiate_optimal_pdo+2,f
  5643  02CD  084A               	movf	??_negotiate_optimal_pdo+7,w
  5644  02CE  05C6               	andwf	??_negotiate_optimal_pdo+3,f
  5645  02CF  0846               	movf	??_negotiate_optimal_pdo+3,w
  5646  02D0  0445               	iorwf	??_negotiate_optimal_pdo+2,w
  5647  02D1  0444               	iorwf	??_negotiate_optimal_pdo+1,w
  5648  02D2  0443               	iorwf	??_negotiate_optimal_pdo,w
  5649  02D3  1D03               	skipz
  5650  02D4  2AD6               	goto	u2241
  5651  02D5  2AD7               	goto	u2240
  5652  02D6                     u2241:	
  5653  02D6  2B0E               	goto	l2754
  5654  02D7                     u2240:	
  5655  02D7                     l2744:	
  5656  02D7  3013               	movlw	19
  5657  02D8  0263               	subwf	negotiate_optimal_pdo@pdo_voltage+1,w
  5658  02D9  3088               	movlw	136
  5659  02DA  1903               	skipnz
  5660  02DB  0262               	subwf	negotiate_optimal_pdo@pdo_voltage,w
  5661  02DC  1C03               	skipc
  5662  02DD  2ADF               	goto	u2251
  5663  02DE  2AE0               	goto	u2250
  5664  02DF                     u2251:	
  5665  02DF  2B0E               	goto	l2754
  5666  02E0                     u2250:	
  5667  02E0                     l2746:	
  5668  02E0  302E               	movlw	46
  5669  02E1  0263               	subwf	negotiate_optimal_pdo@pdo_voltage+1,w
  5670  02E2  30E1               	movlw	225
  5671  02E3  1903               	skipnz
  5672  02E4  0262               	subwf	negotiate_optimal_pdo@pdo_voltage,w
  5673  02E5  1C03               	skipc
  5674  02E6  2AE8               	goto	u2261
  5675  02E7  2AE9               	goto	u2260
  5676  02E8                     u2261:	
  5677  02E8  2AEA               	goto	l2748
  5678  02E9                     u2260:	
  5679  02E9  2B0E               	goto	l2754
  5680  02EA                     l2748:	
  5681                           
  5682                           ;stusb4500.c: 129: if (pdo_power > opt_pdo_power) {
  5683  02EA  0857               	movf	negotiate_optimal_pdo@pdo_power+3,w
  5684  02EB  024E               	subwf	negotiate_optimal_pdo@opt_pdo_power+3,w
  5685  02EC  1D03               	skipz
  5686  02ED  2AF8               	goto	u2275
  5687  02EE  0856               	movf	negotiate_optimal_pdo@pdo_power+2,w
  5688  02EF  024D               	subwf	negotiate_optimal_pdo@opt_pdo_power+2,w
  5689  02F0  1D03               	skipz
  5690  02F1  2AF8               	goto	u2275
  5691  02F2  0855               	movf	negotiate_optimal_pdo@pdo_power+1,w
  5692  02F3  024C               	subwf	negotiate_optimal_pdo@opt_pdo_power+1,w
  5693  02F4  1D03               	skipz
  5694  02F5  2AF8               	goto	u2275
  5695  02F6  0854               	movf	negotiate_optimal_pdo@pdo_power,w
  5696  02F7  024B               	subwf	negotiate_optimal_pdo@opt_pdo_power,w
  5697  02F8                     u2275:	
  5698  02F8  1803               	skipnc
  5699  02F9  2AFB               	goto	u2271
  5700  02FA  2AFC               	goto	u2270
  5701  02FB                     u2271:	
  5702  02FB  2B0E               	goto	l2754
  5703  02FC                     u2270:	
  5704  02FC                     l2750:	
  5705                           
  5706                           ;stusb4500.c: 130: opt_pdo_current = pdo_current;
  5707  02FC  0859               	movf	negotiate_optimal_pdo@pdo_current+1,w
  5708  02FD  00D0               	movwf	negotiate_optimal_pdo@opt_pdo_current+1
  5709  02FE  0858               	movf	negotiate_optimal_pdo@pdo_current,w
  5710  02FF  00CF               	movwf	negotiate_optimal_pdo@opt_pdo_current
  5711                           
  5712                           ;stusb4500.c: 131: opt_pdo_voltage = pdo_voltage;
  5713  0300  0863               	movf	negotiate_optimal_pdo@pdo_voltage+1,w
  5714  0301  00D2               	movwf	negotiate_optimal_pdo@opt_pdo_voltage+1
  5715  0302  0862               	movf	negotiate_optimal_pdo@pdo_voltage,w
  5716  0303  00D1               	movwf	negotiate_optimal_pdo@opt_pdo_voltage
  5717                           
  5718                           ;stusb4500.c: 132: opt_pdo_power = pdo_power;
  5719  0304  0857               	movf	negotiate_optimal_pdo@pdo_power+3,w
  5720  0305  00CE               	movwf	negotiate_optimal_pdo@opt_pdo_power+3
  5721  0306  0856               	movf	negotiate_optimal_pdo@pdo_power+2,w
  5722  0307  00CD               	movwf	negotiate_optimal_pdo@opt_pdo_power+2
  5723  0308  0855               	movf	negotiate_optimal_pdo@pdo_power+1,w
  5724  0309  00CC               	movwf	negotiate_optimal_pdo@opt_pdo_power+1
  5725  030A  0854               	movf	negotiate_optimal_pdo@pdo_power,w
  5726  030B  00CB               	movwf	negotiate_optimal_pdo@opt_pdo_power
  5727  030C                     l2752:	
  5728                           
  5729                           ;stusb4500.c: 133: ok = 0;
  5730  030C  01DC               	clrf	negotiate_optimal_pdo@ok
  5731  030D  01DD               	clrf	negotiate_optimal_pdo@ok+1
  5732  030E                     l2754:	
  5733  030E  3001               	movlw	1
  5734  030F  07DA               	addwf	negotiate_optimal_pdo@i,f
  5735  0310  3000               	movlw	0
  5736  0311  3DDB               	addwfc	negotiate_optimal_pdo@i+1,f
  5737  0312                     l2756:	
  5738  0312  085B               	movf	negotiate_optimal_pdo@i+1,w
  5739  0313  3A80               	xorlw	128
  5740  0314  00C3               	movwf	??_negotiate_optimal_pdo
  5741  0315  3080               	movlw	128
  5742  0316  0243               	subwf	??_negotiate_optimal_pdo,w
  5743  0317  1D03               	skipz
  5744  0318  2B1B               	goto	u2285
  5745  0319  0841               	movf	negotiate_optimal_pdo@num_pdos,w
  5746  031A  025A               	subwf	negotiate_optimal_pdo@i,w
  5747  031B                     u2285:	
  5748  031B  1C03               	skipc
  5749  031C  2B1E               	goto	u2281
  5750  031D  2B1F               	goto	u2280
  5751  031E                     u2281:	
  5752  031E  2A3B               	goto	l2734
  5753  031F                     u2280:	
  5754  031F                     l2758:	
  5755                           
  5756                           ;stusb4500.c: 134: };stusb4500.c: 135: };stusb4500.c: 138: if (ok == 0) ok = write_pdo(o
      +                          pt_pdo_current, opt_pdo_voltage, 3);
  5757  031F  0140               	movlb	0	; select bank0
  5758  0320  085C               	movf	negotiate_optimal_pdo@ok,w
  5759  0321  045D               	iorwf	negotiate_optimal_pdo@ok+1,w
  5760  0322  1D03               	btfss	3,2
  5761  0323  2B25               	goto	u2291
  5762  0324  2B26               	goto	u2290
  5763  0325                     u2291:	
  5764  0325  2B3A               	goto	l2762
  5765  0326                     u2290:	
  5766  0326                     l2760:	
  5767  0326  0850               	movf	negotiate_optimal_pdo@opt_pdo_current+1,w
  5768  0327  00AD               	movwf	write_pdo@current_mA+1
  5769  0328  084F               	movf	negotiate_optimal_pdo@opt_pdo_current,w
  5770  0329  00AC               	movwf	write_pdo@current_mA
  5771  032A  0852               	movf	negotiate_optimal_pdo@opt_pdo_voltage+1,w
  5772  032B  00AF               	movwf	write_pdo@voltage_mV+1
  5773  032C  0851               	movf	negotiate_optimal_pdo@opt_pdo_voltage,w
  5774  032D  00AE               	movwf	write_pdo@voltage_mV
  5775  032E  3003               	movlw	3
  5776  032F  00C3               	movwf	??_negotiate_optimal_pdo
  5777  0330  0843               	movf	??_negotiate_optimal_pdo,w
  5778  0331  00B0               	movwf	write_pdo@pdo_num
  5779  0332  3184  24BA  3182   	fcall	_write_pdo
  5780  0335  0140               	movlb	0	; select bank0
  5781  0336  082D               	movf	?_write_pdo+1,w
  5782  0337  00DD               	movwf	negotiate_optimal_pdo@ok+1
  5783  0338  082C               	movf	?_write_pdo,w
  5784  0339  00DC               	movwf	negotiate_optimal_pdo@ok
  5785  033A                     l2762:	
  5786                           
  5787                           ;stusb4500.c: 140: return ok;
  5788  033A  085D               	movf	negotiate_optimal_pdo@ok+1,w
  5789  033B  00C2               	movwf	?_negotiate_optimal_pdo+1
  5790  033C  085C               	movf	negotiate_optimal_pdo@ok,w
  5791  033D  00C1               	movwf	?_negotiate_optimal_pdo
  5792  033E                     l604:	
  5793  033E  0008               	return
  5794  033F                     __end_of_negotiate_optimal_pdo:	
  5795                           
  5796                           	psect	text5
  5797  04BA                     __ptext5:	
  5798 ;; *************** function _write_pdo *****************
  5799 ;; Defined at:
  5800 ;;		line 92 in file "stusb4500.c"
  5801 ;; Parameters:    Size  Location     Type
  5802 ;;  current_mA      2   11[BANK0 ] unsigned int 
  5803 ;;  voltage_mV      2   13[BANK0 ] unsigned int 
  5804 ;;  pdo_num         1   15[BANK0 ] unsigned char 
  5805 ;; Auto vars:     Size  Location     Type
  5806 ;;  pdo             4   28[BANK0 ] unsigned long 
  5807 ;; Return value:  Size  Location     Type
  5808 ;;                  2   11[BANK0 ] int 
  5809 ;; Registers used:
  5810 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5811 ;; Tracked objects:
  5812 ;;		On entry : 0/0
  5813 ;;		On exit  : 0/0
  5814 ;;		Unchanged: 0/0
  5815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5816 ;;      Params:         0       5       0       0       0       0       0       0
  5817 ;;      Locals:         0       4       0       0       0       0       0       0
  5818 ;;      Temps:          0      12       0       0       0       0       0       0
  5819 ;;      Totals:         0      21       0       0       0       0       0       0
  5820 ;;Total ram usage:       21 bytes
  5821 ;; Hardware stack levels used:    1
  5822 ;; Hardware stack levels required when called:    6
  5823 ;; This function calls:
  5824 ;;		___lwdiv
  5825 ;;		_i2c_master_write_u32
  5826 ;;		_reset
  5827 ;; This function is called by:
  5828 ;;		_negotiate_optimal_pdo
  5829 ;; This function uses a non-reentrant model
  5830 ;;
  5831                           
  5832                           
  5833                           ;psect for function _write_pdo
  5834  04BA                     _write_pdo:	
  5835  04BA                     l2560:	
  5836                           ;incstack = 0
  5837                           ; Regs used in _write_pdo: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5838                           
  5839                           
  5840                           ;stusb4500.c: 93: if (pdo_num < 1 || pdo_num > 3) return -1;
  5841  04BA  0140               	movlb	0	; select bank0
  5842  04BB  0830               	movf	write_pdo@pdo_num,w
  5843  04BC  1903               	btfsc	3,2
  5844  04BD  2CBF               	goto	u1881
  5845  04BE  2CC0               	goto	u1880
  5846  04BF                     u1881:	
  5847  04BF  2CC6               	goto	l2564
  5848  04C0                     u1880:	
  5849  04C0                     l2562:	
  5850  04C0  3004               	movlw	4
  5851  04C1  0230               	subwf	write_pdo@pdo_num,w
  5852  04C2  1C03               	skipc
  5853  04C3  2CC5               	goto	u1891
  5854  04C4  2CC6               	goto	u1890
  5855  04C5                     u1891:	
  5856  04C5  2CCB               	goto	l2568
  5857  04C6                     u1890:	
  5858  04C6                     l2564:	
  5859  04C6  30FF               	movlw	255
  5860  04C7  00AC               	movwf	?_write_pdo
  5861  04C8  30FF               	movlw	255
  5862  04C9  00AD               	movwf	?_write_pdo+1
  5863  04CA  2D36               	goto	l591
  5864  04CB                     l2568:	
  5865                           
  5866                           ;stusb4500.c: 96: uint32_t pdo =;stusb4500.c: 97: 0x00000000 | ((current_mA / 10) & 0x03
      +                          FF) | ((uint32_t)((voltage_mV / 50) & 0x03FF) << 10);
  5867  04CB  3032               	movlw	50
  5868  04CC  00F0               	movwf	___lwdiv@divisor
  5869  04CD  3000               	movlw	0
  5870  04CE  00F1               	movwf	___lwdiv@divisor+1
  5871  04CF  082F               	movf	write_pdo@voltage_mV+1,w
  5872  04D0  00F3               	movwf	___lwdiv@dividend+1
  5873  04D1  082E               	movf	write_pdo@voltage_mV,w
  5874  04D2  00F2               	movwf	___lwdiv@dividend
  5875  04D3  318D  25F5  3184   	fcall	___lwdiv
  5876  04D6  30FF               	movlw	255
  5877  04D7  0570               	andwf	?___lwdiv,w
  5878  04D8  0140               	movlb	0	; select bank0
  5879  04D9  00B1               	movwf	??_write_pdo
  5880  04DA  3003               	movlw	3
  5881  04DB  0571               	andwf	?___lwdiv+1,w
  5882  04DC  00B2               	movwf	??_write_pdo+1
  5883  04DD  0831               	movf	??_write_pdo,w
  5884  04DE  00B3               	movwf	??_write_pdo+2
  5885  04DF  0832               	movf	??_write_pdo+1,w
  5886  04E0  00B4               	movwf	??_write_pdo+3
  5887  04E1  01B5               	clrf	??_write_pdo+4
  5888  04E2  01B6               	clrf	??_write_pdo+5
  5889  04E3  300A               	movlw	10
  5890  04E4                     u1905:	
  5891  04E4  35B3               	lslf	??_write_pdo+2,f
  5892  04E5  0DB4               	rlf	??_write_pdo+3,f
  5893  04E6  0DB5               	rlf	??_write_pdo+4,f
  5894  04E7  0DB6               	rlf	??_write_pdo+5,f
  5895  04E8                     u1900:	
  5896  04E8  0B89               	decfsz	9,f
  5897  04E9  2CE4               	goto	u1905
  5898  04EA  300A               	movlw	10
  5899  04EB  00F0               	movwf	___lwdiv@divisor
  5900  04EC  3000               	movlw	0
  5901  04ED  00F1               	movwf	___lwdiv@divisor+1
  5902  04EE  082D               	movf	write_pdo@current_mA+1,w
  5903  04EF  00F3               	movwf	___lwdiv@dividend+1
  5904  04F0  082C               	movf	write_pdo@current_mA,w
  5905  04F1  00F2               	movwf	___lwdiv@dividend
  5906  04F2  318D  25F5  3184   	fcall	___lwdiv
  5907  04F5  30FF               	movlw	255
  5908  04F6  0570               	andwf	?___lwdiv,w
  5909  04F7  0140               	movlb	0	; select bank0
  5910  04F8  00B7               	movwf	??_write_pdo+6
  5911  04F9  3003               	movlw	3
  5912  04FA  0571               	andwf	?___lwdiv+1,w
  5913  04FB  00B8               	movwf	??_write_pdo+7
  5914  04FC  0837               	movf	??_write_pdo+6,w
  5915  04FD  00B9               	movwf	??_write_pdo+8
  5916  04FE  0838               	movf	??_write_pdo+7,w
  5917  04FF  00BA               	movwf	??_write_pdo+9
  5918  0500  01BB               	clrf	??_write_pdo+10
  5919  0501  01BC               	clrf	??_write_pdo+11
  5920  0502  0833               	movf	??_write_pdo+2,w
  5921  0503  0439               	iorwf	??_write_pdo+8,w
  5922  0504  00BD               	movwf	write_pdo@pdo
  5923  0505  0834               	movf	??_write_pdo+3,w
  5924  0506  043A               	iorwf	??_write_pdo+9,w
  5925  0507  00BE               	movwf	write_pdo@pdo+1
  5926  0508  0835               	movf	??_write_pdo+4,w
  5927  0509  043B               	iorwf	??_write_pdo+10,w
  5928  050A  00BF               	movwf	write_pdo@pdo+2
  5929  050B  0836               	movf	??_write_pdo+5,w
  5930  050C  043C               	iorwf	??_write_pdo+11,w
  5931  050D  00C0               	movwf	write_pdo@pdo+3
  5932  050E                     l2570:	
  5933                           
  5934                           ;stusb4500.c: 100: if (;stusb4500.c: 101: i2c_master_write_u32(0x28, 0x85 + 4 * (pdo_num
      +                           - 1), pdo) !=;stusb4500.c: 102: 0)
  5935  050E  0830               	movf	write_pdo@pdo_num,w
  5936  050F  00B1               	movwf	??_write_pdo
  5937  0510  3001               	movlw	1
  5938  0511                     u1915:	
  5939  0511  35B1               	lslf	??_write_pdo,f
  5940  0512  3EFF               	addlw	-1
  5941  0513  1D03               	skipz
  5942  0514  2D11               	goto	u1915
  5943  0515  3531               	lslf	??_write_pdo,w
  5944  0516  3E81               	addlw	129
  5945  0517  00B2               	movwf	??_write_pdo+1
  5946  0518  0832               	movf	??_write_pdo+1,w
  5947  0519  00A1               	movwf	i2c_master_write_u32@reg
  5948  051A  0840               	movf	write_pdo@pdo+3,w
  5949  051B  00A5               	movwf	i2c_master_write_u32@data+3
  5950  051C  083F               	movf	write_pdo@pdo+2,w
  5951  051D  00A4               	movwf	i2c_master_write_u32@data+2
  5952  051E  083E               	movf	write_pdo@pdo+1,w
  5953  051F  00A3               	movwf	i2c_master_write_u32@data+1
  5954  0520  083D               	movf	write_pdo@pdo,w
  5955  0521  00A2               	movwf	i2c_master_write_u32@data
  5956  0522  3028               	movlw	40
  5957  0523  318C  2407  3184   	fcall	_i2c_master_write_u32
  5958  0526  0140               	movlb	0	; select bank0
  5959  0527  0821               	movf	?_i2c_master_write_u32,w
  5960  0528  0422               	iorwf	?_i2c_master_write_u32+1,w
  5961  0529  1903               	btfsc	3,2
  5962  052A  2D2C               	goto	u1921
  5963  052B  2D2D               	goto	u1920
  5964  052C                     u1921:	
  5965  052C  2D2E               	goto	l2576
  5966  052D                     u1920:	
  5967  052D  2CC6               	goto	l2564
  5968  052E                     l2576:	
  5969                           
  5970                           ;stusb4500.c: 106: return reset();
  5971  052E  3186  2694  3184   	fcall	_reset
  5972  0531  0140               	movlb	0	; select bank0
  5973  0532  0826               	movf	?_reset+1,w
  5974  0533  00AD               	movwf	?_write_pdo+1
  5975  0534  0825               	movf	?_reset,w
  5976  0535  00AC               	movwf	?_write_pdo
  5977  0536                     l591:	
  5978  0536  0008               	return
  5979  0537                     __end_of_write_pdo:	
  5980                           
  5981                           	psect	text6
  5982  0694                     __ptext6:	
  5983 ;; *************** function _reset *****************
  5984 ;; Defined at:
  5985 ;;		line 66 in file "stusb4500.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;		None
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;  res             1    8[BANK0 ] unsigned char 
  5990 ;;  ok              2    9[BANK0 ] int 
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  2    4[BANK0 ] int 
  5993 ;; Registers used:
  5994 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6000 ;;      Params:         0       2       0       0       0       0       0       0
  6001 ;;      Locals:         0       3       0       0       0       0       0       0
  6002 ;;      Temps:          0       2       0       0       0       0       0       0
  6003 ;;      Totals:         0       7       0       0       0       0       0       0
  6004 ;;Total ram usage:        7 bytes
  6005 ;; Hardware stack levels used:    1
  6006 ;; Hardware stack levels required when called:    5
  6007 ;; This function calls:
  6008 ;;		_i2c_master_read_u8
  6009 ;;		_i2c_master_write_u8
  6010 ;; This function is called by:
  6011 ;;		_write_pdo
  6012 ;;		_stusb_negotiate
  6013 ;; This function uses a non-reentrant model
  6014 ;;
  6015                           
  6016                           
  6017                           ;psect for function _reset
  6018  0694                     _reset:	
  6019  0694                     l2422:	
  6020                           ;incstack = 0
  6021                           ; Regs used in _reset: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6022                           
  6023  0694                     l2424:	
  6024  0694                     l2426:	
  6025                           ;stusb4500.c: 70: if (ok == 0)
  6026                           
  6027                           
  6028                           ;stusb4500.c: 71: ok = i2c_master_write_u8(0x28, 0x23, 0x01);
  6029  0694  3023               	movlw	35
  6030  0695  0140               	movlb	0	; select bank0
  6031  0696  00A7               	movwf	??_reset
  6032  0697  0827               	movf	??_reset,w
  6033  0698  00A1               	movwf	i2c_master_write_u8@reg
  6034  0699  01A2               	clrf	i2c_master_write_u8@data
  6035  069A  0AA2               	incf	i2c_master_write_u8@data,f
  6036  069B  3028               	movlw	40
  6037  069C  318C  2437  3186   	fcall	_i2c_master_write_u8
  6038  069F  0140               	movlb	0	; select bank0
  6039  06A0  0822               	movf	?_i2c_master_write_u8+1,w
  6040  06A1  00AB               	movwf	reset@ok+1
  6041  06A2  0821               	movf	?_i2c_master_write_u8,w
  6042  06A3  00AA               	movwf	reset@ok
  6043  06A4                     l2428:	
  6044                           
  6045                           ;stusb4500.c: 74: if (ok == 0) {
  6046  06A4  082A               	movf	reset@ok,w
  6047  06A5  042B               	iorwf	reset@ok+1,w
  6048  06A6  1D03               	btfss	3,2
  6049  06A7  2EA9               	goto	u1601
  6050  06A8  2EAA               	goto	u1600
  6051  06A9                     u1601:	
  6052  06A9  2ECD               	goto	l2438
  6053  06AA                     u1600:	
  6054  06AA                     l2430:	
  6055                           
  6056                           ;stusb4500.c: 77: ok = i2c_master_read_u8(0x28, 0x2F, &res);
  6057  06AA  302F               	movlw	47
  6058  06AB  00A7               	movwf	??_reset
  6059  06AC  0827               	movf	??_reset,w
  6060  06AD  00A1               	movwf	i2c_master_read_u8@reg
  6061  06AE  3029               	movlw	(low (reset@res| 0))& (0+255)
  6062  06AF  00A8               	movwf	??_reset+1
  6063  06B0  0828               	movf	??_reset+1,w
  6064  06B1  00A2               	movwf	i2c_master_read_u8@data
  6065  06B2  3028               	movlw	40
  6066  06B3  318C  241F  3186   	fcall	_i2c_master_read_u8
  6067  06B6  0140               	movlb	0	; select bank0
  6068  06B7  0822               	movf	?_i2c_master_read_u8+1,w
  6069  06B8  00AB               	movwf	reset@ok+1
  6070  06B9  0821               	movf	?_i2c_master_read_u8,w
  6071  06BA  00AA               	movwf	reset@ok
  6072  06BB                     l2432:	
  6073                           
  6074                           ;stusb4500.c: 78: } while (ok == 0 && res != 0x25 && res != 0x21);
  6075  06BB  082A               	movf	reset@ok,w
  6076  06BC  042B               	iorwf	reset@ok+1,w
  6077  06BD  1D03               	btfss	3,2
  6078  06BE  2EC0               	goto	u1611
  6079  06BF  2EC1               	goto	u1610
  6080  06C0                     u1611:	
  6081  06C0  2ECD               	goto	l2438
  6082  06C1                     u1610:	
  6083  06C1                     l2434:	
  6084  06C1  3025               	movlw	37
  6085  06C2  0629               	xorwf	reset@res,w
  6086  06C3  1903               	btfsc	3,2
  6087  06C4  2EC6               	goto	u1621
  6088  06C5  2EC7               	goto	u1620
  6089  06C6                     u1621:	
  6090  06C6  2ECD               	goto	l2438
  6091  06C7                     u1620:	
  6092  06C7                     l2436:	
  6093  06C7  3021               	movlw	33
  6094  06C8  0629               	xorwf	reset@res,w
  6095  06C9  1D03               	btfss	3,2
  6096  06CA  2ECC               	goto	u1631
  6097  06CB  2ECD               	goto	u1630
  6098  06CC                     u1631:	
  6099  06CC  2EAA               	goto	l2430
  6100  06CD                     u1630:	
  6101  06CD                     l2438:	
  6102                           
  6103                           ;stusb4500.c: 79: };stusb4500.c: 82: if (ok == 0) _delay((unsigned long)((27)*(32000000/
      +                          4000.0)));
  6104  06CD  082A               	movf	reset@ok,w
  6105  06CE  042B               	iorwf	reset@ok+1,w
  6106  06CF  1D03               	btfss	3,2
  6107  06D0  2ED2               	goto	u1641
  6108  06D1  2ED3               	goto	u1640
  6109  06D2                     u1641:	
  6110  06D2  2EE0               	goto	l2442
  6111  06D3                     u1640:	
  6112  06D3                     l2440:	
  6113  06D3  3002               	movlw	2
  6114  06D4  0140               	movlb	0	; select bank0
  6115  06D5  00A8               	movwf	??_reset+1
  6116  06D6  3019               	movlw	25
  6117  06D7  00A7               	movwf	??_reset
  6118  06D8  3081               	movlw	129
  6119  06D9                     u2947:	
  6120  06D9  0B89               	decfsz	9,f
  6121  06DA  2ED9               	goto	u2947
  6122  06DB  0BA7               	decfsz	??_reset,f
  6123  06DC  2ED9               	goto	u2947
  6124  06DD  0BA8               	decfsz	??_reset+1,f
  6125  06DE  2ED9               	goto	u2947
  6126  06DF  3200               	nop2
  6127  06E0                     l2442:	
  6128                           
  6129                           ;stusb4500.c: 85: if (ok == 0)
  6130  06E0  0140               	movlb	0	; select bank0
  6131  06E1  082A               	movf	reset@ok,w
  6132  06E2  042B               	iorwf	reset@ok+1,w
  6133  06E3  1D03               	btfss	3,2
  6134  06E4  2EE6               	goto	u1651
  6135  06E5  2EE7               	goto	u1650
  6136  06E6                     u1651:	
  6137  06E6  2EF5               	goto	l2446
  6138  06E7                     u1650:	
  6139  06E7                     l2444:	
  6140                           
  6141                           ;stusb4500.c: 86: ok = i2c_master_write_u8(0x28, 0x23, 0x00);
  6142  06E7  3023               	movlw	35
  6143  06E8  00A7               	movwf	??_reset
  6144  06E9  0827               	movf	??_reset,w
  6145  06EA  00A1               	movwf	i2c_master_write_u8@reg
  6146  06EB  01A2               	clrf	i2c_master_write_u8@data
  6147  06EC  3028               	movlw	40
  6148  06ED  318C  2437  3186   	fcall	_i2c_master_write_u8
  6149  06F0  0140               	movlb	0	; select bank0
  6150  06F1  0822               	movf	?_i2c_master_write_u8+1,w
  6151  06F2  00AB               	movwf	reset@ok+1
  6152  06F3  0821               	movf	?_i2c_master_write_u8,w
  6153  06F4  00AA               	movwf	reset@ok
  6154  06F5                     l2446:	
  6155                           
  6156                           ;stusb4500.c: 88: return (ok == 0) ? 0 : -1;
  6157  06F5  082A               	movf	reset@ok,w
  6158  06F6  042B               	iorwf	reset@ok+1,w
  6159  06F7  1903               	btfsc	3,2
  6160  06F8  2EFA               	goto	u1661
  6161  06F9  2EFB               	goto	u1660
  6162  06FA                     u1661:	
  6163  06FA  2F00               	goto	l2450
  6164  06FB                     u1660:	
  6165  06FB                     l2448:	
  6166  06FB  30FF               	movlw	255
  6167  06FC  00A5               	movwf	?_reset
  6168  06FD  30FF               	movlw	255
  6169  06FE  00A6               	movwf	?_reset+1
  6170  06FF  2F02               	goto	l585
  6171  0700                     l2450:	
  6172  0700  01A5               	clrf	?_reset
  6173  0701  01A6               	clrf	?_reset+1
  6174  0702                     l585:	
  6175  0702  0008               	return
  6176  0703                     __end_of_reset:	
  6177                           
  6178                           	psect	text7
  6179  0C37                     __ptext7:	
  6180 ;; *************** function _i2c_master_write_u8 *****************
  6181 ;; Defined at:
  6182 ;;		line 72 in file "i2c_driver_stusb4500.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  device          1    wreg     const unsigned char 
  6185 ;;  reg             1    0[BANK0 ] const unsigned char 
  6186 ;;  data            1    1[BANK0 ] const unsigned char 
  6187 ;; Auto vars:     Size  Location     Type
  6188 ;;  device          1   13[COMMON] const unsigned char 
  6189 ;; Return value:  Size  Location     Type
  6190 ;;                  2    0[BANK0 ] int 
  6191 ;; Registers used:
  6192 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6193 ;; Tracked objects:
  6194 ;;		On entry : 0/0
  6195 ;;		On exit  : 0/0
  6196 ;;		Unchanged: 0/0
  6197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6198 ;;      Params:         0       2       0       0       0       0       0       0
  6199 ;;      Locals:         1       0       0       0       0       0       0       0
  6200 ;;      Temps:          0       2       0       0       0       0       0       0
  6201 ;;      Totals:         1       4       0       0       0       0       0       0
  6202 ;;Total ram usage:        5 bytes
  6203 ;; Hardware stack levels used:    1
  6204 ;; Hardware stack levels required when called:    4
  6205 ;; This function calls:
  6206 ;;		_i2c_master_write
  6207 ;; This function is called by:
  6208 ;;		_reset
  6209 ;;		_send_pd_message
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213                           
  6214                           ;psect for function _i2c_master_write_u8
  6215  0C37                     _i2c_master_write_u8:	
  6216                           
  6217                           ;incstack = 0
  6218                           ; Regs used in _i2c_master_write_u8: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6219                           ;i2c_master_write_u8@device stored from wreg
  6220  0C37  00FD               	movwf	i2c_master_write_u8@device
  6221  0C38                     l2384:	
  6222                           
  6223                           ;i2c_driver_stusb4500.c: 74: return i2c_master_write(device, reg, &data, 1);
  6224  0C38  0140               	movlb	0	; select bank0
  6225  0C39  0821               	movf	i2c_master_write_u8@reg,w
  6226  0C3A  00A3               	movwf	??_i2c_master_write_u8
  6227  0C3B  0823               	movf	??_i2c_master_write_u8,w
  6228  0C3C  00F4               	movwf	i2c_master_write@reg
  6229  0C3D  3022               	movlw	(low (i2c_master_write_u8@data| 0))& (0+255)
  6230  0C3E  00A4               	movwf	??_i2c_master_write_u8+1
  6231  0C3F  0824               	movf	??_i2c_master_write_u8+1,w
  6232  0C40  00F5               	movwf	i2c_master_write@buf
  6233  0C41  3001               	movlw	1
  6234  0C42  00F6               	movwf	i2c_master_write@len
  6235  0C43  3000               	movlw	0
  6236  0C44  00F7               	movwf	i2c_master_write@len+1
  6237  0C45  087D               	movf	i2c_master_write_u8@device,w
  6238  0C46  318F  2750  318C   	fcall	_i2c_master_write
  6239  0C49  0875               	movf	?_i2c_master_write+1,w
  6240  0C4A  0140               	movlb	0	; select bank0
  6241  0C4B  00A2               	movwf	?_i2c_master_write_u8+1
  6242  0C4C  0874               	movf	?_i2c_master_write,w
  6243  0C4D  00A1               	movwf	?_i2c_master_write_u8
  6244  0C4E                     l679:	
  6245  0C4E  0008               	return
  6246  0C4F                     __end_of_i2c_master_write_u8:	
  6247                           
  6248                           	psect	text8
  6249  0C1F                     __ptext8:	
  6250 ;; *************** function _i2c_master_read_u8 *****************
  6251 ;; Defined at:
  6252 ;;		line 110 in file "i2c_driver_stusb4500.c"
  6253 ;; Parameters:    Size  Location     Type
  6254 ;;  device          1    wreg     const unsigned char 
  6255 ;;  reg             1    0[BANK0 ] const unsigned char 
  6256 ;;  data            1    1[BANK0 ] PTR unsigned char 
  6257 ;;		 -> stusb_negotiate@buffer(40), reset@res(1), 
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;  device          1   13[COMMON] const unsigned char 
  6260 ;; Return value:  Size  Location     Type
  6261 ;;                  2    0[BANK0 ] int 
  6262 ;; Registers used:
  6263 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6264 ;; Tracked objects:
  6265 ;;		On entry : 0/0
  6266 ;;		On exit  : 0/0
  6267 ;;		Unchanged: 0/0
  6268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6269 ;;      Params:         0       2       0       0       0       0       0       0
  6270 ;;      Locals:         1       0       0       0       0       0       0       0
  6271 ;;      Temps:          0       2       0       0       0       0       0       0
  6272 ;;      Totals:         1       4       0       0       0       0       0       0
  6273 ;;Total ram usage:        5 bytes
  6274 ;; Hardware stack levels used:    1
  6275 ;; Hardware stack levels required when called:    4
  6276 ;; This function calls:
  6277 ;;		_i2c_master_read
  6278 ;; This function is called by:
  6279 ;;		_reset
  6280 ;;		_stusb_negotiate
  6281 ;; This function uses a non-reentrant model
  6282 ;;
  6283                           
  6284                           
  6285                           ;psect for function _i2c_master_read_u8
  6286  0C1F                     _i2c_master_read_u8:	
  6287                           
  6288                           ;incstack = 0
  6289                           ; Regs used in _i2c_master_read_u8: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6290                           ;i2c_master_read_u8@device stored from wreg
  6291  0C1F  00FD               	movwf	i2c_master_read_u8@device
  6292  0C20                     l2388:	
  6293                           
  6294                           ;i2c_driver_stusb4500.c: 111: return i2c_master_read(device, reg, data, 1);
  6295  0C20  0140               	movlb	0	; select bank0
  6296  0C21  0821               	movf	i2c_master_read_u8@reg,w
  6297  0C22  00A3               	movwf	??_i2c_master_read_u8
  6298  0C23  0823               	movf	??_i2c_master_read_u8,w
  6299  0C24  00F4               	movwf	i2c_master_read@reg
  6300  0C25  0822               	movf	i2c_master_read_u8@data,w
  6301  0C26  00A4               	movwf	??_i2c_master_read_u8+1
  6302  0C27  0824               	movf	??_i2c_master_read_u8+1,w
  6303  0C28  00F5               	movwf	i2c_master_read@buf
  6304  0C29  3001               	movlw	1
  6305  0C2A  00F6               	movwf	i2c_master_read@len
  6306  0C2B  3000               	movlw	0
  6307  0C2C  00F7               	movwf	i2c_master_read@len+1
  6308  0C2D  087D               	movf	i2c_master_read_u8@device,w
  6309  0C2E  3185  25B0  318C   	fcall	_i2c_master_read
  6310  0C31  0875               	movf	?_i2c_master_read+1,w
  6311  0C32  0140               	movlb	0	; select bank0
  6312  0C33  00A2               	movwf	?_i2c_master_read_u8+1
  6313  0C34  0874               	movf	?_i2c_master_read,w
  6314  0C35  00A1               	movwf	?_i2c_master_read_u8
  6315  0C36                     l700:	
  6316  0C36  0008               	return
  6317  0C37                     __end_of_i2c_master_read_u8:	
  6318                           
  6319                           	psect	text9
  6320  0C07                     __ptext9:	
  6321 ;; *************** function _i2c_master_write_u32 *****************
  6322 ;; Defined at:
  6323 ;;		line 82 in file "i2c_driver_stusb4500.c"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;  device          1    wreg     const unsigned char 
  6326 ;;  reg             1    0[BANK0 ] const unsigned char 
  6327 ;;  data            4    1[BANK0 ] const unsigned long 
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;  device          1   13[COMMON] const unsigned char 
  6330 ;; Return value:  Size  Location     Type
  6331 ;;                  2    0[BANK0 ] int 
  6332 ;; Registers used:
  6333 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/0
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6339 ;;      Params:         0       5       0       0       0       0       0       0
  6340 ;;      Locals:         1       0       0       0       0       0       0       0
  6341 ;;      Temps:          0       2       0       0       0       0       0       0
  6342 ;;      Totals:         1       7       0       0       0       0       0       0
  6343 ;;Total ram usage:        8 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; Hardware stack levels required when called:    4
  6346 ;; This function calls:
  6347 ;;		_i2c_master_write
  6348 ;; This function is called by:
  6349 ;;		_write_pdo
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           
  6354                           ;psect for function _i2c_master_write_u32
  6355  0C07                     _i2c_master_write_u32:	
  6356                           
  6357                           ;incstack = 0
  6358                           ; Regs used in _i2c_master_write_u32: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6359                           ;i2c_master_write_u32@device stored from wreg
  6360  0C07  00FD               	movwf	i2c_master_write_u32@device
  6361  0C08                     l2454:	
  6362                           
  6363                           ;i2c_driver_stusb4500.c: 84: return i2c_master_write(device, reg, &data, 4);
  6364  0C08  0140               	movlb	0	; select bank0
  6365  0C09  0821               	movf	i2c_master_write_u32@reg,w
  6366  0C0A  00A6               	movwf	??_i2c_master_write_u32
  6367  0C0B  0826               	movf	??_i2c_master_write_u32,w
  6368  0C0C  00F4               	movwf	i2c_master_write@reg
  6369  0C0D  3022               	movlw	(low (i2c_master_write_u32@data| 0))& (0+255)
  6370  0C0E  00A7               	movwf	??_i2c_master_write_u32+1
  6371  0C0F  0827               	movf	??_i2c_master_write_u32+1,w
  6372  0C10  00F5               	movwf	i2c_master_write@buf
  6373  0C11  3004               	movlw	4
  6374  0C12  00F6               	movwf	i2c_master_write@len
  6375  0C13  3000               	movlw	0
  6376  0C14  00F7               	movwf	i2c_master_write@len+1
  6377  0C15  087D               	movf	i2c_master_write_u32@device,w
  6378  0C16  318F  2750  318C   	fcall	_i2c_master_write
  6379  0C19  0875               	movf	?_i2c_master_write+1,w
  6380  0C1A  0140               	movlb	0	; select bank0
  6381  0C1B  00A2               	movwf	?_i2c_master_write_u32+1
  6382  0C1C  0874               	movf	?_i2c_master_write,w
  6383  0C1D  00A1               	movwf	?_i2c_master_write_u32
  6384  0C1E                     l685:	
  6385  0C1E  0008               	return
  6386  0C1F                     __end_of_i2c_master_write_u32:	
  6387                           
  6388                           	psect	text10
  6389  0F50                     __ptext10:	
  6390 ;; *************** function _i2c_master_write *****************
  6391 ;; Defined at:
  6392 ;;		line 53 in file "i2c_driver_stusb4500.c"
  6393 ;; Parameters:    Size  Location     Type
  6394 ;;  device          1    wreg     const unsigned char 
  6395 ;;  reg             1    4[COMMON] const unsigned char 
  6396 ;;  buf             1    5[COMMON] PTR const void 
  6397 ;;		 -> i2c_master_write_u32@data(4), i2c_master_write_u16@data(2), i2c_master_write_u8@data(1), 
  6398 ;;  len             2    6[COMMON] unsigned int 
  6399 ;; Auto vars:     Size  Location     Type
  6400 ;;  device          1    9[COMMON] const unsigned char 
  6401 ;;  ok              2   11[COMMON] int 
  6402 ;;  data            1   10[COMMON] PTR unsigned char 
  6403 ;;		 -> i2c_master_write_u32@data(4), i2c_master_write_u16@data(2), i2c_master_write_u8@data(1), 
  6404 ;; Return value:  Size  Location     Type
  6405 ;;                  2    4[COMMON] int 
  6406 ;; Registers used:
  6407 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6408 ;; Tracked objects:
  6409 ;;		On entry : 0/0
  6410 ;;		On exit  : 0/0
  6411 ;;		Unchanged: 0/0
  6412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6413 ;;      Params:         4       0       0       0       0       0       0       0
  6414 ;;      Locals:         4       0       0       0       0       0       0       0
  6415 ;;      Temps:          1       0       0       0       0       0       0       0
  6416 ;;      Totals:         9       0       0       0       0       0       0       0
  6417 ;;Total ram usage:        9 bytes
  6418 ;; Hardware stack levels used:    1
  6419 ;; Hardware stack levels required when called:    3
  6420 ;; This function calls:
  6421 ;;		_i2c_master_send_byte
  6422 ;;		_i2c_master_start
  6423 ;;		_i2c_master_stop
  6424 ;;		_i2c_master_wait
  6425 ;; This function is called by:
  6426 ;;		_i2c_master_write_u8
  6427 ;;		_i2c_master_write_u32
  6428 ;;		_i2c_master_write_u16
  6429 ;; This function uses a non-reentrant model
  6430 ;;
  6431                           
  6432                           
  6433                           ;psect for function _i2c_master_write
  6434  0F50                     _i2c_master_write:	
  6435                           
  6436                           ;incstack = 0
  6437                           ; Regs used in _i2c_master_write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6438                           ;i2c_master_write@device stored from wreg
  6439  0F50  00F9               	movwf	i2c_master_write@device
  6440  0F51                     l2340:	
  6441                           
  6442                           ;i2c_driver_stusb4500.c: 55: uint8_t* data = (uint8_t*)buf;
  6443  0F51  0875               	movf	i2c_master_write@buf,w
  6444  0F52  00F8               	movwf	??_i2c_master_write
  6445  0F53  0878               	movf	??_i2c_master_write,w
  6446  0F54  00FA               	movwf	i2c_master_write@data
  6447  0F55                     l2342:	
  6448                           
  6449                           ;i2c_driver_stusb4500.c: 56: if (!data) return -1;
  6450  0F55  087A               	movf	i2c_master_write@data,w
  6451  0F56  1D03               	btfss	3,2
  6452  0F57  2F59               	goto	u1531
  6453  0F58  2F5A               	goto	u1530
  6454  0F59                     u1531:	
  6455  0F59  2F5F               	goto	l2348
  6456  0F5A                     u1530:	
  6457  0F5A                     l2344:	
  6458  0F5A  30FF               	movlw	255
  6459  0F5B  00F4               	movwf	?_i2c_master_write
  6460  0F5C  30FF               	movlw	255
  6461  0F5D  00F5               	movwf	?_i2c_master_write+1
  6462  0F5E  2FA4               	goto	l669
  6463  0F5F                     l2348:	
  6464  0F5F                     l2350:	
  6465                           
  6466                           ;i2c_driver_stusb4500.c: 60: i2c_master_wait();
  6467  0F5F  318B  238F  318F   	fcall	_i2c_master_wait
  6468  0F62                     l2352:	
  6469                           
  6470                           ;i2c_driver_stusb4500.c: 61: i2c_master_start();
  6471  0F62  318B  2337  318F   	fcall	_i2c_master_start
  6472  0F65                     l2354:	
  6473  0F65                     l2356:	
  6474                           ;i2c_driver_stusb4500.c: 62: if (ok == 0) ok = i2c_master_send_byte((device << 1) | 0);
  6475                           
  6476  0F65  3579               	lslf	i2c_master_write@device,w
  6477  0F66  318B  23AF  318F   	fcall	_i2c_master_send_byte
  6478  0F69  0871               	movf	?_i2c_master_send_byte+1,w
  6479  0F6A  00FC               	movwf	i2c_master_write@ok+1
  6480  0F6B  0870               	movf	?_i2c_master_send_byte,w
  6481  0F6C  00FB               	movwf	i2c_master_write@ok
  6482  0F6D                     l2358:	
  6483                           
  6484                           ;i2c_driver_stusb4500.c: 63: if (ok == 0) ok = i2c_master_send_byte(reg);
  6485  0F6D  087B               	movf	i2c_master_write@ok,w
  6486  0F6E  047C               	iorwf	i2c_master_write@ok+1,w
  6487  0F6F  1D03               	btfss	3,2
  6488  0F70  2F72               	goto	u1541
  6489  0F71  2F73               	goto	u1540
  6490  0F72                     u1541:	
  6491  0F72  2F8B               	goto	l2366
  6492  0F73                     u1540:	
  6493  0F73                     l2360:	
  6494  0F73  0874               	movf	i2c_master_write@reg,w
  6495  0F74  318B  23AF  318F   	fcall	_i2c_master_send_byte
  6496  0F77  0871               	movf	?_i2c_master_send_byte+1,w
  6497  0F78  00FC               	movwf	i2c_master_write@ok+1
  6498  0F79  0870               	movf	?_i2c_master_send_byte,w
  6499  0F7A  00FB               	movwf	i2c_master_write@ok
  6500  0F7B  2F8B               	goto	l2366
  6501  0F7C                     l2362:	
  6502                           
  6503                           ;i2c_driver_stusb4500.c: 65: ok = i2c_master_send_byte(*data++);
  6504  0F7C  087A               	movf	i2c_master_write@data,w
  6505  0F7D  0086               	movwf	6
  6506  0F7E  0187               	clrf	7
  6507  0F7F  0801               	movf	1,w
  6508  0F80  318B  23AF  318F   	fcall	_i2c_master_send_byte
  6509  0F83  0871               	movf	?_i2c_master_send_byte+1,w
  6510  0F84  00FC               	movwf	i2c_master_write@ok+1
  6511  0F85  0870               	movf	?_i2c_master_send_byte,w
  6512  0F86  00FB               	movwf	i2c_master_write@ok
  6513  0F87                     l2364:	
  6514  0F87  3001               	movlw	1
  6515  0F88  00F8               	movwf	??_i2c_master_write
  6516  0F89  0878               	movf	??_i2c_master_write,w
  6517  0F8A  07FA               	addwf	i2c_master_write@data,f
  6518  0F8B                     l2366:	
  6519  0F8B  087B               	movf	i2c_master_write@ok,w
  6520  0F8C  047C               	iorwf	i2c_master_write@ok+1,w
  6521  0F8D  1D03               	btfss	3,2
  6522  0F8E  2F90               	goto	u1551
  6523  0F8F  2F91               	goto	u1550
  6524  0F90                     u1551:	
  6525  0F90  2F9D               	goto	l2370
  6526  0F91                     u1550:	
  6527  0F91                     l2368:	
  6528  0F91  3001               	movlw	1
  6529  0F92  02F6               	subwf	i2c_master_write@len,f
  6530  0F93  3000               	movlw	0
  6531  0F94  3BF7               	subwfb	i2c_master_write@len+1,f
  6532  0F95  0A76               	incf	i2c_master_write@len,w
  6533  0F96  1D03               	skipz
  6534  0F97  2F9C               	goto	u1561
  6535  0F98  0A77               	incf	i2c_master_write@len+1,w
  6536  0F99  1D03               	btfss	3,2
  6537  0F9A  2F9C               	goto	u1561
  6538  0F9B  2F9D               	goto	u1560
  6539  0F9C                     u1561:	
  6540  0F9C  2F7C               	goto	l2362
  6541  0F9D                     u1560:	
  6542  0F9D                     l2370:	
  6543                           
  6544                           ;i2c_driver_stusb4500.c: 66: };i2c_driver_stusb4500.c: 67: i2c_master_stop();
  6545  0F9D  318B  233D  318F   	fcall	_i2c_master_stop
  6546  0FA0                     l2372:	
  6547                           
  6548                           ;i2c_driver_stusb4500.c: 69: return ok;
  6549  0FA0  087C               	movf	i2c_master_write@ok+1,w
  6550  0FA1  00F5               	movwf	?_i2c_master_write+1
  6551  0FA2  087B               	movf	i2c_master_write@ok,w
  6552  0FA3  00F4               	movwf	?_i2c_master_write
  6553  0FA4                     l669:	
  6554  0FA4  0008               	return
  6555  0FA5                     __end_of_i2c_master_write:	
  6556                           
  6557                           	psect	text11
  6558  0DF5                     __ptext11:	
  6559 ;; *************** function ___lwdiv *****************
  6560 ;; Defined at:
  6561 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;  divisor         2    0[COMMON] unsigned int 
  6564 ;;  dividend        2    2[COMMON] unsigned int 
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;  quotient        2    5[COMMON] unsigned int 
  6567 ;;  counter         1    7[COMMON] unsigned char 
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  2    0[COMMON] unsigned int 
  6570 ;; Registers used:
  6571 ;;		wreg, status,2, status,0
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6577 ;;      Params:         4       0       0       0       0       0       0       0
  6578 ;;      Locals:         3       0       0       0       0       0       0       0
  6579 ;;      Temps:          1       0       0       0       0       0       0       0
  6580 ;;      Totals:         8       0       0       0       0       0       0       0
  6581 ;;Total ram usage:        8 bytes
  6582 ;; Hardware stack levels used:    1
  6583 ;; Hardware stack levels required when called:    1
  6584 ;; This function calls:
  6585 ;;		Nothing
  6586 ;; This function is called by:
  6587 ;;		_write_pdo
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           
  6592                           ;psect for function ___lwdiv
  6593  0DF5                     ___lwdiv:	
  6594  0DF5                     l2516:	
  6595                           ;incstack = 0
  6596                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6597                           
  6598  0DF5  01F5               	clrf	___lwdiv@quotient
  6599  0DF6  01F6               	clrf	___lwdiv@quotient+1
  6600  0DF7                     l2518:	
  6601  0DF7  0870               	movf	___lwdiv@divisor,w
  6602  0DF8  0471               	iorwf	___lwdiv@divisor+1,w
  6603  0DF9  1903               	btfsc	3,2
  6604  0DFA  2DFC               	goto	u1811
  6605  0DFB  2DFD               	goto	u1810
  6606  0DFC                     u1811:	
  6607  0DFC  2E2C               	goto	l2538
  6608  0DFD                     u1810:	
  6609  0DFD                     l2520:	
  6610  0DFD  01F7               	clrf	___lwdiv@counter
  6611  0DFE  0AF7               	incf	___lwdiv@counter,f
  6612  0DFF  2E09               	goto	l2526
  6613  0E00                     l2522:	
  6614  0E00  3001               	movlw	1
  6615  0E01                     u1825:	
  6616  0E01  35F0               	lslf	___lwdiv@divisor,f
  6617  0E02  0DF1               	rlf	___lwdiv@divisor+1,f
  6618  0E03  0B89               	decfsz	9,f
  6619  0E04  2E01               	goto	u1825
  6620  0E05                     l2524:	
  6621  0E05  3001               	movlw	1
  6622  0E06  00F4               	movwf	??___lwdiv
  6623  0E07  0874               	movf	??___lwdiv,w
  6624  0E08  07F7               	addwf	___lwdiv@counter,f
  6625  0E09                     l2526:	
  6626  0E09  1FF1               	btfss	___lwdiv@divisor+1,7
  6627  0E0A  2E0C               	goto	u1831
  6628  0E0B  2E0D               	goto	u1830
  6629  0E0C                     u1831:	
  6630  0E0C  2E00               	goto	l2522
  6631  0E0D                     u1830:	
  6632  0E0D                     l2528:	
  6633  0E0D  3001               	movlw	1
  6634  0E0E                     u1845:	
  6635  0E0E  35F5               	lslf	___lwdiv@quotient,f
  6636  0E0F  0DF6               	rlf	___lwdiv@quotient+1,f
  6637  0E10  0B89               	decfsz	9,f
  6638  0E11  2E0E               	goto	u1845
  6639  0E12  0871               	movf	___lwdiv@divisor+1,w
  6640  0E13  0273               	subwf	___lwdiv@dividend+1,w
  6641  0E14  1D03               	skipz
  6642  0E15  2E18               	goto	u1855
  6643  0E16  0870               	movf	___lwdiv@divisor,w
  6644  0E17  0272               	subwf	___lwdiv@dividend,w
  6645  0E18                     u1855:	
  6646  0E18  1C03               	skipc
  6647  0E19  2E1B               	goto	u1851
  6648  0E1A  2E1C               	goto	u1850
  6649  0E1B                     u1851:	
  6650  0E1B  2E21               	goto	l2534
  6651  0E1C                     u1850:	
  6652  0E1C                     l2530:	
  6653  0E1C  0870               	movf	___lwdiv@divisor,w
  6654  0E1D  02F2               	subwf	___lwdiv@dividend,f
  6655  0E1E  0871               	movf	___lwdiv@divisor+1,w
  6656  0E1F  3BF3               	subwfb	___lwdiv@dividend+1,f
  6657  0E20                     l2532:	
  6658  0E20  1475               	bsf	___lwdiv@quotient,0
  6659  0E21                     l2534:	
  6660  0E21  3001               	movlw	1
  6661  0E22                     u1865:	
  6662  0E22  36F1               	lsrf	___lwdiv@divisor+1,f
  6663  0E23  0CF0               	rrf	___lwdiv@divisor,f
  6664  0E24  0B89               	decfsz	9,f
  6665  0E25  2E22               	goto	u1865
  6666  0E26                     l2536:	
  6667  0E26  3001               	movlw	1
  6668  0E27  02F7               	subwf	___lwdiv@counter,f
  6669  0E28  1D03               	btfss	3,2
  6670  0E29  2E2B               	goto	u1871
  6671  0E2A  2E2C               	goto	u1870
  6672  0E2B                     u1871:	
  6673  0E2B  2E0D               	goto	l2528
  6674  0E2C                     u1870:	
  6675  0E2C                     l2538:	
  6676  0E2C  0876               	movf	___lwdiv@quotient+1,w
  6677  0E2D  00F1               	movwf	?___lwdiv+1
  6678  0E2E  0875               	movf	___lwdiv@quotient,w
  6679  0E2F  00F0               	movwf	?___lwdiv
  6680  0E30                     l1054:	
  6681  0E30  0008               	return
  6682  0E31                     __end_of___lwdiv:	
  6683                           
  6684                           	psect	text12
  6685  07CD                     __ptext12:	
  6686 ;; *************** function ___lmul *****************
  6687 ;; Defined at:
  6688 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  6689 ;; Parameters:    Size  Location     Type
  6690 ;;  multiplier      4    0[COMMON] unsigned long 
  6691 ;;  multiplicand    4    4[COMMON] unsigned long 
  6692 ;; Auto vars:     Size  Location     Type
  6693 ;;  product         4    8[COMMON] unsigned long 
  6694 ;; Return value:  Size  Location     Type
  6695 ;;                  4    0[COMMON] unsigned long 
  6696 ;; Registers used:
  6697 ;;		wreg, status,2, status,0
  6698 ;; Tracked objects:
  6699 ;;		On entry : 0/0
  6700 ;;		On exit  : 0/0
  6701 ;;		Unchanged: 0/0
  6702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6703 ;;      Params:         8       0       0       0       0       0       0       0
  6704 ;;      Locals:         4       0       0       0       0       0       0       0
  6705 ;;      Temps:          0       0       0       0       0       0       0       0
  6706 ;;      Totals:        12       0       0       0       0       0       0       0
  6707 ;;Total ram usage:       12 bytes
  6708 ;; Hardware stack levels used:    1
  6709 ;; Hardware stack levels required when called:    1
  6710 ;; This function calls:
  6711 ;;		Nothing
  6712 ;; This function is called by:
  6713 ;;		_negotiate_optimal_pdo
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717                           
  6718                           ;psect for function ___lmul
  6719  07CD                     ___lmul:	
  6720  07CD                     l2580:	
  6721                           ;incstack = 0
  6722                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6723                           
  6724  07CD  3000               	movlw	0
  6725  07CE  00FB               	movwf	___lmul@product+3
  6726  07CF  3000               	movlw	0
  6727  07D0  00FA               	movwf	___lmul@product+2
  6728  07D1  3000               	movlw	0
  6729  07D2  00F9               	movwf	___lmul@product+1
  6730  07D3  3000               	movlw	0
  6731  07D4  00F8               	movwf	___lmul@product
  6732  07D5                     l2582:	
  6733  07D5  1C70               	btfss	___lmul@multiplier,0
  6734  07D6  2FD8               	goto	u1931
  6735  07D7  2FD9               	goto	u1930
  6736  07D8                     u1931:	
  6737  07D8  2FE1               	goto	l2586
  6738  07D9                     u1930:	
  6739  07D9                     l2584:	
  6740  07D9  0874               	movf	___lmul@multiplicand,w
  6741  07DA  07F8               	addwf	___lmul@product,f
  6742  07DB  0875               	movf	___lmul@multiplicand+1,w
  6743  07DC  3DF9               	addwfc	___lmul@product+1,f
  6744  07DD  0876               	movf	___lmul@multiplicand+2,w
  6745  07DE  3DFA               	addwfc	___lmul@product+2,f
  6746  07DF  0877               	movf	___lmul@multiplicand+3,w
  6747  07E0  3DFB               	addwfc	___lmul@product+3,f
  6748  07E1                     l2586:	
  6749  07E1  3001               	movlw	1
  6750  07E2                     u1945:	
  6751  07E2  35F4               	lslf	___lmul@multiplicand,f
  6752  07E3  0DF5               	rlf	___lmul@multiplicand+1,f
  6753  07E4  0DF6               	rlf	___lmul@multiplicand+2,f
  6754  07E5  0DF7               	rlf	___lmul@multiplicand+3,f
  6755  07E6  0B89               	decfsz	9,f
  6756  07E7  2FE2               	goto	u1945
  6757  07E8                     l2588:	
  6758  07E8  3001               	movlw	1
  6759  07E9                     u1955:	
  6760  07E9  36F3               	lsrf	___lmul@multiplier+3,f
  6761  07EA  0CF2               	rrf	___lmul@multiplier+2,f
  6762  07EB  0CF1               	rrf	___lmul@multiplier+1,f
  6763  07EC  0CF0               	rrf	___lmul@multiplier,f
  6764  07ED  0B89               	decfsz	9,f
  6765  07EE  2FE9               	goto	u1955
  6766  07EF  0873               	movf	___lmul@multiplier+3,w
  6767  07F0  0472               	iorwf	___lmul@multiplier+2,w
  6768  07F1  0471               	iorwf	___lmul@multiplier+1,w
  6769  07F2  0470               	iorwf	___lmul@multiplier,w
  6770  07F3  1D03               	skipz
  6771  07F4  2FF6               	goto	u1961
  6772  07F5  2FF7               	goto	u1960
  6773  07F6                     u1961:	
  6774  07F6  2FD5               	goto	l2582
  6775  07F7                     u1960:	
  6776  07F7                     l2590:	
  6777  07F7  087B               	movf	___lmul@product+3,w
  6778  07F8  00F3               	movwf	?___lmul+3
  6779  07F9  087A               	movf	___lmul@product+2,w
  6780  07FA  00F2               	movwf	?___lmul+2
  6781  07FB  0879               	movf	___lmul@product+1,w
  6782  07FC  00F1               	movwf	?___lmul+1
  6783  07FD  0878               	movf	___lmul@product,w
  6784  07FE  00F0               	movwf	?___lmul
  6785  07FF                     l796:	
  6786  07FF  0008               	return
  6787  0800                     __end_of___lmul:	
  6788                           
  6789                           	psect	text13
  6790  0BEF                     __ptext13:	
  6791 ;; *************** function _i2c_master_read_u16 *****************
  6792 ;; Defined at:
  6793 ;;		line 114 in file "i2c_driver_stusb4500.c"
  6794 ;; Parameters:    Size  Location     Type
  6795 ;;  device          1    wreg     const unsigned char 
  6796 ;;  reg             1    0[BANK0 ] const unsigned char 
  6797 ;;  data            1    1[BANK0 ] PTR unsigned int 
  6798 ;;		 -> stusb_negotiate@header(2), 
  6799 ;; Auto vars:     Size  Location     Type
  6800 ;;  device          1   13[COMMON] const unsigned char 
  6801 ;; Return value:  Size  Location     Type
  6802 ;;                  2    0[BANK0 ] int 
  6803 ;; Registers used:
  6804 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6805 ;; Tracked objects:
  6806 ;;		On entry : 0/0
  6807 ;;		On exit  : 0/0
  6808 ;;		Unchanged: 0/0
  6809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6810 ;;      Params:         0       2       0       0       0       0       0       0
  6811 ;;      Locals:         1       0       0       0       0       0       0       0
  6812 ;;      Temps:          0       2       0       0       0       0       0       0
  6813 ;;      Totals:         1       4       0       0       0       0       0       0
  6814 ;;Total ram usage:        5 bytes
  6815 ;; Hardware stack levels used:    1
  6816 ;; Hardware stack levels required when called:    4
  6817 ;; This function calls:
  6818 ;;		_i2c_master_read
  6819 ;; This function is called by:
  6820 ;;		_stusb_negotiate
  6821 ;; This function uses a non-reentrant model
  6822 ;;
  6823                           
  6824                           
  6825                           ;psect for function _i2c_master_read_u16
  6826  0BEF                     _i2c_master_read_u16:	
  6827                           
  6828                           ;incstack = 0
  6829                           ; Regs used in _i2c_master_read_u16: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6830                           ;i2c_master_read_u16@device stored from wreg
  6831  0BEF  00FD               	movwf	i2c_master_read_u16@device
  6832  0BF0                     l2766:	
  6833                           
  6834                           ;i2c_driver_stusb4500.c: 116: return i2c_master_read(device, reg, (uint8_t*)data, 2);
  6835  0BF0  0140               	movlb	0	; select bank0
  6836  0BF1  0821               	movf	i2c_master_read_u16@reg,w
  6837  0BF2  00A3               	movwf	??_i2c_master_read_u16
  6838  0BF3  0823               	movf	??_i2c_master_read_u16,w
  6839  0BF4  00F4               	movwf	i2c_master_read@reg
  6840  0BF5  0822               	movf	i2c_master_read_u16@data,w
  6841  0BF6  00A4               	movwf	??_i2c_master_read_u16+1
  6842  0BF7  0824               	movf	??_i2c_master_read_u16+1,w
  6843  0BF8  00F5               	movwf	i2c_master_read@buf
  6844  0BF9  3002               	movlw	2
  6845  0BFA  00F6               	movwf	i2c_master_read@len
  6846  0BFB  3000               	movlw	0
  6847  0BFC  00F7               	movwf	i2c_master_read@len+1
  6848  0BFD  087D               	movf	i2c_master_read_u16@device,w
  6849  0BFE  3185  25B0  318B   	fcall	_i2c_master_read
  6850  0C01  0875               	movf	?_i2c_master_read+1,w
  6851  0C02  0140               	movlb	0	; select bank0
  6852  0C03  00A2               	movwf	?_i2c_master_read_u16+1
  6853  0C04  0874               	movf	?_i2c_master_read,w
  6854  0C05  00A1               	movwf	?_i2c_master_read_u16
  6855  0C06                     l703:	
  6856  0C06  0008               	return
  6857  0C07                     __end_of_i2c_master_read_u16:	
  6858                           
  6859                           	psect	text14
  6860  05B0                     __ptext14:	
  6861 ;; *************** function _i2c_master_read *****************
  6862 ;; Defined at:
  6863 ;;		line 87 in file "i2c_driver_stusb4500.c"
  6864 ;; Parameters:    Size  Location     Type
  6865 ;;  device          1    wreg     const unsigned char 
  6866 ;;  reg             1    4[COMMON] const unsigned char 
  6867 ;;  buf             1    5[COMMON] PTR void 
  6868 ;;		 -> stusb_negotiate@header(2), stusb_negotiate@buffer(40), reset@res(1), 
  6869 ;;  len             2    6[COMMON] unsigned int 
  6870 ;; Auto vars:     Size  Location     Type
  6871 ;;  device          1    9[COMMON] const unsigned char 
  6872 ;;  ok              2   11[COMMON] int 
  6873 ;;  data            1   10[COMMON] PTR unsigned char 
  6874 ;;		 -> stusb_negotiate@header(2), stusb_negotiate@buffer(40), reset@res(1), 
  6875 ;; Return value:  Size  Location     Type
  6876 ;;                  2    4[COMMON] int 
  6877 ;; Registers used:
  6878 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6879 ;; Tracked objects:
  6880 ;;		On entry : 0/0
  6881 ;;		On exit  : 0/0
  6882 ;;		Unchanged: 0/0
  6883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6884 ;;      Params:         4       0       0       0       0       0       0       0
  6885 ;;      Locals:         4       0       0       0       0       0       0       0
  6886 ;;      Temps:          1       0       0       0       0       0       0       0
  6887 ;;      Totals:         9       0       0       0       0       0       0       0
  6888 ;;Total ram usage:        9 bytes
  6889 ;; Hardware stack levels used:    1
  6890 ;; Hardware stack levels required when called:    3
  6891 ;; This function calls:
  6892 ;;		_i2c_master_receive_byte
  6893 ;;		_i2c_master_repeat_start
  6894 ;;		_i2c_master_send_byte
  6895 ;;		_i2c_master_start
  6896 ;;		_i2c_master_stop
  6897 ;;		_i2c_master_wait
  6898 ;; This function is called by:
  6899 ;;		_stusb_negotiate
  6900 ;;		_i2c_master_read_u8
  6901 ;;		_i2c_master_read_u16
  6902 ;;		_i2c_master_read_u32
  6903 ;; This function uses a non-reentrant model
  6904 ;;
  6905                           
  6906                           
  6907                           ;psect for function _i2c_master_read
  6908  05B0                     _i2c_master_read:	
  6909                           
  6910                           ;incstack = 0
  6911                           ; Regs used in _i2c_master_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6912                           ;i2c_master_read@device stored from wreg
  6913  05B0  00F9               	movwf	i2c_master_read@device
  6914  05B1                     l2294:	
  6915                           
  6916                           ;i2c_driver_stusb4500.c: 89: uint8_t* data = (uint8_t*)buf;
  6917  05B1  0875               	movf	i2c_master_read@buf,w
  6918  05B2  00F8               	movwf	??_i2c_master_read
  6919  05B3  0878               	movf	??_i2c_master_read,w
  6920  05B4  00FA               	movwf	i2c_master_read@data
  6921  05B5                     l2296:	
  6922                           
  6923                           ;i2c_driver_stusb4500.c: 90: if (!data) return -1;
  6924  05B5  087A               	movf	i2c_master_read@data,w
  6925  05B6  1D03               	btfss	3,2
  6926  05B7  2DB9               	goto	u1451
  6927  05B8  2DBA               	goto	u1450
  6928  05B9                     u1451:	
  6929  05B9  2DBF               	goto	l2302
  6930  05BA                     u1450:	
  6931  05BA                     l2298:	
  6932  05BA  30FF               	movlw	255
  6933  05BB  00F4               	movwf	?_i2c_master_read
  6934  05BC  30FF               	movlw	255
  6935  05BD  00F5               	movwf	?_i2c_master_read+1
  6936  05BE  2E22               	goto	l689
  6937  05BF                     l2302:	
  6938  05BF                     l2304:	
  6939                           
  6940                           ;i2c_driver_stusb4500.c: 94: i2c_master_wait();
  6941  05BF  318B  238F  3185   	fcall	_i2c_master_wait
  6942  05C2                     l2306:	
  6943                           
  6944                           ;i2c_driver_stusb4500.c: 95: i2c_master_start();
  6945  05C2  318B  2337  3185   	fcall	_i2c_master_start
  6946  05C5                     l2308:	
  6947  05C5                     l2310:	
  6948                           ;i2c_driver_stusb4500.c: 96: if (ok == 0) ok = i2c_master_send_byte((device << 1) | 0);
  6949                           
  6950  05C5  3579               	lslf	i2c_master_read@device,w
  6951  05C6  318B  23AF  3185   	fcall	_i2c_master_send_byte
  6952  05C9  0871               	movf	?_i2c_master_send_byte+1,w
  6953  05CA  00FC               	movwf	i2c_master_read@ok+1
  6954  05CB  0870               	movf	?_i2c_master_send_byte,w
  6955  05CC  00FB               	movwf	i2c_master_read@ok
  6956  05CD                     l2312:	
  6957                           
  6958                           ;i2c_driver_stusb4500.c: 97: if (ok == 0) ok = i2c_master_send_byte(reg);
  6959  05CD  087B               	movf	i2c_master_read@ok,w
  6960  05CE  047C               	iorwf	i2c_master_read@ok+1,w
  6961  05CF  1D03               	btfss	3,2
  6962  05D0  2DD2               	goto	u1461
  6963  05D1  2DD3               	goto	u1460
  6964  05D2                     u1461:	
  6965  05D2  2DDB               	goto	l2316
  6966  05D3                     u1460:	
  6967  05D3                     l2314:	
  6968  05D3  0874               	movf	i2c_master_read@reg,w
  6969  05D4  318B  23AF  3185   	fcall	_i2c_master_send_byte
  6970  05D7  0871               	movf	?_i2c_master_send_byte+1,w
  6971  05D8  00FC               	movwf	i2c_master_read@ok+1
  6972  05D9  0870               	movf	?_i2c_master_send_byte,w
  6973  05DA  00FB               	movwf	i2c_master_read@ok
  6974  05DB                     l2316:	
  6975                           
  6976                           ;i2c_driver_stusb4500.c: 98: if (ok == 0) i2c_master_repeat_start();
  6977  05DB  087B               	movf	i2c_master_read@ok,w
  6978  05DC  047C               	iorwf	i2c_master_read@ok+1,w
  6979  05DD  1D03               	btfss	3,2
  6980  05DE  2DE0               	goto	u1471
  6981  05DF  2DE1               	goto	u1470
  6982  05E0                     u1471:	
  6983  05E0  2DE4               	goto	l2320
  6984  05E1                     u1470:	
  6985  05E1                     l2318:	
  6986  05E1  318B  2331  3185   	fcall	_i2c_master_repeat_start
  6987  05E4                     l2320:	
  6988                           
  6989                           ;i2c_driver_stusb4500.c: 99: if (ok == 0) ok = i2c_master_send_byte((device << 1) | 1);
  6990  05E4  087B               	movf	i2c_master_read@ok,w
  6991  05E5  047C               	iorwf	i2c_master_read@ok+1,w
  6992  05E6  1D03               	btfss	3,2
  6993  05E7  2DE9               	goto	u1481
  6994  05E8  2DEA               	goto	u1480
  6995  05E9                     u1481:	
  6996  05E9  2DF3               	goto	l2324
  6997  05EA                     u1480:	
  6998  05EA                     l2322:	
  6999  05EA  1403               	setc
  7000  05EB  0D79               	rlf	i2c_master_read@device,w
  7001  05EC  318B  23AF  3185   	fcall	_i2c_master_send_byte
  7002  05EF  0871               	movf	?_i2c_master_send_byte+1,w
  7003  05F0  00FC               	movwf	i2c_master_read@ok+1
  7004  05F1  0870               	movf	?_i2c_master_send_byte,w
  7005  05F2  00FB               	movwf	i2c_master_read@ok
  7006  05F3                     l2324:	
  7007                           
  7008                           ;i2c_driver_stusb4500.c: 100: if (ok == 0) {
  7009  05F3  087B               	movf	i2c_master_read@ok,w
  7010  05F4  047C               	iorwf	i2c_master_read@ok+1,w
  7011  05F5  1D03               	btfss	3,2
  7012  05F6  2DF8               	goto	u1491
  7013  05F7  2DF9               	goto	u1490
  7014  05F8                     u1491:	
  7015  05F8  2E1B               	goto	l2334
  7016  05F9                     u1490:	
  7017  05F9  2E0F               	goto	l2332
  7018  05FA                     l2328:	
  7019                           
  7020                           ;i2c_driver_stusb4500.c: 102: *data++ = i2c_master_receive_byte(len ? 0 : 1);
  7021  05FA  0876               	movf	i2c_master_read@len,w
  7022  05FB  0477               	iorwf	i2c_master_read@len+1,w
  7023  05FC  1903               	btfsc	3,2
  7024  05FD  2DFF               	goto	u1501
  7025  05FE  2E01               	goto	u1500
  7026  05FF                     u1501:	
  7027  05FF  3001               	movlw	1
  7028  0600  2E02               	goto	u1510
  7029  0601                     u1500:	
  7030  0601  3000               	movlw	0
  7031  0602                     u1510:	
  7032  0602  318C  244F  3185   	fcall	_i2c_master_receive_byte
  7033  0605  00F8               	movwf	??_i2c_master_read
  7034  0606  087A               	movf	i2c_master_read@data,w
  7035  0607  0086               	movwf	6
  7036  0608  0187               	clrf	7
  7037  0609  0878               	movf	??_i2c_master_read,w
  7038  060A  0081               	movwf	1
  7039  060B                     l2330:	
  7040  060B  3001               	movlw	1
  7041  060C  00F8               	movwf	??_i2c_master_read
  7042  060D  0878               	movf	??_i2c_master_read,w
  7043  060E  07FA               	addwf	i2c_master_read@data,f
  7044  060F                     l2332:	
  7045  060F  3001               	movlw	1
  7046  0610  02F6               	subwf	i2c_master_read@len,f
  7047  0611  3000               	movlw	0
  7048  0612  3BF7               	subwfb	i2c_master_read@len+1,f
  7049  0613  0A76               	incf	i2c_master_read@len,w
  7050  0614  1D03               	skipz
  7051  0615  2E1A               	goto	u1521
  7052  0616  0A77               	incf	i2c_master_read@len+1,w
  7053  0617  1D03               	btfss	3,2
  7054  0618  2E1A               	goto	u1521
  7055  0619  2E1B               	goto	u1520
  7056  061A                     u1521:	
  7057  061A  2DFA               	goto	l2328
  7058  061B                     u1520:	
  7059  061B                     l2334:	
  7060                           
  7061                           ;i2c_driver_stusb4500.c: 103: };i2c_driver_stusb4500.c: 104: };i2c_driver_stusb4500.c: 1
      +                          05: i2c_master_stop();
  7062  061B  318B  233D  3185   	fcall	_i2c_master_stop
  7063  061E                     l2336:	
  7064                           
  7065                           ;i2c_driver_stusb4500.c: 107: return ok;
  7066  061E  087C               	movf	i2c_master_read@ok+1,w
  7067  061F  00F5               	movwf	?_i2c_master_read+1
  7068  0620  087B               	movf	i2c_master_read@ok,w
  7069  0621  00F4               	movwf	?_i2c_master_read
  7070  0622                     l689:	
  7071  0622  0008               	return
  7072  0623                     __end_of_i2c_master_read:	
  7073                           
  7074                           	psect	text15
  7075  0B3D                     __ptext15:	
  7076 ;; *************** function _i2c_master_stop *****************
  7077 ;; Defined at:
  7078 ;;		line 21 in file "i2c_driver_stusb4500.c"
  7079 ;; Parameters:    Size  Location     Type
  7080 ;;		None
  7081 ;; Auto vars:     Size  Location     Type
  7082 ;;		None
  7083 ;; Return value:  Size  Location     Type
  7084 ;;                  1    wreg      void 
  7085 ;; Registers used:
  7086 ;;		wreg, status,2, status,0, pclath, cstack
  7087 ;; Tracked objects:
  7088 ;;		On entry : 0/0
  7089 ;;		On exit  : 0/0
  7090 ;;		Unchanged: 0/0
  7091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7092 ;;      Params:         0       0       0       0       0       0       0       0
  7093 ;;      Locals:         0       0       0       0       0       0       0       0
  7094 ;;      Temps:          0       0       0       0       0       0       0       0
  7095 ;;      Totals:         0       0       0       0       0       0       0       0
  7096 ;;Total ram usage:        0 bytes
  7097 ;; Hardware stack levels used:    1
  7098 ;; Hardware stack levels required when called:    2
  7099 ;; This function calls:
  7100 ;;		_i2c_master_wait
  7101 ;; This function is called by:
  7102 ;;		_i2c_master_write
  7103 ;;		_i2c_master_read
  7104 ;; This function uses a non-reentrant model
  7105 ;;
  7106                           
  7107                           
  7108                           ;psect for function _i2c_master_stop
  7109  0B3D                     _i2c_master_stop:	
  7110  0B3D                     l2260:	
  7111                           ;incstack = 0
  7112                           ; Regs used in _i2c_master_stop: [wreg+status,2+status,0+pclath+cstack]
  7113                           
  7114                           
  7115                           ;i2c_driver_stusb4500.c: 22: SSP1CON2bits.PEN = 1;
  7116  0B3D  0143               	movlb	3	; select bank3
  7117  0B3E  1511               	bsf	17,2	;volatile
  7118  0B3F                     l2262:	
  7119                           
  7120                           ;i2c_driver_stusb4500.c: 23: i2c_master_wait();
  7121  0B3F  318B  238F  318B   	fcall	_i2c_master_wait
  7122  0B42                     l652:	
  7123  0B42  0008               	return
  7124  0B43                     __end_of_i2c_master_stop:	
  7125                           
  7126                           	psect	text16
  7127  0B37                     __ptext16:	
  7128 ;; *************** function _i2c_master_start *****************
  7129 ;; Defined at:
  7130 ;;		line 11 in file "i2c_driver_stusb4500.c"
  7131 ;; Parameters:    Size  Location     Type
  7132 ;;		None
  7133 ;; Auto vars:     Size  Location     Type
  7134 ;;		None
  7135 ;; Return value:  Size  Location     Type
  7136 ;;                  1    wreg      void 
  7137 ;; Registers used:
  7138 ;;		wreg, status,2, status,0, pclath, cstack
  7139 ;; Tracked objects:
  7140 ;;		On entry : 0/0
  7141 ;;		On exit  : 0/0
  7142 ;;		Unchanged: 0/0
  7143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7144 ;;      Params:         0       0       0       0       0       0       0       0
  7145 ;;      Locals:         0       0       0       0       0       0       0       0
  7146 ;;      Temps:          0       0       0       0       0       0       0       0
  7147 ;;      Totals:         0       0       0       0       0       0       0       0
  7148 ;;Total ram usage:        0 bytes
  7149 ;; Hardware stack levels used:    1
  7150 ;; Hardware stack levels required when called:    2
  7151 ;; This function calls:
  7152 ;;		_i2c_master_wait
  7153 ;; This function is called by:
  7154 ;;		_i2c_master_write
  7155 ;;		_i2c_master_read
  7156 ;; This function uses a non-reentrant model
  7157 ;;
  7158                           
  7159                           
  7160                           ;psect for function _i2c_master_start
  7161  0B37                     _i2c_master_start:	
  7162  0B37                     l2252:	
  7163                           ;incstack = 0
  7164                           ; Regs used in _i2c_master_start: [wreg+status,2+status,0+pclath+cstack]
  7165                           
  7166                           
  7167                           ;i2c_driver_stusb4500.c: 12: SSP1CON2bits.SEN = 1;
  7168  0B37  0143               	movlb	3	; select bank3
  7169  0B38  1411               	bsf	17,0	;volatile
  7170  0B39                     l2254:	
  7171                           
  7172                           ;i2c_driver_stusb4500.c: 13: i2c_master_wait();
  7173  0B39  318B  238F  318B   	fcall	_i2c_master_wait
  7174  0B3C                     l646:	
  7175  0B3C  0008               	return
  7176  0B3D                     __end_of_i2c_master_start:	
  7177                           
  7178                           	psect	text17
  7179  0BAF                     __ptext17:	
  7180 ;; *************** function _i2c_master_send_byte *****************
  7181 ;; Defined at:
  7182 ;;		line 26 in file "i2c_driver_stusb4500.c"
  7183 ;; Parameters:    Size  Location     Type
  7184 ;;  data            1    wreg     const unsigned char 
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;  data            1    3[COMMON] const unsigned char 
  7187 ;; Return value:  Size  Location     Type
  7188 ;;                  2    0[COMMON] int 
  7189 ;; Registers used:
  7190 ;;		wreg, status,2, status,0, pclath, cstack
  7191 ;; Tracked objects:
  7192 ;;		On entry : 0/0
  7193 ;;		On exit  : 0/0
  7194 ;;		Unchanged: 0/0
  7195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7196 ;;      Params:         3       0       0       0       0       0       0       0
  7197 ;;      Locals:         1       0       0       0       0       0       0       0
  7198 ;;      Temps:          0       0       0       0       0       0       0       0
  7199 ;;      Totals:         4       0       0       0       0       0       0       0
  7200 ;;Total ram usage:        4 bytes
  7201 ;; Hardware stack levels used:    1
  7202 ;; Hardware stack levels required when called:    2
  7203 ;; This function calls:
  7204 ;;		_i2c_master_wait
  7205 ;; This function is called by:
  7206 ;;		_i2c_master_write
  7207 ;;		_i2c_master_read
  7208 ;; This function uses a non-reentrant model
  7209 ;;
  7210                           
  7211                           
  7212                           ;psect for function _i2c_master_send_byte
  7213  0BAF                     _i2c_master_send_byte:	
  7214                           
  7215                           ;incstack = 0
  7216                           ; Regs used in _i2c_master_send_byte: [wreg+status,2+status,0+pclath+cstack]
  7217                           ;i2c_master_send_byte@data stored from wreg
  7218  0BAF  00F3               	movwf	i2c_master_send_byte@data
  7219  0BB0                     l2264:	
  7220                           
  7221                           ;i2c_driver_stusb4500.c: 27: SSP1BUF = data;
  7222  0BB0  0873               	movf	i2c_master_send_byte@data,w
  7223  0BB1  0143               	movlb	3	; select bank3
  7224  0BB2  008C               	movwf	12	;volatile
  7225  0BB3                     l2266:	
  7226                           
  7227                           ;i2c_driver_stusb4500.c: 28: i2c_master_wait();
  7228  0BB3  318B  238F  318B   	fcall	_i2c_master_wait
  7229  0BB6                     l2268:	
  7230                           
  7231                           ;i2c_driver_stusb4500.c: 30: return SSP1CON2bits.ACKSTAT ? -1 : 0;
  7232  0BB6  0143               	movlb	3	; select bank3
  7233  0BB7  1B11               	btfsc	17,6	;volatile
  7234  0BB8  2BBA               	goto	u1441
  7235  0BB9  2BBB               	goto	u1440
  7236  0BBA                     u1441:	
  7237  0BBA  2BBE               	goto	l2272
  7238  0BBB                     u1440:	
  7239  0BBB                     l2270:	
  7240  0BBB  01F0               	clrf	?_i2c_master_send_byte
  7241  0BBC  01F1               	clrf	?_i2c_master_send_byte+1
  7242  0BBD  2BC2               	goto	l659
  7243  0BBE                     l2272:	
  7244  0BBE  30FF               	movlw	255
  7245  0BBF  00F0               	movwf	?_i2c_master_send_byte
  7246  0BC0  30FF               	movlw	255
  7247  0BC1  00F1               	movwf	?_i2c_master_send_byte+1
  7248  0BC2                     l659:	
  7249  0BC2  0008               	return
  7250  0BC3                     __end_of_i2c_master_send_byte:	
  7251                           
  7252                           	psect	text18
  7253  0B31                     __ptext18:	
  7254 ;; *************** function _i2c_master_repeat_start *****************
  7255 ;; Defined at:
  7256 ;;		line 16 in file "i2c_driver_stusb4500.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;		None
  7259 ;; Auto vars:     Size  Location     Type
  7260 ;;		None
  7261 ;; Return value:  Size  Location     Type
  7262 ;;                  1    wreg      void 
  7263 ;; Registers used:
  7264 ;;		wreg, status,2, status,0, pclath, cstack
  7265 ;; Tracked objects:
  7266 ;;		On entry : 0/0
  7267 ;;		On exit  : 0/0
  7268 ;;		Unchanged: 0/0
  7269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7270 ;;      Params:         0       0       0       0       0       0       0       0
  7271 ;;      Locals:         0       0       0       0       0       0       0       0
  7272 ;;      Temps:          0       0       0       0       0       0       0       0
  7273 ;;      Totals:         0       0       0       0       0       0       0       0
  7274 ;;Total ram usage:        0 bytes
  7275 ;; Hardware stack levels used:    1
  7276 ;; Hardware stack levels required when called:    2
  7277 ;; This function calls:
  7278 ;;		_i2c_master_wait
  7279 ;; This function is called by:
  7280 ;;		_i2c_master_read
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           
  7284                           
  7285                           ;psect for function _i2c_master_repeat_start
  7286  0B31                     _i2c_master_repeat_start:	
  7287  0B31                     l2256:	
  7288                           ;incstack = 0
  7289                           ; Regs used in _i2c_master_repeat_start: [wreg+status,2+status,0+pclath+cstack]
  7290                           
  7291                           
  7292                           ;i2c_driver_stusb4500.c: 17: SSP1CON2bits.RSEN = 1;
  7293  0B31  0143               	movlb	3	; select bank3
  7294  0B32  1491               	bsf	17,1	;volatile
  7295  0B33                     l2258:	
  7296                           
  7297                           ;i2c_driver_stusb4500.c: 18: i2c_master_wait();
  7298  0B33  318B  238F  318B   	fcall	_i2c_master_wait
  7299  0B36                     l649:	
  7300  0B36  0008               	return
  7301  0B37                     __end_of_i2c_master_repeat_start:	
  7302                           
  7303                           	psect	text19
  7304  0C4F                     __ptext19:	
  7305 ;; *************** function _i2c_master_receive_byte *****************
  7306 ;; Defined at:
  7307 ;;		line 33 in file "i2c_driver_stusb4500.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;  ack             1    wreg     const unsigned char 
  7310 ;; Auto vars:     Size  Location     Type
  7311 ;;  ack             1    1[COMMON] const unsigned char 
  7312 ;;  data            1    2[COMMON] unsigned char 
  7313 ;; Return value:  Size  Location     Type
  7314 ;;                  1    wreg      unsigned char 
  7315 ;; Registers used:
  7316 ;;		wreg, status,2, status,0, pclath, cstack
  7317 ;; Tracked objects:
  7318 ;;		On entry : 0/0
  7319 ;;		On exit  : 0/0
  7320 ;;		Unchanged: 0/0
  7321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7322 ;;      Params:         0       0       0       0       0       0       0       0
  7323 ;;      Locals:         2       0       0       0       0       0       0       0
  7324 ;;      Temps:          1       0       0       0       0       0       0       0
  7325 ;;      Totals:         3       0       0       0       0       0       0       0
  7326 ;;Total ram usage:        3 bytes
  7327 ;; Hardware stack levels used:    1
  7328 ;; Hardware stack levels required when called:    2
  7329 ;; This function calls:
  7330 ;;		_i2c_master_wait
  7331 ;; This function is called by:
  7332 ;;		_i2c_master_read
  7333 ;; This function uses a non-reentrant model
  7334 ;;
  7335                           
  7336                           
  7337                           ;psect for function _i2c_master_receive_byte
  7338  0C4F                     _i2c_master_receive_byte:	
  7339                           
  7340                           ;incstack = 0
  7341                           ; Regs used in _i2c_master_receive_byte: [wreg+status,2+status,0+pclath+cstack]
  7342                           ;i2c_master_receive_byte@ack stored from wreg
  7343  0C4F  00F1               	movwf	i2c_master_receive_byte@ack
  7344  0C50                     l2276:	
  7345                           
  7346                           ;i2c_driver_stusb4500.c: 34: SSP1CON2bits.RCEN = 1;
  7347  0C50  0143               	movlb	3	; select bank3
  7348  0C51  1591               	bsf	17,3	;volatile
  7349  0C52                     l2278:	
  7350                           
  7351                           ;i2c_driver_stusb4500.c: 35: i2c_master_wait();
  7352  0C52  318B  238F  318C   	fcall	_i2c_master_wait
  7353  0C55                     l2280:	
  7354                           
  7355                           ;i2c_driver_stusb4500.c: 36: uint8_t data = SSP1BUF;
  7356  0C55  0143               	movlb	3	; select bank3
  7357  0C56  080C               	movf	12,w	;volatile
  7358  0C57  00F0               	movwf	??_i2c_master_receive_byte
  7359  0C58  0870               	movf	??_i2c_master_receive_byte,w
  7360  0C59  00F2               	movwf	i2c_master_receive_byte@data
  7361  0C5A                     l2282:	
  7362                           
  7363                           ;i2c_driver_stusb4500.c: 37: i2c_master_wait();
  7364  0C5A  318B  238F  318C   	fcall	_i2c_master_wait
  7365  0C5D                     l2284:	
  7366                           
  7367                           ;i2c_driver_stusb4500.c: 38: SSP1CON2bits.ACKDT = ack;
  7368  0C5D  0C71               	rrf	i2c_master_receive_byte@ack,w
  7369  0C5E  0143               	movlb	3	; select bank3
  7370  0C5F  1C03               	skipc
  7371  0C60  1291               	bcf	17,5	;volatile
  7372  0C61  1803               	skipnc
  7373  0C62  1691               	bsf	17,5	;volatile
  7374  0C63                     l2286:	
  7375                           
  7376                           ;i2c_driver_stusb4500.c: 39: SSP1CON2bits.ACKEN = 1;
  7377  0C63  1611               	bsf	17,4	;volatile
  7378  0C64                     l2288:	
  7379                           
  7380                           ;i2c_driver_stusb4500.c: 40: i2c_master_wait();
  7381  0C64  318B  238F  318C   	fcall	_i2c_master_wait
  7382  0C67                     l2290:	
  7383                           
  7384                           ;i2c_driver_stusb4500.c: 42: return data;
  7385  0C67  0872               	movf	i2c_master_receive_byte@data,w
  7386  0C68                     l662:	
  7387  0C68  0008               	return
  7388  0C69                     __end_of_i2c_master_receive_byte:	
  7389                           
  7390                           	psect	text20
  7391  0B8F                     __ptext20:	
  7392 ;; *************** function _i2c_master_wait *****************
  7393 ;; Defined at:
  7394 ;;		line 7 in file "i2c_driver_stusb4500.c"
  7395 ;; Parameters:    Size  Location     Type
  7396 ;;		None
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;		None
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  1    wreg      void 
  7401 ;; Registers used:
  7402 ;;		wreg, status,2
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7408 ;;      Params:         0       0       0       0       0       0       0       0
  7409 ;;      Locals:         0       0       0       0       0       0       0       0
  7410 ;;      Temps:          0       0       0       0       0       0       0       0
  7411 ;;      Totals:         0       0       0       0       0       0       0       0
  7412 ;;Total ram usage:        0 bytes
  7413 ;; Hardware stack levels used:    1
  7414 ;; Hardware stack levels required when called:    1
  7415 ;; This function calls:
  7416 ;;		Nothing
  7417 ;; This function is called by:
  7418 ;;		_i2c_master_start
  7419 ;;		_i2c_master_repeat_start
  7420 ;;		_i2c_master_stop
  7421 ;;		_i2c_master_send_byte
  7422 ;;		_i2c_master_receive_byte
  7423 ;;		_i2c_master_write
  7424 ;;		_i2c_master_read
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428                           
  7429                           ;psect for function _i2c_master_wait
  7430  0B8F                     _i2c_master_wait:	
  7431  0B8F                     l2248:	
  7432                           ;incstack = 0
  7433                           ; Regs used in _i2c_master_wait: [wreg+status,2]
  7434                           
  7435  0B8F                     l640:	
  7436                           ;i2c_driver_stusb4500.c: 8: while (SSP1STAT & 0x04 || SSP1CON2 & 0x1F);
  7437                           
  7438  0B8F  0143               	movlb	3	; select bank3
  7439  0B90  190F               	btfsc	15,2	;volatile
  7440  0B91  2B93               	goto	u1421
  7441  0B92  2B94               	goto	u1420
  7442  0B93                     u1421:	
  7443  0B93  2B8F               	goto	l640
  7444  0B94                     u1420:	
  7445  0B94                     l2250:	
  7446  0B94  0811               	movf	17,w	;volatile
  7447  0B95  391F               	andlw	31
  7448  0B96  1D03               	btfss	3,2
  7449  0B97  2B99               	goto	u1431
  7450  0B98  2B9A               	goto	u1430
  7451  0B99                     u1431:	
  7452  0B99  2B8F               	goto	l640
  7453  0B9A                     u1430:	
  7454  0B9A                     l643:	
  7455  0B9A  0008               	return
  7456  0B9B                     __end_of_i2c_master_wait:	
  7457                           
  7458                           	psect	text21
  7459  0D71                     __ptext21:	
  7460 ;; *************** function _led_modes *****************
  7461 ;; Defined at:
  7462 ;;		line 156 in file "LED_INTERFACE.c"
  7463 ;; Parameters:    Size  Location     Type
  7464 ;;		None
  7465 ;; Auto vars:     Size  Location     Type
  7466 ;;		None
  7467 ;; Return value:  Size  Location     Type
  7468 ;;                  1    wreg      void 
  7469 ;; Registers used:
  7470 ;;		wreg, status,2, status,0, pclath, cstack
  7471 ;; Tracked objects:
  7472 ;;		On entry : 0/0
  7473 ;;		On exit  : 0/0
  7474 ;;		Unchanged: 0/0
  7475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7476 ;;      Params:         0       0       0       0       0       0       0       0
  7477 ;;      Locals:         0       0       0       0       0       0       0       0
  7478 ;;      Temps:          0       0       0       0       0       0       0       0
  7479 ;;      Totals:         0       0       0       0       0       0       0       0
  7480 ;;Total ram usage:        0 bytes
  7481 ;; Hardware stack levels used:    1
  7482 ;; Hardware stack levels required when called:    4
  7483 ;; This function calls:
  7484 ;;		_RGB_fade
  7485 ;;		_battery_fade
  7486 ;;		_flash_led
  7487 ;; This function is called by:
  7488 ;;		_main
  7489 ;; This function uses a non-reentrant model
  7490 ;;
  7491                           
  7492                           
  7493                           ;psect for function _led_modes
  7494  0D71                     _led_modes:	
  7495  0D71                     l2948:	
  7496                           ;incstack = 0
  7497                           ; Regs used in _led_modes: [wreg+status,2+status,0+pclath+cstack]
  7498                           
  7499                           
  7500                           ;LED_INTERFACE.c: 158: if(mode == 0) {
  7501  0D71  0141               	movlb	1	; select bank1
  7502  0D72  086F               	movf	_mode^(0+128),w
  7503  0D73  1D03               	btfss	3,2
  7504  0D74  2D76               	goto	u2411
  7505  0D75  2D77               	goto	u2410
  7506  0D76                     u2411:	
  7507  0D76  2D7C               	goto	l2952
  7508  0D77                     u2410:	
  7509  0D77                     l2950:	
  7510                           
  7511                           ;LED_INTERFACE.c: 159: PWM3DCH = 0;
  7512  0D77  0146               	movlb	6	; select bank6
  7513  0D78  0195               	clrf	21	;volatile
  7514                           
  7515                           ;LED_INTERFACE.c: 160: PWM4DCH = 0;
  7516  0D79  0199               	clrf	25	;volatile
  7517                           
  7518                           ;LED_INTERFACE.c: 161: PWM5DCH = 0;
  7519  0D7A  019D               	clrf	29	;volatile
  7520                           
  7521                           ;LED_INTERFACE.c: 162: }
  7522  0D7B  2D9A               	goto	l547
  7523  0D7C                     l2952:	
  7524                           
  7525                           ;LED_INTERFACE.c: 163: else if(mode == 1) {
  7526  0D7C  036F               	decf	_mode^(0+128),w
  7527  0D7D  1D03               	btfss	3,2
  7528  0D7E  2D80               	goto	u2421
  7529  0D7F  2D81               	goto	u2420
  7530  0D80                     u2421:	
  7531  0D80  2D85               	goto	l2956
  7532  0D81                     u2420:	
  7533  0D81                     l2954:	
  7534                           
  7535                           ;LED_INTERFACE.c: 164: RGB_fade();
  7536  0D81  3187  2703  318D   	fcall	_RGB_fade
  7537                           
  7538                           ;LED_INTERFACE.c: 165: }
  7539  0D84  2D9A               	goto	l547
  7540  0D85                     l2956:	
  7541                           
  7542                           ;LED_INTERFACE.c: 166: else if(mode == 2) {
  7543  0D85  3002               	movlw	2
  7544  0D86  066F               	xorwf	_mode^(0+128),w
  7545  0D87  1D03               	btfss	3,2
  7546  0D88  2D8A               	goto	u2431
  7547  0D89  2D8B               	goto	u2430
  7548  0D8A                     u2431:	
  7549  0D8A  2D8F               	goto	l2960
  7550  0D8B                     u2430:	
  7551  0D8B                     l2958:	
  7552                           
  7553                           ;LED_INTERFACE.c: 167: battery_fade();
  7554  0D8B  3185  2537  318D   	fcall	_battery_fade
  7555                           
  7556                           ;LED_INTERFACE.c: 168: }
  7557  0D8E  2D9A               	goto	l547
  7558  0D8F                     l2960:	
  7559                           
  7560                           ;LED_INTERFACE.c: 169: else if(mode == 3) {
  7561  0D8F  3003               	movlw	3
  7562  0D90  066F               	xorwf	_mode^(0+128),w
  7563  0D91  1D03               	btfss	3,2
  7564  0D92  2D94               	goto	u2441
  7565  0D93  2D95               	goto	u2440
  7566  0D94                     u2441:	
  7567  0D94  2D99               	goto	l2964
  7568  0D95                     u2440:	
  7569  0D95                     l2962:	
  7570                           
  7571                           ;LED_INTERFACE.c: 170: flash_led();
  7572  0D95  318E  2631  318D   	fcall	_flash_led
  7573                           
  7574                           ;LED_INTERFACE.c: 171: }
  7575  0D98  2D9A               	goto	l547
  7576  0D99                     l2964:	
  7577                           
  7578                           ;LED_INTERFACE.c: 172: else {;LED_INTERFACE.c: 173: mode = 0;
  7579  0D99  01EF               	clrf	_mode^(0+128)
  7580  0D9A                     l547:	
  7581  0D9A  0008               	return
  7582  0D9B                     __end_of_led_modes:	
  7583                           
  7584                           	psect	text22
  7585  0E31                     __ptext22:	
  7586 ;; *************** function _flash_led *****************
  7587 ;; Defined at:
  7588 ;;		line 137 in file "LED_INTERFACE.c"
  7589 ;; Parameters:    Size  Location     Type
  7590 ;;		None
  7591 ;; Auto vars:     Size  Location     Type
  7592 ;;		None
  7593 ;; Return value:  Size  Location     Type
  7594 ;;                  1    wreg      void 
  7595 ;; Registers used:
  7596 ;;		wreg, status,2, status,0, pclath, cstack
  7597 ;; Tracked objects:
  7598 ;;		On entry : 0/0
  7599 ;;		On exit  : 0/0
  7600 ;;		Unchanged: 0/0
  7601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7602 ;;      Params:         0       0       0       0       0       0       0       0
  7603 ;;      Locals:         0       0       0       0       0       0       0       0
  7604 ;;      Temps:          1       0       0       0       0       0       0       0
  7605 ;;      Totals:         1       0       0       0       0       0       0       0
  7606 ;;Total ram usage:        1 bytes
  7607 ;; Hardware stack levels used:    1
  7608 ;; Hardware stack levels required when called:    2
  7609 ;; This function calls:
  7610 ;;		_get_time
  7611 ;;		_timer_diff
  7612 ;; This function is called by:
  7613 ;;		_led_modes
  7614 ;; This function uses a non-reentrant model
  7615 ;;
  7616                           
  7617                           
  7618                           ;psect for function _flash_led
  7619  0E31                     _flash_led:	
  7620  0E31                     l2712:	
  7621                           ;incstack = 0
  7622                           ; Regs used in _flash_led: [wreg+status,2+status,0+pclath+cstack]
  7623                           
  7624                           
  7625                           ;LED_INTERFACE.c: 138: if(timer_diff(flash_time) >= 50) {
  7626  0E31  0142               	movlb	2	; select bank2
  7627  0E32  0823               	movf	(_flash_time+3)^(0+256),w
  7628  0E33  00F3               	movwf	timer_diff@t+3
  7629  0E34  0822               	movf	(_flash_time+2)^(0+256),w
  7630  0E35  00F2               	movwf	timer_diff@t+2
  7631  0E36  0821               	movf	(_flash_time+1)^(0+256),w
  7632  0E37  00F1               	movwf	timer_diff@t+1
  7633  0E38  0820               	movf	_flash_time^(0+256),w
  7634  0E39  00F0               	movwf	timer_diff@t
  7635  0E3A  318B  23C3  318E   	fcall	_timer_diff
  7636  0E3D  0873               	movf	?_timer_diff+3,w
  7637  0E3E  1D03               	btfss	3,2
  7638  0E3F  2E4C               	goto	u2170
  7639  0E40  0872               	movf	?_timer_diff+2,w
  7640  0E41  1D03               	btfss	3,2
  7641  0E42  2E4C               	goto	u2170
  7642  0E43  0871               	movf	?_timer_diff+1,w
  7643  0E44  1D03               	btfss	3,2
  7644  0E45  2E4C               	goto	u2170
  7645  0E46  3032               	movlw	50
  7646  0E47  0270               	subwf	?_timer_diff,w
  7647  0E48  1C03               	btfss	3,0
  7648  0E49  2E4B               	goto	u2171
  7649  0E4A  2E4C               	goto	u2170
  7650  0E4B                     u2171:	
  7651  0E4B  2E63               	goto	l2718
  7652  0E4C                     u2170:	
  7653  0E4C                     l2714:	
  7654                           
  7655                           ;LED_INTERFACE.c: 139: flash_state = !flash_state;
  7656  0E4C  0140               	movlb	0	; select bank0
  7657  0E4D  086B               	movf	_flash_state,w
  7658  0E4E  1903               	btfsc	3,2
  7659  0E4F  2E51               	goto	u2181
  7660  0E50  2E53               	goto	u2180
  7661  0E51                     u2181:	
  7662  0E51  3001               	movlw	1
  7663  0E52  2E54               	goto	u2190
  7664  0E53                     u2180:	
  7665  0E53  3000               	movlw	0
  7666  0E54                     u2190:	
  7667  0E54  00F8               	movwf	??_flash_led
  7668  0E55  0878               	movf	??_flash_led,w
  7669  0E56  00EB               	movwf	_flash_state
  7670  0E57                     l2716:	
  7671                           
  7672                           ;LED_INTERFACE.c: 140: flash_time = get_time();
  7673  0E57  318B  236E  318E   	fcall	_get_time
  7674  0E5A  0873               	movf	?_get_time+3,w
  7675  0E5B  0142               	movlb	2	; select bank2
  7676  0E5C  00A3               	movwf	(_flash_time+3)^(0+256)
  7677  0E5D  0872               	movf	?_get_time+2,w
  7678  0E5E  00A2               	movwf	(_flash_time+2)^(0+256)
  7679  0E5F  0871               	movf	?_get_time+1,w
  7680  0E60  00A1               	movwf	(_flash_time+1)^(0+256)
  7681  0E61  0870               	movf	?_get_time,w
  7682  0E62  00A0               	movwf	_flash_time^(0+256)
  7683  0E63                     l2718:	
  7684                           
  7685                           ;LED_INTERFACE.c: 141: };LED_INTERFACE.c: 142: if(flash_state) {
  7686  0E63  0140               	movlb	0	; select bank0
  7687  0E64  086B               	movf	_flash_state,w
  7688  0E65  1903               	btfsc	3,2
  7689  0E66  2E68               	goto	u2201
  7690  0E67  2E69               	goto	u2200
  7691  0E68                     u2201:	
  7692  0E68  2E6F               	goto	l2724
  7693  0E69                     u2200:	
  7694  0E69                     l2720:	
  7695                           
  7696                           ;LED_INTERFACE.c: 143: PWM3DCH = 0;
  7697  0E69  0146               	movlb	6	; select bank6
  7698  0E6A  0195               	clrf	21	;volatile
  7699                           
  7700                           ;LED_INTERFACE.c: 144: PWM4DCH = 0;
  7701  0E6B  0199               	clrf	25	;volatile
  7702  0E6C                     l2722:	
  7703                           
  7704                           ;LED_INTERFACE.c: 145: PWM5DCH = 255;
  7705  0E6C  30FF               	movlw	255
  7706  0E6D  009D               	movwf	29	;volatile
  7707                           
  7708                           ;LED_INTERFACE.c: 146: }
  7709  0E6E  2E73               	goto	l534
  7710  0E6F                     l2724:	
  7711                           
  7712                           ;LED_INTERFACE.c: 147: else {;LED_INTERFACE.c: 148: PWM3DCH = 0;
  7713  0E6F  0146               	movlb	6	; select bank6
  7714  0E70  0195               	clrf	21	;volatile
  7715                           
  7716                           ;LED_INTERFACE.c: 149: PWM4DCH = 0;
  7717  0E71  0199               	clrf	25	;volatile
  7718                           
  7719                           ;LED_INTERFACE.c: 150: PWM5DCH = 0;
  7720  0E72  019D               	clrf	29	;volatile
  7721  0E73                     l534:	
  7722  0E73  0008               	return
  7723  0E74                     __end_of_flash_led:	
  7724                           
  7725                           	psect	text23
  7726  0537                     __ptext23:	
  7727 ;; *************** function _battery_fade *****************
  7728 ;; Defined at:
  7729 ;;		line 53 in file "LED_INTERFACE.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;		None
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;  v               1   18[BANK0 ] unsigned char 
  7734 ;;  battery_max     1    0        unsigned char 
  7735 ;;  battery_min     1    0        unsigned char 
  7736 ;; Return value:  Size  Location     Type
  7737 ;;                  1    wreg      void 
  7738 ;; Registers used:
  7739 ;;		wreg, status,2, status,0, pclath, cstack
  7740 ;; Tracked objects:
  7741 ;;		On entry : 0/0
  7742 ;;		On exit  : 0/0
  7743 ;;		Unchanged: 0/0
  7744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7745 ;;      Params:         0       0       0       0       0       0       0       0
  7746 ;;      Locals:         0       3       0       0       0       0       0       0
  7747 ;;      Temps:          0       6       0       0       0       0       0       0
  7748 ;;      Totals:         0       9       0       0       0       0       0       0
  7749 ;;Total ram usage:        9 bytes
  7750 ;; Hardware stack levels used:    1
  7751 ;; Hardware stack levels required when called:    3
  7752 ;; This function calls:
  7753 ;;		_Map
  7754 ;; This function is called by:
  7755 ;;		_led_modes
  7756 ;; This function uses a non-reentrant model
  7757 ;;
  7758                           
  7759                           
  7760                           ;psect for function _battery_fade
  7761  0537                     _battery_fade:	
  7762  0537                     l2678:	
  7763                           ;incstack = 0
  7764                           ; Regs used in _battery_fade: [wreg+status,2+status,0+pclath+cstack]
  7765                           
  7766                           
  7767                           ;LED_INTERFACE.c: 56: char v = BATTERY_VOLTAGE;
  7768  0537  0141               	movlb	1	; select bank1
  7769  0538  0867               	movf	_BATTERY_VOLTAGE^(0+128),w
  7770  0539  0140               	movlb	0	; select bank0
  7771  053A  00AB               	movwf	??_battery_fade
  7772  053B  082B               	movf	??_battery_fade,w
  7773  053C  00B3               	movwf	battery_fade@v
  7774  053D                     l2680:	
  7775  053D                     l2682:	
  7776  053D                     l2684:	
  7777                           
  7778                           ;LED_INTERFACE.c: 62: if (v > battery_max) {
  7779  053D  3063               	movlw	99
  7780  053E  0233               	subwf	battery_fade@v,w
  7781  053F  1C03               	skipc
  7782  0540  2D42               	goto	u2141
  7783  0541  2D43               	goto	u2140
  7784  0542                     u2141:	
  7785  0542  2D47               	goto	l2690
  7786  0543                     u2140:	
  7787  0543                     l2686:	
  7788                           
  7789                           ;LED_INTERFACE.c: 63: v = battery_max;
  7790  0543  3062               	movlw	98
  7791  0544  00AB               	movwf	??_battery_fade
  7792  0545  082B               	movf	??_battery_fade,w
  7793  0546  00B3               	movwf	battery_fade@v
  7794  0547                     l2690:	
  7795                           
  7796                           ;LED_INTERFACE.c: 67: };LED_INTERFACE.c: 69: v = Map(v, battery_min, battery_max, 0, 127
      +                          );
  7797  0547  0833               	movf	battery_fade@v,w
  7798  0548  00AB               	movwf	??_battery_fade
  7799  0549  01AC               	clrf	??_battery_fade+1
  7800  054A  082B               	movf	??_battery_fade,w
  7801  054B  00A5               	movwf	Map@x
  7802  054C  082C               	movf	??_battery_fade+1,w
  7803  054D  00A6               	movwf	Map@x+1
  7804  054E  01A7               	clrf	Map@inMin
  7805  054F  3062               	movlw	98
  7806  0550  00AD               	movwf	??_battery_fade+2
  7807  0551  082D               	movf	??_battery_fade+2,w
  7808  0552  00A8               	movwf	Map@inMax
  7809  0553  01A9               	clrf	Map@outMin
  7810  0554  307F               	movlw	127
  7811  0555  00AE               	movwf	??_battery_fade+3
  7812  0556  082E               	movf	??_battery_fade+3,w
  7813  0557  00AA               	movwf	Map@outMax
  7814  0558  318D  2528  3185   	fcall	_Map
  7815  055B  0140               	movlb	0	; select bank0
  7816  055C  00AF               	movwf	??_battery_fade+4
  7817  055D  082F               	movf	??_battery_fade+4,w
  7818  055E  00B3               	movwf	battery_fade@v
  7819  055F                     l2692:	
  7820                           
  7821                           ;LED_INTERFACE.c: 72: if (v <= 63) {
  7822  055F  3040               	movlw	64
  7823  0560  0233               	subwf	battery_fade@v,w
  7824  0561  1803               	skipnc
  7825  0562  2D64               	goto	u2151
  7826  0563  2D65               	goto	u2150
  7827  0564                     u2151:	
  7828  0564  2D86               	goto	l2702
  7829  0565                     u2150:	
  7830  0565                     l2694:	
  7831                           
  7832                           ;LED_INTERFACE.c: 73: v = Map(v, 0, 63, 0, 255);
  7833  0565  0833               	movf	battery_fade@v,w
  7834  0566  00AB               	movwf	??_battery_fade
  7835  0567  01AC               	clrf	??_battery_fade+1
  7836  0568  082B               	movf	??_battery_fade,w
  7837  0569  00A5               	movwf	Map@x
  7838  056A  082C               	movf	??_battery_fade+1,w
  7839  056B  00A6               	movwf	Map@x+1
  7840  056C  01A7               	clrf	Map@inMin
  7841  056D  303F               	movlw	63
  7842  056E  00AD               	movwf	??_battery_fade+2
  7843  056F  082D               	movf	??_battery_fade+2,w
  7844  0570  00A8               	movwf	Map@inMax
  7845  0571  01A9               	clrf	Map@outMin
  7846  0572  30FF               	movlw	255
  7847  0573  00AE               	movwf	??_battery_fade+3
  7848  0574  082E               	movf	??_battery_fade+3,w
  7849  0575  00AA               	movwf	Map@outMax
  7850  0576  318D  2528  3185   	fcall	_Map
  7851  0579  0140               	movlb	0	; select bank0
  7852  057A  00AF               	movwf	??_battery_fade+4
  7853  057B  082F               	movf	??_battery_fade+4,w
  7854  057C  00B3               	movwf	battery_fade@v
  7855  057D                     l2696:	
  7856                           
  7857                           ;LED_INTERFACE.c: 74: PWM3DCH = 0;
  7858  057D  0146               	movlb	6	; select bank6
  7859  057E  0195               	clrf	21	;volatile
  7860  057F                     l2698:	
  7861                           
  7862                           ;LED_INTERFACE.c: 75: PWM4DCH = v;
  7863  057F  0140               	movlb	0	; select bank0
  7864  0580  0833               	movf	battery_fade@v,w
  7865  0581  0146               	movlb	6	; select bank6
  7866  0582  0099               	movwf	25	;volatile
  7867  0583                     l2700:	
  7868                           
  7869                           ;LED_INTERFACE.c: 76: PWM5DCH = 255;
  7870  0583  30FF               	movlw	255
  7871  0584  009D               	movwf	29	;volatile
  7872                           
  7873                           ;LED_INTERFACE.c: 77: }
  7874  0585  2DAF               	goto	l505
  7875  0586                     l2702:	
  7876                           
  7877                           ;LED_INTERFACE.c: 79: else if (v >= 63) {
  7878  0586  303F               	movlw	63
  7879  0587  0233               	subwf	battery_fade@v,w
  7880  0588  1C03               	skipc
  7881  0589  2D8B               	goto	u2161
  7882  058A  2D8C               	goto	u2160
  7883  058B                     u2161:	
  7884  058B  2DAF               	goto	l505
  7885  058C                     u2160:	
  7886  058C                     l2704:	
  7887                           
  7888                           ;LED_INTERFACE.c: 80: v = Map(v, 63, 127, 0, 255);
  7889  058C  0833               	movf	battery_fade@v,w
  7890  058D  00AB               	movwf	??_battery_fade
  7891  058E  01AC               	clrf	??_battery_fade+1
  7892  058F  082B               	movf	??_battery_fade,w
  7893  0590  00A5               	movwf	Map@x
  7894  0591  082C               	movf	??_battery_fade+1,w
  7895  0592  00A6               	movwf	Map@x+1
  7896  0593  303F               	movlw	63
  7897  0594  00AD               	movwf	??_battery_fade+2
  7898  0595  082D               	movf	??_battery_fade+2,w
  7899  0596  00A7               	movwf	Map@inMin
  7900  0597  307F               	movlw	127
  7901  0598  00AE               	movwf	??_battery_fade+3
  7902  0599  082E               	movf	??_battery_fade+3,w
  7903  059A  00A8               	movwf	Map@inMax
  7904  059B  01A9               	clrf	Map@outMin
  7905  059C  30FF               	movlw	255
  7906  059D  00AF               	movwf	??_battery_fade+4
  7907  059E  082F               	movf	??_battery_fade+4,w
  7908  059F  00AA               	movwf	Map@outMax
  7909  05A0  318D  2528  3185   	fcall	_Map
  7910  05A3  0140               	movlb	0	; select bank0
  7911  05A4  00B0               	movwf	??_battery_fade+5
  7912  05A5  0830               	movf	??_battery_fade+5,w
  7913  05A6  00B3               	movwf	battery_fade@v
  7914  05A7                     l2706:	
  7915                           
  7916                           ;LED_INTERFACE.c: 81: PWM3DCH = 0;
  7917  05A7  0146               	movlb	6	; select bank6
  7918  05A8  0195               	clrf	21	;volatile
  7919  05A9                     l2708:	
  7920                           
  7921                           ;LED_INTERFACE.c: 82: PWM4DCH = 255;
  7922  05A9  30FF               	movlw	255
  7923  05AA  0099               	movwf	25	;volatile
  7924  05AB                     l2710:	
  7925                           
  7926                           ;LED_INTERFACE.c: 83: PWM5DCH = 255 - v;
  7927  05AB  0140               	movlb	0	; select bank0
  7928  05AC  0933               	comf	battery_fade@v,w
  7929  05AD  0146               	movlb	6	; select bank6
  7930  05AE  009D               	movwf	29	;volatile
  7931  05AF                     l505:	
  7932  05AF  0008               	return
  7933  05B0                     __end_of_battery_fade:	
  7934                           
  7935                           	psect	text24
  7936  0D28                     __ptext24:	
  7937 ;; *************** function _Map *****************
  7938 ;; Defined at:
  7939 ;;		line 48 in file "LED_INTERFACE.c"
  7940 ;; Parameters:    Size  Location     Type
  7941 ;;  x               2    4[BANK0 ] int 
  7942 ;;  inMin           1    6[BANK0 ] unsigned char 
  7943 ;;  inMax           1    7[BANK0 ] unsigned char 
  7944 ;;  outMin          1    8[BANK0 ] unsigned char 
  7945 ;;  outMax          1    9[BANK0 ] unsigned char 
  7946 ;; Auto vars:     Size  Location     Type
  7947 ;;		None
  7948 ;; Return value:  Size  Location     Type
  7949 ;;                  1    wreg      unsigned char 
  7950 ;; Registers used:
  7951 ;;		wreg, status,2, status,0, pclath, cstack
  7952 ;; Tracked objects:
  7953 ;;		On entry : 0/0
  7954 ;;		On exit  : 0/0
  7955 ;;		Unchanged: 0/0
  7956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7957 ;;      Params:         0       6       0       0       0       0       0       0
  7958 ;;      Locals:         0       0       0       0       0       0       0       0
  7959 ;;      Temps:          2       0       0       0       0       0       0       0
  7960 ;;      Totals:         2       6       0       0       0       0       0       0
  7961 ;;Total ram usage:        8 bytes
  7962 ;; Hardware stack levels used:    1
  7963 ;; Hardware stack levels required when called:    2
  7964 ;; This function calls:
  7965 ;;		___awdiv
  7966 ;;		___wmul
  7967 ;; This function is called by:
  7968 ;;		_battery_fade
  7969 ;; This function uses a non-reentrant model
  7970 ;;
  7971                           
  7972                           
  7973                           ;psect for function _Map
  7974  0D28                     _Map:	
  7975  0D28                     l2556:	
  7976                           ;incstack = 0
  7977                           ; Regs used in _Map: [wreg+status,2+status,0+pclath+cstack]
  7978                           
  7979                           
  7980                           ;LED_INTERFACE.c: 50: return (((x - inMin) * (outMax - outMin)) / (inMax - inMin)) +outM
      +                          in;
  7981  0D28  0140               	movlb	0	; select bank0
  7982  0D29  0827               	movf	Map@inMin,w
  7983  0D2A  0228               	subwf	Map@inMax,w
  7984  0D2B  00F6               	movwf	___awdiv@divisor
  7985  0D2C  01F7               	clrf	___awdiv@divisor+1
  7986  0D2D  1C03               	skipc
  7987  0D2E  03F7               	decf	___awdiv@divisor+1,f
  7988  0D2F  0827               	movf	Map@inMin,w
  7989  0D30  00FB               	movwf	??_Map
  7990  0D31  01FC               	clrf	??_Map+1
  7991  0D32  087B               	movf	??_Map,w
  7992  0D33  0225               	subwf	Map@x,w
  7993  0D34  00F0               	movwf	___wmul@multiplier
  7994  0D35  087C               	movf	??_Map+1,w
  7995  0D36  3B26               	subwfb	Map@x+1,w
  7996  0D37  00F1               	movwf	___wmul@multiplier+1
  7997  0D38  0829               	movf	Map@outMin,w
  7998  0D39  022A               	subwf	Map@outMax,w
  7999  0D3A  00F2               	movwf	___wmul@multiplicand
  8000  0D3B  01F3               	clrf	___wmul@multiplicand+1
  8001  0D3C  1C03               	skipc
  8002  0D3D  03F3               	decf	___wmul@multiplicand+1,f
  8003  0D3E  318C  24A2  318D   	fcall	___wmul
  8004  0D41  0871               	movf	?___wmul+1,w
  8005  0D42  00F9               	movwf	___awdiv@dividend+1
  8006  0D43  0870               	movf	?___wmul,w
  8007  0D44  00F8               	movwf	___awdiv@dividend
  8008  0D45  3187  276D  318D   	fcall	___awdiv
  8009  0D48  0876               	movf	?___awdiv,w
  8010  0D49  0140               	movlb	0	; select bank0
  8011  0D4A  0729               	addwf	Map@outMin,w
  8012  0D4B                     l497:	
  8013  0D4B  0008               	return
  8014  0D4C                     __end_of_Map:	
  8015                           
  8016                           	psect	text25
  8017  0CA2                     __ptext25:	
  8018 ;; *************** function ___wmul *****************
  8019 ;; Defined at:
  8020 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  8021 ;; Parameters:    Size  Location     Type
  8022 ;;  multiplier      2    0[COMMON] unsigned int 
  8023 ;;  multiplicand    2    2[COMMON] unsigned int 
  8024 ;; Auto vars:     Size  Location     Type
  8025 ;;  product         2    4[COMMON] unsigned int 
  8026 ;; Return value:  Size  Location     Type
  8027 ;;                  2    0[COMMON] unsigned int 
  8028 ;; Registers used:
  8029 ;;		wreg, status,2, status,0
  8030 ;; Tracked objects:
  8031 ;;		On entry : 0/0
  8032 ;;		On exit  : 0/0
  8033 ;;		Unchanged: 0/0
  8034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8035 ;;      Params:         4       0       0       0       0       0       0       0
  8036 ;;      Locals:         2       0       0       0       0       0       0       0
  8037 ;;      Temps:          0       0       0       0       0       0       0       0
  8038 ;;      Totals:         6       0       0       0       0       0       0       0
  8039 ;;Total ram usage:        6 bytes
  8040 ;; Hardware stack levels used:    1
  8041 ;; Hardware stack levels required when called:    1
  8042 ;; This function calls:
  8043 ;;		Nothing
  8044 ;; This function is called by:
  8045 ;;		_Map
  8046 ;;		_negotiate_optimal_pdo
  8047 ;; This function uses a non-reentrant model
  8048 ;;
  8049                           
  8050                           
  8051                           ;psect for function ___wmul
  8052  0CA2                     ___wmul:	
  8053  0CA2                     l2458:	
  8054                           ;incstack = 0
  8055                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8056                           
  8057  0CA2  01F4               	clrf	___wmul@product
  8058  0CA3  01F5               	clrf	___wmul@product+1
  8059  0CA4                     l2460:	
  8060  0CA4  1C70               	btfss	___wmul@multiplier,0
  8061  0CA5  2CA7               	goto	u1671
  8062  0CA6  2CA8               	goto	u1670
  8063  0CA7                     u1671:	
  8064  0CA7  2CAC               	goto	l782
  8065  0CA8                     u1670:	
  8066  0CA8                     l2462:	
  8067  0CA8  0872               	movf	___wmul@multiplicand,w
  8068  0CA9  07F4               	addwf	___wmul@product,f
  8069  0CAA  0873               	movf	___wmul@multiplicand+1,w
  8070  0CAB  3DF5               	addwfc	___wmul@product+1,f
  8071  0CAC                     l782:	
  8072  0CAC  3001               	movlw	1
  8073  0CAD                     u1685:	
  8074  0CAD  35F2               	lslf	___wmul@multiplicand,f
  8075  0CAE  0DF3               	rlf	___wmul@multiplicand+1,f
  8076  0CAF  0B89               	decfsz	9,f
  8077  0CB0  2CAD               	goto	u1685
  8078  0CB1                     l2464:	
  8079  0CB1  3001               	movlw	1
  8080  0CB2                     u1695:	
  8081  0CB2  36F1               	lsrf	___wmul@multiplier+1,f
  8082  0CB3  0CF0               	rrf	___wmul@multiplier,f
  8083  0CB4  0B89               	decfsz	9,f
  8084  0CB5  2CB2               	goto	u1695
  8085  0CB6                     l2466:	
  8086  0CB6  0870               	movf	___wmul@multiplier,w
  8087  0CB7  0471               	iorwf	___wmul@multiplier+1,w
  8088  0CB8  1D03               	btfss	3,2
  8089  0CB9  2CBB               	goto	u1701
  8090  0CBA  2CBC               	goto	u1700
  8091  0CBB                     u1701:	
  8092  0CBB  2CA4               	goto	l2460
  8093  0CBC                     u1700:	
  8094  0CBC                     l2468:	
  8095  0CBC  0875               	movf	___wmul@product+1,w
  8096  0CBD  00F1               	movwf	?___wmul+1
  8097  0CBE  0874               	movf	___wmul@product,w
  8098  0CBF  00F0               	movwf	?___wmul
  8099  0CC0                     l784:	
  8100  0CC0  0008               	return
  8101  0CC1                     __end_of___wmul:	
  8102                           
  8103                           	psect	text26
  8104  076D                     __ptext26:	
  8105 ;; *************** function ___awdiv *****************
  8106 ;; Defined at:
  8107 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;  divisor         2    6[COMMON] int 
  8110 ;;  dividend        2    8[COMMON] int 
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;  quotient        2    2[BANK0 ] int 
  8113 ;;  sign            1    1[BANK0 ] unsigned char 
  8114 ;;  counter         1    0[BANK0 ] unsigned char 
  8115 ;; Return value:  Size  Location     Type
  8116 ;;                  2    6[COMMON] int 
  8117 ;; Registers used:
  8118 ;;		wreg, status,2, status,0
  8119 ;; Tracked objects:
  8120 ;;		On entry : 0/0
  8121 ;;		On exit  : 0/0
  8122 ;;		Unchanged: 0/0
  8123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8124 ;;      Params:         4       0       0       0       0       0       0       0
  8125 ;;      Locals:         0       4       0       0       0       0       0       0
  8126 ;;      Temps:          1       0       0       0       0       0       0       0
  8127 ;;      Totals:         5       4       0       0       0       0       0       0
  8128 ;;Total ram usage:        9 bytes
  8129 ;; Hardware stack levels used:    1
  8130 ;; Hardware stack levels required when called:    1
  8131 ;; This function calls:
  8132 ;;		Nothing
  8133 ;; This function is called by:
  8134 ;;		_Map
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           
  8139                           ;psect for function ___awdiv
  8140  076D                     ___awdiv:	
  8141  076D                     l2472:	
  8142                           ;incstack = 0
  8143                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8144                           
  8145  076D  0140               	movlb	0	; select bank0
  8146  076E  01A2               	clrf	___awdiv@sign
  8147  076F                     l2474:	
  8148  076F  1FF7               	btfss	___awdiv@divisor+1,7
  8149  0770  2F72               	goto	u1711
  8150  0771  2F73               	goto	u1710
  8151  0772                     u1711:	
  8152  0772  2F7A               	goto	l2480
  8153  0773                     u1710:	
  8154  0773                     l2476:	
  8155  0773  09F6               	comf	___awdiv@divisor,f
  8156  0774  09F7               	comf	___awdiv@divisor+1,f
  8157  0775  0AF6               	incf	___awdiv@divisor,f
  8158  0776  1903               	skipnz
  8159  0777  0AF7               	incf	___awdiv@divisor+1,f
  8160  0778                     l2478:	
  8161  0778  01A2               	clrf	___awdiv@sign
  8162  0779  0AA2               	incf	___awdiv@sign,f
  8163  077A                     l2480:	
  8164  077A  1FF9               	btfss	___awdiv@dividend+1,7
  8165  077B  2F7D               	goto	u1721
  8166  077C  2F7E               	goto	u1720
  8167  077D                     u1721:	
  8168  077D  2F87               	goto	l2486
  8169  077E                     u1720:	
  8170  077E                     l2482:	
  8171  077E  09F8               	comf	___awdiv@dividend,f
  8172  077F  09F9               	comf	___awdiv@dividend+1,f
  8173  0780  0AF8               	incf	___awdiv@dividend,f
  8174  0781  1903               	skipnz
  8175  0782  0AF9               	incf	___awdiv@dividend+1,f
  8176  0783                     l2484:	
  8177  0783  3001               	movlw	1
  8178  0784  00FA               	movwf	??___awdiv
  8179  0785  087A               	movf	??___awdiv,w
  8180  0786  06A2               	xorwf	___awdiv@sign,f
  8181  0787                     l2486:	
  8182  0787  01A3               	clrf	___awdiv@quotient
  8183  0788  01A4               	clrf	___awdiv@quotient+1
  8184  0789                     l2488:	
  8185  0789  0876               	movf	___awdiv@divisor,w
  8186  078A  0477               	iorwf	___awdiv@divisor+1,w
  8187  078B  1903               	btfsc	3,2
  8188  078C  2F8E               	goto	u1731
  8189  078D  2F8F               	goto	u1730
  8190  078E                     u1731:	
  8191  078E  2FBE               	goto	l2508
  8192  078F                     u1730:	
  8193  078F                     l2490:	
  8194  078F  01A1               	clrf	___awdiv@counter
  8195  0790  0AA1               	incf	___awdiv@counter,f
  8196  0791  2F9B               	goto	l2496
  8197  0792                     l2492:	
  8198  0792  3001               	movlw	1
  8199  0793                     u1745:	
  8200  0793  35F6               	lslf	___awdiv@divisor,f
  8201  0794  0DF7               	rlf	___awdiv@divisor+1,f
  8202  0795  0B89               	decfsz	9,f
  8203  0796  2F93               	goto	u1745
  8204  0797                     l2494:	
  8205  0797  3001               	movlw	1
  8206  0798  00FA               	movwf	??___awdiv
  8207  0799  087A               	movf	??___awdiv,w
  8208  079A  07A1               	addwf	___awdiv@counter,f
  8209  079B                     l2496:	
  8210  079B  1FF7               	btfss	___awdiv@divisor+1,7
  8211  079C  2F9E               	goto	u1751
  8212  079D  2F9F               	goto	u1750
  8213  079E                     u1751:	
  8214  079E  2F92               	goto	l2492
  8215  079F                     u1750:	
  8216  079F                     l2498:	
  8217  079F  3001               	movlw	1
  8218  07A0                     u1765:	
  8219  07A0  35A3               	lslf	___awdiv@quotient,f
  8220  07A1  0DA4               	rlf	___awdiv@quotient+1,f
  8221  07A2  0B89               	decfsz	9,f
  8222  07A3  2FA0               	goto	u1765
  8223  07A4  0877               	movf	___awdiv@divisor+1,w
  8224  07A5  0279               	subwf	___awdiv@dividend+1,w
  8225  07A6  1D03               	skipz
  8226  07A7  2FAA               	goto	u1775
  8227  07A8  0876               	movf	___awdiv@divisor,w
  8228  07A9  0278               	subwf	___awdiv@dividend,w
  8229  07AA                     u1775:	
  8230  07AA  1C03               	skipc
  8231  07AB  2FAD               	goto	u1771
  8232  07AC  2FAE               	goto	u1770
  8233  07AD                     u1771:	
  8234  07AD  2FB3               	goto	l2504
  8235  07AE                     u1770:	
  8236  07AE                     l2500:	
  8237  07AE  0876               	movf	___awdiv@divisor,w
  8238  07AF  02F8               	subwf	___awdiv@dividend,f
  8239  07B0  0877               	movf	___awdiv@divisor+1,w
  8240  07B1  3BF9               	subwfb	___awdiv@dividend+1,f
  8241  07B2                     l2502:	
  8242  07B2  1423               	bsf	___awdiv@quotient,0
  8243  07B3                     l2504:	
  8244  07B3  3001               	movlw	1
  8245  07B4                     u1785:	
  8246  07B4  36F7               	lsrf	___awdiv@divisor+1,f
  8247  07B5  0CF6               	rrf	___awdiv@divisor,f
  8248  07B6  0B89               	decfsz	9,f
  8249  07B7  2FB4               	goto	u1785
  8250  07B8                     l2506:	
  8251  07B8  3001               	movlw	1
  8252  07B9  02A1               	subwf	___awdiv@counter,f
  8253  07BA  1D03               	btfss	3,2
  8254  07BB  2FBD               	goto	u1791
  8255  07BC  2FBE               	goto	u1790
  8256  07BD                     u1791:	
  8257  07BD  2F9F               	goto	l2498
  8258  07BE                     u1790:	
  8259  07BE                     l2508:	
  8260  07BE  0822               	movf	___awdiv@sign,w
  8261  07BF  1903               	btfsc	3,2
  8262  07C0  2FC2               	goto	u1801
  8263  07C1  2FC3               	goto	u1800
  8264  07C2                     u1801:	
  8265  07C2  2FC8               	goto	l2512
  8266  07C3                     u1800:	
  8267  07C3                     l2510:	
  8268  07C3  09A3               	comf	___awdiv@quotient,f
  8269  07C4  09A4               	comf	___awdiv@quotient+1,f
  8270  07C5  0AA3               	incf	___awdiv@quotient,f
  8271  07C6  1903               	skipnz
  8272  07C7  0AA4               	incf	___awdiv@quotient+1,f
  8273  07C8                     l2512:	
  8274  07C8  0824               	movf	___awdiv@quotient+1,w
  8275  07C9  00F7               	movwf	?___awdiv+1
  8276  07CA  0823               	movf	___awdiv@quotient,w
  8277  07CB  00F6               	movwf	?___awdiv
  8278  07CC                     l935:	
  8279  07CC  0008               	return
  8280  07CD                     __end_of___awdiv:	
  8281                           
  8282                           	psect	text27
  8283  0703                     __ptext27:	
  8284 ;; *************** function _RGB_fade *****************
  8285 ;; Defined at:
  8286 ;;		line 18 in file "LED_INTERFACE.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;		None
  8289 ;; Auto vars:     Size  Location     Type
  8290 ;;		None
  8291 ;; Return value:  Size  Location     Type
  8292 ;;                  1    wreg      void 
  8293 ;; Registers used:
  8294 ;;		wreg, status,2, status,0, pclath, cstack
  8295 ;; Tracked objects:
  8296 ;;		On entry : 0/0
  8297 ;;		On exit  : 0/0
  8298 ;;		Unchanged: 0/0
  8299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8300 ;;      Params:         0       0       0       0       0       0       0       0
  8301 ;;      Locals:         0       0       0       0       0       0       0       0
  8302 ;;      Temps:          1       0       0       0       0       0       0       0
  8303 ;;      Totals:         1       0       0       0       0       0       0       0
  8304 ;;Total ram usage:        1 bytes
  8305 ;; Hardware stack levels used:    1
  8306 ;; Hardware stack levels required when called:    2
  8307 ;; This function calls:
  8308 ;;		_get_time
  8309 ;;		_timer_diff
  8310 ;; This function is called by:
  8311 ;;		_led_modes
  8312 ;; This function uses a non-reentrant model
  8313 ;;
  8314                           
  8315                           
  8316                           ;psect for function _RGB_fade
  8317  0703                     _RGB_fade:	
  8318  0703                     l2644:	
  8319                           ;incstack = 0
  8320                           ; Regs used in _RGB_fade: [wreg+status,2+status,0+pclath+cstack]
  8321                           
  8322                           
  8323                           ;LED_INTERFACE.c: 20: if(timer_diff(rgb_delay) >= 2) {
  8324  0703  0142               	movlb	2	; select bank2
  8325  0704  082B               	movf	(_rgb_delay+3)^(0+256),w
  8326  0705  00F3               	movwf	timer_diff@t+3
  8327  0706  082A               	movf	(_rgb_delay+2)^(0+256),w
  8328  0707  00F2               	movwf	timer_diff@t+2
  8329  0708  0829               	movf	(_rgb_delay+1)^(0+256),w
  8330  0709  00F1               	movwf	timer_diff@t+1
  8331  070A  0828               	movf	_rgb_delay^(0+256),w
  8332  070B  00F0               	movwf	timer_diff@t
  8333  070C  318B  23C3  3187   	fcall	_timer_diff
  8334  070F  0873               	movf	?_timer_diff+3,w
  8335  0710  1D03               	btfss	3,2
  8336  0711  2F1E               	goto	u2080
  8337  0712  0872               	movf	?_timer_diff+2,w
  8338  0713  1D03               	btfss	3,2
  8339  0714  2F1E               	goto	u2080
  8340  0715  0871               	movf	?_timer_diff+1,w
  8341  0716  1D03               	btfss	3,2
  8342  0717  2F1E               	goto	u2080
  8343  0718  3002               	movlw	2
  8344  0719  0270               	subwf	?_timer_diff,w
  8345  071A  1C03               	btfss	3,0
  8346  071B  2F1D               	goto	u2081
  8347  071C  2F1E               	goto	u2080
  8348  071D                     u2081:	
  8349  071D  2F6C               	goto	l494
  8350  071E                     u2080:	
  8351  071E                     l2646:	
  8352                           
  8353                           ;LED_INTERFACE.c: 21: rgb_delay = get_time();
  8354  071E  318B  236E  3187   	fcall	_get_time
  8355  0721  0873               	movf	?_get_time+3,w
  8356  0722  0142               	movlb	2	; select bank2
  8357  0723  00AB               	movwf	(_rgb_delay+3)^(0+256)
  8358  0724  0872               	movf	?_get_time+2,w
  8359  0725  00AA               	movwf	(_rgb_delay+2)^(0+256)
  8360  0726  0871               	movf	?_get_time+1,w
  8361  0727  00A9               	movwf	(_rgb_delay+1)^(0+256)
  8362  0728  0870               	movf	?_get_time,w
  8363  0729  00A8               	movwf	_rgb_delay^(0+256)
  8364  072A                     l2648:	
  8365                           
  8366                           ;LED_INTERFACE.c: 22: if (i >= 255) {
  8367  072A  0140               	movlb	0	; select bank0
  8368  072B  0A6F               	incf	_i,w
  8369  072C  1D03               	btfss	3,2
  8370  072D  2F2F               	goto	u2091
  8371  072E  2F30               	goto	u2090
  8372  072F                     u2091:	
  8373  072F  2F3C               	goto	l2658
  8374  0730                     u2090:	
  8375  0730                     l2650:	
  8376                           
  8377                           ;LED_INTERFACE.c: 23: i = 0;
  8378  0730  01EF               	clrf	_i
  8379  0731                     l2652:	
  8380                           
  8381                           ;LED_INTERFACE.c: 24: color++;
  8382  0731  3001               	movlw	1
  8383  0732  00F8               	movwf	??_RGB_fade
  8384  0733  0878               	movf	??_RGB_fade,w
  8385  0734  07ED               	addwf	_color,f
  8386  0735                     l2654:	
  8387                           
  8388                           ;LED_INTERFACE.c: 25: if (color > 2) {
  8389  0735  3003               	movlw	3
  8390  0736  026D               	subwf	_color,w
  8391  0737  1C03               	skipc
  8392  0738  2F3A               	goto	u2101
  8393  0739  2F3B               	goto	u2100
  8394  073A                     u2101:	
  8395  073A  2F3C               	goto	l2658
  8396  073B                     u2100:	
  8397  073B                     l2656:	
  8398                           
  8399                           ;LED_INTERFACE.c: 26: color = 0;
  8400  073B  01ED               	clrf	_color
  8401  073C                     l2658:	
  8402                           
  8403                           ;LED_INTERFACE.c: 27: };LED_INTERFACE.c: 28: };LED_INTERFACE.c: 29: i++;
  8404  073C  3001               	movlw	1
  8405  073D  00F8               	movwf	??_RGB_fade
  8406  073E  0878               	movf	??_RGB_fade,w
  8407  073F  07EF               	addwf	_i,f
  8408  0740                     l2660:	
  8409                           
  8410                           ;LED_INTERFACE.c: 30: if (color == 0) {
  8411  0740  086D               	movf	_color,w
  8412  0741  1D03               	btfss	3,2
  8413  0742  2F44               	goto	u2111
  8414  0743  2F45               	goto	u2110
  8415  0744                     u2111:	
  8416  0744  2F4D               	goto	l2666
  8417  0745                     u2110:	
  8418  0745                     l2662:	
  8419                           
  8420                           ;LED_INTERFACE.c: 31: PWM3DCH = 255 - i;
  8421  0745  096F               	comf	_i,w
  8422  0746  0146               	movlb	6	; select bank6
  8423  0747  0095               	movwf	21	;volatile
  8424  0748                     l2664:	
  8425                           
  8426                           ;LED_INTERFACE.c: 32: PWM4DCH = i;
  8427  0748  0140               	movlb	0	; select bank0
  8428  0749  086F               	movf	_i,w
  8429  074A  0146               	movlb	6	; select bank6
  8430  074B  0099               	movwf	25	;volatile
  8431                           
  8432                           ;LED_INTERFACE.c: 33: PWM5DCH = 0;
  8433  074C  019D               	clrf	29	;volatile
  8434  074D                     l2666:	
  8435                           
  8436                           ;LED_INTERFACE.c: 34: };LED_INTERFACE.c: 35: if (color == 1) {
  8437  074D  0140               	movlb	0	; select bank0
  8438  074E  036D               	decf	_color,w
  8439  074F  1D03               	btfss	3,2
  8440  0750  2F52               	goto	u2121
  8441  0751  2F53               	goto	u2120
  8442  0752                     u2121:	
  8443  0752  2F5D               	goto	l2672
  8444  0753                     u2120:	
  8445  0753                     l2668:	
  8446                           
  8447                           ;LED_INTERFACE.c: 36: PWM3DCH = 0;
  8448  0753  0146               	movlb	6	; select bank6
  8449  0754  0195               	clrf	21	;volatile
  8450  0755                     l2670:	
  8451                           
  8452                           ;LED_INTERFACE.c: 37: PWM4DCH = 255 - i;
  8453  0755  0140               	movlb	0	; select bank0
  8454  0756  096F               	comf	_i,w
  8455  0757  0146               	movlb	6	; select bank6
  8456  0758  0099               	movwf	25	;volatile
  8457                           
  8458                           ;LED_INTERFACE.c: 38: PWM5DCH = i;
  8459  0759  0140               	movlb	0	; select bank0
  8460  075A  086F               	movf	_i,w
  8461  075B  0146               	movlb	6	; select bank6
  8462  075C  009D               	movwf	29	;volatile
  8463  075D                     l2672:	
  8464                           
  8465                           ;LED_INTERFACE.c: 39: };LED_INTERFACE.c: 40: if (color == 2) {
  8466  075D  3002               	movlw	2
  8467  075E  0140               	movlb	0	; select bank0
  8468  075F  066D               	xorwf	_color,w
  8469  0760  1D03               	btfss	3,2
  8470  0761  2F63               	goto	u2131
  8471  0762  2F64               	goto	u2130
  8472  0763                     u2131:	
  8473  0763  2F6C               	goto	l494
  8474  0764                     u2130:	
  8475  0764                     l2674:	
  8476                           
  8477                           ;LED_INTERFACE.c: 41: PWM3DCH = i;
  8478  0764  086F               	movf	_i,w
  8479  0765  0146               	movlb	6	; select bank6
  8480  0766  0095               	movwf	21	;volatile
  8481  0767                     l2676:	
  8482                           
  8483                           ;LED_INTERFACE.c: 42: PWM4DCH = 0;
  8484  0767  0199               	clrf	25	;volatile
  8485                           
  8486                           ;LED_INTERFACE.c: 43: PWM5DCH = 255 - i;
  8487  0768  0140               	movlb	0	; select bank0
  8488  0769  096F               	comf	_i,w
  8489  076A  0146               	movlb	6	; select bank6
  8490  076B  009D               	movwf	29	;volatile
  8491  076C                     l494:	
  8492  076C  0008               	return
  8493  076D                     __end_of_RGB_fade:	
  8494                           
  8495                           	psect	text28
  8496  0623                     __ptext28:	
  8497 ;; *************** function _chrg_led *****************
  8498 ;; Defined at:
  8499 ;;		line 90 in file "LED_INTERFACE.c"
  8500 ;; Parameters:    Size  Location     Type
  8501 ;;		None
  8502 ;; Auto vars:     Size  Location     Type
  8503 ;;		None
  8504 ;; Return value:  Size  Location     Type
  8505 ;;                  1    wreg      void 
  8506 ;; Registers used:
  8507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8508 ;; Tracked objects:
  8509 ;;		On entry : 0/0
  8510 ;;		On exit  : 0/0
  8511 ;;		Unchanged: 0/0
  8512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8513 ;;      Params:         0       0       0       0       0       0       0       0
  8514 ;;      Locals:         0       0       0       0       0       0       0       0
  8515 ;;      Temps:          1       0       0       0       0       0       0       0
  8516 ;;      Totals:         1       0       0       0       0       0       0       0
  8517 ;;Total ram usage:        1 bytes
  8518 ;; Hardware stack levels used:    1
  8519 ;; Hardware stack levels required when called:    2
  8520 ;; This function calls:
  8521 ;;		_get_time
  8522 ;;		_timer_diff
  8523 ;; This function is called by:
  8524 ;;		_main
  8525 ;; This function uses a non-reentrant model
  8526 ;;
  8527                           
  8528                           
  8529                           ;psect for function _chrg_led
  8530  0623                     _chrg_led:	
  8531  0623                     l2966:	
  8532                           ;incstack = 0
  8533                           ; Regs used in _chrg_led: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8534                           
  8535                           
  8536                           ;LED_INTERFACE.c: 92: if(timer_diff(chrg_delay) >= 2) {
  8537  0623  0142               	movlb	2	; select bank2
  8538  0624  0827               	movf	(_chrg_delay+3)^(0+256),w
  8539  0625  00F3               	movwf	timer_diff@t+3
  8540  0626  0826               	movf	(_chrg_delay+2)^(0+256),w
  8541  0627  00F2               	movwf	timer_diff@t+2
  8542  0628  0825               	movf	(_chrg_delay+1)^(0+256),w
  8543  0629  00F1               	movwf	timer_diff@t+1
  8544  062A  0824               	movf	_chrg_delay^(0+256),w
  8545  062B  00F0               	movwf	timer_diff@t
  8546  062C  318B  23C3  3186   	fcall	_timer_diff
  8547  062F  0873               	movf	?_timer_diff+3,w
  8548  0630  1D03               	btfss	3,2
  8549  0631  2E3E               	goto	u2450
  8550  0632  0872               	movf	?_timer_diff+2,w
  8551  0633  1D03               	btfss	3,2
  8552  0634  2E3E               	goto	u2450
  8553  0635  0871               	movf	?_timer_diff+1,w
  8554  0636  1D03               	btfss	3,2
  8555  0637  2E3E               	goto	u2450
  8556  0638  3002               	movlw	2
  8557  0639  0270               	subwf	?_timer_diff,w
  8558  063A  1C03               	btfss	3,0
  8559  063B  2E3D               	goto	u2451
  8560  063C  2E3E               	goto	u2450
  8561  063D                     u2451:	
  8562  063D  2E93               	goto	l524
  8563  063E                     u2450:	
  8564  063E                     l2968:	
  8565                           
  8566                           ;LED_INTERFACE.c: 93: chrg_delay = get_time();
  8567  063E  318B  236E  3186   	fcall	_get_time
  8568  0641  0873               	movf	?_get_time+3,w
  8569  0642  0142               	movlb	2	; select bank2
  8570  0643  00A7               	movwf	(_chrg_delay+3)^(0+256)
  8571  0644  0872               	movf	?_get_time+2,w
  8572  0645  00A6               	movwf	(_chrg_delay+2)^(0+256)
  8573  0646  0871               	movf	?_get_time+1,w
  8574  0647  00A5               	movwf	(_chrg_delay+1)^(0+256)
  8575  0648  0870               	movf	?_get_time,w
  8576  0649  00A4               	movwf	_chrg_delay^(0+256)
  8577  064A                     l2970:	
  8578                           
  8579                           ;LED_INTERFACE.c: 94: if(c >= 255) {
  8580  064A  0140               	movlb	0	; select bank0
  8581  064B  0A6E               	incf	_c,w
  8582  064C  1D03               	btfss	3,2
  8583  064D  2E4F               	goto	u2461
  8584  064E  2E50               	goto	u2460
  8585  064F                     u2461:	
  8586  064F  2E51               	goto	l2974
  8587  0650                     u2460:	
  8588  0650                     l2972:	
  8589                           
  8590                           ;LED_INTERFACE.c: 95: dir = 0;
  8591  0650  01EC               	clrf	_dir
  8592  0651                     l2974:	
  8593                           
  8594                           ;LED_INTERFACE.c: 96: };LED_INTERFACE.c: 97: if(c <= 1) {
  8595  0651  3002               	movlw	2
  8596  0652  026E               	subwf	_c,w
  8597  0653  1803               	skipnc
  8598  0654  2E56               	goto	u2471
  8599  0655  2E57               	goto	u2470
  8600  0656                     u2471:	
  8601  0656  2E59               	goto	l2978
  8602  0657                     u2470:	
  8603  0657                     l2976:	
  8604                           
  8605                           ;LED_INTERFACE.c: 98: dir = 1;
  8606  0657  01EC               	clrf	_dir
  8607  0658  0AEC               	incf	_dir,f
  8608  0659                     l2978:	
  8609                           
  8610                           ;LED_INTERFACE.c: 99: };LED_INTERFACE.c: 100: if(dir == 1) {
  8611  0659  036C               	decf	_dir,w
  8612  065A  1D03               	btfss	3,2
  8613  065B  2E5D               	goto	u2481
  8614  065C  2E5E               	goto	u2480
  8615  065D                     u2481:	
  8616  065D  2E63               	goto	l2982
  8617  065E                     u2480:	
  8618  065E                     l2980:	
  8619                           
  8620                           ;LED_INTERFACE.c: 101: c++;
  8621  065E  3001               	movlw	1
  8622  065F  00F8               	movwf	??_chrg_led
  8623  0660  0878               	movf	??_chrg_led,w
  8624  0661  07EE               	addwf	_c,f
  8625                           
  8626                           ;LED_INTERFACE.c: 102: }
  8627  0662  2E87               	goto	l3004
  8628  0663                     l2982:	
  8629                           
  8630                           ;LED_INTERFACE.c: 103: else if(dir == 0) {
  8631  0663  086C               	movf	_dir,w
  8632  0664  1D03               	btfss	3,2
  8633  0665  2E67               	goto	u2491
  8634  0666  2E68               	goto	u2490
  8635  0667                     u2491:	
  8636  0667  2E87               	goto	l3004
  8637  0668                     u2490:	
  8638  0668                     l2984:	
  8639                           
  8640                           ;LED_INTERFACE.c: 104: c--;
  8641  0668  3001               	movlw	1
  8642  0669  02EE               	subwf	_c,f
  8643  066A  2E87               	goto	l3004
  8644  066B                     l2986:	
  8645                           
  8646                           ;LED_INTERFACE.c: 110: PWM3DCH = 0;
  8647  066B  0146               	movlb	6	; select bank6
  8648  066C  0195               	clrf	21	;volatile
  8649                           
  8650                           ;LED_INTERFACE.c: 111: PWM4DCH = 0;
  8651  066D  0199               	clrf	25	;volatile
  8652  066E                     l2988:	
  8653                           
  8654                           ;LED_INTERFACE.c: 112: PWM5DCH = c;
  8655  066E  0140               	movlb	0	; select bank0
  8656  066F  086E               	movf	_c,w
  8657  0670  0146               	movlb	6	; select bank6
  8658  0671  009D               	movwf	29	;volatile
  8659                           
  8660                           ;LED_INTERFACE.c: 113: break;
  8661  0672  2E93               	goto	l524
  8662  0673                     l2990:	
  8663                           
  8664                           ;LED_INTERFACE.c: 116: PWM3DCH = 0;
  8665  0673  0146               	movlb	6	; select bank6
  8666  0674  0195               	clrf	21	;volatile
  8667  0675                     l2992:	
  8668                           
  8669                           ;LED_INTERFACE.c: 117: PWM4DCH = c;
  8670  0675  0140               	movlb	0	; select bank0
  8671  0676  086E               	movf	_c,w
  8672  0677  0146               	movlb	6	; select bank6
  8673  0678  0099               	movwf	25	;volatile
  8674  0679  2E6E               	goto	l2988
  8675  067A                     l2996:	
  8676                           
  8677                           ;LED_INTERFACE.c: 122: PWM3DCH = 0;
  8678  067A  0146               	movlb	6	; select bank6
  8679  067B  0195               	clrf	21	;volatile
  8680  067C                     l2998:	
  8681                           
  8682                           ;LED_INTERFACE.c: 123: PWM4DCH = c;
  8683  067C  0140               	movlb	0	; select bank0
  8684  067D  086E               	movf	_c,w
  8685  067E  0146               	movlb	6	; select bank6
  8686  067F  0099               	movwf	25	;volatile
  8687  0680                     l3000:	
  8688                           
  8689                           ;LED_INTERFACE.c: 124: PWM5DCH = 0;
  8690  0680  019D               	clrf	29	;volatile
  8691                           
  8692                           ;LED_INTERFACE.c: 125: break;
  8693  0681  2E93               	goto	l524
  8694  0682                     l3002:	
  8695                           
  8696                           ;LED_INTERFACE.c: 127: PWM3DCH = 0;
  8697  0682  0146               	movlb	6	; select bank6
  8698  0683  0195               	clrf	21	;volatile
  8699                           
  8700                           ;LED_INTERFACE.c: 128: PWM4DCH = 0;
  8701  0684  0199               	clrf	25	;volatile
  8702                           
  8703                           ;LED_INTERFACE.c: 129: PWM5DCH = 0;
  8704  0685  019D               	clrf	29	;volatile
  8705                           
  8706                           ;LED_INTERFACE.c: 130: }
  8707  0686  2E93               	goto	l524
  8708  0687                     l3004:	
  8709  0687  0141               	movlb	1	; select bank1
  8710  0688  084B               	movf	(_VBUS_CHRG_STATE^(0+128)+1),w
  8711                           
  8712                           ; Switch size 1, requested type "simple"
  8713                           ; Number of cases is 3, Range of values is 1 to 3
  8714                           ; switch strategies available:
  8715                           ; Name         Instructions Cycles
  8716                           ; simple_byte           10     6 (average)
  8717                           ; direct_byte           15     9 (fixed)
  8718                           ; jumptable            263     9 (fixed)
  8719                           ;	Chosen strategy is simple_byte
  8720  0689  3A01               	xorlw	1	; case 1
  8721  068A  1903               	skipnz
  8722  068B  2E6B               	goto	l2986
  8723  068C  3A03               	xorlw	3	; case 2
  8724  068D  1903               	skipnz
  8725  068E  2E73               	goto	l2990
  8726  068F  3A01               	xorlw	1	; case 3
  8727  0690  1903               	skipnz
  8728  0691  2E7A               	goto	l2996
  8729  0692  2E82               	goto	l3002
  8730  0693                     l524:	
  8731  0693  0008               	return
  8732  0694                     __end_of_chrg_led:	
  8733                           
  8734                           	psect	text29
  8735  0BD9                     __ptext29:	
  8736 ;; *************** function _PWM_power_down *****************
  8737 ;; Defined at:
  8738 ;;		line 59 in file "PWM.c"
  8739 ;; Parameters:    Size  Location     Type
  8740 ;;		None
  8741 ;; Auto vars:     Size  Location     Type
  8742 ;;		None
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  1    wreg      void 
  8745 ;; Registers used:
  8746 ;;		wreg, status,2, status,0, pclath, cstack
  8747 ;; Tracked objects:
  8748 ;;		On entry : 0/0
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8752 ;;      Params:         0       0       0       0       0       0       0       0
  8753 ;;      Locals:         0       0       0       0       0       0       0       0
  8754 ;;      Temps:          0       0       0       0       0       0       0       0
  8755 ;;      Totals:         0       0       0       0       0       0       0       0
  8756 ;;Total ram usage:        0 bytes
  8757 ;; Hardware stack levels used:    1
  8758 ;; Hardware stack levels required when called:    2
  8759 ;; This function calls:
  8760 ;;		_PPS_lock
  8761 ;;		_PPS_unlock
  8762 ;; This function is called by:
  8763 ;;		_main
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767                           
  8768                           ;psect for function _PWM_power_down
  8769  0BD9                     _PWM_power_down:	
  8770  0BD9                     l3044:	
  8771                           ;incstack = 0
  8772                           ; Regs used in _PWM_power_down: [wreg+status,2+status,0+pclath+cstack]
  8773                           
  8774                           
  8775                           ;PWM.c: 61: PWM3DCH = 0;
  8776  0BD9  0146               	movlb	6	; select bank6
  8777  0BDA  0195               	clrf	21	;volatile
  8778                           
  8779                           ;PWM.c: 62: PWM4DCH = 0;
  8780  0BDB  0199               	clrf	25	;volatile
  8781                           
  8782                           ;PWM.c: 63: PWM5DCH = 0;
  8783  0BDC  019D               	clrf	29	;volatile
  8784  0BDD                     l3046:	
  8785                           
  8786                           ;PWM.c: 64: PWM3CONbits.EN = 0;
  8787  0BDD  1396               	bcf	22,7	;volatile
  8788  0BDE                     l3048:	
  8789                           
  8790                           ;PWM.c: 65: PWM4CONbits.EN = 0;
  8791  0BDE  139A               	bcf	26,7	;volatile
  8792  0BDF                     l3050:	
  8793                           
  8794                           ;PWM.c: 66: PWM5CONbits.EN = 0;
  8795  0BDF  139E               	bcf	30,7	;volatile
  8796  0BE0                     l3052:	
  8797                           
  8798                           ;PWM.c: 68: RC2 = 1;
  8799  0BE0  0140               	movlb	0	; select bank0
  8800  0BE1  150E               	bsf	14,2	;volatile
  8801  0BE2                     l3054:	
  8802                           
  8803                           ;PWM.c: 69: RC3 = 1;
  8804  0BE2  158E               	bsf	14,3	;volatile
  8805  0BE3                     l3056:	
  8806                           
  8807                           ;PWM.c: 70: RC4 = 1;
  8808  0BE3  160E               	bsf	14,4	;volatile
  8809  0BE4                     l3058:	
  8810                           
  8811                           ;PWM.c: 72: PPS_unlock();
  8812  0BE4  318B  234F  318B   	fcall	_PPS_unlock
  8813  0BE7                     l3060:	
  8814                           
  8815                           ;PWM.c: 73: RC2PPS = 0x00;
  8816  0BE7  017E               	movlb	62	; select bank62
  8817  0BE8  01A2               	clrf	34	;volatile
  8818  0BE9                     l3062:	
  8819                           
  8820                           ;PWM.c: 74: RC3PPS = 0x00;
  8821  0BE9  01A3               	clrf	35	;volatile
  8822  0BEA                     l3064:	
  8823                           
  8824                           ;PWM.c: 75: RC4PPS = 0x00;
  8825  0BEA  01A4               	clrf	36	;volatile
  8826                           
  8827                           ;PWM.c: 76: PPS_lock();
  8828  0BEB  318B  235E  318B   	fcall	_PPS_lock
  8829  0BEE                     l247:	
  8830  0BEE  0008               	return
  8831  0BEF                     __end_of_PWM_power_down:	
  8832                           
  8833                           	psect	text30
  8834  0E74                     __ptext30:	
  8835 ;; *************** function _PWM_INIT *****************
  8836 ;; Defined at:
  8837 ;;		line 11 in file "PWM.c"
  8838 ;; Parameters:    Size  Location     Type
  8839 ;;		None
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;		None
  8842 ;; Return value:  Size  Location     Type
  8843 ;;                  1    wreg      void 
  8844 ;; Registers used:
  8845 ;;		wreg, status,2, status,0, pclath, cstack
  8846 ;; Tracked objects:
  8847 ;;		On entry : 0/0
  8848 ;;		On exit  : 0/0
  8849 ;;		Unchanged: 0/0
  8850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8851 ;;      Params:         0       0       0       0       0       0       0       0
  8852 ;;      Locals:         0       0       0       0       0       0       0       0
  8853 ;;      Temps:          0       0       0       0       0       0       0       0
  8854 ;;      Totals:         0       0       0       0       0       0       0       0
  8855 ;;Total ram usage:        0 bytes
  8856 ;; Hardware stack levels used:    1
  8857 ;; Hardware stack levels required when called:    2
  8858 ;; This function calls:
  8859 ;;		_PPS_lock
  8860 ;;		_PPS_unlock
  8861 ;; This function is called by:
  8862 ;;		_main
  8863 ;; This function uses a non-reentrant model
  8864 ;;
  8865                           
  8866                           
  8867                           ;psect for function _PWM_INIT
  8868  0E74                     _PWM_INIT:	
  8869  0E74                     l2858:	
  8870                           ;incstack = 0
  8871                           ; Regs used in _PWM_INIT: [wreg+status,2+status,0+pclath+cstack]
  8872                           
  8873                           
  8874                           ;PWM.c: 13: PPS_unlock();
  8875  0E74  318B  234F  318E   	fcall	_PPS_unlock
  8876  0E77                     l2860:	
  8877                           
  8878                           ;PWM.c: 14: RC2PPS = 0x0B;
  8879  0E77  300B               	movlw	11
  8880  0E78  017E               	movlb	62	; select bank62
  8881  0E79  00A2               	movwf	34	;volatile
  8882  0E7A                     l2862:	
  8883                           
  8884                           ;PWM.c: 15: RC3PPS = 0x0C;
  8885  0E7A  300C               	movlw	12
  8886  0E7B  00A3               	movwf	35	;volatile
  8887  0E7C                     l2864:	
  8888                           
  8889                           ;PWM.c: 16: RC4PPS = 0x0D;
  8890  0E7C  300D               	movlw	13
  8891  0E7D  00A4               	movwf	36	;volatile
  8892  0E7E                     l2866:	
  8893                           
  8894                           ;PWM.c: 17: PPS_lock();
  8895  0E7E  318B  235E  318E   	fcall	_PPS_lock
  8896  0E81                     l2868:	
  8897                           
  8898                           ;PWM.c: 19: PWM3CON = 0;
  8899  0E81  0146               	movlb	6	; select bank6
  8900  0E82  0196               	clrf	22	;volatile
  8901  0E83                     l2870:	
  8902                           
  8903                           ;PWM.c: 20: PR2 = 255;
  8904  0E83  30FF               	movlw	255
  8905  0E84  0145               	movlb	5	; select bank5
  8906  0E85  008D               	movwf	13	;volatile
  8907                           
  8908                           ;PWM.c: 21: PWM3DCH = 0;
  8909  0E86  0146               	movlb	6	; select bank6
  8910  0E87  0195               	clrf	21	;volatile
  8911  0E88                     l2872:	
  8912                           
  8913                           ;PWM.c: 22: PWM3DCL = 0b00111111;
  8914  0E88  303F               	movlw	63
  8915  0E89  0094               	movwf	20	;volatile
  8916  0E8A                     l2874:	
  8917                           
  8918                           ;PWM.c: 23: PWM3CON = 0b10000000;
  8919  0E8A  3080               	movlw	128
  8920  0E8B  0096               	movwf	22	;volatile
  8921  0E8C                     l2876:	
  8922                           
  8923                           ;PWM.c: 24: TRISCbits.TRISC2 = 0;
  8924  0E8C  0140               	movlb	0	; select bank0
  8925  0E8D  1114               	bcf	20,2	;volatile
  8926  0E8E                     l2878:	
  8927                           
  8928                           ;PWM.c: 25: PWM3CON = 0b11110000;
  8929  0E8E  30F0               	movlw	240
  8930  0E8F  0146               	movlb	6	; select bank6
  8931  0E90  0096               	movwf	22	;volatile
  8932  0E91                     l2880:	
  8933                           
  8934                           ;PWM.c: 27: PWM4CON = 0;
  8935  0E91  019A               	clrf	26	;volatile
  8936  0E92                     l2882:	
  8937                           
  8938                           ;PWM.c: 28: PWM4DCH = 0;
  8939  0E92  0199               	clrf	25	;volatile
  8940  0E93                     l2884:	
  8941                           
  8942                           ;PWM.c: 29: PWM4DCL = 0b00111111;
  8943  0E93  303F               	movlw	63
  8944  0E94  0098               	movwf	24	;volatile
  8945  0E95                     l2886:	
  8946                           
  8947                           ;PWM.c: 30: PWM4CON = 0b10000000;
  8948  0E95  3080               	movlw	128
  8949  0E96  009A               	movwf	26	;volatile
  8950  0E97                     l2888:	
  8951                           
  8952                           ;PWM.c: 31: TRISCbits.TRISC3 = 0;
  8953  0E97  0140               	movlb	0	; select bank0
  8954  0E98  1194               	bcf	20,3	;volatile
  8955  0E99                     l2890:	
  8956                           
  8957                           ;PWM.c: 32: PWM4CON = 0b11110000;
  8958  0E99  30F0               	movlw	240
  8959  0E9A  0146               	movlb	6	; select bank6
  8960  0E9B  009A               	movwf	26	;volatile
  8961                           
  8962                           ;PWM.c: 34: PWM5CON = 0;
  8963  0E9C  019E               	clrf	30	;volatile
  8964                           
  8965                           ;PWM.c: 35: PWM5DCH = 0;
  8966  0E9D  019D               	clrf	29	;volatile
  8967  0E9E                     l2892:	
  8968                           
  8969                           ;PWM.c: 36: PWM5DCL = 0b00111111;
  8970  0E9E  303F               	movlw	63
  8971  0E9F  009C               	movwf	28	;volatile
  8972  0EA0                     l2894:	
  8973                           
  8974                           ;PWM.c: 37: PWM5CON = 0b10000000;
  8975  0EA0  3080               	movlw	128
  8976  0EA1  009E               	movwf	30	;volatile
  8977  0EA2                     l2896:	
  8978                           
  8979                           ;PWM.c: 38: TRISCbits.TRISC4 = 0;
  8980  0EA2  0140               	movlb	0	; select bank0
  8981  0EA3  1214               	bcf	20,4	;volatile
  8982  0EA4                     l2898:	
  8983                           
  8984                           ;PWM.c: 39: PWM5CON = 0b11110000;
  8985  0EA4  30F0               	movlw	240
  8986  0EA5  0146               	movlb	6	; select bank6
  8987  0EA6  009E               	movwf	30	;volatile
  8988  0EA7                     l2900:	
  8989                           
  8990                           ;PWM.c: 42: T2CLKCON = 0b00000011;
  8991  0EA7  3003               	movlw	3
  8992  0EA8  0145               	movlb	5	; select bank5
  8993  0EA9  0090               	movwf	16	;volatile
  8994  0EAA                     l2902:	
  8995                           
  8996                           ;PWM.c: 43: TMR2ON = 1;
  8997  0EAA  178E               	bsf	14,7	;volatile
  8998  0EAB                     l2904:	
  8999                           
  9000                           ;PWM.c: 44: T2CKPS0 = 0;
  9001  0EAB  120E               	bcf	14,4	;volatile
  9002  0EAC                     l2906:	
  9003                           
  9004                           ;PWM.c: 45: T2CKPS1 = 0;
  9005  0EAC  128E               	bcf	14,5	;volatile
  9006  0EAD                     l2908:	
  9007                           
  9008                           ;PWM.c: 46: T2CKPS2 = 1;
  9009  0EAD  170E               	bsf	14,6	;volatile
  9010  0EAE                     l2910:	
  9011                           
  9012                           ;PWM.c: 48: T2OUTPS0 = 1;
  9013  0EAE  140E               	bsf	14,0	;volatile
  9014  0EAF                     l2912:	
  9015                           
  9016                           ;PWM.c: 49: T2OUTPS1 = 1;
  9017  0EAF  148E               	bsf	14,1	;volatile
  9018  0EB0                     l2914:	
  9019                           
  9020                           ;PWM.c: 50: T2OUTPS2 = 1;
  9021  0EB0  150E               	bsf	14,2	;volatile
  9022  0EB1                     l2916:	
  9023                           
  9024                           ;PWM.c: 51: T2OUTPS3 = 1;
  9025  0EB1  158E               	bsf	14,3	;volatile
  9026                           
  9027                           ;PWM.c: 53: TMR2 = 0;
  9028  0EB2  018C               	clrf	12	;volatile
  9029  0EB3                     l2918:	
  9030                           
  9031                           ;PWM.c: 54: PR2 = 255;
  9032  0EB3  30FF               	movlw	255
  9033  0EB4  008D               	movwf	13	;volatile
  9034  0EB5                     l2920:	
  9035                           
  9036                           ;PWM.c: 55: TMR2IF = 0;
  9037  0EB5  014E               	movlb	14	; select bank14
  9038  0EB6  1090               	bcf	16,1	;volatile
  9039  0EB7                     l244:	
  9040  0EB7  0008               	return
  9041  0EB8                     __end_of_PWM_INIT:	
  9042                           
  9043                           	psect	text31
  9044  0B4F                     __ptext31:	
  9045 ;; *************** function _PPS_unlock *****************
  9046 ;; Defined at:
  9047 ;;		line 11 in file "PPS.c"
  9048 ;; Parameters:    Size  Location     Type
  9049 ;;		None
  9050 ;; Auto vars:     Size  Location     Type
  9051 ;;		None
  9052 ;; Return value:  Size  Location     Type
  9053 ;;                  1    wreg      void 
  9054 ;; Registers used:
  9055 ;;		wreg, status,2
  9056 ;; Tracked objects:
  9057 ;;		On entry : 0/0
  9058 ;;		On exit  : 0/0
  9059 ;;		Unchanged: 0/0
  9060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9061 ;;      Params:         0       0       0       0       0       0       0       0
  9062 ;;      Locals:         0       0       0       0       0       0       0       0
  9063 ;;      Temps:          0       0       0       0       0       0       0       0
  9064 ;;      Totals:         0       0       0       0       0       0       0       0
  9065 ;;Total ram usage:        0 bytes
  9066 ;; Hardware stack levels used:    1
  9067 ;; Hardware stack levels required when called:    1
  9068 ;; This function calls:
  9069 ;;		Nothing
  9070 ;; This function is called by:
  9071 ;;		_main
  9072 ;;		_PWM_INIT
  9073 ;;		_PWM_power_down
  9074 ;; This function uses a non-reentrant model
  9075 ;;
  9076                           
  9077                           
  9078                           ;psect for function _PPS_unlock
  9079  0B4F                     _PPS_unlock:	
  9080  0B4F                     l2632:	
  9081                           ;incstack = 0
  9082                           ; Regs used in _PPS_unlock: [wreg+status,2]
  9083                           
  9084                           
  9085                           ;PPS.c: 12: PPSLOCK = 0x55;
  9086  0B4F  3055               	movlw	85
  9087  0B50  017D               	movlb	61	; select bank61
  9088  0B51  008F               	movwf	15	;volsfr
  9089                           
  9090                           ;PPS.c: 13: PPSLOCK = 0xAA;
  9091  0B52  30AA               	movlw	170
  9092  0B53  008F               	movwf	15	;volsfr
  9093  0B54                     l2634:	
  9094                           
  9095                           ;PPS.c: 14: PPSLOCK = 0;
  9096  0B54  018F               	clrf	15	;volsfr
  9097  0B55                     l252:	
  9098  0B55  0008               	return
  9099  0B56                     __end_of_PPS_unlock:	
  9100                           
  9101                           	psect	text32
  9102  0B5E                     __ptext32:	
  9103 ;; *************** function _PPS_lock *****************
  9104 ;; Defined at:
  9105 ;;		line 17 in file "PPS.c"
  9106 ;; Parameters:    Size  Location     Type
  9107 ;;		None
  9108 ;; Auto vars:     Size  Location     Type
  9109 ;;		None
  9110 ;; Return value:  Size  Location     Type
  9111 ;;                  1    wreg      void 
  9112 ;; Registers used:
  9113 ;;		wreg
  9114 ;; Tracked objects:
  9115 ;;		On entry : 0/0
  9116 ;;		On exit  : 0/0
  9117 ;;		Unchanged: 0/0
  9118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9119 ;;      Params:         0       0       0       0       0       0       0       0
  9120 ;;      Locals:         0       0       0       0       0       0       0       0
  9121 ;;      Temps:          0       0       0       0       0       0       0       0
  9122 ;;      Totals:         0       0       0       0       0       0       0       0
  9123 ;;Total ram usage:        0 bytes
  9124 ;; Hardware stack levels used:    1
  9125 ;; Hardware stack levels required when called:    1
  9126 ;; This function calls:
  9127 ;;		Nothing
  9128 ;; This function is called by:
  9129 ;;		_main
  9130 ;;		_PWM_INIT
  9131 ;;		_PWM_power_down
  9132 ;; This function uses a non-reentrant model
  9133 ;;
  9134                           
  9135                           
  9136                           ;psect for function _PPS_lock
  9137  0B5E                     _PPS_lock:	
  9138  0B5E                     l2636:	
  9139                           ;incstack = 0
  9140                           ; Regs used in _PPS_lock: [wreg]
  9141                           
  9142                           
  9143                           ;PPS.c: 18: PPSLOCK = 0x55;
  9144  0B5E  3055               	movlw	85
  9145  0B5F  017D               	movlb	61	; select bank61
  9146  0B60  008F               	movwf	15	;volsfr
  9147                           
  9148                           ;PPS.c: 19: PPSLOCK = 0xAA;
  9149  0B61  30AA               	movlw	170
  9150  0B62  008F               	movwf	15	;volsfr
  9151                           
  9152                           ;PPS.c: 20: PPSLOCK = 1;
  9153  0B63  3001               	movlw	1
  9154  0B64  008F               	movwf	15	;volsfr
  9155  0B65                     l255:	
  9156  0B65  0008               	return
  9157  0B66                     __end_of_PPS_lock:	
  9158                           
  9159                           	psect	text33
  9160  0D9B                     __ptext33:	
  9161 ;; *************** function _PIC_SETUP *****************
  9162 ;; Defined at:
  9163 ;;		line 21 in file "main.c"
  9164 ;; Parameters:    Size  Location     Type
  9165 ;;		None
  9166 ;; Auto vars:     Size  Location     Type
  9167 ;;		None
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  1    wreg      void 
  9170 ;; Registers used:
  9171 ;;		wreg, status,2, status,0
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9177 ;;      Params:         0       0       0       0       0       0       0       0
  9178 ;;      Locals:         0       0       0       0       0       0       0       0
  9179 ;;      Temps:          0       0       0       0       0       0       0       0
  9180 ;;      Totals:         0       0       0       0       0       0       0       0
  9181 ;;Total ram usage:        0 bytes
  9182 ;; Hardware stack levels used:    1
  9183 ;; Hardware stack levels required when called:    1
  9184 ;; This function calls:
  9185 ;;		Nothing
  9186 ;; This function is called by:
  9187 ;;		_main
  9188 ;; This function uses a non-reentrant model
  9189 ;;
  9190                           
  9191                           
  9192                           ;psect for function _PIC_SETUP
  9193  0D9B                     _PIC_SETUP:	
  9194  0D9B                     l2770:	
  9195                           ;incstack = 0
  9196                           ; Regs used in _PIC_SETUP: [wreg+status,2+status,0]
  9197                           
  9198                           
  9199                           ;main.c: 23: CPUDOZEbits.IDLEN = 0;
  9200  0D9B  0151               	movlb	17	; select bank17
  9201  0D9C  138C               	bcf	12,7	;volatile
  9202  0D9D                     l2772:	
  9203                           
  9204                           ;main.c: 24: VREGCON = 0b00000011;
  9205  0D9D  3003               	movlw	3
  9206  0D9E  0150               	movlb	16	; select bank16
  9207  0D9F  0092               	movwf	18	;volatile
  9208                           
  9209                           ;main.c: 27: TRISA = 0xFF;
  9210  0DA0  30FF               	movlw	255
  9211  0DA1  0140               	movlb	0	; select bank0
  9212  0DA2  0092               	movwf	18	;volatile
  9213                           
  9214                           ;main.c: 28: TRISC = 0xFF;
  9215  0DA3  30FF               	movlw	255
  9216  0DA4  0094               	movwf	20	;volatile
  9217  0DA5                     l2774:	
  9218                           
  9219                           ;main.c: 29: ANSELA = 0;
  9220  0DA5  017E               	movlb	62	; select bank62
  9221  0DA6  01B8               	clrf	56	;volatile
  9222  0DA7                     l2776:	
  9223                           
  9224                           ;main.c: 30: ANSELC = 0;
  9225  0DA7  01CE               	clrf	78	;volatile
  9226  0DA8                     l2778:	
  9227                           
  9228                           ;main.c: 31: ANSELAbits.ANSA4 = 1;
  9229  0DA8  1638               	bsf	56,4	;volatile
  9230                           
  9231                           ;main.c: 32: WPUA = 0b00100000;
  9232  0DA9  3020               	movlw	32
  9233  0DAA  00B9               	movwf	57	;volatile
  9234  0DAB                     l2780:	
  9235                           
  9236                           ;main.c: 35: T1CONbits.CKPS = 0b00;
  9237  0DAB  30CF               	movlw	-49
  9238  0DAC  0144               	movlb	4	; select bank4
  9239  0DAD  058E               	andwf	14,f	;volatile
  9240  0DAE                     l2782:	
  9241                           
  9242                           ;main.c: 36: T1CONbits.nSYNC = 0;
  9243  0DAE  110E               	bcf	14,2	;volatile
  9244  0DAF                     l2784:	
  9245                           
  9246                           ;main.c: 37: T1CONbits.RD16 = 1;
  9247  0DAF  148E               	bsf	14,1	;volatile
  9248  0DB0                     l2786:	
  9249                           
  9250                           ;main.c: 38: T1GCONbits.GE = 0;
  9251  0DB0  138F               	bcf	15,7	;volatile
  9252  0DB1                     l2788:	
  9253                           
  9254                           ;main.c: 39: T1CLK = 0b00000100;
  9255  0DB1  3004               	movlw	4
  9256  0DB2  0091               	movwf	17	;volatile
  9257  0DB3                     l2790:	
  9258                           
  9259                           ;main.c: 40: TMR1 = 65228;
  9260  0DB3  30FE               	movlw	254
  9261  0DB4  008D               	movwf	13	;volatile
  9262  0DB5  30CC               	movlw	204
  9263  0DB6  008C               	movwf	12	;volatile
  9264  0DB7                     l2792:	
  9265                           
  9266                           ;main.c: 41: PIE4bits.TMR1IE = 1;
  9267  0DB7  014E               	movlb	14	; select bank14
  9268  0DB8  141A               	bsf	26,0	;volatile
  9269  0DB9                     l2794:	
  9270                           
  9271                           ;main.c: 42: T1CONbits.ON = 1;
  9272  0DB9  0144               	movlb	4	; select bank4
  9273  0DBA  140E               	bsf	14,0	;volatile
  9274  0DBB                     l2796:	
  9275                           
  9276                           ;main.c: 45: PIE0bits.IOCIE = 1;
  9277  0DBB  014E               	movlb	14	; select bank14
  9278  0DBC  1616               	bsf	22,4	;volatile
  9279  0DBD                     l2798:	
  9280                           
  9281                           ;main.c: 46: IOCAP = 0b00100000;
  9282  0DBD  3020               	movlw	32
  9283  0DBE  017E               	movlb	62	; select bank62
  9284  0DBF  00BD               	movwf	61	;volatile
  9285  0DC0                     l2800:	
  9286                           
  9287                           ;main.c: 47: IOCAN = 0b00100000;
  9288  0DC0  3020               	movlw	32
  9289  0DC1  00BE               	movwf	62	;volatile
  9290  0DC2                     l2802:	
  9291                           
  9292                           ;main.c: 48: IOCAF = 0x00;
  9293  0DC2  01BF               	clrf	63	;volatile
  9294  0DC3                     l2804:	
  9295                           
  9296                           ;main.c: 50: INTCONbits.GIE = 1;
  9297  0DC3  178B               	bsf	11,7	;volatile
  9298  0DC4                     l2806:	
  9299                           
  9300                           ;main.c: 51: INTCONbits.PEIE = 1;
  9301  0DC4  170B               	bsf	11,6	;volatile
  9302  0DC5                     l105:	
  9303  0DC5  0008               	return
  9304  0DC6                     __end_of_PIC_SETUP:	
  9305                           
  9306                           	psect	text34
  9307  0EB8                     __ptext34:	
  9308 ;; *************** function _I2C_bus_reset *****************
  9309 ;; Defined at:
  9310 ;;		line 12 in file "I2C.c"
  9311 ;; Parameters:    Size  Location     Type
  9312 ;;		None
  9313 ;; Auto vars:     Size  Location     Type
  9314 ;;  i               1    1[COMMON] unsigned char 
  9315 ;; Return value:  Size  Location     Type
  9316 ;;                  1    wreg      void 
  9317 ;; Registers used:
  9318 ;;		wreg, status,2, status,0
  9319 ;; Tracked objects:
  9320 ;;		On entry : 0/0
  9321 ;;		On exit  : 0/0
  9322 ;;		Unchanged: 0/0
  9323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9324 ;;      Params:         0       0       0       0       0       0       0       0
  9325 ;;      Locals:         1       0       0       0       0       0       0       0
  9326 ;;      Temps:          1       0       0       0       0       0       0       0
  9327 ;;      Totals:         2       0       0       0       0       0       0       0
  9328 ;;Total ram usage:        2 bytes
  9329 ;; Hardware stack levels used:    1
  9330 ;; Hardware stack levels required when called:    1
  9331 ;; This function calls:
  9332 ;;		Nothing
  9333 ;; This function is called by:
  9334 ;;		_main
  9335 ;; This function uses a non-reentrant model
  9336 ;;
  9337                           
  9338                           
  9339                           ;psect for function _I2C_bus_reset
  9340  0EB8                     _I2C_bus_reset:	
  9341  0EB8                     l2816:	
  9342                           ;incstack = 0
  9343                           ; Regs used in _I2C_bus_reset: [wreg+status,2+status,0]
  9344                           
  9345                           
  9346                           ;I2C.c: 14: TRISCbits.TRISC0 = 1;
  9347  0EB8  0140               	movlb	0	; select bank0
  9348  0EB9  1414               	bsf	20,0	;volatile
  9349                           
  9350                           ;I2C.c: 15: TRISCbits.TRISC1 = 1;
  9351  0EBA  1494               	bsf	20,1	;volatile
  9352  0EBB                     l2818:	
  9353                           
  9354                           ;I2C.c: 17: char i = 0;
  9355  0EBB  01F1               	clrf	I2C_bus_reset@i
  9356                           
  9357                           ;I2C.c: 19: while(i < 10) {
  9358  0EBC  2EF7               	goto	l2842
  9359  0EBD                     l2820:	
  9360                           
  9361                           ;I2C.c: 20: i++;
  9362  0EBD  3001               	movlw	1
  9363  0EBE  00F0               	movwf	??_I2C_bus_reset
  9364  0EBF  0870               	movf	??_I2C_bus_reset,w
  9365  0EC0  07F1               	addwf	I2C_bus_reset@i,f
  9366  0EC1                     l2822:	
  9367                           
  9368                           ;I2C.c: 22: if(!RC1) {
  9369  0EC1  188E               	btfsc	14,1	;volatile
  9370  0EC2  2EC4               	goto	u2311
  9371  0EC3  2EC5               	goto	u2310
  9372  0EC4                     u2311:	
  9373  0EC4  2ED9               	goto	l2830
  9374  0EC5                     u2310:	
  9375  0EC5                     l2824:	
  9376                           
  9377                           ;I2C.c: 24: TRISCbits.TRISC0 = 0;
  9378  0EC5  1014               	bcf	20,0	;volatile
  9379                           
  9380                           ;I2C.c: 25: RC0 = 0;
  9381  0EC6  100E               	bcf	14,0	;volatile
  9382  0EC7                     l2826:	
  9383                           
  9384                           ;I2C.c: 26: _delay((unsigned long)((1)*(32000000/4000.0)));
  9385  0EC7  300B               	movlw	11
  9386  0EC8  00F0               	movwf	??_I2C_bus_reset
  9387  0EC9  3062               	movlw	98
  9388  0ECA                     u2957:	
  9389  0ECA  0B89               	decfsz	9,f
  9390  0ECB  2ECA               	goto	u2957
  9391  0ECC  0BF0               	decfsz	??_I2C_bus_reset,f
  9392  0ECD  2ECA               	goto	u2957
  9393  0ECE  3200               	nop2
  9394  0ECF                     l2828:	
  9395                           
  9396                           ;I2C.c: 27: TRISCbits.TRISC0 = 1;
  9397  0ECF  0140               	movlb	0	; select bank0
  9398  0ED0  1414               	bsf	20,0	;volatile
  9399                           
  9400                           ;I2C.c: 28: _delay((unsigned long)((1)*(32000000/4000.0)));
  9401  0ED1  300B               	movlw	11
  9402  0ED2  00F0               	movwf	??_I2C_bus_reset
  9403  0ED3  3062               	movlw	98
  9404  0ED4                     u2967:	
  9405  0ED4  0B89               	decfsz	9,f
  9406  0ED5  2ED4               	goto	u2967
  9407  0ED6  0BF0               	decfsz	??_I2C_bus_reset,f
  9408  0ED7  2ED4               	goto	u2967
  9409  0ED8  3200               	nop2
  9410  0ED9                     l2830:	
  9411                           
  9412                           ;I2C.c: 29: };I2C.c: 30: if(RC1) {
  9413  0ED9  0140               	movlb	0	; select bank0
  9414  0EDA  1C8E               	btfss	14,1	;volatile
  9415  0EDB  2EDD               	goto	u2321
  9416  0EDC  2EDE               	goto	u2320
  9417  0EDD                     u2321:	
  9418  0EDD  2EC1               	goto	l2822
  9419  0EDE                     u2320:	
  9420  0EDE                     l2832:	
  9421                           
  9422                           ;I2C.c: 32: TRISCbits.TRISC1 = 0;
  9423  0EDE  1094               	bcf	20,1	;volatile
  9424                           
  9425                           ;I2C.c: 33: RC1 = 0;
  9426  0EDF  108E               	bcf	14,1	;volatile
  9427  0EE0                     l2834:	
  9428                           
  9429                           ;I2C.c: 34: _delay((unsigned long)((1)*(32000000/4000.0)));
  9430  0EE0  300B               	movlw	11
  9431  0EE1  00F0               	movwf	??_I2C_bus_reset
  9432  0EE2  3062               	movlw	98
  9433  0EE3                     u2977:	
  9434  0EE3  0B89               	decfsz	9,f
  9435  0EE4  2EE3               	goto	u2977
  9436  0EE5  0BF0               	decfsz	??_I2C_bus_reset,f
  9437  0EE6  2EE3               	goto	u2977
  9438  0EE7  3200               	nop2
  9439  0EE8                     l2836:	
  9440                           
  9441                           ;I2C.c: 35: TRISCbits.TRISC1 = 1;
  9442  0EE8  0140               	movlb	0	; select bank0
  9443  0EE9  1494               	bsf	20,1	;volatile
  9444                           
  9445                           ;I2C.c: 36: _delay((unsigned long)((1)*(32000000/4000.0)));
  9446  0EEA  300B               	movlw	11
  9447  0EEB  00F0               	movwf	??_I2C_bus_reset
  9448  0EEC  3062               	movlw	98
  9449  0EED                     u2987:	
  9450  0EED  0B89               	decfsz	9,f
  9451  0EEE  2EED               	goto	u2987
  9452  0EEF  0BF0               	decfsz	??_I2C_bus_reset,f
  9453  0EF0  2EED               	goto	u2987
  9454  0EF1  3200               	nop2
  9455  0EF2                     l2838:	
  9456                           
  9457                           ;I2C.c: 37: if(RC1) {
  9458  0EF2  0140               	movlb	0	; select bank0
  9459  0EF3  1C8E               	btfss	14,1	;volatile
  9460  0EF4  2EF6               	goto	u2331
  9461  0EF5  2EF7               	goto	u2330
  9462  0EF6                     u2331:	
  9463  0EF6  2EC1               	goto	l2822
  9464  0EF7                     u2330:	
  9465  0EF7                     l2842:	
  9466  0EF7  300A               	movlw	10
  9467  0EF8  0271               	subwf	I2C_bus_reset@i,w
  9468  0EF9  1C03               	skipc
  9469  0EFA  2EFC               	goto	u2341
  9470  0EFB  2EFD               	goto	u2340
  9471  0EFC                     u2341:	
  9472  0EFC  2EBD               	goto	l2820
  9473  0EFD                     u2340:	
  9474  0EFD                     l287:	
  9475  0EFD  0008               	return
  9476  0EFE                     __end_of_I2C_bus_reset:	
  9477                           
  9478                           	psect	text35
  9479  0DC6                     __ptext35:	
  9480 ;; *************** function _I2C_Master_Init *****************
  9481 ;; Defined at:
  9482 ;;		line 45 in file "I2C.c"
  9483 ;; Parameters:    Size  Location     Type
  9484 ;;  clk             4   13[BANK0 ] const unsigned long 
  9485 ;; Auto vars:     Size  Location     Type
  9486 ;;		None
  9487 ;; Return value:  Size  Location     Type
  9488 ;;                  1    wreg      void 
  9489 ;; Registers used:
  9490 ;;		wreg, status,2, status,0, pclath, cstack
  9491 ;; Tracked objects:
  9492 ;;		On entry : 0/0
  9493 ;;		On exit  : 0/0
  9494 ;;		Unchanged: 0/0
  9495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9496 ;;      Params:         0       4       0       0       0       0       0       0
  9497 ;;      Locals:         0       0       0       0       0       0       0       0
  9498 ;;      Temps:          0       4       0       0       0       0       0       0
  9499 ;;      Totals:         0       8       0       0       0       0       0       0
  9500 ;;Total ram usage:        8 bytes
  9501 ;; Hardware stack levels used:    1
  9502 ;; Hardware stack levels required when called:    2
  9503 ;; This function calls:
  9504 ;;		___lldiv
  9505 ;; This function is called by:
  9506 ;;		_main
  9507 ;; This function uses a non-reentrant model
  9508 ;;
  9509                           
  9510                           
  9511                           ;psect for function _I2C_Master_Init
  9512  0DC6                     _I2C_Master_Init:	
  9513  0DC6                     l2844:	
  9514                           ;incstack = 0
  9515                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  9516                           
  9517                           
  9518                           ;I2C.c: 47: SSP1CON1 = 0b00101000;
  9519  0DC6  3028               	movlw	40
  9520  0DC7  0143               	movlb	3	; select bank3
  9521  0DC8  0090               	movwf	16	;volatile
  9522  0DC9                     l2846:	
  9523                           
  9524                           ;I2C.c: 48: SSP1CON2 = 0x00;
  9525  0DC9  0191               	clrf	17	;volatile
  9526  0DCA                     l2848:	
  9527                           
  9528                           ;I2C.c: 49: SSP1ADD = (32000000 / (4*clk)) - 1;
  9529  0DCA  0140               	movlb	0	; select bank0
  9530  0DCB  082E               	movf	I2C_Master_Init@clk,w
  9531  0DCC  00B2               	movwf	??_I2C_Master_Init
  9532  0DCD  082F               	movf	I2C_Master_Init@clk+1,w
  9533  0DCE  00B3               	movwf	??_I2C_Master_Init+1
  9534  0DCF  0830               	movf	I2C_Master_Init@clk+2,w
  9535  0DD0  00B4               	movwf	??_I2C_Master_Init+2
  9536  0DD1  0831               	movf	I2C_Master_Init@clk+3,w
  9537  0DD2  00B5               	movwf	??_I2C_Master_Init+3
  9538  0DD3  3002               	movlw	2
  9539  0DD4                     u2355:	
  9540  0DD4  35B2               	lslf	??_I2C_Master_Init,f
  9541  0DD5  0DB3               	rlf	??_I2C_Master_Init+1,f
  9542  0DD6  0DB4               	rlf	??_I2C_Master_Init+2,f
  9543  0DD7  0DB5               	rlf	??_I2C_Master_Init+3,f
  9544  0DD8                     u2350:	
  9545  0DD8  0B89               	decfsz	9,f
  9546  0DD9  2DD4               	goto	u2355
  9547  0DDA  0835               	movf	??_I2C_Master_Init+3,w
  9548  0DDB  00A4               	movwf	___lldiv@divisor+3
  9549  0DDC  0834               	movf	??_I2C_Master_Init+2,w
  9550  0DDD  00A3               	movwf	___lldiv@divisor+2
  9551  0DDE  0833               	movf	??_I2C_Master_Init+1,w
  9552  0DDF  00A2               	movwf	___lldiv@divisor+1
  9553  0DE0  0832               	movf	??_I2C_Master_Init,w
  9554  0DE1  00A1               	movwf	___lldiv@divisor
  9555  0DE2  3001               	movlw	1
  9556  0DE3  00A8               	movwf	___lldiv@dividend+3
  9557  0DE4  30E8               	movlw	232
  9558  0DE5  00A7               	movwf	___lldiv@dividend+2
  9559  0DE6  3048               	movlw	72
  9560  0DE7  00A6               	movwf	___lldiv@dividend+1
  9561  0DE8  3000               	movlw	0
  9562  0DE9  00A5               	movwf	___lldiv@dividend
  9563  0DEA  318F  27A5  318D   	fcall	___lldiv
  9564  0DED  0140               	movlb	0	; select bank0
  9565  0DEE  0821               	movf	?___lldiv,w
  9566  0DEF  3EFF               	addlw	255
  9567  0DF0  0143               	movlb	3	; select bank3
  9568  0DF1  008D               	movwf	13	;volatile
  9569  0DF2                     l2850:	
  9570                           
  9571                           ;I2C.c: 50: SSP1STAT = 0b10000000;
  9572  0DF2  3080               	movlw	128
  9573  0DF3  008F               	movwf	15	;volatile
  9574  0DF4                     l290:	
  9575  0DF4  0008               	return
  9576  0DF5                     __end_of_I2C_Master_Init:	
  9577                           
  9578                           	psect	text36
  9579  0FA5                     __ptext36:	
  9580 ;; *************** function ___lldiv *****************
  9581 ;; Defined at:
  9582 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  9583 ;; Parameters:    Size  Location     Type
  9584 ;;  divisor         4    0[BANK0 ] unsigned long 
  9585 ;;  dividend        4    4[BANK0 ] unsigned long 
  9586 ;; Auto vars:     Size  Location     Type
  9587 ;;  quotient        4    8[BANK0 ] unsigned long 
  9588 ;;  counter         1   12[BANK0 ] unsigned char 
  9589 ;; Return value:  Size  Location     Type
  9590 ;;                  4    0[BANK0 ] unsigned long 
  9591 ;; Registers used:
  9592 ;;		wreg, status,2, status,0
  9593 ;; Tracked objects:
  9594 ;;		On entry : 0/0
  9595 ;;		On exit  : 0/0
  9596 ;;		Unchanged: 0/0
  9597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9598 ;;      Params:         0       8       0       0       0       0       0       0
  9599 ;;      Locals:         0       5       0       0       0       0       0       0
  9600 ;;      Temps:          1       0       0       0       0       0       0       0
  9601 ;;      Totals:         1      13       0       0       0       0       0       0
  9602 ;;Total ram usage:       14 bytes
  9603 ;; Hardware stack levels used:    1
  9604 ;; Hardware stack levels required when called:    1
  9605 ;; This function calls:
  9606 ;;		Nothing
  9607 ;; This function is called by:
  9608 ;;		_I2C_Master_Init
  9609 ;;		_negotiate_optimal_pdo
  9610 ;;		_i2c_master_init
  9611 ;; This function uses a non-reentrant model
  9612 ;;
  9613                           
  9614                           
  9615                           ;psect for function ___lldiv
  9616  0FA5                     ___lldiv:	
  9617  0FA5                     l2594:	
  9618                           ;incstack = 0
  9619                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  9620                           
  9621  0FA5  3000               	movlw	0
  9622  0FA6  0140               	movlb	0	; select bank0
  9623  0FA7  00AC               	movwf	___lldiv@quotient+3
  9624  0FA8  3000               	movlw	0
  9625  0FA9  00AB               	movwf	___lldiv@quotient+2
  9626  0FAA  3000               	movlw	0
  9627  0FAB  00AA               	movwf	___lldiv@quotient+1
  9628  0FAC  3000               	movlw	0
  9629  0FAD  00A9               	movwf	___lldiv@quotient
  9630  0FAE  0824               	movf	___lldiv@divisor+3,w
  9631  0FAF  0423               	iorwf	___lldiv@divisor+2,w
  9632  0FB0  0422               	iorwf	___lldiv@divisor+1,w
  9633  0FB1  0421               	iorwf	___lldiv@divisor,w
  9634  0FB2  1903               	skipnz
  9635  0FB3  2FB5               	goto	u1971
  9636  0FB4  2FB6               	goto	u1970
  9637  0FB5                     u1971:	
  9638  0FB5  2FF7               	goto	l2614
  9639  0FB6                     u1970:	
  9640  0FB6                     l2596:	
  9641  0FB6  01AD               	clrf	___lldiv@counter
  9642  0FB7  0AAD               	incf	___lldiv@counter,f
  9643  0FB8  2FC4               	goto	l2600
  9644  0FB9                     l2598:	
  9645  0FB9  3001               	movlw	1
  9646  0FBA                     u1985:	
  9647  0FBA  35A1               	lslf	___lldiv@divisor,f
  9648  0FBB  0DA2               	rlf	___lldiv@divisor+1,f
  9649  0FBC  0DA3               	rlf	___lldiv@divisor+2,f
  9650  0FBD  0DA4               	rlf	___lldiv@divisor+3,f
  9651  0FBE  0B89               	decfsz	9,f
  9652  0FBF  2FBA               	goto	u1985
  9653  0FC0  3001               	movlw	1
  9654  0FC1  00FC               	movwf	??___lldiv
  9655  0FC2  087C               	movf	??___lldiv,w
  9656  0FC3  07AD               	addwf	___lldiv@counter,f
  9657  0FC4                     l2600:	
  9658  0FC4  1FA4               	btfss	___lldiv@divisor+3,7
  9659  0FC5  2FC7               	goto	u1991
  9660  0FC6  2FC8               	goto	u1990
  9661  0FC7                     u1991:	
  9662  0FC7  2FB9               	goto	l2598
  9663  0FC8                     u1990:	
  9664  0FC8                     l2602:	
  9665  0FC8  3001               	movlw	1
  9666  0FC9                     u2005:	
  9667  0FC9  35A9               	lslf	___lldiv@quotient,f
  9668  0FCA  0DAA               	rlf	___lldiv@quotient+1,f
  9669  0FCB  0DAB               	rlf	___lldiv@quotient+2,f
  9670  0FCC  0DAC               	rlf	___lldiv@quotient+3,f
  9671  0FCD  0B89               	decfsz	9,f
  9672  0FCE  2FC9               	goto	u2005
  9673  0FCF                     l2604:	
  9674  0FCF  0824               	movf	___lldiv@divisor+3,w
  9675  0FD0  0228               	subwf	___lldiv@dividend+3,w
  9676  0FD1  1D03               	skipz
  9677  0FD2  2FDD               	goto	u2015
  9678  0FD3  0823               	movf	___lldiv@divisor+2,w
  9679  0FD4  0227               	subwf	___lldiv@dividend+2,w
  9680  0FD5  1D03               	skipz
  9681  0FD6  2FDD               	goto	u2015
  9682  0FD7  0822               	movf	___lldiv@divisor+1,w
  9683  0FD8  0226               	subwf	___lldiv@dividend+1,w
  9684  0FD9  1D03               	skipz
  9685  0FDA  2FDD               	goto	u2015
  9686  0FDB  0821               	movf	___lldiv@divisor,w
  9687  0FDC  0225               	subwf	___lldiv@dividend,w
  9688  0FDD                     u2015:	
  9689  0FDD  1C03               	skipc
  9690  0FDE  2FE0               	goto	u2011
  9691  0FDF  2FE1               	goto	u2010
  9692  0FE0                     u2011:	
  9693  0FE0  2FEA               	goto	l2610
  9694  0FE1                     u2010:	
  9695  0FE1                     l2606:	
  9696  0FE1  0821               	movf	___lldiv@divisor,w
  9697  0FE2  02A5               	subwf	___lldiv@dividend,f
  9698  0FE3  0822               	movf	___lldiv@divisor+1,w
  9699  0FE4  3BA6               	subwfb	___lldiv@dividend+1,f
  9700  0FE5  0823               	movf	___lldiv@divisor+2,w
  9701  0FE6  3BA7               	subwfb	___lldiv@dividend+2,f
  9702  0FE7  0824               	movf	___lldiv@divisor+3,w
  9703  0FE8  3BA8               	subwfb	___lldiv@dividend+3,f
  9704  0FE9                     l2608:	
  9705  0FE9  1429               	bsf	___lldiv@quotient,0
  9706  0FEA                     l2610:	
  9707  0FEA  3001               	movlw	1
  9708  0FEB                     u2025:	
  9709  0FEB  36A4               	lsrf	___lldiv@divisor+3,f
  9710  0FEC  0CA3               	rrf	___lldiv@divisor+2,f
  9711  0FED  0CA2               	rrf	___lldiv@divisor+1,f
  9712  0FEE  0CA1               	rrf	___lldiv@divisor,f
  9713  0FEF  0B89               	decfsz	9,f
  9714  0FF0  2FEB               	goto	u2025
  9715  0FF1                     l2612:	
  9716  0FF1  3001               	movlw	1
  9717  0FF2  02AD               	subwf	___lldiv@counter,f
  9718  0FF3  1D03               	btfss	3,2
  9719  0FF4  2FF6               	goto	u2031
  9720  0FF5  2FF7               	goto	u2030
  9721  0FF6                     u2031:	
  9722  0FF6  2FC8               	goto	l2602
  9723  0FF7                     u2030:	
  9724  0FF7                     l2614:	
  9725  0FF7  082C               	movf	___lldiv@quotient+3,w
  9726  0FF8  00A4               	movwf	?___lldiv+3
  9727  0FF9  082B               	movf	___lldiv@quotient+2,w
  9728  0FFA  00A3               	movwf	?___lldiv+2
  9729  0FFB  082A               	movf	___lldiv@quotient+1,w
  9730  0FFC  00A2               	movwf	?___lldiv+1
  9731  0FFD  0829               	movf	___lldiv@quotient,w
  9732  0FFE  00A1               	movwf	?___lldiv
  9733  0FFF                     l818:	
  9734  0FFF  0008               	return
  9735  1000                     __end_of___lldiv:	
  9736                           
  9737                           	psect	text37
  9738  043A                     __ptext37:	
  9739 ;; *************** function _BQ_UPDATE *****************
  9740 ;; Defined at:
  9741 ;;		line 48 in file "BQ25895M.c"
  9742 ;; Parameters:    Size  Location     Type
  9743 ;;		None
  9744 ;; Auto vars:     Size  Location     Type
  9745 ;;		None
  9746 ;; Return value:  Size  Location     Type
  9747 ;;                  1    wreg      void 
  9748 ;; Registers used:
  9749 ;;		wreg, status,2, status,0, pclath, cstack
  9750 ;; Tracked objects:
  9751 ;;		On entry : 0/0
  9752 ;;		On exit  : 0/0
  9753 ;;		Unchanged: 0/0
  9754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9755 ;;      Params:         0       0       0       0       0       0       0       0
  9756 ;;      Locals:         0       0       0       0       0       0       0       0
  9757 ;;      Temps:          1       0       0       0       0       0       0       0
  9758 ;;      Totals:         1       0       0       0       0       0       0       0
  9759 ;;Total ram usage:        1 bytes
  9760 ;; Hardware stack levels used:    1
  9761 ;; Hardware stack levels required when called:    5
  9762 ;; This function calls:
  9763 ;;		_BQ_Read
  9764 ;;		_BQ_Write
  9765 ;;		_BQ_get_chrg_state
  9766 ;;		_get_time
  9767 ;;		_timer_diff
  9768 ;; This function is called by:
  9769 ;;		_main
  9770 ;; This function uses a non-reentrant model
  9771 ;;
  9772                           
  9773                           
  9774                           ;psect for function _BQ_UPDATE
  9775  043A                     _BQ_UPDATE:	
  9776  043A                     l2922:	
  9777                           ;incstack = 0
  9778                           ; Regs used in _BQ_UPDATE: [wreg+status,2+status,0+pclath+cstack]
  9779                           
  9780                           
  9781                           ;BQ25895M.c: 49: if(BQ_adc_state == 0) {
  9782  043A  0141               	movlb	1	; select bank1
  9783  043B  0866               	movf	_BQ_adc_state^(0+128),w
  9784  043C  1D03               	btfss	3,2
  9785  043D  2C3F               	goto	u2361
  9786  043E  2C40               	goto	u2360
  9787  043F                     u2361:	
  9788  043F  2C5B               	goto	l2930
  9789  0440                     u2360:	
  9790  0440                     l2924:	
  9791                           
  9792                           ;BQ25895M.c: 50: BQ_get_chrg_state();
  9793  0440  318C  24C1  3184   	fcall	_BQ_get_chrg_state
  9794                           
  9795                           ;BQ25895M.c: 51: BQ_Write(0x02, 0b10010001);
  9796  0443  3091               	movlw	145
  9797  0444  00FC               	movwf	??_BQ_UPDATE
  9798  0445  087C               	movf	??_BQ_UPDATE,w
  9799  0446  00F1               	movwf	BQ_Write@data
  9800  0447  3002               	movlw	2
  9801  0448  318B  239B  3184   	fcall	_BQ_Write
  9802  044B                     l2926:	
  9803                           
  9804                           ;BQ25895M.c: 52: BQ_adc_time = get_time();
  9805  044B  318B  236E  3184   	fcall	_get_time
  9806  044E  0873               	movf	?_get_time+3,w
  9807  044F  0142               	movlb	2	; select bank2
  9808  0450  00AF               	movwf	(_BQ_adc_time+3)^(0+256)
  9809  0451  0872               	movf	?_get_time+2,w
  9810  0452  00AE               	movwf	(_BQ_adc_time+2)^(0+256)
  9811  0453  0871               	movf	?_get_time+1,w
  9812  0454  00AD               	movwf	(_BQ_adc_time+1)^(0+256)
  9813  0455  0870               	movf	?_get_time,w
  9814  0456  00AC               	movwf	_BQ_adc_time^(0+256)
  9815  0457                     l2928:	
  9816                           
  9817                           ;BQ25895M.c: 53: BQ_adc_state = 1;
  9818  0457  0141               	movlb	1	; select bank1
  9819  0458  01E6               	clrf	_BQ_adc_state^(0+128)
  9820  0459  0AE6               	incf	_BQ_adc_state^(0+128),f
  9821                           
  9822                           ;BQ25895M.c: 54: }
  9823  045A  2CB9               	goto	l359
  9824  045B                     l2930:	
  9825                           
  9826                           ;BQ25895M.c: 55: else if(BQ_adc_state == 1) {
  9827  045B  0366               	decf	_BQ_adc_state^(0+128),w
  9828  045C  1D03               	btfss	3,2
  9829  045D  2C5F               	goto	u2371
  9830  045E  2C60               	goto	u2370
  9831  045F                     u2371:	
  9832  045F  2C95               	goto	l2940
  9833  0460                     u2370:	
  9834  0460                     l2932:	
  9835                           
  9836                           ;BQ25895M.c: 56: if(timer_diff(BQ_adc_time) >= 80) {
  9837  0460  0142               	movlb	2	; select bank2
  9838  0461  082F               	movf	(_BQ_adc_time+3)^(0+256),w
  9839  0462  00F3               	movwf	timer_diff@t+3
  9840  0463  082E               	movf	(_BQ_adc_time+2)^(0+256),w
  9841  0464  00F2               	movwf	timer_diff@t+2
  9842  0465  082D               	movf	(_BQ_adc_time+1)^(0+256),w
  9843  0466  00F1               	movwf	timer_diff@t+1
  9844  0467  082C               	movf	_BQ_adc_time^(0+256),w
  9845  0468  00F0               	movwf	timer_diff@t
  9846  0469  318B  23C3  3184   	fcall	_timer_diff
  9847  046C  0873               	movf	?_timer_diff+3,w
  9848  046D  1D03               	btfss	3,2
  9849  046E  2C7B               	goto	u2380
  9850  046F  0872               	movf	?_timer_diff+2,w
  9851  0470  1D03               	btfss	3,2
  9852  0471  2C7B               	goto	u2380
  9853  0472  0871               	movf	?_timer_diff+1,w
  9854  0473  1D03               	btfss	3,2
  9855  0474  2C7B               	goto	u2380
  9856  0475  3050               	movlw	80
  9857  0476  0270               	subwf	?_timer_diff,w
  9858  0477  1C03               	btfss	3,0
  9859  0478  2C7A               	goto	u2381
  9860  0479  2C7B               	goto	u2380
  9861  047A                     u2381:	
  9862  047A  2CB9               	goto	l359
  9863  047B                     u2380:	
  9864  047B                     l2934:	
  9865                           
  9866                           ;BQ25895M.c: 57: BATTERY_VOLTAGE = BQ_Read(0x0E);
  9867  047B  300E               	movlw	14
  9868  047C  318D  254C  3184   	fcall	_BQ_Read
  9869  047F  0873               	movf	?_BQ_Read,w
  9870  0480  00FC               	movwf	??_BQ_UPDATE
  9871  0481  087C               	movf	??_BQ_UPDATE,w
  9872  0482  0141               	movlb	1	; select bank1
  9873  0483  00E7               	movwf	_BATTERY_VOLTAGE^(0+128)
  9874  0484                     l2936:	
  9875                           
  9876                           ;BQ25895M.c: 58: BQ_adc_state = 2;
  9877  0484  3002               	movlw	2
  9878  0485  00FC               	movwf	??_BQ_UPDATE
  9879  0486  087C               	movf	??_BQ_UPDATE,w
  9880  0487  00E6               	movwf	_BQ_adc_state^(0+128)
  9881  0488                     l2938:	
  9882                           
  9883                           ;BQ25895M.c: 59: BQ_adc_time = get_time();
  9884  0488  318B  236E  3184   	fcall	_get_time
  9885  048B  0873               	movf	?_get_time+3,w
  9886  048C  0142               	movlb	2	; select bank2
  9887  048D  00AF               	movwf	(_BQ_adc_time+3)^(0+256)
  9888  048E  0872               	movf	?_get_time+2,w
  9889  048F  00AE               	movwf	(_BQ_adc_time+2)^(0+256)
  9890  0490  0871               	movf	?_get_time+1,w
  9891  0491  00AD               	movwf	(_BQ_adc_time+1)^(0+256)
  9892  0492  0870               	movf	?_get_time,w
  9893  0493  00AC               	movwf	_BQ_adc_time^(0+256)
  9894  0494  2CB9               	goto	l359
  9895  0495                     l2940:	
  9896                           
  9897                           ;BQ25895M.c: 62: else if(BQ_adc_state == 2) {
  9898  0495  3002               	movlw	2
  9899  0496  0666               	xorwf	_BQ_adc_state^(0+128),w
  9900  0497  1D03               	btfss	3,2
  9901  0498  2C9A               	goto	u2391
  9902  0499  2C9B               	goto	u2390
  9903  049A                     u2391:	
  9904  049A  2CB6               	goto	l2944
  9905  049B                     u2390:	
  9906  049B                     l2942:	
  9907                           
  9908                           ;BQ25895M.c: 63: if(timer_diff(BQ_adc_time) >= 20) {
  9909  049B  0142               	movlb	2	; select bank2
  9910  049C  082F               	movf	(_BQ_adc_time+3)^(0+256),w
  9911  049D  00F3               	movwf	timer_diff@t+3
  9912  049E  082E               	movf	(_BQ_adc_time+2)^(0+256),w
  9913  049F  00F2               	movwf	timer_diff@t+2
  9914  04A0  082D               	movf	(_BQ_adc_time+1)^(0+256),w
  9915  04A1  00F1               	movwf	timer_diff@t+1
  9916  04A2  082C               	movf	_BQ_adc_time^(0+256),w
  9917  04A3  00F0               	movwf	timer_diff@t
  9918  04A4  318B  23C3  3184   	fcall	_timer_diff
  9919  04A7  0873               	movf	?_timer_diff+3,w
  9920  04A8  1D03               	btfss	3,2
  9921  04A9  2CB6               	goto	u2400
  9922  04AA  0872               	movf	?_timer_diff+2,w
  9923  04AB  1D03               	btfss	3,2
  9924  04AC  2CB6               	goto	u2400
  9925  04AD  0871               	movf	?_timer_diff+1,w
  9926  04AE  1D03               	btfss	3,2
  9927  04AF  2CB6               	goto	u2400
  9928  04B0  3014               	movlw	20
  9929  04B1  0270               	subwf	?_timer_diff,w
  9930  04B2  1C03               	btfss	3,0
  9931  04B3  2CB5               	goto	u2401
  9932  04B4  2CB6               	goto	u2400
  9933  04B5                     u2401:	
  9934  04B5  2CB9               	goto	l355
  9935  04B6                     u2400:	
  9936  04B6                     l2944:	
  9937                           
  9938                           ;BQ25895M.c: 64: BQ_adc_state = 0;
  9939  04B6  0141               	movlb	1	; select bank1
  9940  04B7  01E6               	clrf	_BQ_adc_state^(0+128)
  9941  04B8  2CB9               	goto	l359
  9942  04B9                     l355:	
  9943  04B9                     l359:	
  9944  04B9  0008               	return
  9945  04BA                     __end_of_BQ_UPDATE:	
  9946                           
  9947                           	psect	text38
  9948  0BC3                     __ptext38:	
  9949 ;; *************** function _timer_diff *****************
  9950 ;; Defined at:
  9951 ;;		line 17 in file "time.c"
  9952 ;; Parameters:    Size  Location     Type
  9953 ;;  t               4    0[COMMON] unsigned long 
  9954 ;; Auto vars:     Size  Location     Type
  9955 ;;		None
  9956 ;; Return value:  Size  Location     Type
  9957 ;;                  4    0[COMMON] unsigned long 
  9958 ;; Registers used:
  9959 ;;		wreg
  9960 ;; Tracked objects:
  9961 ;;		On entry : 0/0
  9962 ;;		On exit  : 0/0
  9963 ;;		Unchanged: 0/0
  9964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9965 ;;      Params:         4       0       0       0       0       0       0       0
  9966 ;;      Locals:         0       0       0       0       0       0       0       0
  9967 ;;      Temps:          4       0       0       0       0       0       0       0
  9968 ;;      Totals:         8       0       0       0       0       0       0       0
  9969 ;;Total ram usage:        8 bytes
  9970 ;; Hardware stack levels used:    1
  9971 ;; Hardware stack levels required when called:    1
  9972 ;; This function calls:
  9973 ;;		Nothing
  9974 ;; This function is called by:
  9975 ;;		_main
  9976 ;;		_BQ_UPDATE
  9977 ;;		_RGB_fade
  9978 ;;		_chrg_led
  9979 ;;		_flash_led
  9980 ;; This function uses a non-reentrant model
  9981 ;;
  9982                           
  9983                           
  9984                           ;psect for function _timer_diff
  9985  0BC3                     _timer_diff:	
  9986  0BC3                     l2546:	
  9987                           ;incstack = 0
  9988                           ; Regs used in _timer_diff: [wreg]
  9989                           
  9990                           
  9991                           ;time.c: 18: return timer_counter - t;
  9992  0BC3  0870               	movf	timer_diff@t,w
  9993  0BC4  0142               	movlb	2	; select bank2
  9994  0BC5  0240               	subwf	_timer_counter^(0+256),w
  9995  0BC6  00F4               	movwf	??_timer_diff
  9996  0BC7  0871               	movf	timer_diff@t+1,w
  9997  0BC8  3B41               	subwfb	(_timer_counter+1)^(0+256),w
  9998  0BC9  00F5               	movwf	??_timer_diff+1
  9999  0BCA  0872               	movf	timer_diff@t+2,w
 10000  0BCB  3B42               	subwfb	(_timer_counter+2)^(0+256),w
 10001  0BCC  00F6               	movwf	??_timer_diff+2
 10002  0BCD  0873               	movf	timer_diff@t+3,w
 10003  0BCE  3B43               	subwfb	(_timer_counter+3)^(0+256),w
 10004  0BCF  00F7               	movwf	??_timer_diff+3
 10005  0BD0  0877               	movf	??_timer_diff+3,w
 10006  0BD1  00F3               	movwf	?_timer_diff+3
 10007  0BD2  0876               	movf	??_timer_diff+2,w
 10008  0BD3  00F2               	movwf	?_timer_diff+2
 10009  0BD4  0875               	movf	??_timer_diff+1,w
 10010  0BD5  00F1               	movwf	?_timer_diff+1
 10011  0BD6  0874               	movf	??_timer_diff,w
 10012  0BD7  00F0               	movwf	?_timer_diff
 10013  0BD8                     l714:	
 10014  0BD8  0008               	return
 10015  0BD9                     __end_of_timer_diff:	
 10016                           
 10017                           	psect	text39
 10018  0B6E                     __ptext39:	
 10019 ;; *************** function _get_time *****************
 10020 ;; Defined at:
 10021 ;;		line 13 in file "time.c"
 10022 ;; Parameters:    Size  Location     Type
 10023 ;;		None
 10024 ;; Auto vars:     Size  Location     Type
 10025 ;;		None
 10026 ;; Return value:  Size  Location     Type
 10027 ;;                  4    0[COMMON] unsigned long 
 10028 ;; Registers used:
 10029 ;;		wreg
 10030 ;; Tracked objects:
 10031 ;;		On entry : 0/0
 10032 ;;		On exit  : 0/0
 10033 ;;		Unchanged: 0/0
 10034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10035 ;;      Params:         4       0       0       0       0       0       0       0
 10036 ;;      Locals:         0       0       0       0       0       0       0       0
 10037 ;;      Temps:          0       0       0       0       0       0       0       0
 10038 ;;      Totals:         4       0       0       0       0       0       0       0
 10039 ;;Total ram usage:        4 bytes
 10040 ;; Hardware stack levels used:    1
 10041 ;; Hardware stack levels required when called:    1
 10042 ;; This function calls:
 10043 ;;		Nothing
 10044 ;; This function is called by:
 10045 ;;		_main
 10046 ;;		_BQ_UPDATE
 10047 ;;		_RGB_fade
 10048 ;;		_chrg_led
 10049 ;;		_flash_led
 10050 ;; This function uses a non-reentrant model
 10051 ;;
 10052                           
 10053                           
 10054                           ;psect for function _get_time
 10055  0B6E                     _get_time:	
 10056  0B6E                     l2542:	
 10057                           ;incstack = 0
 10058                           ; Regs used in _get_time: [wreg]
 10059                           
 10060                           
 10061                           ;time.c: 14: return timer_counter;
 10062  0B6E  0142               	movlb	2	; select bank2
 10063  0B6F  0843               	movf	(_timer_counter+3)^(0+256),w
 10064  0B70  00F3               	movwf	?_get_time+3
 10065  0B71  0842               	movf	(_timer_counter+2)^(0+256),w
 10066  0B72  00F2               	movwf	?_get_time+2
 10067  0B73  0841               	movf	(_timer_counter+1)^(0+256),w
 10068  0B74  00F1               	movwf	?_get_time+1
 10069  0B75  0840               	movf	_timer_counter^(0+256),w
 10070  0B76  00F0               	movwf	?_get_time
 10071  0B77                     l711:	
 10072  0B77  0008               	return
 10073  0B78                     __end_of_get_time:	
 10074                           
 10075                           	psect	text40
 10076  0CC1                     __ptext40:	
 10077 ;; *************** function _BQ_get_chrg_state *****************
 10078 ;; Defined at:
 10079 ;;		line 41 in file "BQ25895M.c"
 10080 ;; Parameters:    Size  Location     Type
 10081 ;;		None
 10082 ;; Auto vars:     Size  Location     Type
 10083 ;;  temp            1   11[COMMON] unsigned char 
 10084 ;; Return value:  Size  Location     Type
 10085 ;;                  1    wreg      void 
 10086 ;; Registers used:
 10087 ;;		wreg, status,2, status,0, pclath, cstack
 10088 ;; Tracked objects:
 10089 ;;		On entry : 0/0
 10090 ;;		On exit  : 0/0
 10091 ;;		Unchanged: 0/0
 10092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10093 ;;      Params:         0       0       0       0       0       0       0       0
 10094 ;;      Locals:         1       0       0       0       0       0       0       0
 10095 ;;      Temps:          2       0       0       0       0       0       0       0
 10096 ;;      Totals:         3       0       0       0       0       0       0       0
 10097 ;;Total ram usage:        3 bytes
 10098 ;; Hardware stack levels used:    1
 10099 ;; Hardware stack levels required when called:    4
 10100 ;; This function calls:
 10101 ;;		_BQ_Read
 10102 ;; This function is called by:
 10103 ;;		_BQ_UPDATE
 10104 ;; This function uses a non-reentrant model
 10105 ;;
 10106                           
 10107                           
 10108                           ;psect for function _BQ_get_chrg_state
 10109  0CC1                     _BQ_get_chrg_state:	
 10110  0CC1                     l2638:	
 10111                           ;incstack = 0
 10112                           ; Regs used in _BQ_get_chrg_state: [wreg+status,2+status,0+pclath+cstack]
 10113                           
 10114                           
 10115                           ;BQ25895M.c: 42: char temp = BQ_Read(0x0B);
 10116  0CC1  300B               	movlw	11
 10117  0CC2  318D  254C  318C   	fcall	_BQ_Read
 10118  0CC5  0873               	movf	?_BQ_Read,w
 10119  0CC6  00F9               	movwf	??_BQ_get_chrg_state
 10120  0CC7  0879               	movf	??_BQ_get_chrg_state,w
 10121  0CC8  00FB               	movwf	BQ_get_chrg_state@temp
 10122  0CC9                     l2640:	
 10123                           
 10124                           ;BQ25895M.c: 44: VBUS_CHRG_STATE[0] = (temp >> 4) & 0b00000111;
 10125  0CC9  087B               	movf	BQ_get_chrg_state@temp,w
 10126  0CCA  00F9               	movwf	??_BQ_get_chrg_state
 10127  0CCB  3004               	movlw	4
 10128  0CCC                     u2065:	
 10129  0CCC  36F9               	lsrf	??_BQ_get_chrg_state,f
 10130  0CCD  0B89               	decfsz	9,f
 10131  0CCE  2CCC               	goto	u2065
 10132  0CCF  0879               	movf	??_BQ_get_chrg_state,w
 10133  0CD0  3907               	andlw	7
 10134  0CD1  00FA               	movwf	??_BQ_get_chrg_state+1
 10135  0CD2  087A               	movf	??_BQ_get_chrg_state+1,w
 10136  0CD3  0141               	movlb	1	; select bank1
 10137  0CD4  00CA               	movwf	_VBUS_CHRG_STATE^(0+128)
 10138  0CD5                     l2642:	
 10139                           
 10140                           ;BQ25895M.c: 45: VBUS_CHRG_STATE[1] = (temp >> 2) & 0b00000011;
 10141  0CD5  087B               	movf	BQ_get_chrg_state@temp,w
 10142  0CD6  00F9               	movwf	??_BQ_get_chrg_state
 10143  0CD7  3002               	movlw	2
 10144  0CD8                     u2075:	
 10145  0CD8  36F9               	lsrf	??_BQ_get_chrg_state,f
 10146  0CD9  0B89               	decfsz	9,f
 10147  0CDA  2CD8               	goto	u2075
 10148  0CDB  0879               	movf	??_BQ_get_chrg_state,w
 10149  0CDC  3903               	andlw	3
 10150  0CDD  00FA               	movwf	??_BQ_get_chrg_state+1
 10151  0CDE  087A               	movf	??_BQ_get_chrg_state+1,w
 10152  0CDF  00CB               	movwf	(_VBUS_CHRG_STATE^(0+128)+1)
 10153  0CE0                     l348:	
 10154  0CE0  0008               	return
 10155  0CE1                     __end_of_BQ_get_chrg_state:	
 10156                           
 10157                           	psect	text41
 10158  0D4C                     __ptext41:	
 10159 ;; *************** function _BQ_Read *****************
 10160 ;; Defined at:
 10161 ;;		line 23 in file "BQ25895M.c"
 10162 ;; Parameters:    Size  Location     Type
 10163 ;;  reg             1    wreg     unsigned char 
 10164 ;; Auto vars:     Size  Location     Type
 10165 ;;  reg             1    7[COMMON] unsigned char 
 10166 ;;  data            1    8[COMMON] unsigned char 
 10167 ;; Return value:  Size  Location     Type
 10168 ;;                  2    3[COMMON] unsigned short 
 10169 ;; Registers used:
 10170 ;;		wreg, status,2, status,0, pclath, cstack
 10171 ;; Tracked objects:
 10172 ;;		On entry : 0/0
 10173 ;;		On exit  : 0/0
 10174 ;;		Unchanged: 0/0
 10175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10176 ;;      Params:         2       0       0       0       0       0       0       0
 10177 ;;      Locals:         2       0       0       0       0       0       0       0
 10178 ;;      Temps:          2       0       0       0       0       0       0       0
 10179 ;;      Totals:         6       0       0       0       0       0       0       0
 10180 ;;Total ram usage:        6 bytes
 10181 ;; Hardware stack levels used:    1
 10182 ;; Hardware stack levels required when called:    3
 10183 ;; This function calls:
 10184 ;;		_I2C_Master_Read
 10185 ;;		_I2C_Master_Start
 10186 ;;		_I2C_Master_Stop
 10187 ;;		_I2C_Master_Write
 10188 ;; This function is called by:
 10189 ;;		_BQ_get_chrg_state
 10190 ;;		_BQ_UPDATE
 10191 ;; This function uses a non-reentrant model
 10192 ;;
 10193                           
 10194                           
 10195                           ;psect for function _BQ_Read
 10196  0D4C                     _BQ_Read:	
 10197                           
 10198                           ;incstack = 0
 10199                           ; Regs used in _BQ_Read: [wreg+status,2+status,0+pclath+cstack]
 10200                           ;BQ_Read@reg stored from wreg
 10201  0D4C  00F7               	movwf	BQ_Read@reg
 10202  0D4D                     l2550:	
 10203                           
 10204                           ;BQ25895M.c: 24: unsigned char data;;BQ25895M.c: 26: I2C_Master_Start();
 10205  0D4D  318B  2325  318D   	fcall	_I2C_Master_Start
 10206                           
 10207                           ;BQ25895M.c: 27: I2C_Master_Write(0x6A << 1);
 10208  0D50  30D4               	movlw	212
 10209  0D51  318B  2356  318D   	fcall	_I2C_Master_Write
 10210                           
 10211                           ;BQ25895M.c: 28: I2C_Master_Write(reg);
 10212  0D54  0877               	movf	BQ_Read@reg,w
 10213  0D55  318B  2356  318D   	fcall	_I2C_Master_Write
 10214                           
 10215                           ;BQ25895M.c: 29: I2C_Master_Start();
 10216  0D58  318B  2325  318D   	fcall	_I2C_Master_Start
 10217                           
 10218                           ;BQ25895M.c: 30: I2C_Master_Write(0b11010101);
 10219  0D5B  30D5               	movlw	213
 10220  0D5C  318B  2356  318D   	fcall	_I2C_Master_Write
 10221                           
 10222                           ;BQ25895M.c: 31: data=I2C_Master_Read(1);
 10223  0D5F  3001               	movlw	1
 10224  0D60  318C  2483  318D   	fcall	_I2C_Master_Read
 10225  0D63  00F5               	movwf	??_BQ_Read
 10226  0D64  0875               	movf	??_BQ_Read,w
 10227  0D65  00F8               	movwf	BQ_Read@data
 10228                           
 10229                           ;BQ25895M.c: 32: I2C_Master_Stop();
 10230  0D66  318B  232B  318D   	fcall	_I2C_Master_Stop
 10231  0D69                     l2552:	
 10232                           
 10233                           ;BQ25895M.c: 33: return data;
 10234  0D69  0878               	movf	BQ_Read@data,w
 10235  0D6A  00F5               	movwf	??_BQ_Read
 10236  0D6B  01F6               	clrf	??_BQ_Read+1
 10237  0D6C  0875               	movf	??_BQ_Read,w
 10238  0D6D  00F3               	movwf	?_BQ_Read
 10239  0D6E  0876               	movf	??_BQ_Read+1,w
 10240  0D6F  00F4               	movwf	?_BQ_Read+1
 10241  0D70                     l337:	
 10242  0D70  0008               	return
 10243  0D71                     __end_of_BQ_Read:	
 10244                           
 10245                           	psect	text42
 10246  0C83                     __ptext42:	
 10247 ;; *************** function _I2C_Master_Read *****************
 10248 ;; Defined at:
 10249 ;;		line 94 in file "I2C.c"
 10250 ;; Parameters:    Size  Location     Type
 10251 ;;  ack             1    wreg     unsigned char 
 10252 ;; Auto vars:     Size  Location     Type
 10253 ;;  ack             1    1[COMMON] unsigned char 
 10254 ;;  data            1    2[COMMON] unsigned char 
 10255 ;; Return value:  Size  Location     Type
 10256 ;;                  1    wreg      unsigned char 
 10257 ;; Registers used:
 10258 ;;		wreg, status,2, status,0, pclath, cstack
 10259 ;; Tracked objects:
 10260 ;;		On entry : 0/0
 10261 ;;		On exit  : 0/0
 10262 ;;		Unchanged: 0/0
 10263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10264 ;;      Params:         0       0       0       0       0       0       0       0
 10265 ;;      Locals:         2       0       0       0       0       0       0       0
 10266 ;;      Temps:          1       0       0       0       0       0       0       0
 10267 ;;      Totals:         3       0       0       0       0       0       0       0
 10268 ;;Total ram usage:        3 bytes
 10269 ;; Hardware stack levels used:    1
 10270 ;; Hardware stack levels required when called:    2
 10271 ;; This function calls:
 10272 ;;		_I2C_Master_Ack
 10273 ;;		_I2C_Master_Wait
 10274 ;;		_I2C_Master_nAck
 10275 ;; This function is called by:
 10276 ;;		_BQ_Read
 10277 ;; This function uses a non-reentrant model
 10278 ;;
 10279                           
 10280                           
 10281                           ;psect for function _I2C_Master_Read
 10282  0C83                     _I2C_Master_Read:	
 10283                           
 10284                           ;incstack = 0
 10285                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 10286                           ;I2C_Master_Read@ack stored from wreg
 10287  0C83  00F1               	movwf	I2C_Master_Read@ack
 10288  0C84                     l2404:	
 10289                           
 10290                           ;I2C.c: 96: I2C_Master_Wait();
 10291  0C84  318B  2383  318C   	fcall	_I2C_Master_Wait
 10292  0C87                     l2406:	
 10293                           
 10294                           ;I2C.c: 97: SSP1CON2bits.RCEN = 1;
 10295  0C87  0143               	movlb	3	; select bank3
 10296  0C88  1591               	bsf	17,3	;volatile
 10297                           
 10298                           ;I2C.c: 98: I2C_Master_Wait();
 10299  0C89  318B  2383  318C   	fcall	_I2C_Master_Wait
 10300  0C8C                     l2408:	
 10301                           
 10302                           ;I2C.c: 100: unsigned char data = SSP1BUF;
 10303  0C8C  0143               	movlb	3	; select bank3
 10304  0C8D  080C               	movf	12,w	;volatile
 10305  0C8E  00F0               	movwf	??_I2C_Master_Read
 10306  0C8F  0870               	movf	??_I2C_Master_Read,w
 10307  0C90  00F2               	movwf	I2C_Master_Read@data
 10308  0C91                     l2410:	
 10309                           
 10310                           ;I2C.c: 101: I2C_Master_Wait();
 10311  0C91  318B  2383  318C   	fcall	_I2C_Master_Wait
 10312  0C94                     l2412:	
 10313                           
 10314                           ;I2C.c: 103: if (ack)
 10315  0C94  0871               	movf	I2C_Master_Read@ack,w
 10316  0C95  1903               	btfsc	3,2
 10317  0C96  2C98               	goto	u1591
 10318  0C97  2C99               	goto	u1590
 10319  0C98                     u1591:	
 10320  0C98  2C9D               	goto	l2416
 10321  0C99                     u1590:	
 10322  0C99                     l2414:	
 10323                           
 10324                           ;I2C.c: 104: I2C_Master_nAck();
 10325  0C99  318B  2321  318C   	fcall	_I2C_Master_nAck
 10326  0C9C  2CA0               	goto	l2418
 10327  0C9D                     l2416:	
 10328                           
 10329                           ;I2C.c: 105: else;I2C.c: 106: I2C_Master_Ack();
 10330  0C9D  318B  231D  318C   	fcall	_I2C_Master_Ack
 10331  0CA0                     l2418:	
 10332                           
 10333                           ;I2C.c: 108: return data;
 10334  0CA0  0872               	movf	I2C_Master_Read@data,w
 10335  0CA1                     l319:	
 10336  0CA1  0008               	return
 10337  0CA2                     __end_of_I2C_Master_Read:	
 10338                           
 10339                           	psect	text43
 10340  0B21                     __ptext43:	
 10341 ;; *************** function _I2C_Master_nAck *****************
 10342 ;; Defined at:
 10343 ;;		line 88 in file "I2C.c"
 10344 ;; Parameters:    Size  Location     Type
 10345 ;;		None
 10346 ;; Auto vars:     Size  Location     Type
 10347 ;;		None
 10348 ;; Return value:  Size  Location     Type
 10349 ;;                  1    wreg      void 
 10350 ;; Registers used:
 10351 ;;		None
 10352 ;; Tracked objects:
 10353 ;;		On entry : 0/0
 10354 ;;		On exit  : 0/0
 10355 ;;		Unchanged: 0/0
 10356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10357 ;;      Params:         0       0       0       0       0       0       0       0
 10358 ;;      Locals:         0       0       0       0       0       0       0       0
 10359 ;;      Temps:          0       0       0       0       0       0       0       0
 10360 ;;      Totals:         0       0       0       0       0       0       0       0
 10361 ;;Total ram usage:        0 bytes
 10362 ;; Hardware stack levels used:    1
 10363 ;; Hardware stack levels required when called:    1
 10364 ;; This function calls:
 10365 ;;		Nothing
 10366 ;; This function is called by:
 10367 ;;		_I2C_Master_Read
 10368 ;; This function uses a non-reentrant model
 10369 ;;
 10370                           
 10371                           
 10372                           ;psect for function _I2C_Master_nAck
 10373  0B21                     _I2C_Master_nAck:	
 10374  0B21                     l2382:	
 10375                           ;incstack = 0
 10376                           ; Regs used in _I2C_Master_nAck: []
 10377                           
 10378                           
 10379                           ;I2C.c: 90: SSP1CON2bits.ACKDT = 1;
 10380  0B21  0143               	movlb	3	; select bank3
 10381  0B22  1691               	bsf	17,5	;volatile
 10382                           
 10383                           ;I2C.c: 91: SSP1CON2bits.ACKEN = 1;
 10384  0B23  1611               	bsf	17,4	;volatile
 10385  0B24                     l314:	
 10386  0B24  0008               	return
 10387  0B25                     __end_of_I2C_Master_nAck:	
 10388                           
 10389                           	psect	text44
 10390  0B1D                     __ptext44:	
 10391 ;; *************** function _I2C_Master_Ack *****************
 10392 ;; Defined at:
 10393 ;;		line 82 in file "I2C.c"
 10394 ;; Parameters:    Size  Location     Type
 10395 ;;		None
 10396 ;; Auto vars:     Size  Location     Type
 10397 ;;		None
 10398 ;; Return value:  Size  Location     Type
 10399 ;;                  1    wreg      void 
 10400 ;; Registers used:
 10401 ;;		None
 10402 ;; Tracked objects:
 10403 ;;		On entry : 0/0
 10404 ;;		On exit  : 0/0
 10405 ;;		Unchanged: 0/0
 10406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10407 ;;      Params:         0       0       0       0       0       0       0       0
 10408 ;;      Locals:         0       0       0       0       0       0       0       0
 10409 ;;      Temps:          0       0       0       0       0       0       0       0
 10410 ;;      Totals:         0       0       0       0       0       0       0       0
 10411 ;;Total ram usage:        0 bytes
 10412 ;; Hardware stack levels used:    1
 10413 ;; Hardware stack levels required when called:    1
 10414 ;; This function calls:
 10415 ;;		Nothing
 10416 ;; This function is called by:
 10417 ;;		_I2C_Master_Read
 10418 ;; This function uses a non-reentrant model
 10419 ;;
 10420                           
 10421                           
 10422                           ;psect for function _I2C_Master_Ack
 10423  0B1D                     _I2C_Master_Ack:	
 10424  0B1D                     l2380:	
 10425                           ;incstack = 0
 10426                           ; Regs used in _I2C_Master_Ack: []
 10427                           
 10428                           
 10429                           ;I2C.c: 84: SSP1CON2bits.ACKDT = 0;
 10430  0B1D  0143               	movlb	3	; select bank3
 10431  0B1E  1291               	bcf	17,5	;volatile
 10432                           
 10433                           ;I2C.c: 85: SSP1CON2bits.ACKEN = 1;
 10434  0B1F  1611               	bsf	17,4	;volatile
 10435  0B20                     l311:	
 10436  0B20  0008               	return
 10437  0B21                     __end_of_I2C_Master_Ack:	
 10438                           
 10439                           	psect	text45
 10440  0EFE                     __ptext45:	
 10441 ;; *************** function _BQ_INIT *****************
 10442 ;; Defined at:
 10443 ;;		line 144 in file "BQ25895M.c"
 10444 ;; Parameters:    Size  Location     Type
 10445 ;;		None
 10446 ;; Auto vars:     Size  Location     Type
 10447 ;;		None
 10448 ;; Return value:  Size  Location     Type
 10449 ;;                  1    wreg      void 
 10450 ;; Registers used:
 10451 ;;		wreg, status,2, status,0, pclath, cstack
 10452 ;; Tracked objects:
 10453 ;;		On entry : 0/0
 10454 ;;		On exit  : 0/0
 10455 ;;		Unchanged: 0/0
 10456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10457 ;;      Params:         0       0       0       0       0       0       0       0
 10458 ;;      Locals:         0       0       0       0       0       0       0       0
 10459 ;;      Temps:          1       0       0       0       0       0       0       0
 10460 ;;      Totals:         1       0       0       0       0       0       0       0
 10461 ;;Total ram usage:        1 bytes
 10462 ;; Hardware stack levels used:    1
 10463 ;; Hardware stack levels required when called:    4
 10464 ;; This function calls:
 10465 ;;		_BQ_Write
 10466 ;; This function is called by:
 10467 ;;		_main
 10468 ;; This function uses a non-reentrant model
 10469 ;;
 10470                           
 10471                           
 10472                           ;psect for function _BQ_INIT
 10473  0EFE                     _BQ_INIT:	
 10474  0EFE                     l2856:	
 10475                           ;incstack = 0
 10476                           ; Regs used in _BQ_INIT: [wreg+status,2+status,0+pclath+cstack]
 10477                           
 10478                           
 10479                           ;BQ25895M.c: 145: BQ_Write(0x00, REG00_config);
 10480  0EFE  0141               	movlb	1	; select bank1
 10481  0EFF  085E               	movf	_REG00_config^(0+128),w
 10482  0F00  00F3               	movwf	??_BQ_INIT
 10483  0F01  0873               	movf	??_BQ_INIT,w
 10484  0F02  00F1               	movwf	BQ_Write@data
 10485  0F03  3000               	movlw	0
 10486  0F04  318B  239B  318E   	fcall	_BQ_Write
 10487                           
 10488                           ;BQ25895M.c: 146: BQ_Write(0x01, REG01_config);
 10489  0F07  0141               	movlb	1	; select bank1
 10490  0F08  085D               	movf	_REG01_config^(0+128),w
 10491  0F09  00F3               	movwf	??_BQ_INIT
 10492  0F0A  0873               	movf	??_BQ_INIT,w
 10493  0F0B  00F1               	movwf	BQ_Write@data
 10494  0F0C  3001               	movlw	1
 10495  0F0D  318B  239B  318E   	fcall	_BQ_Write
 10496                           
 10497                           ;BQ25895M.c: 147: BQ_Write(0x02, REG02_config);
 10498  0F10  0141               	movlb	1	; select bank1
 10499  0F11  085C               	movf	_REG02_config^(0+128),w
 10500  0F12  00F3               	movwf	??_BQ_INIT
 10501  0F13  0873               	movf	??_BQ_INIT,w
 10502  0F14  00F1               	movwf	BQ_Write@data
 10503  0F15  3002               	movlw	2
 10504  0F16  318B  239B  318E   	fcall	_BQ_Write
 10505                           
 10506                           ;BQ25895M.c: 148: BQ_Write(0x03, REG03_config);
 10507  0F19  0141               	movlb	1	; select bank1
 10508  0F1A  085B               	movf	_REG03_config^(0+128),w
 10509  0F1B  00F3               	movwf	??_BQ_INIT
 10510  0F1C  0873               	movf	??_BQ_INIT,w
 10511  0F1D  00F1               	movwf	BQ_Write@data
 10512  0F1E  3003               	movlw	3
 10513  0F1F  318B  239B  318E   	fcall	_BQ_Write
 10514                           
 10515                           ;BQ25895M.c: 149: BQ_Write(0x04, REG04_config);
 10516  0F22  0141               	movlb	1	; select bank1
 10517  0F23  085A               	movf	_REG04_config^(0+128),w
 10518  0F24  00F3               	movwf	??_BQ_INIT
 10519  0F25  0873               	movf	??_BQ_INIT,w
 10520  0F26  00F1               	movwf	BQ_Write@data
 10521  0F27  3004               	movlw	4
 10522  0F28  318B  239B  318E   	fcall	_BQ_Write
 10523                           
 10524                           ;BQ25895M.c: 150: BQ_Write(0x05, REG05_config);
 10525  0F2B  0141               	movlb	1	; select bank1
 10526  0F2C  0859               	movf	_REG05_config^(0+128),w
 10527  0F2D  00F3               	movwf	??_BQ_INIT
 10528  0F2E  0873               	movf	??_BQ_INIT,w
 10529  0F2F  00F1               	movwf	BQ_Write@data
 10530  0F30  3005               	movlw	5
 10531  0F31  318B  239B  318E   	fcall	_BQ_Write
 10532                           
 10533                           ;BQ25895M.c: 151: BQ_Write(0x06, REG06_config);
 10534  0F34  0141               	movlb	1	; select bank1
 10535  0F35  0858               	movf	_REG06_config^(0+128),w
 10536  0F36  00F3               	movwf	??_BQ_INIT
 10537  0F37  0873               	movf	??_BQ_INIT,w
 10538  0F38  00F1               	movwf	BQ_Write@data
 10539  0F39  3006               	movlw	6
 10540  0F3A  318B  239B  318E   	fcall	_BQ_Write
 10541                           
 10542                           ;BQ25895M.c: 152: BQ_Write(0x07, REG07_config);
 10543  0F3D  0141               	movlb	1	; select bank1
 10544  0F3E  0857               	movf	_REG07_config^(0+128),w
 10545  0F3F  00F3               	movwf	??_BQ_INIT
 10546  0F40  0873               	movf	??_BQ_INIT,w
 10547  0F41  00F1               	movwf	BQ_Write@data
 10548  0F42  3007               	movlw	7
 10549  0F43  318B  239B  318E   	fcall	_BQ_Write
 10550                           
 10551                           ;BQ25895M.c: 153: BQ_Write(0x08, REG08_config);
 10552  0F46  0141               	movlb	1	; select bank1
 10553  0F47  0856               	movf	_REG08_config^(0+128),w
 10554  0F48  00F3               	movwf	??_BQ_INIT
 10555  0F49  0873               	movf	??_BQ_INIT,w
 10556  0F4A  00F1               	movwf	BQ_Write@data
 10557  0F4B  3008               	movlw	8
 10558  0F4C  318B  239B  318E   	fcall	_BQ_Write
 10559  0F4F                     l447:	
 10560  0F4F  0008               	return
 10561  0F50                     __end_of_BQ_INIT:	
 10562                           
 10563                           	psect	text46
 10564  0B9B                     __ptext46:	
 10565 ;; *************** function _BQ_Write *****************
 10566 ;; Defined at:
 10567 ;;		line 15 in file "BQ25895M.c"
 10568 ;; Parameters:    Size  Location     Type
 10569 ;;  reg             1    wreg     unsigned char 
 10570 ;;  data            1    1[COMMON] unsigned char 
 10571 ;; Auto vars:     Size  Location     Type
 10572 ;;  reg             1    2[COMMON] unsigned char 
 10573 ;; Return value:  Size  Location     Type
 10574 ;;                  1    wreg      void 
 10575 ;; Registers used:
 10576 ;;		wreg, status,2, status,0, pclath, cstack
 10577 ;; Tracked objects:
 10578 ;;		On entry : 0/0
 10579 ;;		On exit  : 0/0
 10580 ;;		Unchanged: 0/0
 10581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10582 ;;      Params:         1       0       0       0       0       0       0       0
 10583 ;;      Locals:         1       0       0       0       0       0       0       0
 10584 ;;      Temps:          0       0       0       0       0       0       0       0
 10585 ;;      Totals:         2       0       0       0       0       0       0       0
 10586 ;;Total ram usage:        2 bytes
 10587 ;; Hardware stack levels used:    1
 10588 ;; Hardware stack levels required when called:    3
 10589 ;; This function calls:
 10590 ;;		_I2C_Master_Start
 10591 ;;		_I2C_Master_Stop
 10592 ;;		_I2C_Master_Write
 10593 ;; This function is called by:
 10594 ;;		_thermal_protection
 10595 ;;		_main
 10596 ;;		_BQ_UPDATE
 10597 ;;		_BQ_INIT
 10598 ;; This function uses a non-reentrant model
 10599 ;;
 10600                           
 10601                           
 10602                           ;psect for function _BQ_Write
 10603  0B9B                     _BQ_Write:	
 10604                           
 10605                           ;incstack = 0
 10606                           ; Regs used in _BQ_Write: [wreg+status,2+status,0+pclath+cstack]
 10607                           ;BQ_Write@reg stored from wreg
 10608  0B9B  00F2               	movwf	BQ_Write@reg
 10609  0B9C                     l2630:	
 10610                           
 10611                           ;BQ25895M.c: 16: I2C_Master_Start();
 10612  0B9C  318B  2325  318B   	fcall	_I2C_Master_Start
 10613                           
 10614                           ;BQ25895M.c: 17: I2C_Master_Write(0x6A << 1);
 10615  0B9F  30D4               	movlw	212
 10616  0BA0  318B  2356  318B   	fcall	_I2C_Master_Write
 10617                           
 10618                           ;BQ25895M.c: 18: I2C_Master_Write(reg);
 10619  0BA3  0872               	movf	BQ_Write@reg,w
 10620  0BA4  318B  2356  318B   	fcall	_I2C_Master_Write
 10621                           
 10622                           ;BQ25895M.c: 19: I2C_Master_Write(data);
 10623  0BA7  0871               	movf	BQ_Write@data,w
 10624  0BA8  318B  2356  318B   	fcall	_I2C_Master_Write
 10625                           
 10626                           ;BQ25895M.c: 20: I2C_Master_Stop();
 10627  0BAB  318B  232B  318B   	fcall	_I2C_Master_Stop
 10628  0BAE                     l334:	
 10629  0BAE  0008               	return
 10630  0BAF                     __end_of_BQ_Write:	
 10631                           
 10632                           	psect	text47
 10633  0B56                     __ptext47:	
 10634 ;; *************** function _I2C_Master_Write *****************
 10635 ;; Defined at:
 10636 ;;		line 76 in file "I2C.c"
 10637 ;; Parameters:    Size  Location     Type
 10638 ;;  data            1    wreg     unsigned char 
 10639 ;; Auto vars:     Size  Location     Type
 10640 ;;  data            1    0[COMMON] unsigned char 
 10641 ;; Return value:  Size  Location     Type
 10642 ;;                  1    wreg      void 
 10643 ;; Registers used:
 10644 ;;		wreg, status,2, status,0, pclath, cstack
 10645 ;; Tracked objects:
 10646 ;;		On entry : 0/0
 10647 ;;		On exit  : 0/0
 10648 ;;		Unchanged: 0/0
 10649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10650 ;;      Params:         0       0       0       0       0       0       0       0
 10651 ;;      Locals:         1       0       0       0       0       0       0       0
 10652 ;;      Temps:          0       0       0       0       0       0       0       0
 10653 ;;      Totals:         1       0       0       0       0       0       0       0
 10654 ;;Total ram usage:        1 bytes
 10655 ;; Hardware stack levels used:    1
 10656 ;; Hardware stack levels required when called:    2
 10657 ;; This function calls:
 10658 ;;		_I2C_Master_Wait
 10659 ;; This function is called by:
 10660 ;;		_BQ_Write
 10661 ;;		_BQ_Read
 10662 ;; This function uses a non-reentrant model
 10663 ;;
 10664                           
 10665                           
 10666                           ;psect for function _I2C_Master_Write
 10667  0B56                     _I2C_Master_Write:	
 10668                           
 10669                           ;incstack = 0
 10670                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 10671                           ;I2C_Master_Write@data stored from wreg
 10672  0B56  00F0               	movwf	I2C_Master_Write@data
 10673  0B57                     l2400:	
 10674                           
 10675                           ;I2C.c: 78: I2C_Master_Wait();
 10676  0B57  318B  2383  318B   	fcall	_I2C_Master_Wait
 10677  0B5A                     l2402:	
 10678                           
 10679                           ;I2C.c: 79: SSP1BUF = data;
 10680  0B5A  0870               	movf	I2C_Master_Write@data,w
 10681  0B5B  0143               	movlb	3	; select bank3
 10682  0B5C  008C               	movwf	12	;volatile
 10683  0B5D                     l308:	
 10684  0B5D  0008               	return
 10685  0B5E                     __end_of_I2C_Master_Write:	
 10686                           
 10687                           	psect	text48
 10688  0B2B                     __ptext48:	
 10689 ;; *************** function _I2C_Master_Stop *****************
 10690 ;; Defined at:
 10691 ;;		line 70 in file "I2C.c"
 10692 ;; Parameters:    Size  Location     Type
 10693 ;;		None
 10694 ;; Auto vars:     Size  Location     Type
 10695 ;;		None
 10696 ;; Return value:  Size  Location     Type
 10697 ;;                  1    wreg      void 
 10698 ;; Registers used:
 10699 ;;		wreg, status,2, status,0, pclath, cstack
 10700 ;; Tracked objects:
 10701 ;;		On entry : 0/0
 10702 ;;		On exit  : 0/0
 10703 ;;		Unchanged: 0/0
 10704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10705 ;;      Params:         0       0       0       0       0       0       0       0
 10706 ;;      Locals:         0       0       0       0       0       0       0       0
 10707 ;;      Temps:          0       0       0       0       0       0       0       0
 10708 ;;      Totals:         0       0       0       0       0       0       0       0
 10709 ;;Total ram usage:        0 bytes
 10710 ;; Hardware stack levels used:    1
 10711 ;; Hardware stack levels required when called:    2
 10712 ;; This function calls:
 10713 ;;		_I2C_Master_Wait
 10714 ;; This function is called by:
 10715 ;;		_BQ_Write
 10716 ;;		_BQ_Read
 10717 ;; This function uses a non-reentrant model
 10718 ;;
 10719                           
 10720                           
 10721                           ;psect for function _I2C_Master_Stop
 10722  0B2B                     _I2C_Master_Stop:	
 10723  0B2B                     l2396:	
 10724                           ;incstack = 0
 10725                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 10726                           
 10727                           
 10728                           ;I2C.c: 72: I2C_Master_Wait();
 10729  0B2B  318B  2383  318B   	fcall	_I2C_Master_Wait
 10730  0B2E                     l2398:	
 10731                           
 10732                           ;I2C.c: 73: SSP1CON2bits.PEN = 1;
 10733  0B2E  0143               	movlb	3	; select bank3
 10734  0B2F  1511               	bsf	17,2	;volatile
 10735  0B30                     l305:	
 10736  0B30  0008               	return
 10737  0B31                     __end_of_I2C_Master_Stop:	
 10738                           
 10739                           	psect	text49
 10740  0B25                     __ptext49:	
 10741 ;; *************** function _I2C_Master_Start *****************
 10742 ;; Defined at:
 10743 ;;		line 58 in file "I2C.c"
 10744 ;; Parameters:    Size  Location     Type
 10745 ;;		None
 10746 ;; Auto vars:     Size  Location     Type
 10747 ;;		None
 10748 ;; Return value:  Size  Location     Type
 10749 ;;                  1    wreg      void 
 10750 ;; Registers used:
 10751 ;;		wreg, status,2, status,0, pclath, cstack
 10752 ;; Tracked objects:
 10753 ;;		On entry : 0/0
 10754 ;;		On exit  : 0/0
 10755 ;;		Unchanged: 0/0
 10756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10757 ;;      Params:         0       0       0       0       0       0       0       0
 10758 ;;      Locals:         0       0       0       0       0       0       0       0
 10759 ;;      Temps:          0       0       0       0       0       0       0       0
 10760 ;;      Totals:         0       0       0       0       0       0       0       0
 10761 ;;Total ram usage:        0 bytes
 10762 ;; Hardware stack levels used:    1
 10763 ;; Hardware stack levels required when called:    2
 10764 ;; This function calls:
 10765 ;;		_I2C_Master_Wait
 10766 ;; This function is called by:
 10767 ;;		_BQ_Write
 10768 ;;		_BQ_Read
 10769 ;; This function uses a non-reentrant model
 10770 ;;
 10771                           
 10772                           
 10773                           ;psect for function _I2C_Master_Start
 10774  0B25                     _I2C_Master_Start:	
 10775  0B25                     l2392:	
 10776                           ;incstack = 0
 10777                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 10778                           
 10779                           
 10780                           ;I2C.c: 60: I2C_Master_Wait();
 10781  0B25  318B  2383  318B   	fcall	_I2C_Master_Wait
 10782  0B28                     l2394:	
 10783                           
 10784                           ;I2C.c: 61: SSP1CON2bits.SEN = 1;
 10785  0B28  0143               	movlb	3	; select bank3
 10786  0B29  1411               	bsf	17,0	;volatile
 10787  0B2A                     l299:	
 10788  0B2A  0008               	return
 10789  0B2B                     __end_of_I2C_Master_Start:	
 10790                           
 10791                           	psect	text50
 10792  0B83                     __ptext50:	
 10793 ;; *************** function _I2C_Master_Wait *****************
 10794 ;; Defined at:
 10795 ;;		line 53 in file "I2C.c"
 10796 ;; Parameters:    Size  Location     Type
 10797 ;;		None
 10798 ;; Auto vars:     Size  Location     Type
 10799 ;;		None
 10800 ;; Return value:  Size  Location     Type
 10801 ;;                  1    wreg      void 
 10802 ;; Registers used:
 10803 ;;		wreg, status,2
 10804 ;; Tracked objects:
 10805 ;;		On entry : 0/0
 10806 ;;		On exit  : 0/0
 10807 ;;		Unchanged: 0/0
 10808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10809 ;;      Params:         0       0       0       0       0       0       0       0
 10810 ;;      Locals:         0       0       0       0       0       0       0       0
 10811 ;;      Temps:          0       0       0       0       0       0       0       0
 10812 ;;      Totals:         0       0       0       0       0       0       0       0
 10813 ;;Total ram usage:        0 bytes
 10814 ;; Hardware stack levels used:    1
 10815 ;; Hardware stack levels required when called:    1
 10816 ;; This function calls:
 10817 ;;		Nothing
 10818 ;; This function is called by:
 10819 ;;		_I2C_Master_Start
 10820 ;;		_I2C_Master_Stop
 10821 ;;		_I2C_Master_Write
 10822 ;;		_I2C_Master_Read
 10823 ;;		_I2C_Master_Repeated_Start
 10824 ;; This function uses a non-reentrant model
 10825 ;;
 10826                           
 10827                           
 10828                           ;psect for function _I2C_Master_Wait
 10829  0B83                     _I2C_Master_Wait:	
 10830  0B83                     l2376:	
 10831                           ;incstack = 0
 10832                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 10833                           
 10834  0B83                     l293:	
 10835                           ;I2C.c: 55: while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
 10836                           
 10837  0B83  0143               	movlb	3	; select bank3
 10838  0B84  190F               	btfsc	15,2	;volatile
 10839  0B85  2B87               	goto	u1571
 10840  0B86  2B88               	goto	u1570
 10841  0B87                     u1571:	
 10842  0B87  2B83               	goto	l293
 10843  0B88                     u1570:	
 10844  0B88                     l2378:	
 10845  0B88  0811               	movf	17,w	;volatile
 10846  0B89  391F               	andlw	31
 10847  0B8A  1D03               	btfss	3,2
 10848  0B8B  2B8D               	goto	u1581
 10849  0B8C  2B8E               	goto	u1580
 10850  0B8D                     u1581:	
 10851  0B8D  2B83               	goto	l293
 10852  0B8E                     u1580:	
 10853  0B8E                     l296:	
 10854  0B8E  0008               	return
 10855  0B8F                     __end_of_I2C_Master_Wait:	
 10856                           
 10857                           	psect	text51
 10858  0D04                     __ptext51:	
 10859 ;; *************** function _BQ_CONFIG_INIT *****************
 10860 ;; Defined at:
 10861 ;;		line 132 in file "BQ25895M.c"
 10862 ;; Parameters:    Size  Location     Type
 10863 ;;		None
 10864 ;; Auto vars:     Size  Location     Type
 10865 ;;		None
 10866 ;; Return value:  Size  Location     Type
 10867 ;;                  1    wreg      void 
 10868 ;; Registers used:
 10869 ;;		wreg
 10870 ;; Tracked objects:
 10871 ;;		On entry : 0/0
 10872 ;;		On exit  : 0/0
 10873 ;;		Unchanged: 0/0
 10874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10875 ;;      Params:         0       0       0       0       0       0       0       0
 10876 ;;      Locals:         0       0       0       0       0       0       0       0
 10877 ;;      Temps:          1       0       0       0       0       0       0       0
 10878 ;;      Totals:         1       0       0       0       0       0       0       0
 10879 ;;Total ram usage:        1 bytes
 10880 ;; Hardware stack levels used:    1
 10881 ;; Hardware stack levels required when called:    1
 10882 ;; This function calls:
 10883 ;;		Nothing
 10884 ;; This function is called by:
 10885 ;;		_main
 10886 ;; This function uses a non-reentrant model
 10887 ;;
 10888                           
 10889                           
 10890                           ;psect for function _BQ_CONFIG_INIT
 10891  0D04                     _BQ_CONFIG_INIT:	
 10892  0D04                     l2852:	
 10893                           ;incstack = 0
 10894                           ; Regs used in _BQ_CONFIG_INIT: [wreg]
 10895                           
 10896                           
 10897                           ;BQ25895M.c: 133: REG00_config = (EN_HIZ<<7)|(EN_ILIM<<6)|(INILIM);
 10898  0D04  307A               	movlw	122
 10899  0D05  00F0               	movwf	??_BQ_CONFIG_INIT
 10900  0D06  0870               	movf	??_BQ_CONFIG_INIT,w
 10901  0D07  0141               	movlb	1	; select bank1
 10902  0D08  00DE               	movwf	_REG00_config^(0+128)
 10903                           
 10904                           ;BQ25895M.c: 134: REG01_config = (BHOT<<6)|(BCOLD<<5)|(VINDPM_OS);
 10905  0D09  3006               	movlw	6
 10906  0D0A  00F0               	movwf	??_BQ_CONFIG_INIT
 10907  0D0B  0870               	movf	??_BQ_CONFIG_INIT,w
 10908  0D0C  00DD               	movwf	_REG01_config^(0+128)
 10909                           
 10910                           ;BQ25895M.c: 135: REG02_config = (CONV_START<<7)|(CONV_RATE<<6)|(BOOST_FREQ<<5)|(ICO_EN<
      +                          <4)|(HVDCP_EN<<3)|(MAXC_EN<<2)|(FORCE_DPDM<<1)|(AUTO_DPDM_EN);
 10911  0D0D  3031               	movlw	49
 10912  0D0E  00F0               	movwf	??_BQ_CONFIG_INIT
 10913  0D0F  0870               	movf	??_BQ_CONFIG_INIT,w
 10914  0D10  00DC               	movwf	_REG02_config^(0+128)
 10915                           
 10916                           ;BQ25895M.c: 136: REG03_config = (WD_RST<<6)|(OTG_CONFIG<<5)|(CHG_CONFIG<<4)|(SYS_MIN<<1
      +                          );
 10917  0D11  301A               	movlw	26
 10918  0D12  00F0               	movwf	??_BQ_CONFIG_INIT
 10919  0D13  0870               	movf	??_BQ_CONFIG_INIT,w
 10920  0D14  00DB               	movwf	_REG03_config^(0+128)
 10921                           
 10922                           ;BQ25895M.c: 137: REG04_config = (ICHG);
 10923  0D15  3060               	movlw	96
 10924  0D16  00F0               	movwf	??_BQ_CONFIG_INIT
 10925  0D17  0870               	movf	??_BQ_CONFIG_INIT,w
 10926  0D18  00DA               	movwf	_REG04_config^(0+128)
 10927                           
 10928                           ;BQ25895M.c: 138: REG05_config = (IPRECHG<<4)|(ITERM);
 10929  0D19  3013               	movlw	19
 10930  0D1A  00F0               	movwf	??_BQ_CONFIG_INIT
 10931  0D1B  0870               	movf	??_BQ_CONFIG_INIT,w
 10932  0D1C  00D9               	movwf	_REG05_config^(0+128)
 10933                           
 10934                           ;BQ25895M.c: 139: REG06_config = (VREG<<2)|(BATLOWV<<1)|(VRECHG);
 10935  0D1D  3058               	movlw	88
 10936  0D1E  00F0               	movwf	??_BQ_CONFIG_INIT
 10937  0D1F  0870               	movf	??_BQ_CONFIG_INIT,w
 10938  0D20  00D8               	movwf	_REG06_config^(0+128)
 10939                           
 10940                           ;BQ25895M.c: 140: REG07_config = (EN_TERM<<7)|(STAT_DIS<<6)|(WATCHDOG<<4)|(EN_TIMER<<3)|
      +                          (CHG_TIMER<<1)|0b1;
 10941  0D21  30DD               	movlw	221
 10942  0D22  00F0               	movwf	??_BQ_CONFIG_INIT
 10943  0D23  0870               	movf	??_BQ_CONFIG_INIT,w
 10944  0D24  00D7               	movwf	_REG07_config^(0+128)
 10945  0D25                     l2854:	
 10946                           
 10947                           ;BQ25895M.c: 141: REG08_config = (BAT_COMP<<5)|(VCLAMP<<2)|TREG;
 10948  0D25  01D6               	clrf	_REG08_config^(0+128)
 10949  0D26  0AD6               	incf	_REG08_config^(0+128),f
 10950  0D27                     l444:	
 10951  0D27  0008               	return
 10952  0D28                     __end_of_BQ_CONFIG_INIT:	
 10953                           
 10954                           	psect	intentry
 10955  0004                     __pintentry:	
 10956 ;; *************** function _ISR *****************
 10957 ;; Defined at:
 10958 ;;		line 68 in file "main.c"
 10959 ;; Parameters:    Size  Location     Type
 10960 ;;		None
 10961 ;; Auto vars:     Size  Location     Type
 10962 ;;		None
 10963 ;; Return value:  Size  Location     Type
 10964 ;;                  1    wreg      void 
 10965 ;; Registers used:
 10966 ;;		wreg
 10967 ;; Tracked objects:
 10968 ;;		On entry : 0/0
 10969 ;;		On exit  : 0/0
 10970 ;;		Unchanged: 0/0
 10971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10972 ;;      Params:         0       0       0       0       0       0       0       0
 10973 ;;      Locals:         0       0       0       0       0       0       0       0
 10974 ;;      Temps:          0       0       0       0       0       0       0       0
 10975 ;;      Totals:         0       0       0       0       0       0       0       0
 10976 ;;Total ram usage:        0 bytes
 10977 ;; Hardware stack levels used:    1
 10978 ;; This function calls:
 10979 ;;		Nothing
 10980 ;; This function is called by:
 10981 ;;		Interrupt level 1
 10982 ;; This function uses a non-reentrant model
 10983 ;;
 10984                           
 10985  0004                     _ISR:	
 10986                           
 10987                           ;incstack = 0
 10988  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 10989                           
 10990                           ; Regs used in _ISR: [wreg]
 10991  0005  3180               	pagesel	$
 10992  0006                     i1l3066:	
 10993                           
 10994                           ;main.c: 70: if(TMR1IF) {
 10995  0006  014E               	movlb	14	; select bank14
 10996  0007  1C10               	btfss	16,0	;volatile
 10997  0008  280A               	goto	u261_21
 10998  0009  280B               	goto	u261_20
 10999  000A                     u261_21:	
 11000  000A  281A               	goto	i1l3072
 11001  000B                     u261_20:	
 11002  000B                     i1l3068:	
 11003                           
 11004                           ;main.c: 71: TMR1IF = 0;
 11005  000B  1010               	bcf	16,0	;volatile
 11006                           
 11007                           ;main.c: 72: TMR1 = 65228;
 11008  000C  30FE               	movlw	254
 11009  000D  0144               	movlb	4	; select bank4
 11010  000E  008D               	movwf	13	;volatile
 11011  000F  30CC               	movlw	204
 11012  0010  008C               	movwf	12	;volatile
 11013  0011                     i1l3070:	
 11014                           
 11015                           ;main.c: 73: timer_counter++;
 11016  0011  3001               	movlw	1
 11017  0012  0142               	movlb	2	; select bank2
 11018  0013  07C0               	addwf	_timer_counter^(0+256),f
 11019  0014  3000               	movlw	0
 11020  0015  3DC1               	addwfc	(_timer_counter+1)^(0+256),f
 11021  0016  3000               	movlw	0
 11022  0017  3DC2               	addwfc	(_timer_counter+2)^(0+256),f
 11023  0018  3000               	movlw	0
 11024  0019  3DC3               	addwfc	(_timer_counter+3)^(0+256),f
 11025  001A                     i1l3072:	
 11026                           
 11027                           ;main.c: 74: };main.c: 76: if(IOCAF5) {
 11028  001A  017E               	movlb	62	; select bank62
 11029  001B  1EBF               	btfss	63,5	;volatile
 11030  001C  281E               	goto	u262_21
 11031  001D  281F               	goto	u262_20
 11032  001E                     u262_21:	
 11033  001E  2820               	goto	i1l136
 11034  001F                     u262_20:	
 11035  001F                     i1l3074:	
 11036                           
 11037                           ;main.c: 77: IOCAF5 = 0;
 11038  001F  12BF               	bcf	63,5	;volatile
 11039  0020                     i1l136:	
 11040  0020  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11041  0021  0009               	retfie
 11042  0022                     __end_of_ISR:	
 11043  007E                     btemp	set	126	;btemp
 11044  007E                     int$flags	set	126
 11045  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        19
    BSS         76
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            79     74      79
    BANK1            80     42      80
    BANK2            80      0      52
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    i2c_master_read_u16@data	PTR unsigned int  size(1) Largest target is 2
		 -> stusb_negotiate@header(BANK1[2]), 

    i2c_master_read_u8@data	PTR unsigned char  size(1) Largest target is 40
		 -> stusb_negotiate@buffer(BANK1[40]), reset@res(BANK0[1]), 

    i2c_master_read@buf	PTR void  size(1) Largest target is 40
		 -> stusb_negotiate@header(BANK1[2]), stusb_negotiate@buffer(BANK1[40]), reset@res(BANK0[1]), 

    i2c_master_read@data	PTR unsigned char  size(1) Largest target is 40
		 -> stusb_negotiate@header(BANK1[2]), stusb_negotiate@buffer(BANK1[40]), reset@res(BANK0[1]), 

    i2c_master_write@buf	PTR const void  size(1) Largest target is 4
		 -> i2c_master_write_u32@data(BANK0[4]), i2c_master_write_u16@data(COMMON[2]), i2c_master_write_u8@data(BANK0[1]), 

    i2c_master_write@data	PTR unsigned char  size(1) Largest target is 4
		 -> i2c_master_write_u32@data(BANK0[4]), i2c_master_write_u16@data(COMMON[2]), i2c_master_write_u8@data(BANK0[1]), 

    negotiate_optimal_pdo@src_pdos	PTR unsigned long  size(1) Largest target is 40
		 -> stusb_negotiate@buffer(BANK1[40]), 


Critical Paths under _main in COMMON

    _thermal_protection->_readADC
    _stusb_negotiate->_i2c_master_read_u16
    _stusb_negotiate->_i2c_master_read_u8
    _write_pdo->_i2c_master_write_u32
    _reset->_i2c_master_read_u8
    _reset->_i2c_master_write_u8
    _i2c_master_write_u8->_i2c_master_write
    _i2c_master_read_u8->_i2c_master_read
    _i2c_master_write_u32->_i2c_master_write
    _i2c_master_write->_i2c_master_send_byte
    _i2c_master_read_u16->_i2c_master_read
    _i2c_master_read->_i2c_master_send_byte
    _flash_led->_timer_diff
    _battery_fade->_Map
    _Map->___awdiv
    ___awdiv->___wmul
    _RGB_fade->_timer_diff
    _chrg_led->_timer_diff
    _I2C_Master_Init->___lldiv
    ___lldiv->___lmul
    _BQ_UPDATE->_BQ_get_chrg_state
    _BQ_get_chrg_state->_BQ_Read
    _BQ_Read->_I2C_Master_Read
    _BQ_INIT->_BQ_Write
    _BQ_Write->_I2C_Master_Write

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_stusb_negotiate
    _stusb_negotiate->_negotiate_optimal_pdo
    _negotiate_optimal_pdo->_write_pdo
    _write_pdo->_reset
    _reset->_i2c_master_read_u8
    _reset->_i2c_master_write_u8
    _led_modes->_battery_fade
    _battery_fade->_Map
    _Map->___awdiv
    _I2C_Master_Init->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_stusb_negotiate

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   27773
                                             73 BANK0      1     1      0
                     _BQ_CONFIG_INIT
                            _BQ_INIT
                          _BQ_UPDATE
                           _BQ_Write
                    _I2C_Master_Init
                      _I2C_bus_reset
                          _PIC_SETUP
                           _PPS_lock
                         _PPS_unlock
                           _PWM_INIT
                     _PWM_power_down
                           _chrg_led
                           _get_time
                          _led_modes
                    _stusb_negotiate
                 _thermal_protection
                         _timer_diff
 ---------------------------------------------------------------------------------
 (1) _thermal_protection                                   1     1      0    1000
                                              5 COMMON     1     1      0
                           _BQ_Write
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _stusb_negotiate                                     48    48      0   16288
                                             67 BANK0      6     6      0
                                              0 BANK1     42    42      0
                    _i2c_master_read
                _i2c_master_read_u16
                 _i2c_master_read_u8
              _negotiate_optimal_pdo
                              _reset
 ---------------------------------------------------------------------------------
 (2) _negotiate_optimal_pdo                               35    33      2    7578
                                             32 BANK0     35    33      2
                            ___lldiv
                             ___lmul
                             ___wmul
                          _write_pdo
 ---------------------------------------------------------------------------------
 (3) _write_pdo                                           21    16      5    5604
                                             11 BANK0     21    16      5
                            ___lwdiv
               _i2c_master_write_u32
                              _reset
 ---------------------------------------------------------------------------------
 (2) _reset                                                7     5      2    3626
                                              4 BANK0      7     5      2
                 _i2c_master_read_u8
                _i2c_master_write_u8
 ---------------------------------------------------------------------------------
 (3) _i2c_master_write_u8                                  5     3      2    1455
                                             13 COMMON     1     1      0
                                              0 BANK0      4     2      2
                   _i2c_master_write
 ---------------------------------------------------------------------------------
 (3) _i2c_master_read_u8                                   5     3      2    1967
                                             13 COMMON     1     1      0
                                              0 BANK0      4     2      2
                    _i2c_master_read
 ---------------------------------------------------------------------------------
 (4) _i2c_master_write_u32                                 8     3      5    1151
                                             13 COMMON     1     1      0
                                              0 BANK0      7     2      5
                   _i2c_master_write
 ---------------------------------------------------------------------------------
 (4) _i2c_master_write                                     9     5      4     932
                                              4 COMMON     9     5      4
               _i2c_master_send_byte
                   _i2c_master_start
                    _i2c_master_stop
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     244
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) _i2c_master_read_u16                                  5     3      2    1511
                                             13 COMMON     1     1      0
                                              0 BANK0      4     2      2
                    _i2c_master_read
 ---------------------------------------------------------------------------------
 (4) _i2c_master_read                                      9     5      4    1293
                                              4 COMMON     9     5      4
            _i2c_master_receive_byte
            _i2c_master_repeat_start
               _i2c_master_send_byte
                   _i2c_master_start
                    _i2c_master_stop
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_stop                                      0     0      0       0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_start                                     0     0      0       0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_send_byte                                 4     1      3      22
                                              0 COMMON     4     1      3
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_repeat_start                              0     0      0       0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_receive_byte                              3     3      0      45
                                              0 COMMON     3     3      0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_modes                                            0     0      0    4196
                           _RGB_fade
                       _battery_fade
                          _flash_led
 ---------------------------------------------------------------------------------
 (2) _flash_led                                            1     1      0     782
                                              8 COMMON     1     1      0
                           _get_time
                         _timer_diff
 ---------------------------------------------------------------------------------
 (2) _battery_fade                                         9     9      0    2632
                                             10 BANK0      9     9      0
                                _Map
 ---------------------------------------------------------------------------------
 (3) _Map                                                  8     2      6    2294
                                             11 COMMON     2     2      0
                                              4 BANK0      6     0      6
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     452
                                              6 COMMON     5     1      4
                                              0 BANK0      4     4      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _RGB_fade                                             1     1      0     782
                                              8 COMMON     1     1      0
                           _get_time
                         _timer_diff
 ---------------------------------------------------------------------------------
 (1) _chrg_led                                             1     1      0     782
                                              8 COMMON     1     1      0
                           _get_time
                         _timer_diff
 ---------------------------------------------------------------------------------
 (1) _PWM_power_down                                       0     0      0       0
                           _PPS_lock
                         _PPS_unlock
 ---------------------------------------------------------------------------------
 (1) _PWM_INIT                                             0     0      0       0
                           _PPS_lock
                         _PPS_unlock
 ---------------------------------------------------------------------------------
 (2) _PPS_unlock                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PPS_lock                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIC_SETUP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_bus_reset                                        2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     716
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                             12 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _BQ_UPDATE                                            1     1      0    2029
                                             12 COMMON     1     1      0
                            _BQ_Read
                           _BQ_Write
                  _BQ_get_chrg_state
                           _get_time
                         _timer_diff
 ---------------------------------------------------------------------------------
 (1) _timer_diff                                           8     4      4     782
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _get_time                                             4     0      4       0
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) _BQ_get_chrg_state                                    3     3      0     157
                                              9 COMMON     3     3      0
                            _BQ_Read
 ---------------------------------------------------------------------------------
 (3) _BQ_Read                                              6     4      2     112
                                              3 COMMON     6     4      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Read                                      3     3      0      45
                                              0 COMMON     3     3      0
                     _I2C_Master_Ack
                    _I2C_Master_Wait
                    _I2C_Master_nAck
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_nAck                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Ack                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BQ_INIT                                              1     1      0     978
                                              3 COMMON     1     1      0
                           _BQ_Write
 ---------------------------------------------------------------------------------
 (2) _BQ_Write                                             2     1      1     978
                                              1 COMMON     2     1      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      22
                                              0 COMMON     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BQ_CONFIG_INIT                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BQ_CONFIG_INIT
   _BQ_INIT
     _BQ_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _BQ_UPDATE
     _BQ_Read
       _I2C_Master_Read
         _I2C_Master_Ack
         _I2C_Master_Wait
         _I2C_Master_nAck
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BQ_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BQ_get_chrg_state
       _BQ_Read
         _I2C_Master_Read
           _I2C_Master_Ack
           _I2C_Master_Wait
           _I2C_Master_nAck
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _get_time
     _timer_diff
   _BQ_Write
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _I2C_Master_Init
     ___lldiv
       ___lmul (ARG)
   _I2C_bus_reset
   _PIC_SETUP
   _PPS_lock
   _PPS_unlock
   _PWM_INIT
     _PPS_lock
     _PPS_unlock
   _PWM_power_down
     _PPS_lock
     _PPS_unlock
   _chrg_led
     _get_time
     _timer_diff
   _get_time
   _led_modes
     _RGB_fade
       _get_time
       _timer_diff
     _battery_fade
       _Map
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _flash_led
       _get_time
       _timer_diff
   _stusb_negotiate
     _i2c_master_read
       _i2c_master_receive_byte
         _i2c_master_wait
       _i2c_master_repeat_start
         _i2c_master_wait
       _i2c_master_send_byte
         _i2c_master_wait
       _i2c_master_start
         _i2c_master_wait
       _i2c_master_stop
         _i2c_master_wait
       _i2c_master_wait
     _i2c_master_read_u16
       _i2c_master_read
         _i2c_master_receive_byte
           _i2c_master_wait
         _i2c_master_repeat_start
           _i2c_master_wait
         _i2c_master_send_byte
           _i2c_master_wait
         _i2c_master_start
           _i2c_master_wait
         _i2c_master_stop
           _i2c_master_wait
         _i2c_master_wait
     _i2c_master_read_u8
       _i2c_master_read
         _i2c_master_receive_byte
           _i2c_master_wait
         _i2c_master_repeat_start
           _i2c_master_wait
         _i2c_master_send_byte
           _i2c_master_wait
         _i2c_master_start
           _i2c_master_wait
         _i2c_master_stop
           _i2c_master_wait
         _i2c_master_wait
     _negotiate_optimal_pdo
       ___lldiv
         ___lmul (ARG)
       ___lmul
       ___wmul
       _write_pdo
         ___lwdiv
         _i2c_master_write_u32
           _i2c_master_write
             _i2c_master_send_byte
               _i2c_master_wait
             _i2c_master_start
               _i2c_master_wait
             _i2c_master_stop
               _i2c_master_wait
             _i2c_master_wait
         _reset
           _i2c_master_read_u8
             _i2c_master_read
               _i2c_master_receive_byte
                 _i2c_master_wait
               _i2c_master_repeat_start
                 _i2c_master_wait
               _i2c_master_send_byte
                 _i2c_master_wait
               _i2c_master_start
                 _i2c_master_wait
               _i2c_master_stop
                 _i2c_master_wait
               _i2c_master_wait
           _i2c_master_write_u8
             _i2c_master_write
               _i2c_master_send_byte
                 _i2c_master_wait
               _i2c_master_start
                 _i2c_master_wait
               _i2c_master_stop
                 _i2c_master_wait
               _i2c_master_wait
     _reset
       _i2c_master_read_u8
         _i2c_master_read
           _i2c_master_receive_byte
             _i2c_master_wait
           _i2c_master_repeat_start
             _i2c_master_wait
           _i2c_master_send_byte
             _i2c_master_wait
           _i2c_master_start
             _i2c_master_wait
           _i2c_master_stop
             _i2c_master_wait
           _i2c_master_wait
       _i2c_master_write_u8
         _i2c_master_write
           _i2c_master_send_byte
             _i2c_master_wait
           _i2c_master_start
             _i2c_master_wait
           _i2c_master_stop
             _i2c_master_wait
           _i2c_master_wait
   _thermal_protection
     _BQ_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _readADC
   _timer_diff

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1EF      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      E1       4        0.0%
BITBANK0            4F      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               4F     4A      4F       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     2A      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      34      10       65.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      E1      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 14 09:03:46 2020

                                   _c 006E                                     _i 006F  
                   _BQ_get_chrg_state 0CC1                         _btn_long_edge 00E0  
                         __CFG_CP$OFF 0000                          ___awdiv@sign 0022  
                 ___wmul@multiplicand 0072                    ?_BQ_get_chrg_state 0070  
                          _PPS_unlock 0B4F                                   l105 0DC5  
                                 l140 0C82                                   l311 0B20  
                                 l305 0B30                                   l161 018A  
                                 l314 0B24                                   l308 0B5D  
                                 l252 0B55                                   l244 0EB7  
                                 l156 011F                                   l148 0085  
                                 l334 0BAE                                   l319 0CA1  
                                 l255 0B65                                   l247 0BEE  
                                 l168 01CB                                   l337 0D70  
                                 l505 05AF                                   l290 0DF4  
                                 l610 0439                                   l355 04B9  
                                 l444 0D27                                   l348 0CE0  
                                 l524 0693                                   l700 0C36  
                                 l604 033E                                   l460 0CF8  
                                 l293 0B83                                   l613 0379  
                                 l534 0E73                                   l447 0F4F  
                                 l711 0B77                                   l359 04B9  
                                 l287 0EFD                                   l703 0C06  
                                 l463 0D03                                   l296 0B8E  
                                 l640 0B8F                                   l714 0BD8  
                                 l299 0B2A                                   l547 0D9A  
                                 l643 0B9A                                   l652 0B42  
                                 l494 076C                                   l662 0C68  
                                 l646 0B3C                                   l591 0536  
                                 l497 0D4B                                   l649 0B36  
                                 l585 0702                                   l818 0FFF  
                                 l659 0BC2                                   l669 0FA4  
                                 l685 0C1E                                   l782 0CAC  
                                 l935 07CC                                   l679 0C4E  
                                 l784 0CC0                                   l689 0622  
                                 l796 07FF                                   _RA2 0062  
                                 _RC0 0070                                   _RA5 0065  
                                 _RC1 0071                                   _RC2 0072  
                                 _RC3 0073                                   _RC4 0074  
                                 _RC5 0075                                   _PR2 028D  
                                 _ISR 0004                                   _Map 0D28  
                                 _dir 006C                          __CFG_BORV$LO 0000  
                                 wreg 0009                   ??_BQ_get_chrg_state 0079  
                       __CFG_BBEN$OFF 0000                            _SYS_ENABLE 00E5  
                        __CFG_LVP$OFF 0000                       __end_of_BQ_INIT 0F50  
                                ?_ISR 0070                          __CFG_ZCD$OFF 0000  
                                ?_Map 0025                                  l1054 0E30  
                                l3000 0680                                  l3002 0682  
                                l3010 0359                                  l3004 0687  
                                l3020 037F                                  l3100 00C8  
                                l2310 05C5                                  l2302 05BF  
                                l3014 0364                                  l3006 033F  
                                l3110 00E9                                  l3102 00D4  
                                l2400 0B57                                  l2320 05E4  
                                l2312 05CD                                  l2304 05BF  
                                l3040 0424                                  l3032 03D1  
                                l3024 0394                                  l3008 0353  
                                l3120 0128                                  l3112 0104  
                                l3104 00DB                                  l2402 0B5A  
                                l2410 0C91                                  l3050 0BDF  
                                l2250 0B94                                  l2330 060B  
                                l2322 05EA                                  l2314 05D3  
                                l2306 05C2                                  l3026 03AC  
                                l3130 0140                                  l3122 0131  
                                l3114 010A                                  l3106 00DC  
                                l2412 0C94                                  l2404 0C84  
                                l3060 0BE7                                  l3052 0BE0  
                                l3044 0BD9                                  l2500 07AE  
                                l2252 0B37                                  l2260 0B3D  
                                l2332 060F                                  l2324 05F3  
                                l2316 05DB                                  l2308 05C5  
                                l2340 0F51                                  l3036 03F7  
                                l3028 03BD                                  l3140 0178  
                                l3132 0145                                  l3116 011B  
                                l3124 0134                                  l3108 00E3  
                                l2414 0C99                                  l2406 0C87  
                                l3062 0BE9                                  l3054 0BE2  
                                l3046 0BDD                                  l2510 07C3  
                                l2502 07B2                                  l2270 0BBB  
                                l2254 0B39                                  l2262 0B3F  
                                l2334 061B                                  l2318 05E1  
                                l2350 0F5F                                  l2342 0F55  
                                l2430 06AA                                  l2422 0694  
                                l3142 017E                                  l3134 0160  
                                l3150 018E                                  l3118 0121  
                                l3126 0136                                  l2416 0C9D  
                                l2408 0C8C                                  l2600 0FC4  
                                l3064 0BEA                                  l3056 0BE3  
                                l3048 0BDE                                  l2512 07C8  
                                l2504 07B3                                  l2248 0B8F  
                                l2280 0C55                                  l2256 0B31  
                                l2272 0BBE                                  l2264 0BB0  
                                l2336 061E                                  l2328 05FA  
                                l2520 0DFD                                  l2360 0F73  
                                l2352 0F62                                  l2344 0F5A  
                                l2440 06D3                                  l2432 06BB  
                                l2424 0694                                  l3160 01B8  
                                l3152 01A9                                  l3144 0183  
                                l3136 0166                                  l3128 013B  
                                l3080 0064                                  l2418 0CA0  
                                l2610 0FEA                                  l2602 0FC8  
                                l3058 0BE4                                  l2506 07B8  
                                l2290 0C67                                  l2282 0C5A  
                                l2258 0B33                                  l2266 0BB3  
                                l2530 0E1C                                  l2522 0E00  
                                l2370 0F9D                                  l2362 0F7C  
                                l2354 0F65                                  l2450 0700  
                                l2442 06E0                                  l2434 06C1  
                                l2426 0694                                  l3170 01E8  
                                l3162 01BE                                  l3154 01AB  
                                l3138 0172                                  l3146 018A  
                                l3090 0092                                  l3082 0067  
                                l2380 0B1D                                  l2612 0FF1  
                                l2604 0FCF                                  l2508 07BE  
                                l2460 0CA4                                  l2700 0583  
                                l2284 0C5D                                  l2276 0C50  
                                l2268 0BB6                                  l2532 0E20  
                                l2524 0E05                                  l2516 0DF5  
                                l2372 0FA0                                  l2364 0F87  
                                l2356 0F65                                  l2348 0F5F  
                                l2444 06E7                                  l2436 06C7  
                                l2428 06A4                                  l2620 0CE5  
                                l3172 01EB                                  l3180 0203  
                                l3164 01C3                                  l3156 01AE  
                                l3148 018D                                  l3092 009E  
                                l3084 006A                                  l3076 0058  
                                l2630 0B9C                                  l2382 0B21  
                                l2550 0D4D                                  l2542 0B6E  
                                l2606 0FE1                                  l2614 0FF7  
                                l2462 0CA8                                  l2710 05AB  
                                l2702 0586                                  l2286 0C63  
                                l2278 0C52                                  l2294 05B1  
                                l2534 0E21                                  l2526 0E09  
                                l2518 0DF7                                  l2366 0F8B  
                                l2358 0F6D                                  l2454 0C08  
                                l2446 06F5                                  l2438 06CD  
                                l2622 0CEF                                  l3190 021D  
                                l3182 0209                                  l3174 01F1  
                                l3166 01C8                                  l3158 01B1  
                                l3094 00A1                                  l3086 0086  
                                l3078 0061                                  l2376 0B83  
                                l2392 0B25                                  l2552 0D69  
                                l2640 0CC9                                  l2608 0FE9  
                                l2800 0DC0                                  l2632 0B4F  
                                l2480 077A                                  l2472 076D  
                                l2464 0CB1                                  l2704 058C  
                                l2720 0E69                                  l2712 0E31  
                                l2288 0C64                                  l2296 05B5  
                                l2536 0E26                                  l2528 0E0D  
                                l2368 0F91                                  l2384 0C38  
                                l2448 06FB                                  l2560 04BA  
                                l2624 0CF6                                  l3184 020E  
                                l3176 01F4                                  l3168 01E5  
                                l3096 00BC                                  l3088 008C  
                                l2378 0B88                                  l2394 0B28  
                                l2642 0CD5                                  l2546 0BC3  
                                l2802 0DC2                                  l2634 0B54  
                                l2650 0730                                  l2490 078F  
                                l2482 077E                                  l2474 076F  
                                l2466 0CB6                                  l2458 0CA2  
                                l2706 05A7                                  l2722 0E6C  
                                l2714 0E4C                                  l2298 05BA  
                                l2538 0E2C                                  l2570 050E  
                                l2562 04C0                                  l2730 0230  
                                l2626 0CFC                                  l2618 0CE2  
                                l2810 0C76                                  l3186 0213  
                                l3178 01F7                                  l3098 00C2  
                                l2396 0B2B                                  l2820 0EBD  
                                l2804 0DC3                                  l2636 0B5E  
                                l2900 0EA7                                  l2660 0740  
                                l2652 0731                                  l2644 0703  
                                l2492 0792                                  l2484 0783  
                                l2476 0773                                  l2468 0CBC  
                                l2556 0D28                                  l2708 05A9  
                                l2724 0E6F                                  l2716 0E57  
                                l2580 07CD                                  l2388 0C20  
         __size_of_i2c_master_read_u8 0018                                  l2564 04C6  
                                l2740 0284                                  l2732 0238  
                                l2812 0C78                                  l3188 0218  
                     __end_of_BQ_Read 0D71                                  l2398 0B2E  
                                l2638 0CC1                                  l2830 0ED9  
                                l2822 0EC1                                  l2806 0DC4  
                                l2910 0EAE                                  l2902 0EAA  
                                l2670 0755                                  l2662 0745  
                                l2654 0735                                  l2646 071E  
                                l2494 0797                                  l2486 0787  
                                l2478 0778                                  l2718 0E63  
                                l2590 07F7                                  l2582 07D5  
                                l2750 02FC                                  l2742 02B0  
                                l2734 023B                                  l2726 0228  
                                l2814 0C7A                                  l2832 0EDE  
                                l2824 0EC5                                  l2816 0EB8  
                                l2920 0EB5                                  l2912 0EAF  
                                l2904 0EAB                                  l2672 075D  
                                l2664 0748                                  l2656 073B  
                                l2648 072A                                  l2496 079B  
                                l2488 0789                                  l2680 053D  
                                l2584 07D9                                  l2576 052E  
                                l2568 04CB                                  l2760 0326  
                                l2752 030C                                  l2744 02D7  
                                l2736 0251                                  l2728 022C  
                                l2808 0C69                                  l2930 045B  
                                l2922 043A                                  l2594 0FA5  
                                l2850 0DF2                                  l2834 0EE0  
                                l2826 0EC7                                  l2842 0EF7  
                                l2818 0EBB                                  l2770 0D9B  
                                l2914 0EB0                                  l2906 0EAC  
                                l2674 0764                                  l2666 074D  
                                l2658 073C                                  l2498 079F  
                                l2690 0547                                  l2682 053D  
                                l2586 07E1                                  l2762 033A  
                                l2746 02E0                                  l2754 030E  
                                l2738 0263                                  l2852 0D04  
                                l2932 0460                                  l2940 0495  
                                l2924 0440                                  l2596 0FB6  
                                l2844 0DC6                                  l2836 0EE8  
                                l2828 0ECF                                  l2780 0DAB  
                                l2772 0D9D                                  l2916 0EB1  
                                l2908 0EAD                                  l2860 0E77  
                                l2676 0767                                  l2668 0753  
                                l2692 055F                                  l2684 053D  
                                l2588 07E8                                  l2748 02EA  
                                l2756 0312                                  l2854 0D25  
                                l2942 049B                                  l2934 047B  
                                l2926 044B                                  l2598 0FB9  
                                l2846 0DC9                                  l2838 0EF2  
                                l2790 0DB3                                  l2782 0DAE  
                                l2774 0DA5                                  l2918 0EB3  
                                l2870 0E83                                  l2862 0E7A  
                                l2694 0565                                  l2686 0543  
                                l2678 0537                                  l2950 0D77  
                                l2766 0BF0                                  l2758 031F  
                                l2856 0EFE                                  l2944 04B6  
                                l2936 0484                                  l2928 0457  
                                l2848 0DCA                                  l2792 0DB7  
                                l2784 0DAF                                  l2776 0DA7  
                                l2880 0E91                                  l2872 0E88  
                                l2864 0E7C                                  l2696 057D  
                                l2960 0D8F                                  l2952 0D7C  
                                l2938 0488                                  l2794 0DB9  
                                l2786 0DB0                                  l2778 0DA8  
                                l2890 0E99                                  l2882 0E92  
                                l2874 0E8A                                  l2866 0E7E  
                                l2858 0E74                                  l2970 064A  
                                l2698 057F                                  l2962 0D95  
                                l2954 0D81                                  l2796 0DBB  
                                l2788 0DB1                                  l2892 0E9E  
                                l2884 0E93                                  l2876 0E8C  
                                l2868 0E81                                  l2980 065E  
                                l2972 0650                                  l2964 0D99  
                                l2956 0D85                                  l2948 0D71  
                                l2798 0DBD                                  l2894 0EA0  
                                l2886 0E95                                  l2878 0E8E  
                                l2990 0673                                  l2982 0663  
                                l2974 0651                                  l2966 0623  
                                l2958 0D8B                                  l2896 0EA2  
                                l2888 0E97                                  l2992 0675  
                                l2984 0668                                  l2976 0657  
                                l2968 063E                                  l2898 0EA4  
                                l2986 066B                                  l2978 0659  
                                l2996 067A                                  l2988 066E  
                                l2998 067C                          __CFG_WDTE$ON 0000  
                                _BHOT 00D4                                  _ICHG 0151  
                                u2010 0FE1                                  u2011 0FE0  
                                u2100 073B                                  u2005 0FC9  
                                u2101 073A                                  u2030 0FF7  
                                u2110 0745                                  u2031 0FF6  
                                u2015 0FDD                                  u2111 0744  
                                u2120 0753                                  u2200 0E69  
                                u2025 0FEB                                  u2121 0752  
                                u2201 0E68                                  u2130 0764  
                                u2050 0CFC                                  u2131 0763  
                                u2051 0CFB                                  u2140 0543  
                                u1420 0B94                                  u1500 0601  
                                u2220 0270                                  u2300 0C76  
                                u2141 0542                                  u1421 0B93  
                                u1501 05FF                                  u2045 0CE8  
                                u2301 0C75                                  u2310 0EC5  
                                u2150 0565                                  u1430 0B9A  
                                u1510 0602                                  u2230 02C5  
                                u2311 0EC4                                  u2151 0564  
                                u1431 0B99                                  u2215 023F  
                                u2400 04B6                                  u2320 0EDE  
                                u2080 071E                                  u2160 058C  
                                u1440 0BBB                                  u1520 061B  
                                u1600 06AA                                  u2240 02D7  
                                u2065 0CCC                                  u2401 04B5  
                                u2321 0EDD                                  u2081 071D  
                                u2161 058B                                  u1441 0BBA  
                                u1521 061A                                  u1601 06A9  
                                u2241 02D6                                  u2225 026C  
                                u2330 0EF7                                  u2090 0730  
                                u2170 0E4C                                  u2410 0D77  
                                u1450 05BA                                  u1530 0F5A  
                                u1610 06C1                                  u2250 02E0  
                                u2075 0CD8                                  u2331 0EF6  
                                u2091 072F                                  u2171 0E4B  
                                u2411 0D76                                  u1451 05B9  
                                u1531 0F59                                  u1611 06C0  
                                u2251 02DF                                  u2235 02C1  
                                u2340 0EFD                                  u1700 0CBC  
                                u2180 0E53                                  u2420 0D81  
                                u1460 05D3                                  u1540 0F73  
                                u1620 06C7                                  u2260 02E9  
                                u2500 0353                                  u2341 0EFC  
                                u1701 0CBB                                  u2181 0E51  
                                u2421 0D80                                  u1461 05D2  
                                u1541 0F72                                  u1621 06C6  
                                u2261 02E8                                  u2501 0352  
                                u2350 0DD8                                  u1710 0773  
                                u2190 0E54                                  u2430 0D8B  
                                u1470 05E1                                  u1550 0F91  
                                u1630 06CD                                  u2270 02FC  
                                u2510 0358                                  u1711 0772  
                                u2431 0D8A                                  u1471 05E0  
                                u1551 0F90                                  u1631 06CC  
                                u2271 02FB                                  u2511 0357  
                                u2360 0440                                  u1800 07C3  
                                u1720 077E                                  u2440 0D95  
                                u1480 05EA                                  u1560 0F9D  
                                u1640 06D3                                  u2280 031F  
                                u2600 0423                                  u2520 0363  
                                u2361 043F                                  u1801 07C2  
                                u1721 077D                                  u2441 0D94  
                                u1481 05E9                                  u1561 0F9C  
                                u1641 06D2                                  u2281 031E  
                                u2601 0422                                  u2521 0362  
                                u1570 0B88                                  u2370 0460  
                                u2450 063E                                  u1730 078F  
                                u1490 05F9                                  u1810 0DFD  
                                u1650 06E7                                  u2290 0326  
                                u2530 0378                                  u1571 0B87  
                                u2371 045F                                  u2355 0DD4  
                                u2451 063D                                  u1731 078E  
                                u1491 05F8                                  u1811 0DFC  
                                u1651 06E6                                  u2291 0325  
                                u2275 02F8                                  u2531 0377  
                                u1580 0B8E                                  u2380 047B  
                                u2460 0650                                  u1660 06FB  
                                u1900 04E8                                  u2540 037E  
                                u2700 0110                                  u1581 0B8D  
                                u2381 047A                                  u2461 064F  
                                u1661 06FA                                  u2285 031B  
                                u2541 037D                                  u2701 010E  
                                u1590 0C99                                  u2390 049B  
                                u2470 0657                                  u1750 079F  
                                u1670 0CA8                                  u1830 0E0D  
                                u2550 0393                                  u2710 0111  
                                u2630 0092                                  u1591 0C98  
                                u2391 049A                                  u2471 0656  
                                u1751 079E                                  u1671 0CA7  
                                u1831 0E0C                                  u2551 0392  
                                u2631 0091                                  u2480 065E  
                                u1920 052D                                  u2560 03AC  
                                u2800 0183                                  u2720 011B  
                                u2640 00BC                                  u2481 065D  
                                u1745 0793                                  u1825 0E01  
                                u1921 052C                                  u1905 04E4  
                                u2561 03AB                                  u2801 0182  
                                u2721 011A                                  u2641 00BB  
                                u2490 0668                                  u1770 07AE  
                                u1930 07D9                                  u1850 0E1C  
                                u2570 03BC                                  u2810 01A9  
                                u2730 0128                                  u2650 00C2  
                                u2491 0667                                  u1771 07AD  
                                u1931 07D8                                  u1851 0E1B  
                                u1915 0511                                  u2571 03BB  
                                u2811 01A8                                  u2731 0127  
                                u2651 00C1                                  u2580 03D0  
                                u2900 0218                                  u2820 01B8  
                                u2740 013B                                  u2660 00C8  
                                u1765 07A0                                  u1685 0CAD  
                                u1845 0E0E                                  u2581 03CF  
                                u2901 0217                                  u2821 01B7  
                                u2741 013A                                  u2661 00C7  
                                u1790 07BE                                  u1870 0E2C  
                                u2590 03F6                                  u2910 021D  
                                u2830 01C3                                  u2750 0140  
                                u2670 00E9                                  u1791 07BD  
                                u1775 07AA                                  u1695 0CB2  
                                u1871 0E2B                                  u1855 0E18  
                                u2591 03F5                                  u2911 021C  
                                u2831 01C2                                  u2751 013F  
                                u2671 00E8                                  u1960 07F7  
                                u1880 04C0                                  u2840 01C8  
                                u2760 0145                                  u2680 0104  
                                u1785 07B4                                  u1961 07F6  
                                u1945 07E2                                  u1865 0E22  
                                u1881 04BF                                  u2841 01C7  
                                u2761 0144                                  u2681 0103  
                                u1970 0FB6                                  u1890 04C6  
                                u2850 01E5                                  u2770 0160  
                                u2690 010A                                  u1971 0FB5  
                                u1955 07E9                                  u1891 04C5  
                                u2595 03F2                                  u2851 01E4  
                                u2771 015F                                  u2691 0109  
                                u2860 01F1                                  u2780 0166  
                                u2861 01F0                                  u2781 0165  
                                u1990 0FC8                                  u2870 0209  
                                u2790 017E                                  u1991 0FC7  
                                u2871 0208                                  u2791 017D  
                                u2880 020E                                  u1985 0FBA  
                                u2937 0CF2                                  u2881 020D  
                                u2890 0213                                  u2947 06D9  
                                u2891 0212                                  u2957 0ECA  
                                u2967 0ED4                                  u2977 0EE3  
                                u2987 0EED                                  Map@x 0025  
                                _TMR1 020C                                  _TMR2 028C  
                                _TREG 0149                                  _VREG 014E  
                                _WPUA 1F39                          _pwr_btn_temp 00E4  
                       __CFG_FCMEN$ON 0000                                  _main 0058  
                                _mode 00EF                                  fsr0h 0005  
                                fsr1h 0007                                  indf0 0000  
                                fsr0l 0004                                  indf1 0001  
                                fsr1l 0006                                  btemp 007E  
                       __CFG_BOREN$ON 0000                    __size_of_BQ_UPDATE 0080  
                                start 0022                        _btn_time_start 013C  
                       __CFG_CSWEN$ON 0000             __end_of_BQ_get_chrg_state 0CE1  
                               ??_ISR 0070                                 ??_Map 007B  
                     _VBUS_CHRG_STATE 00CA      __size_of_i2c_master_repeat_start 0006  
                  __size_of_PIC_SETUP 002B                  __end_of_battery_fade 05B0  
                    ?_I2C_Master_Init 002E                      ?_I2C_Master_Read 0070  
                    ?_I2C_Master_Wait 0070                      ?_I2C_Master_nAck 0070  
                    ?_I2C_Master_Stop 0070          __size_of_i2c_master_read_u16 0018  
                               ?_main 0070                       __end_of___awdiv 07CD  
                               _BCOLD 00D3                       __end_of___lldiv 1000  
                               _T1CLK 0211                       ___awdiv@divisor 0076  
                               _IOCAF 1F3F                                 _IOCAN 1F3E  
                               _IOCAP 1F3D    negotiate_optimal_pdo@opt_pdo_power 004B  
                     __end_of___lwdiv 0E31                      __end_of_BQ_Write 0BAF  
                               i1l136 0020                                 _ITERM 014F  
                     ___awdiv@counter 0021               ??_negotiate_optimal_pdo 0043  
                               _TRISA 0012                                 _TRISC 0014  
                 ___lmul@multiplicand 0074                      __end_of_RGB_fade 076D  
                       __CFG_WRTB$OFF 0000                         __CFG_WRTC$OFF 0000  
                     __end_of_readADC 0D04              __size_of_stusb_negotiate 00FB  
                               _color 006D                                 _reset 0694  
                    __end_of_PWM_INIT 0EB8                      __end_of_PPS_lock 0B66  
              negotiate_optimal_pdo@i 005A          __size_of_i2c_master_write_u8 0018  
                               status 0003                                 wtemp0 007E  
                      __CFG_MCLRE$OFF 0000                       __initialization 0027  
                     _btn_press_count 00E1                       _btn_press_timer 0134  
                        __end_of_main 0226         negotiate_optimal_pdo@num_pdos 0041  
                      __CFG_SAFEN$OFF 0000         negotiate_optimal_pdo@src_pdos 0053  
         __size_of_thermal_protection 001A                           ?_PPS_unlock 0070  
                              ??_main 006A                             ??_BQ_INIT 0073  
                   __end_of_BQ_UPDATE 04BA                             ??_BQ_Read 0075  
                   ?_I2C_Master_Start 0070                     ?_I2C_Master_Write 0070  
                         BQ_Read@data 0078                    ??_I2C_Master_Start 0070  
                              _ADCON0 009D                                _ADCON1 009E  
                  ??_I2C_Master_Write 0070                                _ADRESH 009C  
                              ?_reset 0025                      ___awdiv@dividend 0078  
                              _ANSELA 1F38                                _ANSELC 1F4E  
                              _IOCAF5 F9FD                                _ICO_EN 00E9  
             _i2c_master_receive_byte 0C4F                                _RC0PPS 1F20  
                              _RC1PPS 1F21                                _RC2PPS 1F22  
                              _RC3PPS 1F23                                _RC4PPS 1F24  
                              i1l3070 0011                                _INILIM 00EC  
                              i1l3072 001A                                i1l3074 001F  
                              i1l3066 0006                                i1l3068 000B  
                              _EN_HIZ 00D5                     __end_of_PIC_SETUP 0DC6  
                              u261_20 000B                                u261_21 000A  
                              u262_20 001F                                u262_21 001E  
                              _VCLAMP 0144                                _TMR1IF 3880  
                              _TMR2IF 3881                                _TMR2ON 1477  
                              _VRECHG 0147                      ??_BQ_CONFIG_INIT 0070  
                              _WD_RST 00CD         __size_of_i2c_master_send_byte 0014  
                      __CFG_PWRTE$OFF 0000                      __end_of_chrg_led 0694  
          __size_of_BQ_get_chrg_state 0020                      __end_of_get_time 0B78  
                              ___lmul 07CD                                ___wmul 0CA2  
                           ??___awdiv 007A                        __CFG_STVREN$ON 0000  
                     _i2c_master_read 05B0                             ??___lldiv 007C  
                     _i2c_master_wait 0B8F                       _i2c_master_stop 0B3D  
                           ??___lwdiv 0074              i2c_master_send_byte@data 0073  
                    ___awdiv@quotient 0023               __size_of_I2C_Master_Ack 0004  
           __size_of_i2c_master_start 0006             __size_of_i2c_master_write 0055  
                           ??_readADC 0072               negotiate_optimal_pdo@ok 005C  
              __size_of_I2C_bus_reset 0046         __size_of_i2c_master_write_u32 0018  
                         BQ_Write@reg 0072                      _btn_time_pressed 0138  
             __end_of__initialization 0054                     ??_stusb_negotiate 0064  
                 __size_of_PPS_unlock 0007                             ?_BQ_Write 0071  
               __size_of_battery_fade 0079                        __pcstackCOMMON 0070  
                           ?_RGB_fade 0070                          __pidataBANK1 0B66  
                        __pidataBANK2 0B78               _i2c_master_repeat_start 0B31  
                       __end_of_reset 0703                       _BATTERY_VOLTAGE 00E7  
                           ?_PWM_INIT 0070                             ?_PPS_lock 0070  
                  __size_of_flash_led 0043             ??_i2c_master_receive_byte 0070  
                  __size_of_led_modes 002A                               ??_reset 0027  
                          __pbssBANK0 006B                            __pbssBANK1 00CA  
                          __pbssBANK2 0120                          _battery_fade 0537  
                 _i2c_master_read_u16 0BEF               __end_of_i2c_master_read 0623  
             __end_of_i2c_master_wait 0B9B               __end_of_i2c_master_stop 0B43  
                          ??_BQ_Write 0072                         _I2C_bus_reset 0EB8  
                          __pmaintext 0058                            ??_RGB_fade 0078  
                             ?___lmul 0070                               ?___wmul 0070  
                          _chrg_delay 0124                            __pintentry 0004  
                      ___lmul@product 0078                               _BATLOWV 0148  
                          ??_PWM_INIT 0070                  ?_i2c_master_read_u16 0021  
                 __CFG_RSTOSC$HFINT32 0000                   _i2c_master_write_u8 0C37  
                          ??_PPS_lock 0070                               _T2CKPS0 1474  
                             _T2CKPS1 1475                               _T2CKPS2 1476  
                             _BQ_INIT 0EFE                               _EN_ILIM 00ED  
                             _MAXC_EN 00CF                               _IPRECHG 0150  
             __size_of_PWM_power_down 0016                               _EN_TERM 014D  
                             _BQ_Read 0D4C                            _flash_time 0120  
      __size_of_negotiate_optimal_pdo 0119         __end_of_negotiate_optimal_pdo 033F  
          __end_of_i2c_master_read_u8 0C37                               _PWM3DCH 0315  
                             _PWM3DCL 0314                               _PWM4DCH 0319  
                             _PWM4DCL 0318                               _PWM5DCH 031D  
                           ?_chrg_led 0070                               _PWM5DCL 031C  
                             _PWM3CON 0316                               _PWM4CON 031A  
                             _PWM5CON 031E                               _SSP1ADD 018D  
                             _PPSLOCK 1E8F                               _SSP1BUF 018C  
                             _VREGCON 0812                i2c_master_read_u16@reg 0021  
                           ?_get_time 0070                               _SYS_MIN 0152  
              i2c_master_read_u8@data 0022                 BQ_get_chrg_state@temp 007B  
                ?_i2c_master_write_u8 0021                    __size_of_write_pdo 007D  
                      ?_I2C_bus_reset 0070             ??_i2c_master_repeat_start 0070  
                   __end_of_flash_led 0E74                               ___awdiv 076D  
                     __size_of___lmul 0033                             _CHG_TIMER 014A  
                             ___lldiv 0FA5                     __end_of_led_modes 0D9B  
                     __size_of___wmul 001F                               ___lwdiv 0DF5  
                      _I2C_Master_Ack 0B1D                 ??_i2c_master_read_u16 0023  
                        ??_PPS_unlock 0070                      _i2c_master_start 0B37  
                             __ptext1 0C69                               __ptext2 0CE1  
                             __ptext3 033F                               __ptext4 0226  
                             __ptext5 04BA                               __ptext6 0694  
                             __ptext7 0C37                               __ptext8 0C1F  
                             __ptext9 0C07                      _i2c_master_write 0F50  
                     __CFG_WRTAPP$OFF 0000                               _readADC 0CE1  
                        __size_of_ISR 001E                             _T1CONbits 020E  
                        __size_of_Map 0024                             _CONV_RATE 00D1  
                     __CFG_WRTSAF$OFF 0000              __size_of_I2C_Master_Init 002F  
            __size_of_I2C_Master_Read 001F              __size_of_I2C_Master_Wait 000C  
            __size_of_I2C_Master_nAck 0004              __size_of_I2C_Master_Stop 0006  
                          ??_chrg_led 0078                             _BQ_UPDATE 043A  
                             clrloop0 0B44                            ??_get_time 0074  
                end_of_initialization 0054                 ??_i2c_master_write_u8 0023  
                    write_pdo@pdo_num 0030                               init_ram 0B49  
                             initloop 0B4A                      ?_i2c_master_read 0074  
           __size_of_I2C_Master_Start 0006                    __end_of_PPS_unlock 0B56  
                    ?_i2c_master_wait 0070                             _PIC_SETUP 0D9B  
           __size_of_I2C_Master_Write 0008                       ___lldiv@divisor 0021  
                    ?_i2c_master_stop 0070              negotiate_optimal_pdo@pdo 005E  
                             reset@ok 002A                       ___lldiv@counter 002D  
              __end_of_I2C_Master_Ack 0B21                          _AUTO_DPDM_EN 00E8  
          __end_of_thermal_protection 0C83                          BQ_Write@data 0071  
               __CFG_WDTCPS$WDTCPS_13 0000                             Map@outMax 002A  
                           Map@outMin 0029                            _timer_diff 0BC3  
                           _VINDPM_OS 00EB          __end_of_i2c_master_send_byte 0BC3  
                        _REG00_config 00DE                          _REG01_config 00DD  
                   __end_of_write_pdo 0537                  __CFG_WDTCCS$LFINTOSC 0000  
                        _REG02_config 00DC                             _TRISAbits 0012  
                     _stusb_negotiate 033F                          _REG03_config 00DB  
                           _TRISCbits 0014                          _REG04_config 00DA  
                         timer_diff@t 0070                          _REG05_config 00D9  
                        _REG06_config 00D8                            ?_BQ_UPDATE 0070  
                        _REG07_config 00D7                      __CFG_FEXTOSC$OFF 0000  
                        _REG08_config 00D6                       ??_I2C_bus_reset 0070  
                          ?_PIC_SETUP 0070                          write_pdo@pdo 003D  
negotiate_optimal_pdo@opt_pdo_current 004F                         battery_fade@v 0033  
        __end_of_i2c_master_write_u32 0C1F              i2c_master_read_u8@device 007D  
                     ?_I2C_Master_Ack 0070                     __size_of_BQ_Write 0014  
          i2c_master_receive_byte@ack 0071                     _pwr_btn_temp_prev 00E3  
negotiate_optimal_pdo@opt_pdo_voltage 0051                        __end_of___lmul 0800  
                      __end_of___wmul 0CC1                     __size_of_RGB_fade 006A  
                   __size_of_PWM_INIT 0044                        _PWM_power_down 0BD9  
                   __size_of_PPS_lock 0008                   start_initialization 0027  
                         __end_of_ISR 0022                           __end_of_Map 0D4C  
           i2c_master_read_u16@device 007D                   write_pdo@current_mA 002C  
                   ??_I2C_Master_Init 0032                     ??_I2C_Master_Read 0070  
                   ??_I2C_Master_Wait 0070                     ??_I2C_Master_nAck 0070  
                          BQ_Read@reg 0077                     ??_I2C_Master_Stop 0070  
                    __CFG_LPBOREN$OFF 0000                              ??___lmul 0078  
                            ??___wmul 0074                           __pdataBANK1 00E8  
                         __pdataBANK2 0149               __size_of_BQ_CONFIG_INIT 0024  
             __end_of_stusb_negotiate 043A                           ?_timer_diff 0070  
              __end_of_PWM_power_down 0BEF                              ?_BQ_INIT 0070  
                            ?_BQ_Read 0073                             ___latbits 0001  
                       __pcstackBANK0 0021                         __pcstackBANK1 00A0  
                         ??_BQ_UPDATE 007C                     __size_of_chrg_led 0071  
                   __size_of_get_time 000A              __end_of_i2c_master_start 0B3D  
            __end_of_i2c_master_write 0FA5                      _I2C_Master_Start 0B25  
                _i2c_master_send_byte 0BAF                    _i2c_master_read_u8 0C1F  
                         ??_PIC_SETUP 0070                      _I2C_Master_Write 0B56  
                    ___lwdiv@dividend 0072              i2c_master_write_u32@data 0022  
               i2c_master_read@device 0079           i2c_master_receive_byte@data 0072  
                            ?___awdiv 0076                              ?___lldiv 0021  
                 ?_i2c_master_read_u8 0021                              ?___lwdiv 0070  
                        _BQ_adc_state 00E6                      __CFG_PPS1WAY$OFF 0000  
                           _flash_led 0E31                  I2C_Master_Write@data 0070  
                     ?_PWM_power_down 0070                             _led_modes 0D71  
                            ?_readADC 0070              ?_i2c_master_receive_byte 0070  
                           _btn_state 00E2                 i2c_master_read_u8@reg 0021  
                 write_pdo@voltage_mV 002E                              _BAT_COMP 0145  
                _i2c_master_write_u32 0C07                      ___lwdiv@quotient 0075  
                ??_i2c_master_read_u8 0023                           _CPUDOZEbits 088C  
                            _T2CLKCON 0290                 _negotiate_optimal_pdo 0226  
                      __size_of_reset 006F                             _rgb_delay 0128  
                            _T2OUTPS0 1470                              _T2OUTPS1 1471  
                            _T2OUTPS2 1472                              _T2OUTPS3 1473  
                      ___wmul@product 0074                              _HVDCP_EN 00D0  
                 __size_of_timer_diff 0016                              _EN_TIMER 014B  
               ?_i2c_master_send_byte 0070                             clear_ram0 0B43  
                            _PIE0bits 0716                              _PIE4bits 071A  
                            _BQ_Write 0B9B                           _flash_state 006B  
         __end_of_i2c_master_read_u16 0C07                              _WATCHDOG 0146  
                            _RGB_fade 0703                     __CFG_BBSIZE$BB512 0000  
                            Map@inMax 0028                              Map@inMin 0027  
                            _SSP1CON1 0190                              _SSP1CON2 0191  
                            _SSP1CON3 0192                              _SSP1STAT 018F  
             i2c_master_read_u16@data 0022                              _STAT_DIS 014C  
                          ?_flash_led 0070                              _PWM_INIT 0E74  
                    ?_stusb_negotiate 0070                            _ADCON0bits 009D  
                            _PPS_lock 0B5E                     ___wmul@multiplier 0070  
                          ?_led_modes 0070                      __size_of_BQ_INIT 0052  
                  _thermal_protection 0C69           __end_of_i2c_master_write_u8 0C4F  
                    __size_of_BQ_Read 0025                 ?_i2c_master_write_u32 0021  
                 I2C_Master_Read@data 0072                     ___lmul@multiplier 0070  
                           _write_pdo 04BA                   ?_thermal_protection 0070  
            ?_i2c_master_repeat_start 0070                      ??_I2C_Master_Ack 0070  
                       _set_stusb4500 00DF                            _CHG_CONFIG 0153  
                      _BQ_CONFIG_INIT 0D04       __end_of_i2c_master_receive_byte 0C69  
                    __size_of___awdiv 0060              __size_of_i2c_master_read 0073  
                    __size_of___lldiv 005B                  ??_thermal_protection 0075  
            __size_of_i2c_master_wait 000C                      __size_of___lwdiv 003C  
            __size_of_i2c_master_stop 0006                        readADC@channel 0074  
                          _ANSELAbits 1F38                       _I2C_Master_Init 0DC6  
                    __size_of_readADC 0023                       _I2C_Master_Read 0C83  
                     _I2C_Master_Wait 0B83                       _I2C_Master_nAck 0B21  
                     _I2C_Master_Stop 0B2B                       ___lwdiv@divisor 0070  
             i2c_master_write_u32@reg 0021                              _chrg_led 0623  
                     ___lwdiv@counter 0077                ?_negotiate_optimal_pdo 0041  
                            __ptext10 0F50                              __ptext11 0DF5  
                            __ptext20 0B8F                              __ptext12 07CD  
                            __ptext21 0D71                              __ptext13 0BEF  
                          _T1GCONbits 020F                              __ptext30 0E74  
                            __ptext22 0E31                              __ptext14 05B0  
                            __ptext31 0B4F                              __ptext23 0537  
                            __ptext15 0B3D                              __ptext40 0CC1  
                            __ptext32 0B5E                              __ptext24 0D28  
                            __ptext16 0B37                              __ptext41 0D4C  
                            __ptext33 0D9B                              __ptext25 0CA2  
                            __ptext17 0BAF                              __ptext50 0B83  
                            __ptext42 0C83                              __ptext34 0EB8  
                            __ptext26 076D                              __ptext18 0B31  
                            __ptext51 0D04                              __ptext43 0B21  
                            __ptext35 0DC6                              __ptext27 0703  
                            __ptext19 0C4F                              __ptext44 0B1D  
                            __ptext36 0FA5                              __ptext28 0623  
                            __ptext45 0EFE                              __ptext37 043A  
                            __ptext29 0BD9                              __ptext46 0B9B  
                            __ptext38 0BC3                              __ptext47 0B56  
                            __ptext39 0B6E                              __ptext48 0B2B  
                            __ptext49 0B25                           _BQ_adc_time 012C  
                        _SSP1CON2bits 0191                            ?_write_pdo 002C  
                            _get_time 0B6E                            _BOOST_FREQ 00EA  
             i2c_master_write_u8@data 0022                         ?_battery_fade 0070  
      negotiate_optimal_pdo@pdo_power 0054                ??_i2c_master_send_byte 0073  
                       __size_of_main 01CE            i2c_master_write_u32@device 007D  
                          _CONV_START 00D2                  __CFG_WDTCWS$WDTCWS_7 0000  
               __end_of_I2C_bus_reset 0EFE                            _FORCE_DPDM 00CE  
                   _stusb4500_timeout 0130                        I2C_bus_reset@i 0071  
              __end_of_BQ_CONFIG_INIT 0D28                              int$flags 007E  
                         ??_flash_led 0078                         _timer_counter 0140  
                        ??_timer_diff 0074                    I2C_Master_Init@clk 002E  
                  I2C_Master_Read@ack 0071                           ??_led_modes 007D  
            __end_of_I2C_Master_Start 0B2B              __end_of_I2C_Master_Write 0B5E  
                          _INTCONbits 000B                ??_i2c_master_write_u32 0026  
              i2c_master_write@device 0079                           _PWM3CONbits 0316  
                         _PWM4CONbits 031A       __end_of_i2c_master_repeat_start 0B37  
                         _PWM5CONbits 031E                        ??_battery_fade 002B  
                            intlevel1 0000                   i2c_master_read@data 007A  
                    ___lldiv@dividend 0025                     ?_i2c_master_start 0070  
                   __CFG_CLKOUTEN$OFF 0000                     ?_i2c_master_write 0074  
              i2c_master_write_u8@reg 0021                              reset@res 0029  
                  __end_of_timer_diff 0BD9                    ??_i2c_master_start 0070  
                  ??_i2c_master_write 0078                       ?_BQ_CONFIG_INIT 0070  
                    ??_PWM_power_down 0070               __end_of_I2C_Master_Init 0DF5  
             __end_of_I2C_Master_Read 0CA2               __end_of_I2C_Master_Wait 0B8F  
             __end_of_I2C_Master_nAck 0B25               __end_of_I2C_Master_Stop 0B31  
               stusb_negotiate@header 00C8                 stusb_negotiate@buffer 00A0  
                          _SSP1DATPPS 1EC6                    i2c_master_read@buf 0075  
                  i2c_master_read@len 0076                    i2c_master_read@reg 0074  
                          _SSP1CLKPPS 1EC5                            _OTG_CONFIG 00CC  
                    ___lldiv@quotient 0029                     ??_i2c_master_read 0078  
                   ??_i2c_master_wait 0070                     ??_i2c_master_stop 0070  
    negotiate_optimal_pdo@pdo_current 0058                         _btn_high_edge 00EE  
                         ??_write_pdo 0031                  i2c_master_write@data 007A  
           i2c_master_write_u8@device 007D                     i2c_master_read@ok 007B  
    __size_of_i2c_master_receive_byte 001A      negotiate_optimal_pdo@pdo_voltage 0062  
                 i2c_master_write@buf 0075                   i2c_master_write@len 0076  
                 i2c_master_write@reg 0074                    i2c_master_write@ok 007B  
