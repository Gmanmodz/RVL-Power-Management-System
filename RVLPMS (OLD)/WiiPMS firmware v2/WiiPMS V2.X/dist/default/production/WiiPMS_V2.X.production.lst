

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Oct 12 10:52:24 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F15324
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2
    33                           	psect	text12,local,class=CODE,merge=1,delta=2
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2
    47                           	psect	text26,local,class=CODE,merge=1,delta=2
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text41,local,class=CODE,merge=1,delta=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2
    64                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text44,local,class=CODE,merge=1,delta=2
    66                           	psect	text45,local,class=CODE,merge=1,delta=2
    67                           	psect	text46,local,class=CODE,merge=1,delta=2
    68                           	psect	text47,local,class=CODE,merge=1,delta=2
    69                           	psect	text48,local,class=CODE,merge=1,delta=2
    70                           	psect	text49,local,class=CODE,merge=1,delta=2
    71                           	psect	text50,local,class=CODE,merge=1,delta=2
    72                           	psect	text51,local,class=CODE,merge=1,delta=2
    73                           	psect	text52,local,class=CODE,merge=1,delta=2
    74                           	psect	text53,local,class=CODE,merge=1,delta=2
    75                           	psect	text54,local,class=CODE,merge=1,delta=2
    76                           	psect	text55,local,class=CODE,merge=1,delta=2
    77                           	psect	intentry,global,class=CODE,delta=2
    78                           	psect	text57,local,class=CODE,merge=1,delta=2
    79                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
    80                           	dabs	1,0x7E,2
    81  0000                     
    82                           ; Version 2.10
    83                           ; Generated 31/07/2019 GMT
    84                           ; 
    85                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution.
    99                           ; 
   100                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   101                           ;        software without specific prior written permission.
   102                           ; 
   103                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   104                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   105                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   106                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   107                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   108                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   109                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   110                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   111                           ; 
   112                           ; 
   113                           ; Code-generator required, PIC16F15324 Definitions
   114                           ; 
   115                           ; SFR Addresses
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  0008                     	;# 
   125  0009                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000E                     	;# 
   130  0012                     	;# 
   131  0014                     	;# 
   132  0018                     	;# 
   133  001A                     	;# 
   134  009B                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  0119                     	;# 
   141  0119                     	;# 
   142  0119                     	;# 
   143  011A                     	;# 
   144  011A                     	;# 
   145  011A                     	;# 
   146  011B                     	;# 
   147  011B                     	;# 
   148  011B                     	;# 
   149  011B                     	;# 
   150  011B                     	;# 
   151  011C                     	;# 
   152  011C                     	;# 
   153  011C                     	;# 
   154  011D                     	;# 
   155  011D                     	;# 
   156  011D                     	;# 
   157  011E                     	;# 
   158  011E                     	;# 
   159  011E                     	;# 
   160  011F                     	;# 
   161  011F                     	;# 
   162  011F                     	;# 
   163  011F                     	;# 
   164  011F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  018E                     	;# 
   168  018F                     	;# 
   169  0190                     	;# 
   170  0191                     	;# 
   171  0192                     	;# 
   172  020C                     	;# 
   173  020C                     	;# 
   174  020D                     	;# 
   175  020E                     	;# 
   176  020F                     	;# 
   177  020F                     	;# 
   178  0210                     	;# 
   179  0210                     	;# 
   180  0211                     	;# 
   181  0211                     	;# 
   182  028C                     	;# 
   183  028C                     	;# 
   184  028D                     	;# 
   185  028D                     	;# 
   186  028E                     	;# 
   187  028F                     	;# 
   188  0290                     	;# 
   189  0291                     	;# 
   190  030C                     	;# 
   191  030C                     	;# 
   192  030D                     	;# 
   193  030E                     	;# 
   194  030F                     	;# 
   195  0310                     	;# 
   196  0310                     	;# 
   197  0311                     	;# 
   198  0312                     	;# 
   199  0313                     	;# 
   200  0314                     	;# 
   201  0314                     	;# 
   202  0315                     	;# 
   203  0316                     	;# 
   204  0318                     	;# 
   205  0318                     	;# 
   206  0319                     	;# 
   207  031A                     	;# 
   208  031C                     	;# 
   209  031C                     	;# 
   210  031D                     	;# 
   211  031E                     	;# 
   212  038C                     	;# 
   213  038C                     	;# 
   214  038D                     	;# 
   215  038E                     	;# 
   216  058C                     	;# 
   217  058C                     	;# 
   218  058D                     	;# 
   219  058E                     	;# 
   220  058F                     	;# 
   221  058F                     	;# 
   222  0590                     	;# 
   223  0591                     	;# 
   224  0592                     	;# 
   225  0593                     	;# 
   226  059C                     	;# 
   227  059C                     	;# 
   228  059D                     	;# 
   229  059D                     	;# 
   230  059E                     	;# 
   231  059F                     	;# 
   232  060C                     	;# 
   233  060D                     	;# 
   234  060E                     	;# 
   235  060F                     	;# 
   236  0610                     	;# 
   237  0611                     	;# 
   238  0612                     	;# 
   239  0613                     	;# 
   240  0614                     	;# 
   241  070C                     	;# 
   242  070D                     	;# 
   243  070E                     	;# 
   244  070F                     	;# 
   245  0710                     	;# 
   246  0711                     	;# 
   247  0712                     	;# 
   248  0713                     	;# 
   249  0716                     	;# 
   250  0717                     	;# 
   251  0718                     	;# 
   252  0719                     	;# 
   253  071A                     	;# 
   254  071B                     	;# 
   255  071C                     	;# 
   256  071D                     	;# 
   257  0796                     	;# 
   258  0797                     	;# 
   259  0798                     	;# 
   260  0799                     	;# 
   261  079A                     	;# 
   262  079B                     	;# 
   263  080C                     	;# 
   264  080D                     	;# 
   265  080E                     	;# 
   266  080F                     	;# 
   267  0810                     	;# 
   268  0811                     	;# 
   269  0812                     	;# 
   270  0813                     	;# 
   271  0814                     	;# 
   272  081A                     	;# 
   273  081A                     	;# 
   274  081B                     	;# 
   275  081C                     	;# 
   276  081C                     	;# 
   277  081D                     	;# 
   278  081E                     	;# 
   279  081F                     	;# 
   280  088C                     	;# 
   281  088D                     	;# 
   282  088E                     	;# 
   283  088F                     	;# 
   284  0890                     	;# 
   285  0891                     	;# 
   286  0892                     	;# 
   287  0893                     	;# 
   288  0895                     	;# 
   289  0896                     	;# 
   290  090C                     	;# 
   291  090E                     	;# 
   292  090F                     	;# 
   293  091F                     	;# 
   294  098F                     	;# 
   295  098F                     	;# 
   296  0990                     	;# 
   297  0991                     	;# 
   298  0992                     	;# 
   299  0993                     	;# 
   300  0994                     	;# 
   301  0995                     	;# 
   302  0996                     	;# 
   303  0997                     	;# 
   304  0A19                     	;# 
   305  0A19                     	;# 
   306  0A1A                     	;# 
   307  0A1A                     	;# 
   308  0A1B                     	;# 
   309  0A1B                     	;# 
   310  0A1B                     	;# 
   311  0A1C                     	;# 
   312  0A1C                     	;# 
   313  0A1D                     	;# 
   314  0A1D                     	;# 
   315  0A1E                     	;# 
   316  0A1E                     	;# 
   317  0A1F                     	;# 
   318  0A1F                     	;# 
   319  0A1F                     	;# 
   320  1E0F                     	;# 
   321  1E10                     	;# 
   322  1E11                     	;# 
   323  1E12                     	;# 
   324  1E13                     	;# 
   325  1E14                     	;# 
   326  1E15                     	;# 
   327  1E16                     	;# 
   328  1E17                     	;# 
   329  1E18                     	;# 
   330  1E19                     	;# 
   331  1E1A                     	;# 
   332  1E1B                     	;# 
   333  1E1C                     	;# 
   334  1E1D                     	;# 
   335  1E1E                     	;# 
   336  1E1F                     	;# 
   337  1E20                     	;# 
   338  1E21                     	;# 
   339  1E22                     	;# 
   340  1E23                     	;# 
   341  1E24                     	;# 
   342  1E25                     	;# 
   343  1E26                     	;# 
   344  1E27                     	;# 
   345  1E28                     	;# 
   346  1E29                     	;# 
   347  1E2A                     	;# 
   348  1E2B                     	;# 
   349  1E2C                     	;# 
   350  1E2D                     	;# 
   351  1E2E                     	;# 
   352  1E2F                     	;# 
   353  1E30                     	;# 
   354  1E31                     	;# 
   355  1E32                     	;# 
   356  1E33                     	;# 
   357  1E34                     	;# 
   358  1E35                     	;# 
   359  1E36                     	;# 
   360  1E37                     	;# 
   361  1E8F                     	;# 
   362  1E90                     	;# 
   363  1E91                     	;# 
   364  1E92                     	;# 
   365  1E93                     	;# 
   366  1E9C                     	;# 
   367  1EA1                     	;# 
   368  1EA2                     	;# 
   369  1EB1                     	;# 
   370  1EBB                     	;# 
   371  1EBC                     	;# 
   372  1EBD                     	;# 
   373  1EBE                     	;# 
   374  1EC3                     	;# 
   375  1EC5                     	;# 
   376  1EC6                     	;# 
   377  1EC7                     	;# 
   378  1ECB                     	;# 
   379  1ECC                     	;# 
   380  1ECD                     	;# 
   381  1ECE                     	;# 
   382  1F10                     	;# 
   383  1F11                     	;# 
   384  1F12                     	;# 
   385  1F13                     	;# 
   386  1F14                     	;# 
   387  1F15                     	;# 
   388  1F20                     	;# 
   389  1F21                     	;# 
   390  1F22                     	;# 
   391  1F23                     	;# 
   392  1F24                     	;# 
   393  1F25                     	;# 
   394  1F38                     	;# 
   395  1F39                     	;# 
   396  1F3A                     	;# 
   397  1F3B                     	;# 
   398  1F3C                     	;# 
   399  1F3D                     	;# 
   400  1F3E                     	;# 
   401  1F3F                     	;# 
   402  1F4E                     	;# 
   403  1F4F                     	;# 
   404  1F50                     	;# 
   405  1F51                     	;# 
   406  1F52                     	;# 
   407  1F53                     	;# 
   408  1F54                     	;# 
   409  1F55                     	;# 
   410  1FE4                     	;# 
   411  1FE5                     	;# 
   412  1FE6                     	;# 
   413  1FE7                     	;# 
   414  1FE8                     	;# 
   415  1FE8                     	;# 
   416  1FE9                     	;# 
   417  1FEA                     	;# 
   418  1FEA                     	;# 
   419  1FEB                     	;# 
   420  1FED                     	;# 
   421  1FEE                     	;# 
   422  1FEF                     	;# 
   423  0000                     	;# 
   424  0001                     	;# 
   425  0002                     	;# 
   426  0003                     	;# 
   427  0004                     	;# 
   428  0005                     	;# 
   429  0006                     	;# 
   430  0007                     	;# 
   431  0008                     	;# 
   432  0009                     	;# 
   433  000A                     	;# 
   434  000B                     	;# 
   435  000C                     	;# 
   436  000E                     	;# 
   437  0012                     	;# 
   438  0014                     	;# 
   439  0018                     	;# 
   440  001A                     	;# 
   441  009B                     	;# 
   442  009B                     	;# 
   443  009C                     	;# 
   444  009D                     	;# 
   445  009E                     	;# 
   446  009F                     	;# 
   447  0119                     	;# 
   448  0119                     	;# 
   449  0119                     	;# 
   450  011A                     	;# 
   451  011A                     	;# 
   452  011A                     	;# 
   453  011B                     	;# 
   454  011B                     	;# 
   455  011B                     	;# 
   456  011B                     	;# 
   457  011B                     	;# 
   458  011C                     	;# 
   459  011C                     	;# 
   460  011C                     	;# 
   461  011D                     	;# 
   462  011D                     	;# 
   463  011D                     	;# 
   464  011E                     	;# 
   465  011E                     	;# 
   466  011E                     	;# 
   467  011F                     	;# 
   468  011F                     	;# 
   469  011F                     	;# 
   470  011F                     	;# 
   471  011F                     	;# 
   472  018C                     	;# 
   473  018D                     	;# 
   474  018E                     	;# 
   475  018F                     	;# 
   476  0190                     	;# 
   477  0191                     	;# 
   478  0192                     	;# 
   479  020C                     	;# 
   480  020C                     	;# 
   481  020D                     	;# 
   482  020E                     	;# 
   483  020F                     	;# 
   484  020F                     	;# 
   485  0210                     	;# 
   486  0210                     	;# 
   487  0211                     	;# 
   488  0211                     	;# 
   489  028C                     	;# 
   490  028C                     	;# 
   491  028D                     	;# 
   492  028D                     	;# 
   493  028E                     	;# 
   494  028F                     	;# 
   495  0290                     	;# 
   496  0291                     	;# 
   497  030C                     	;# 
   498  030C                     	;# 
   499  030D                     	;# 
   500  030E                     	;# 
   501  030F                     	;# 
   502  0310                     	;# 
   503  0310                     	;# 
   504  0311                     	;# 
   505  0312                     	;# 
   506  0313                     	;# 
   507  0314                     	;# 
   508  0314                     	;# 
   509  0315                     	;# 
   510  0316                     	;# 
   511  0318                     	;# 
   512  0318                     	;# 
   513  0319                     	;# 
   514  031A                     	;# 
   515  031C                     	;# 
   516  031C                     	;# 
   517  031D                     	;# 
   518  031E                     	;# 
   519  038C                     	;# 
   520  038C                     	;# 
   521  038D                     	;# 
   522  038E                     	;# 
   523  058C                     	;# 
   524  058C                     	;# 
   525  058D                     	;# 
   526  058E                     	;# 
   527  058F                     	;# 
   528  058F                     	;# 
   529  0590                     	;# 
   530  0591                     	;# 
   531  0592                     	;# 
   532  0593                     	;# 
   533  059C                     	;# 
   534  059C                     	;# 
   535  059D                     	;# 
   536  059D                     	;# 
   537  059E                     	;# 
   538  059F                     	;# 
   539  060C                     	;# 
   540  060D                     	;# 
   541  060E                     	;# 
   542  060F                     	;# 
   543  0610                     	;# 
   544  0611                     	;# 
   545  0612                     	;# 
   546  0613                     	;# 
   547  0614                     	;# 
   548  070C                     	;# 
   549  070D                     	;# 
   550  070E                     	;# 
   551  070F                     	;# 
   552  0710                     	;# 
   553  0711                     	;# 
   554  0712                     	;# 
   555  0713                     	;# 
   556  0716                     	;# 
   557  0717                     	;# 
   558  0718                     	;# 
   559  0719                     	;# 
   560  071A                     	;# 
   561  071B                     	;# 
   562  071C                     	;# 
   563  071D                     	;# 
   564  0796                     	;# 
   565  0797                     	;# 
   566  0798                     	;# 
   567  0799                     	;# 
   568  079A                     	;# 
   569  079B                     	;# 
   570  080C                     	;# 
   571  080D                     	;# 
   572  080E                     	;# 
   573  080F                     	;# 
   574  0810                     	;# 
   575  0811                     	;# 
   576  0812                     	;# 
   577  0813                     	;# 
   578  0814                     	;# 
   579  081A                     	;# 
   580  081A                     	;# 
   581  081B                     	;# 
   582  081C                     	;# 
   583  081C                     	;# 
   584  081D                     	;# 
   585  081E                     	;# 
   586  081F                     	;# 
   587  088C                     	;# 
   588  088D                     	;# 
   589  088E                     	;# 
   590  088F                     	;# 
   591  0890                     	;# 
   592  0891                     	;# 
   593  0892                     	;# 
   594  0893                     	;# 
   595  0895                     	;# 
   596  0896                     	;# 
   597  090C                     	;# 
   598  090E                     	;# 
   599  090F                     	;# 
   600  091F                     	;# 
   601  098F                     	;# 
   602  098F                     	;# 
   603  0990                     	;# 
   604  0991                     	;# 
   605  0992                     	;# 
   606  0993                     	;# 
   607  0994                     	;# 
   608  0995                     	;# 
   609  0996                     	;# 
   610  0997                     	;# 
   611  0A19                     	;# 
   612  0A19                     	;# 
   613  0A1A                     	;# 
   614  0A1A                     	;# 
   615  0A1B                     	;# 
   616  0A1B                     	;# 
   617  0A1B                     	;# 
   618  0A1C                     	;# 
   619  0A1C                     	;# 
   620  0A1D                     	;# 
   621  0A1D                     	;# 
   622  0A1E                     	;# 
   623  0A1E                     	;# 
   624  0A1F                     	;# 
   625  0A1F                     	;# 
   626  0A1F                     	;# 
   627  1E0F                     	;# 
   628  1E10                     	;# 
   629  1E11                     	;# 
   630  1E12                     	;# 
   631  1E13                     	;# 
   632  1E14                     	;# 
   633  1E15                     	;# 
   634  1E16                     	;# 
   635  1E17                     	;# 
   636  1E18                     	;# 
   637  1E19                     	;# 
   638  1E1A                     	;# 
   639  1E1B                     	;# 
   640  1E1C                     	;# 
   641  1E1D                     	;# 
   642  1E1E                     	;# 
   643  1E1F                     	;# 
   644  1E20                     	;# 
   645  1E21                     	;# 
   646  1E22                     	;# 
   647  1E23                     	;# 
   648  1E24                     	;# 
   649  1E25                     	;# 
   650  1E26                     	;# 
   651  1E27                     	;# 
   652  1E28                     	;# 
   653  1E29                     	;# 
   654  1E2A                     	;# 
   655  1E2B                     	;# 
   656  1E2C                     	;# 
   657  1E2D                     	;# 
   658  1E2E                     	;# 
   659  1E2F                     	;# 
   660  1E30                     	;# 
   661  1E31                     	;# 
   662  1E32                     	;# 
   663  1E33                     	;# 
   664  1E34                     	;# 
   665  1E35                     	;# 
   666  1E36                     	;# 
   667  1E37                     	;# 
   668  1E8F                     	;# 
   669  1E90                     	;# 
   670  1E91                     	;# 
   671  1E92                     	;# 
   672  1E93                     	;# 
   673  1E9C                     	;# 
   674  1EA1                     	;# 
   675  1EA2                     	;# 
   676  1EB1                     	;# 
   677  1EBB                     	;# 
   678  1EBC                     	;# 
   679  1EBD                     	;# 
   680  1EBE                     	;# 
   681  1EC3                     	;# 
   682  1EC5                     	;# 
   683  1EC6                     	;# 
   684  1EC7                     	;# 
   685  1ECB                     	;# 
   686  1ECC                     	;# 
   687  1ECD                     	;# 
   688  1ECE                     	;# 
   689  1F10                     	;# 
   690  1F11                     	;# 
   691  1F12                     	;# 
   692  1F13                     	;# 
   693  1F14                     	;# 
   694  1F15                     	;# 
   695  1F20                     	;# 
   696  1F21                     	;# 
   697  1F22                     	;# 
   698  1F23                     	;# 
   699  1F24                     	;# 
   700  1F25                     	;# 
   701  1F38                     	;# 
   702  1F39                     	;# 
   703  1F3A                     	;# 
   704  1F3B                     	;# 
   705  1F3C                     	;# 
   706  1F3D                     	;# 
   707  1F3E                     	;# 
   708  1F3F                     	;# 
   709  1F4E                     	;# 
   710  1F4F                     	;# 
   711  1F50                     	;# 
   712  1F51                     	;# 
   713  1F52                     	;# 
   714  1F53                     	;# 
   715  1F54                     	;# 
   716  1F55                     	;# 
   717  1FE4                     	;# 
   718  1FE5                     	;# 
   719  1FE6                     	;# 
   720  1FE7                     	;# 
   721  1FE8                     	;# 
   722  1FE8                     	;# 
   723  1FE9                     	;# 
   724  1FEA                     	;# 
   725  1FEA                     	;# 
   726  1FEB                     	;# 
   727  1FED                     	;# 
   728  1FEE                     	;# 
   729  1FEF                     	;# 
   730  0000                     	;# 
   731  0001                     	;# 
   732  0002                     	;# 
   733  0003                     	;# 
   734  0004                     	;# 
   735  0005                     	;# 
   736  0006                     	;# 
   737  0007                     	;# 
   738  0008                     	;# 
   739  0009                     	;# 
   740  000A                     	;# 
   741  000B                     	;# 
   742  000C                     	;# 
   743  000E                     	;# 
   744  0012                     	;# 
   745  0014                     	;# 
   746  0018                     	;# 
   747  001A                     	;# 
   748  009B                     	;# 
   749  009B                     	;# 
   750  009C                     	;# 
   751  009D                     	;# 
   752  009E                     	;# 
   753  009F                     	;# 
   754  0119                     	;# 
   755  0119                     	;# 
   756  0119                     	;# 
   757  011A                     	;# 
   758  011A                     	;# 
   759  011A                     	;# 
   760  011B                     	;# 
   761  011B                     	;# 
   762  011B                     	;# 
   763  011B                     	;# 
   764  011B                     	;# 
   765  011C                     	;# 
   766  011C                     	;# 
   767  011C                     	;# 
   768  011D                     	;# 
   769  011D                     	;# 
   770  011D                     	;# 
   771  011E                     	;# 
   772  011E                     	;# 
   773  011E                     	;# 
   774  011F                     	;# 
   775  011F                     	;# 
   776  011F                     	;# 
   777  011F                     	;# 
   778  011F                     	;# 
   779  018C                     	;# 
   780  018D                     	;# 
   781  018E                     	;# 
   782  018F                     	;# 
   783  0190                     	;# 
   784  0191                     	;# 
   785  0192                     	;# 
   786  020C                     	;# 
   787  020C                     	;# 
   788  020D                     	;# 
   789  020E                     	;# 
   790  020F                     	;# 
   791  020F                     	;# 
   792  0210                     	;# 
   793  0210                     	;# 
   794  0211                     	;# 
   795  0211                     	;# 
   796  028C                     	;# 
   797  028C                     	;# 
   798  028D                     	;# 
   799  028D                     	;# 
   800  028E                     	;# 
   801  028F                     	;# 
   802  0290                     	;# 
   803  0291                     	;# 
   804  030C                     	;# 
   805  030C                     	;# 
   806  030D                     	;# 
   807  030E                     	;# 
   808  030F                     	;# 
   809  0310                     	;# 
   810  0310                     	;# 
   811  0311                     	;# 
   812  0312                     	;# 
   813  0313                     	;# 
   814  0314                     	;# 
   815  0314                     	;# 
   816  0315                     	;# 
   817  0316                     	;# 
   818  0318                     	;# 
   819  0318                     	;# 
   820  0319                     	;# 
   821  031A                     	;# 
   822  031C                     	;# 
   823  031C                     	;# 
   824  031D                     	;# 
   825  031E                     	;# 
   826  038C                     	;# 
   827  038C                     	;# 
   828  038D                     	;# 
   829  038E                     	;# 
   830  058C                     	;# 
   831  058C                     	;# 
   832  058D                     	;# 
   833  058E                     	;# 
   834  058F                     	;# 
   835  058F                     	;# 
   836  0590                     	;# 
   837  0591                     	;# 
   838  0592                     	;# 
   839  0593                     	;# 
   840  059C                     	;# 
   841  059C                     	;# 
   842  059D                     	;# 
   843  059D                     	;# 
   844  059E                     	;# 
   845  059F                     	;# 
   846  060C                     	;# 
   847  060D                     	;# 
   848  060E                     	;# 
   849  060F                     	;# 
   850  0610                     	;# 
   851  0611                     	;# 
   852  0612                     	;# 
   853  0613                     	;# 
   854  0614                     	;# 
   855  070C                     	;# 
   856  070D                     	;# 
   857  070E                     	;# 
   858  070F                     	;# 
   859  0710                     	;# 
   860  0711                     	;# 
   861  0712                     	;# 
   862  0713                     	;# 
   863  0716                     	;# 
   864  0717                     	;# 
   865  0718                     	;# 
   866  0719                     	;# 
   867  071A                     	;# 
   868  071B                     	;# 
   869  071C                     	;# 
   870  071D                     	;# 
   871  0796                     	;# 
   872  0797                     	;# 
   873  0798                     	;# 
   874  0799                     	;# 
   875  079A                     	;# 
   876  079B                     	;# 
   877  080C                     	;# 
   878  080D                     	;# 
   879  080E                     	;# 
   880  080F                     	;# 
   881  0810                     	;# 
   882  0811                     	;# 
   883  0812                     	;# 
   884  0813                     	;# 
   885  0814                     	;# 
   886  081A                     	;# 
   887  081A                     	;# 
   888  081B                     	;# 
   889  081C                     	;# 
   890  081C                     	;# 
   891  081D                     	;# 
   892  081E                     	;# 
   893  081F                     	;# 
   894  088C                     	;# 
   895  088D                     	;# 
   896  088E                     	;# 
   897  088F                     	;# 
   898  0890                     	;# 
   899  0891                     	;# 
   900  0892                     	;# 
   901  0893                     	;# 
   902  0895                     	;# 
   903  0896                     	;# 
   904  090C                     	;# 
   905  090E                     	;# 
   906  090F                     	;# 
   907  091F                     	;# 
   908  098F                     	;# 
   909  098F                     	;# 
   910  0990                     	;# 
   911  0991                     	;# 
   912  0992                     	;# 
   913  0993                     	;# 
   914  0994                     	;# 
   915  0995                     	;# 
   916  0996                     	;# 
   917  0997                     	;# 
   918  0A19                     	;# 
   919  0A19                     	;# 
   920  0A1A                     	;# 
   921  0A1A                     	;# 
   922  0A1B                     	;# 
   923  0A1B                     	;# 
   924  0A1B                     	;# 
   925  0A1C                     	;# 
   926  0A1C                     	;# 
   927  0A1D                     	;# 
   928  0A1D                     	;# 
   929  0A1E                     	;# 
   930  0A1E                     	;# 
   931  0A1F                     	;# 
   932  0A1F                     	;# 
   933  0A1F                     	;# 
   934  1E0F                     	;# 
   935  1E10                     	;# 
   936  1E11                     	;# 
   937  1E12                     	;# 
   938  1E13                     	;# 
   939  1E14                     	;# 
   940  1E15                     	;# 
   941  1E16                     	;# 
   942  1E17                     	;# 
   943  1E18                     	;# 
   944  1E19                     	;# 
   945  1E1A                     	;# 
   946  1E1B                     	;# 
   947  1E1C                     	;# 
   948  1E1D                     	;# 
   949  1E1E                     	;# 
   950  1E1F                     	;# 
   951  1E20                     	;# 
   952  1E21                     	;# 
   953  1E22                     	;# 
   954  1E23                     	;# 
   955  1E24                     	;# 
   956  1E25                     	;# 
   957  1E26                     	;# 
   958  1E27                     	;# 
   959  1E28                     	;# 
   960  1E29                     	;# 
   961  1E2A                     	;# 
   962  1E2B                     	;# 
   963  1E2C                     	;# 
   964  1E2D                     	;# 
   965  1E2E                     	;# 
   966  1E2F                     	;# 
   967  1E30                     	;# 
   968  1E31                     	;# 
   969  1E32                     	;# 
   970  1E33                     	;# 
   971  1E34                     	;# 
   972  1E35                     	;# 
   973  1E36                     	;# 
   974  1E37                     	;# 
   975  1E8F                     	;# 
   976  1E90                     	;# 
   977  1E91                     	;# 
   978  1E92                     	;# 
   979  1E93                     	;# 
   980  1E9C                     	;# 
   981  1EA1                     	;# 
   982  1EA2                     	;# 
   983  1EB1                     	;# 
   984  1EBB                     	;# 
   985  1EBC                     	;# 
   986  1EBD                     	;# 
   987  1EBE                     	;# 
   988  1EC3                     	;# 
   989  1EC5                     	;# 
   990  1EC6                     	;# 
   991  1EC7                     	;# 
   992  1ECB                     	;# 
   993  1ECC                     	;# 
   994  1ECD                     	;# 
   995  1ECE                     	;# 
   996  1F10                     	;# 
   997  1F11                     	;# 
   998  1F12                     	;# 
   999  1F13                     	;# 
  1000  1F14                     	;# 
  1001  1F15                     	;# 
  1002  1F20                     	;# 
  1003  1F21                     	;# 
  1004  1F22                     	;# 
  1005  1F23                     	;# 
  1006  1F24                     	;# 
  1007  1F25                     	;# 
  1008  1F38                     	;# 
  1009  1F39                     	;# 
  1010  1F3A                     	;# 
  1011  1F3B                     	;# 
  1012  1F3C                     	;# 
  1013  1F3D                     	;# 
  1014  1F3E                     	;# 
  1015  1F3F                     	;# 
  1016  1F4E                     	;# 
  1017  1F4F                     	;# 
  1018  1F50                     	;# 
  1019  1F51                     	;# 
  1020  1F52                     	;# 
  1021  1F53                     	;# 
  1022  1F54                     	;# 
  1023  1F55                     	;# 
  1024  1FE4                     	;# 
  1025  1FE5                     	;# 
  1026  1FE6                     	;# 
  1027  1FE7                     	;# 
  1028  1FE8                     	;# 
  1029  1FE8                     	;# 
  1030  1FE9                     	;# 
  1031  1FEA                     	;# 
  1032  1FEA                     	;# 
  1033  1FEB                     	;# 
  1034  1FED                     	;# 
  1035  1FEE                     	;# 
  1036  1FEF                     	;# 
  1037  0000                     	;# 
  1038  0001                     	;# 
  1039  0002                     	;# 
  1040  0003                     	;# 
  1041  0004                     	;# 
  1042  0005                     	;# 
  1043  0006                     	;# 
  1044  0007                     	;# 
  1045  0008                     	;# 
  1046  0009                     	;# 
  1047  000A                     	;# 
  1048  000B                     	;# 
  1049  000C                     	;# 
  1050  000E                     	;# 
  1051  0012                     	;# 
  1052  0014                     	;# 
  1053  0018                     	;# 
  1054  001A                     	;# 
  1055  009B                     	;# 
  1056  009B                     	;# 
  1057  009C                     	;# 
  1058  009D                     	;# 
  1059  009E                     	;# 
  1060  009F                     	;# 
  1061  0119                     	;# 
  1062  0119                     	;# 
  1063  0119                     	;# 
  1064  011A                     	;# 
  1065  011A                     	;# 
  1066  011A                     	;# 
  1067  011B                     	;# 
  1068  011B                     	;# 
  1069  011B                     	;# 
  1070  011B                     	;# 
  1071  011B                     	;# 
  1072  011C                     	;# 
  1073  011C                     	;# 
  1074  011C                     	;# 
  1075  011D                     	;# 
  1076  011D                     	;# 
  1077  011D                     	;# 
  1078  011E                     	;# 
  1079  011E                     	;# 
  1080  011E                     	;# 
  1081  011F                     	;# 
  1082  011F                     	;# 
  1083  011F                     	;# 
  1084  011F                     	;# 
  1085  011F                     	;# 
  1086  018C                     	;# 
  1087  018D                     	;# 
  1088  018E                     	;# 
  1089  018F                     	;# 
  1090  0190                     	;# 
  1091  0191                     	;# 
  1092  0192                     	;# 
  1093  020C                     	;# 
  1094  020C                     	;# 
  1095  020D                     	;# 
  1096  020E                     	;# 
  1097  020F                     	;# 
  1098  020F                     	;# 
  1099  0210                     	;# 
  1100  0210                     	;# 
  1101  0211                     	;# 
  1102  0211                     	;# 
  1103  028C                     	;# 
  1104  028C                     	;# 
  1105  028D                     	;# 
  1106  028D                     	;# 
  1107  028E                     	;# 
  1108  028F                     	;# 
  1109  0290                     	;# 
  1110  0291                     	;# 
  1111  030C                     	;# 
  1112  030C                     	;# 
  1113  030D                     	;# 
  1114  030E                     	;# 
  1115  030F                     	;# 
  1116  0310                     	;# 
  1117  0310                     	;# 
  1118  0311                     	;# 
  1119  0312                     	;# 
  1120  0313                     	;# 
  1121  0314                     	;# 
  1122  0314                     	;# 
  1123  0315                     	;# 
  1124  0316                     	;# 
  1125  0318                     	;# 
  1126  0318                     	;# 
  1127  0319                     	;# 
  1128  031A                     	;# 
  1129  031C                     	;# 
  1130  031C                     	;# 
  1131  031D                     	;# 
  1132  031E                     	;# 
  1133  038C                     	;# 
  1134  038C                     	;# 
  1135  038D                     	;# 
  1136  038E                     	;# 
  1137  058C                     	;# 
  1138  058C                     	;# 
  1139  058D                     	;# 
  1140  058E                     	;# 
  1141  058F                     	;# 
  1142  058F                     	;# 
  1143  0590                     	;# 
  1144  0591                     	;# 
  1145  0592                     	;# 
  1146  0593                     	;# 
  1147  059C                     	;# 
  1148  059C                     	;# 
  1149  059D                     	;# 
  1150  059D                     	;# 
  1151  059E                     	;# 
  1152  059F                     	;# 
  1153  060C                     	;# 
  1154  060D                     	;# 
  1155  060E                     	;# 
  1156  060F                     	;# 
  1157  0610                     	;# 
  1158  0611                     	;# 
  1159  0612                     	;# 
  1160  0613                     	;# 
  1161  0614                     	;# 
  1162  070C                     	;# 
  1163  070D                     	;# 
  1164  070E                     	;# 
  1165  070F                     	;# 
  1166  0710                     	;# 
  1167  0711                     	;# 
  1168  0712                     	;# 
  1169  0713                     	;# 
  1170  0716                     	;# 
  1171  0717                     	;# 
  1172  0718                     	;# 
  1173  0719                     	;# 
  1174  071A                     	;# 
  1175  071B                     	;# 
  1176  071C                     	;# 
  1177  071D                     	;# 
  1178  0796                     	;# 
  1179  0797                     	;# 
  1180  0798                     	;# 
  1181  0799                     	;# 
  1182  079A                     	;# 
  1183  079B                     	;# 
  1184  080C                     	;# 
  1185  080D                     	;# 
  1186  080E                     	;# 
  1187  080F                     	;# 
  1188  0810                     	;# 
  1189  0811                     	;# 
  1190  0812                     	;# 
  1191  0813                     	;# 
  1192  0814                     	;# 
  1193  081A                     	;# 
  1194  081A                     	;# 
  1195  081B                     	;# 
  1196  081C                     	;# 
  1197  081C                     	;# 
  1198  081D                     	;# 
  1199  081E                     	;# 
  1200  081F                     	;# 
  1201  088C                     	;# 
  1202  088D                     	;# 
  1203  088E                     	;# 
  1204  088F                     	;# 
  1205  0890                     	;# 
  1206  0891                     	;# 
  1207  0892                     	;# 
  1208  0893                     	;# 
  1209  0895                     	;# 
  1210  0896                     	;# 
  1211  090C                     	;# 
  1212  090E                     	;# 
  1213  090F                     	;# 
  1214  091F                     	;# 
  1215  098F                     	;# 
  1216  098F                     	;# 
  1217  0990                     	;# 
  1218  0991                     	;# 
  1219  0992                     	;# 
  1220  0993                     	;# 
  1221  0994                     	;# 
  1222  0995                     	;# 
  1223  0996                     	;# 
  1224  0997                     	;# 
  1225  0A19                     	;# 
  1226  0A19                     	;# 
  1227  0A1A                     	;# 
  1228  0A1A                     	;# 
  1229  0A1B                     	;# 
  1230  0A1B                     	;# 
  1231  0A1B                     	;# 
  1232  0A1C                     	;# 
  1233  0A1C                     	;# 
  1234  0A1D                     	;# 
  1235  0A1D                     	;# 
  1236  0A1E                     	;# 
  1237  0A1E                     	;# 
  1238  0A1F                     	;# 
  1239  0A1F                     	;# 
  1240  0A1F                     	;# 
  1241  1E0F                     	;# 
  1242  1E10                     	;# 
  1243  1E11                     	;# 
  1244  1E12                     	;# 
  1245  1E13                     	;# 
  1246  1E14                     	;# 
  1247  1E15                     	;# 
  1248  1E16                     	;# 
  1249  1E17                     	;# 
  1250  1E18                     	;# 
  1251  1E19                     	;# 
  1252  1E1A                     	;# 
  1253  1E1B                     	;# 
  1254  1E1C                     	;# 
  1255  1E1D                     	;# 
  1256  1E1E                     	;# 
  1257  1E1F                     	;# 
  1258  1E20                     	;# 
  1259  1E21                     	;# 
  1260  1E22                     	;# 
  1261  1E23                     	;# 
  1262  1E24                     	;# 
  1263  1E25                     	;# 
  1264  1E26                     	;# 
  1265  1E27                     	;# 
  1266  1E28                     	;# 
  1267  1E29                     	;# 
  1268  1E2A                     	;# 
  1269  1E2B                     	;# 
  1270  1E2C                     	;# 
  1271  1E2D                     	;# 
  1272  1E2E                     	;# 
  1273  1E2F                     	;# 
  1274  1E30                     	;# 
  1275  1E31                     	;# 
  1276  1E32                     	;# 
  1277  1E33                     	;# 
  1278  1E34                     	;# 
  1279  1E35                     	;# 
  1280  1E36                     	;# 
  1281  1E37                     	;# 
  1282  1E8F                     	;# 
  1283  1E90                     	;# 
  1284  1E91                     	;# 
  1285  1E92                     	;# 
  1286  1E93                     	;# 
  1287  1E9C                     	;# 
  1288  1EA1                     	;# 
  1289  1EA2                     	;# 
  1290  1EB1                     	;# 
  1291  1EBB                     	;# 
  1292  1EBC                     	;# 
  1293  1EBD                     	;# 
  1294  1EBE                     	;# 
  1295  1EC3                     	;# 
  1296  1EC5                     	;# 
  1297  1EC6                     	;# 
  1298  1EC7                     	;# 
  1299  1ECB                     	;# 
  1300  1ECC                     	;# 
  1301  1ECD                     	;# 
  1302  1ECE                     	;# 
  1303  1F10                     	;# 
  1304  1F11                     	;# 
  1305  1F12                     	;# 
  1306  1F13                     	;# 
  1307  1F14                     	;# 
  1308  1F15                     	;# 
  1309  1F20                     	;# 
  1310  1F21                     	;# 
  1311  1F22                     	;# 
  1312  1F23                     	;# 
  1313  1F24                     	;# 
  1314  1F25                     	;# 
  1315  1F38                     	;# 
  1316  1F39                     	;# 
  1317  1F3A                     	;# 
  1318  1F3B                     	;# 
  1319  1F3C                     	;# 
  1320  1F3D                     	;# 
  1321  1F3E                     	;# 
  1322  1F3F                     	;# 
  1323  1F4E                     	;# 
  1324  1F4F                     	;# 
  1325  1F50                     	;# 
  1326  1F51                     	;# 
  1327  1F52                     	;# 
  1328  1F53                     	;# 
  1329  1F54                     	;# 
  1330  1F55                     	;# 
  1331  1FE4                     	;# 
  1332  1FE5                     	;# 
  1333  1FE6                     	;# 
  1334  1FE7                     	;# 
  1335  1FE8                     	;# 
  1336  1FE8                     	;# 
  1337  1FE9                     	;# 
  1338  1FEA                     	;# 
  1339  1FEA                     	;# 
  1340  1FEB                     	;# 
  1341  1FED                     	;# 
  1342  1FEE                     	;# 
  1343  1FEF                     	;# 
  1344  0000                     	;# 
  1345  0001                     	;# 
  1346  0002                     	;# 
  1347  0003                     	;# 
  1348  0004                     	;# 
  1349  0005                     	;# 
  1350  0006                     	;# 
  1351  0007                     	;# 
  1352  0008                     	;# 
  1353  0009                     	;# 
  1354  000A                     	;# 
  1355  000B                     	;# 
  1356  000C                     	;# 
  1357  000E                     	;# 
  1358  0012                     	;# 
  1359  0014                     	;# 
  1360  0018                     	;# 
  1361  001A                     	;# 
  1362  009B                     	;# 
  1363  009B                     	;# 
  1364  009C                     	;# 
  1365  009D                     	;# 
  1366  009E                     	;# 
  1367  009F                     	;# 
  1368  0119                     	;# 
  1369  0119                     	;# 
  1370  0119                     	;# 
  1371  011A                     	;# 
  1372  011A                     	;# 
  1373  011A                     	;# 
  1374  011B                     	;# 
  1375  011B                     	;# 
  1376  011B                     	;# 
  1377  011B                     	;# 
  1378  011B                     	;# 
  1379  011C                     	;# 
  1380  011C                     	;# 
  1381  011C                     	;# 
  1382  011D                     	;# 
  1383  011D                     	;# 
  1384  011D                     	;# 
  1385  011E                     	;# 
  1386  011E                     	;# 
  1387  011E                     	;# 
  1388  011F                     	;# 
  1389  011F                     	;# 
  1390  011F                     	;# 
  1391  011F                     	;# 
  1392  011F                     	;# 
  1393  018C                     	;# 
  1394  018D                     	;# 
  1395  018E                     	;# 
  1396  018F                     	;# 
  1397  0190                     	;# 
  1398  0191                     	;# 
  1399  0192                     	;# 
  1400  020C                     	;# 
  1401  020C                     	;# 
  1402  020D                     	;# 
  1403  020E                     	;# 
  1404  020F                     	;# 
  1405  020F                     	;# 
  1406  0210                     	;# 
  1407  0210                     	;# 
  1408  0211                     	;# 
  1409  0211                     	;# 
  1410  028C                     	;# 
  1411  028C                     	;# 
  1412  028D                     	;# 
  1413  028D                     	;# 
  1414  028E                     	;# 
  1415  028F                     	;# 
  1416  0290                     	;# 
  1417  0291                     	;# 
  1418  030C                     	;# 
  1419  030C                     	;# 
  1420  030D                     	;# 
  1421  030E                     	;# 
  1422  030F                     	;# 
  1423  0310                     	;# 
  1424  0310                     	;# 
  1425  0311                     	;# 
  1426  0312                     	;# 
  1427  0313                     	;# 
  1428  0314                     	;# 
  1429  0314                     	;# 
  1430  0315                     	;# 
  1431  0316                     	;# 
  1432  0318                     	;# 
  1433  0318                     	;# 
  1434  0319                     	;# 
  1435  031A                     	;# 
  1436  031C                     	;# 
  1437  031C                     	;# 
  1438  031D                     	;# 
  1439  031E                     	;# 
  1440  038C                     	;# 
  1441  038C                     	;# 
  1442  038D                     	;# 
  1443  038E                     	;# 
  1444  058C                     	;# 
  1445  058C                     	;# 
  1446  058D                     	;# 
  1447  058E                     	;# 
  1448  058F                     	;# 
  1449  058F                     	;# 
  1450  0590                     	;# 
  1451  0591                     	;# 
  1452  0592                     	;# 
  1453  0593                     	;# 
  1454  059C                     	;# 
  1455  059C                     	;# 
  1456  059D                     	;# 
  1457  059D                     	;# 
  1458  059E                     	;# 
  1459  059F                     	;# 
  1460  060C                     	;# 
  1461  060D                     	;# 
  1462  060E                     	;# 
  1463  060F                     	;# 
  1464  0610                     	;# 
  1465  0611                     	;# 
  1466  0612                     	;# 
  1467  0613                     	;# 
  1468  0614                     	;# 
  1469  070C                     	;# 
  1470  070D                     	;# 
  1471  070E                     	;# 
  1472  070F                     	;# 
  1473  0710                     	;# 
  1474  0711                     	;# 
  1475  0712                     	;# 
  1476  0713                     	;# 
  1477  0716                     	;# 
  1478  0717                     	;# 
  1479  0718                     	;# 
  1480  0719                     	;# 
  1481  071A                     	;# 
  1482  071B                     	;# 
  1483  071C                     	;# 
  1484  071D                     	;# 
  1485  0796                     	;# 
  1486  0797                     	;# 
  1487  0798                     	;# 
  1488  0799                     	;# 
  1489  079A                     	;# 
  1490  079B                     	;# 
  1491  080C                     	;# 
  1492  080D                     	;# 
  1493  080E                     	;# 
  1494  080F                     	;# 
  1495  0810                     	;# 
  1496  0811                     	;# 
  1497  0812                     	;# 
  1498  0813                     	;# 
  1499  0814                     	;# 
  1500  081A                     	;# 
  1501  081A                     	;# 
  1502  081B                     	;# 
  1503  081C                     	;# 
  1504  081C                     	;# 
  1505  081D                     	;# 
  1506  081E                     	;# 
  1507  081F                     	;# 
  1508  088C                     	;# 
  1509  088D                     	;# 
  1510  088E                     	;# 
  1511  088F                     	;# 
  1512  0890                     	;# 
  1513  0891                     	;# 
  1514  0892                     	;# 
  1515  0893                     	;# 
  1516  0895                     	;# 
  1517  0896                     	;# 
  1518  090C                     	;# 
  1519  090E                     	;# 
  1520  090F                     	;# 
  1521  091F                     	;# 
  1522  098F                     	;# 
  1523  098F                     	;# 
  1524  0990                     	;# 
  1525  0991                     	;# 
  1526  0992                     	;# 
  1527  0993                     	;# 
  1528  0994                     	;# 
  1529  0995                     	;# 
  1530  0996                     	;# 
  1531  0997                     	;# 
  1532  0A19                     	;# 
  1533  0A19                     	;# 
  1534  0A1A                     	;# 
  1535  0A1A                     	;# 
  1536  0A1B                     	;# 
  1537  0A1B                     	;# 
  1538  0A1B                     	;# 
  1539  0A1C                     	;# 
  1540  0A1C                     	;# 
  1541  0A1D                     	;# 
  1542  0A1D                     	;# 
  1543  0A1E                     	;# 
  1544  0A1E                     	;# 
  1545  0A1F                     	;# 
  1546  0A1F                     	;# 
  1547  0A1F                     	;# 
  1548  1E0F                     	;# 
  1549  1E10                     	;# 
  1550  1E11                     	;# 
  1551  1E12                     	;# 
  1552  1E13                     	;# 
  1553  1E14                     	;# 
  1554  1E15                     	;# 
  1555  1E16                     	;# 
  1556  1E17                     	;# 
  1557  1E18                     	;# 
  1558  1E19                     	;# 
  1559  1E1A                     	;# 
  1560  1E1B                     	;# 
  1561  1E1C                     	;# 
  1562  1E1D                     	;# 
  1563  1E1E                     	;# 
  1564  1E1F                     	;# 
  1565  1E20                     	;# 
  1566  1E21                     	;# 
  1567  1E22                     	;# 
  1568  1E23                     	;# 
  1569  1E24                     	;# 
  1570  1E25                     	;# 
  1571  1E26                     	;# 
  1572  1E27                     	;# 
  1573  1E28                     	;# 
  1574  1E29                     	;# 
  1575  1E2A                     	;# 
  1576  1E2B                     	;# 
  1577  1E2C                     	;# 
  1578  1E2D                     	;# 
  1579  1E2E                     	;# 
  1580  1E2F                     	;# 
  1581  1E30                     	;# 
  1582  1E31                     	;# 
  1583  1E32                     	;# 
  1584  1E33                     	;# 
  1585  1E34                     	;# 
  1586  1E35                     	;# 
  1587  1E36                     	;# 
  1588  1E37                     	;# 
  1589  1E8F                     	;# 
  1590  1E90                     	;# 
  1591  1E91                     	;# 
  1592  1E92                     	;# 
  1593  1E93                     	;# 
  1594  1E9C                     	;# 
  1595  1EA1                     	;# 
  1596  1EA2                     	;# 
  1597  1EB1                     	;# 
  1598  1EBB                     	;# 
  1599  1EBC                     	;# 
  1600  1EBD                     	;# 
  1601  1EBE                     	;# 
  1602  1EC3                     	;# 
  1603  1EC5                     	;# 
  1604  1EC6                     	;# 
  1605  1EC7                     	;# 
  1606  1ECB                     	;# 
  1607  1ECC                     	;# 
  1608  1ECD                     	;# 
  1609  1ECE                     	;# 
  1610  1F10                     	;# 
  1611  1F11                     	;# 
  1612  1F12                     	;# 
  1613  1F13                     	;# 
  1614  1F14                     	;# 
  1615  1F15                     	;# 
  1616  1F20                     	;# 
  1617  1F21                     	;# 
  1618  1F22                     	;# 
  1619  1F23                     	;# 
  1620  1F24                     	;# 
  1621  1F25                     	;# 
  1622  1F38                     	;# 
  1623  1F39                     	;# 
  1624  1F3A                     	;# 
  1625  1F3B                     	;# 
  1626  1F3C                     	;# 
  1627  1F3D                     	;# 
  1628  1F3E                     	;# 
  1629  1F3F                     	;# 
  1630  1F4E                     	;# 
  1631  1F4F                     	;# 
  1632  1F50                     	;# 
  1633  1F51                     	;# 
  1634  1F52                     	;# 
  1635  1F53                     	;# 
  1636  1F54                     	;# 
  1637  1F55                     	;# 
  1638  1FE4                     	;# 
  1639  1FE5                     	;# 
  1640  1FE6                     	;# 
  1641  1FE7                     	;# 
  1642  1FE8                     	;# 
  1643  1FE8                     	;# 
  1644  1FE9                     	;# 
  1645  1FEA                     	;# 
  1646  1FEA                     	;# 
  1647  1FEB                     	;# 
  1648  1FED                     	;# 
  1649  1FEE                     	;# 
  1650  1FEF                     	;# 
  1651  0000                     	;# 
  1652  0001                     	;# 
  1653  0002                     	;# 
  1654  0003                     	;# 
  1655  0004                     	;# 
  1656  0005                     	;# 
  1657  0006                     	;# 
  1658  0007                     	;# 
  1659  0008                     	;# 
  1660  0009                     	;# 
  1661  000A                     	;# 
  1662  000B                     	;# 
  1663  000C                     	;# 
  1664  000E                     	;# 
  1665  0012                     	;# 
  1666  0014                     	;# 
  1667  0018                     	;# 
  1668  001A                     	;# 
  1669  009B                     	;# 
  1670  009B                     	;# 
  1671  009C                     	;# 
  1672  009D                     	;# 
  1673  009E                     	;# 
  1674  009F                     	;# 
  1675  0119                     	;# 
  1676  0119                     	;# 
  1677  0119                     	;# 
  1678  011A                     	;# 
  1679  011A                     	;# 
  1680  011A                     	;# 
  1681  011B                     	;# 
  1682  011B                     	;# 
  1683  011B                     	;# 
  1684  011B                     	;# 
  1685  011B                     	;# 
  1686  011C                     	;# 
  1687  011C                     	;# 
  1688  011C                     	;# 
  1689  011D                     	;# 
  1690  011D                     	;# 
  1691  011D                     	;# 
  1692  011E                     	;# 
  1693  011E                     	;# 
  1694  011E                     	;# 
  1695  011F                     	;# 
  1696  011F                     	;# 
  1697  011F                     	;# 
  1698  011F                     	;# 
  1699  011F                     	;# 
  1700  018C                     	;# 
  1701  018D                     	;# 
  1702  018E                     	;# 
  1703  018F                     	;# 
  1704  0190                     	;# 
  1705  0191                     	;# 
  1706  0192                     	;# 
  1707  020C                     	;# 
  1708  020C                     	;# 
  1709  020D                     	;# 
  1710  020E                     	;# 
  1711  020F                     	;# 
  1712  020F                     	;# 
  1713  0210                     	;# 
  1714  0210                     	;# 
  1715  0211                     	;# 
  1716  0211                     	;# 
  1717  028C                     	;# 
  1718  028C                     	;# 
  1719  028D                     	;# 
  1720  028D                     	;# 
  1721  028E                     	;# 
  1722  028F                     	;# 
  1723  0290                     	;# 
  1724  0291                     	;# 
  1725  030C                     	;# 
  1726  030C                     	;# 
  1727  030D                     	;# 
  1728  030E                     	;# 
  1729  030F                     	;# 
  1730  0310                     	;# 
  1731  0310                     	;# 
  1732  0311                     	;# 
  1733  0312                     	;# 
  1734  0313                     	;# 
  1735  0314                     	;# 
  1736  0314                     	;# 
  1737  0315                     	;# 
  1738  0316                     	;# 
  1739  0318                     	;# 
  1740  0318                     	;# 
  1741  0319                     	;# 
  1742  031A                     	;# 
  1743  031C                     	;# 
  1744  031C                     	;# 
  1745  031D                     	;# 
  1746  031E                     	;# 
  1747  038C                     	;# 
  1748  038C                     	;# 
  1749  038D                     	;# 
  1750  038E                     	;# 
  1751  058C                     	;# 
  1752  058C                     	;# 
  1753  058D                     	;# 
  1754  058E                     	;# 
  1755  058F                     	;# 
  1756  058F                     	;# 
  1757  0590                     	;# 
  1758  0591                     	;# 
  1759  0592                     	;# 
  1760  0593                     	;# 
  1761  059C                     	;# 
  1762  059C                     	;# 
  1763  059D                     	;# 
  1764  059D                     	;# 
  1765  059E                     	;# 
  1766  059F                     	;# 
  1767  060C                     	;# 
  1768  060D                     	;# 
  1769  060E                     	;# 
  1770  060F                     	;# 
  1771  0610                     	;# 
  1772  0611                     	;# 
  1773  0612                     	;# 
  1774  0613                     	;# 
  1775  0614                     	;# 
  1776  070C                     	;# 
  1777  070D                     	;# 
  1778  070E                     	;# 
  1779  070F                     	;# 
  1780  0710                     	;# 
  1781  0711                     	;# 
  1782  0712                     	;# 
  1783  0713                     	;# 
  1784  0716                     	;# 
  1785  0717                     	;# 
  1786  0718                     	;# 
  1787  0719                     	;# 
  1788  071A                     	;# 
  1789  071B                     	;# 
  1790  071C                     	;# 
  1791  071D                     	;# 
  1792  0796                     	;# 
  1793  0797                     	;# 
  1794  0798                     	;# 
  1795  0799                     	;# 
  1796  079A                     	;# 
  1797  079B                     	;# 
  1798  080C                     	;# 
  1799  080D                     	;# 
  1800  080E                     	;# 
  1801  080F                     	;# 
  1802  0810                     	;# 
  1803  0811                     	;# 
  1804  0812                     	;# 
  1805  0813                     	;# 
  1806  0814                     	;# 
  1807  081A                     	;# 
  1808  081A                     	;# 
  1809  081B                     	;# 
  1810  081C                     	;# 
  1811  081C                     	;# 
  1812  081D                     	;# 
  1813  081E                     	;# 
  1814  081F                     	;# 
  1815  088C                     	;# 
  1816  088D                     	;# 
  1817  088E                     	;# 
  1818  088F                     	;# 
  1819  0890                     	;# 
  1820  0891                     	;# 
  1821  0892                     	;# 
  1822  0893                     	;# 
  1823  0895                     	;# 
  1824  0896                     	;# 
  1825  090C                     	;# 
  1826  090E                     	;# 
  1827  090F                     	;# 
  1828  091F                     	;# 
  1829  098F                     	;# 
  1830  098F                     	;# 
  1831  0990                     	;# 
  1832  0991                     	;# 
  1833  0992                     	;# 
  1834  0993                     	;# 
  1835  0994                     	;# 
  1836  0995                     	;# 
  1837  0996                     	;# 
  1838  0997                     	;# 
  1839  0A19                     	;# 
  1840  0A19                     	;# 
  1841  0A1A                     	;# 
  1842  0A1A                     	;# 
  1843  0A1B                     	;# 
  1844  0A1B                     	;# 
  1845  0A1B                     	;# 
  1846  0A1C                     	;# 
  1847  0A1C                     	;# 
  1848  0A1D                     	;# 
  1849  0A1D                     	;# 
  1850  0A1E                     	;# 
  1851  0A1E                     	;# 
  1852  0A1F                     	;# 
  1853  0A1F                     	;# 
  1854  0A1F                     	;# 
  1855  1E0F                     	;# 
  1856  1E10                     	;# 
  1857  1E11                     	;# 
  1858  1E12                     	;# 
  1859  1E13                     	;# 
  1860  1E14                     	;# 
  1861  1E15                     	;# 
  1862  1E16                     	;# 
  1863  1E17                     	;# 
  1864  1E18                     	;# 
  1865  1E19                     	;# 
  1866  1E1A                     	;# 
  1867  1E1B                     	;# 
  1868  1E1C                     	;# 
  1869  1E1D                     	;# 
  1870  1E1E                     	;# 
  1871  1E1F                     	;# 
  1872  1E20                     	;# 
  1873  1E21                     	;# 
  1874  1E22                     	;# 
  1875  1E23                     	;# 
  1876  1E24                     	;# 
  1877  1E25                     	;# 
  1878  1E26                     	;# 
  1879  1E27                     	;# 
  1880  1E28                     	;# 
  1881  1E29                     	;# 
  1882  1E2A                     	;# 
  1883  1E2B                     	;# 
  1884  1E2C                     	;# 
  1885  1E2D                     	;# 
  1886  1E2E                     	;# 
  1887  1E2F                     	;# 
  1888  1E30                     	;# 
  1889  1E31                     	;# 
  1890  1E32                     	;# 
  1891  1E33                     	;# 
  1892  1E34                     	;# 
  1893  1E35                     	;# 
  1894  1E36                     	;# 
  1895  1E37                     	;# 
  1896  1E8F                     	;# 
  1897  1E90                     	;# 
  1898  1E91                     	;# 
  1899  1E92                     	;# 
  1900  1E93                     	;# 
  1901  1E9C                     	;# 
  1902  1EA1                     	;# 
  1903  1EA2                     	;# 
  1904  1EB1                     	;# 
  1905  1EBB                     	;# 
  1906  1EBC                     	;# 
  1907  1EBD                     	;# 
  1908  1EBE                     	;# 
  1909  1EC3                     	;# 
  1910  1EC5                     	;# 
  1911  1EC6                     	;# 
  1912  1EC7                     	;# 
  1913  1ECB                     	;# 
  1914  1ECC                     	;# 
  1915  1ECD                     	;# 
  1916  1ECE                     	;# 
  1917  1F10                     	;# 
  1918  1F11                     	;# 
  1919  1F12                     	;# 
  1920  1F13                     	;# 
  1921  1F14                     	;# 
  1922  1F15                     	;# 
  1923  1F20                     	;# 
  1924  1F21                     	;# 
  1925  1F22                     	;# 
  1926  1F23                     	;# 
  1927  1F24                     	;# 
  1928  1F25                     	;# 
  1929  1F38                     	;# 
  1930  1F39                     	;# 
  1931  1F3A                     	;# 
  1932  1F3B                     	;# 
  1933  1F3C                     	;# 
  1934  1F3D                     	;# 
  1935  1F3E                     	;# 
  1936  1F3F                     	;# 
  1937  1F4E                     	;# 
  1938  1F4F                     	;# 
  1939  1F50                     	;# 
  1940  1F51                     	;# 
  1941  1F52                     	;# 
  1942  1F53                     	;# 
  1943  1F54                     	;# 
  1944  1F55                     	;# 
  1945  1FE4                     	;# 
  1946  1FE5                     	;# 
  1947  1FE6                     	;# 
  1948  1FE7                     	;# 
  1949  1FE8                     	;# 
  1950  1FE8                     	;# 
  1951  1FE9                     	;# 
  1952  1FEA                     	;# 
  1953  1FEA                     	;# 
  1954  1FEB                     	;# 
  1955  1FED                     	;# 
  1956  1FEE                     	;# 
  1957  1FEF                     	;# 
  1958  0000                     	;# 
  1959  0001                     	;# 
  1960  0002                     	;# 
  1961  0003                     	;# 
  1962  0004                     	;# 
  1963  0005                     	;# 
  1964  0006                     	;# 
  1965  0007                     	;# 
  1966  0008                     	;# 
  1967  0009                     	;# 
  1968  000A                     	;# 
  1969  000B                     	;# 
  1970  000C                     	;# 
  1971  000E                     	;# 
  1972  0012                     	;# 
  1973  0014                     	;# 
  1974  0018                     	;# 
  1975  001A                     	;# 
  1976  009B                     	;# 
  1977  009B                     	;# 
  1978  009C                     	;# 
  1979  009D                     	;# 
  1980  009E                     	;# 
  1981  009F                     	;# 
  1982  0119                     	;# 
  1983  0119                     	;# 
  1984  0119                     	;# 
  1985  011A                     	;# 
  1986  011A                     	;# 
  1987  011A                     	;# 
  1988  011B                     	;# 
  1989  011B                     	;# 
  1990  011B                     	;# 
  1991  011B                     	;# 
  1992  011B                     	;# 
  1993  011C                     	;# 
  1994  011C                     	;# 
  1995  011C                     	;# 
  1996  011D                     	;# 
  1997  011D                     	;# 
  1998  011D                     	;# 
  1999  011E                     	;# 
  2000  011E                     	;# 
  2001  011E                     	;# 
  2002  011F                     	;# 
  2003  011F                     	;# 
  2004  011F                     	;# 
  2005  011F                     	;# 
  2006  011F                     	;# 
  2007  018C                     	;# 
  2008  018D                     	;# 
  2009  018E                     	;# 
  2010  018F                     	;# 
  2011  0190                     	;# 
  2012  0191                     	;# 
  2013  0192                     	;# 
  2014  020C                     	;# 
  2015  020C                     	;# 
  2016  020D                     	;# 
  2017  020E                     	;# 
  2018  020F                     	;# 
  2019  020F                     	;# 
  2020  0210                     	;# 
  2021  0210                     	;# 
  2022  0211                     	;# 
  2023  0211                     	;# 
  2024  028C                     	;# 
  2025  028C                     	;# 
  2026  028D                     	;# 
  2027  028D                     	;# 
  2028  028E                     	;# 
  2029  028F                     	;# 
  2030  0290                     	;# 
  2031  0291                     	;# 
  2032  030C                     	;# 
  2033  030C                     	;# 
  2034  030D                     	;# 
  2035  030E                     	;# 
  2036  030F                     	;# 
  2037  0310                     	;# 
  2038  0310                     	;# 
  2039  0311                     	;# 
  2040  0312                     	;# 
  2041  0313                     	;# 
  2042  0314                     	;# 
  2043  0314                     	;# 
  2044  0315                     	;# 
  2045  0316                     	;# 
  2046  0318                     	;# 
  2047  0318                     	;# 
  2048  0319                     	;# 
  2049  031A                     	;# 
  2050  031C                     	;# 
  2051  031C                     	;# 
  2052  031D                     	;# 
  2053  031E                     	;# 
  2054  038C                     	;# 
  2055  038C                     	;# 
  2056  038D                     	;# 
  2057  038E                     	;# 
  2058  058C                     	;# 
  2059  058C                     	;# 
  2060  058D                     	;# 
  2061  058E                     	;# 
  2062  058F                     	;# 
  2063  058F                     	;# 
  2064  0590                     	;# 
  2065  0591                     	;# 
  2066  0592                     	;# 
  2067  0593                     	;# 
  2068  059C                     	;# 
  2069  059C                     	;# 
  2070  059D                     	;# 
  2071  059D                     	;# 
  2072  059E                     	;# 
  2073  059F                     	;# 
  2074  060C                     	;# 
  2075  060D                     	;# 
  2076  060E                     	;# 
  2077  060F                     	;# 
  2078  0610                     	;# 
  2079  0611                     	;# 
  2080  0612                     	;# 
  2081  0613                     	;# 
  2082  0614                     	;# 
  2083  070C                     	;# 
  2084  070D                     	;# 
  2085  070E                     	;# 
  2086  070F                     	;# 
  2087  0710                     	;# 
  2088  0711                     	;# 
  2089  0712                     	;# 
  2090  0713                     	;# 
  2091  0716                     	;# 
  2092  0717                     	;# 
  2093  0718                     	;# 
  2094  0719                     	;# 
  2095  071A                     	;# 
  2096  071B                     	;# 
  2097  071C                     	;# 
  2098  071D                     	;# 
  2099  0796                     	;# 
  2100  0797                     	;# 
  2101  0798                     	;# 
  2102  0799                     	;# 
  2103  079A                     	;# 
  2104  079B                     	;# 
  2105  080C                     	;# 
  2106  080D                     	;# 
  2107  080E                     	;# 
  2108  080F                     	;# 
  2109  0810                     	;# 
  2110  0811                     	;# 
  2111  0812                     	;# 
  2112  0813                     	;# 
  2113  0814                     	;# 
  2114  081A                     	;# 
  2115  081A                     	;# 
  2116  081B                     	;# 
  2117  081C                     	;# 
  2118  081C                     	;# 
  2119  081D                     	;# 
  2120  081E                     	;# 
  2121  081F                     	;# 
  2122  088C                     	;# 
  2123  088D                     	;# 
  2124  088E                     	;# 
  2125  088F                     	;# 
  2126  0890                     	;# 
  2127  0891                     	;# 
  2128  0892                     	;# 
  2129  0893                     	;# 
  2130  0895                     	;# 
  2131  0896                     	;# 
  2132  090C                     	;# 
  2133  090E                     	;# 
  2134  090F                     	;# 
  2135  091F                     	;# 
  2136  098F                     	;# 
  2137  098F                     	;# 
  2138  0990                     	;# 
  2139  0991                     	;# 
  2140  0992                     	;# 
  2141  0993                     	;# 
  2142  0994                     	;# 
  2143  0995                     	;# 
  2144  0996                     	;# 
  2145  0997                     	;# 
  2146  0A19                     	;# 
  2147  0A19                     	;# 
  2148  0A1A                     	;# 
  2149  0A1A                     	;# 
  2150  0A1B                     	;# 
  2151  0A1B                     	;# 
  2152  0A1B                     	;# 
  2153  0A1C                     	;# 
  2154  0A1C                     	;# 
  2155  0A1D                     	;# 
  2156  0A1D                     	;# 
  2157  0A1E                     	;# 
  2158  0A1E                     	;# 
  2159  0A1F                     	;# 
  2160  0A1F                     	;# 
  2161  0A1F                     	;# 
  2162  1E0F                     	;# 
  2163  1E10                     	;# 
  2164  1E11                     	;# 
  2165  1E12                     	;# 
  2166  1E13                     	;# 
  2167  1E14                     	;# 
  2168  1E15                     	;# 
  2169  1E16                     	;# 
  2170  1E17                     	;# 
  2171  1E18                     	;# 
  2172  1E19                     	;# 
  2173  1E1A                     	;# 
  2174  1E1B                     	;# 
  2175  1E1C                     	;# 
  2176  1E1D                     	;# 
  2177  1E1E                     	;# 
  2178  1E1F                     	;# 
  2179  1E20                     	;# 
  2180  1E21                     	;# 
  2181  1E22                     	;# 
  2182  1E23                     	;# 
  2183  1E24                     	;# 
  2184  1E25                     	;# 
  2185  1E26                     	;# 
  2186  1E27                     	;# 
  2187  1E28                     	;# 
  2188  1E29                     	;# 
  2189  1E2A                     	;# 
  2190  1E2B                     	;# 
  2191  1E2C                     	;# 
  2192  1E2D                     	;# 
  2193  1E2E                     	;# 
  2194  1E2F                     	;# 
  2195  1E30                     	;# 
  2196  1E31                     	;# 
  2197  1E32                     	;# 
  2198  1E33                     	;# 
  2199  1E34                     	;# 
  2200  1E35                     	;# 
  2201  1E36                     	;# 
  2202  1E37                     	;# 
  2203  1E8F                     	;# 
  2204  1E90                     	;# 
  2205  1E91                     	;# 
  2206  1E92                     	;# 
  2207  1E93                     	;# 
  2208  1E9C                     	;# 
  2209  1EA1                     	;# 
  2210  1EA2                     	;# 
  2211  1EB1                     	;# 
  2212  1EBB                     	;# 
  2213  1EBC                     	;# 
  2214  1EBD                     	;# 
  2215  1EBE                     	;# 
  2216  1EC3                     	;# 
  2217  1EC5                     	;# 
  2218  1EC6                     	;# 
  2219  1EC7                     	;# 
  2220  1ECB                     	;# 
  2221  1ECC                     	;# 
  2222  1ECD                     	;# 
  2223  1ECE                     	;# 
  2224  1F10                     	;# 
  2225  1F11                     	;# 
  2226  1F12                     	;# 
  2227  1F13                     	;# 
  2228  1F14                     	;# 
  2229  1F15                     	;# 
  2230  1F20                     	;# 
  2231  1F21                     	;# 
  2232  1F22                     	;# 
  2233  1F23                     	;# 
  2234  1F24                     	;# 
  2235  1F25                     	;# 
  2236  1F38                     	;# 
  2237  1F39                     	;# 
  2238  1F3A                     	;# 
  2239  1F3B                     	;# 
  2240  1F3C                     	;# 
  2241  1F3D                     	;# 
  2242  1F3E                     	;# 
  2243  1F3F                     	;# 
  2244  1F4E                     	;# 
  2245  1F4F                     	;# 
  2246  1F50                     	;# 
  2247  1F51                     	;# 
  2248  1F52                     	;# 
  2249  1F53                     	;# 
  2250  1F54                     	;# 
  2251  1F55                     	;# 
  2252  1FE4                     	;# 
  2253  1FE5                     	;# 
  2254  1FE6                     	;# 
  2255  1FE7                     	;# 
  2256  1FE8                     	;# 
  2257  1FE8                     	;# 
  2258  1FE9                     	;# 
  2259  1FEA                     	;# 
  2260  1FEA                     	;# 
  2261  1FEB                     	;# 
  2262  1FED                     	;# 
  2263  1FEE                     	;# 
  2264  1FEF                     	;# 
  2265  0000                     	;# 
  2266  0001                     	;# 
  2267  0002                     	;# 
  2268  0003                     	;# 
  2269  0004                     	;# 
  2270  0005                     	;# 
  2271  0006                     	;# 
  2272  0007                     	;# 
  2273  0008                     	;# 
  2274  0009                     	;# 
  2275  000A                     	;# 
  2276  000B                     	;# 
  2277  000C                     	;# 
  2278  000E                     	;# 
  2279  0012                     	;# 
  2280  0014                     	;# 
  2281  0018                     	;# 
  2282  001A                     	;# 
  2283  009B                     	;# 
  2284  009B                     	;# 
  2285  009C                     	;# 
  2286  009D                     	;# 
  2287  009E                     	;# 
  2288  009F                     	;# 
  2289  0119                     	;# 
  2290  0119                     	;# 
  2291  0119                     	;# 
  2292  011A                     	;# 
  2293  011A                     	;# 
  2294  011A                     	;# 
  2295  011B                     	;# 
  2296  011B                     	;# 
  2297  011B                     	;# 
  2298  011B                     	;# 
  2299  011B                     	;# 
  2300  011C                     	;# 
  2301  011C                     	;# 
  2302  011C                     	;# 
  2303  011D                     	;# 
  2304  011D                     	;# 
  2305  011D                     	;# 
  2306  011E                     	;# 
  2307  011E                     	;# 
  2308  011E                     	;# 
  2309  011F                     	;# 
  2310  011F                     	;# 
  2311  011F                     	;# 
  2312  011F                     	;# 
  2313  011F                     	;# 
  2314  018C                     	;# 
  2315  018D                     	;# 
  2316  018E                     	;# 
  2317  018F                     	;# 
  2318  0190                     	;# 
  2319  0191                     	;# 
  2320  0192                     	;# 
  2321  020C                     	;# 
  2322  020C                     	;# 
  2323  020D                     	;# 
  2324  020E                     	;# 
  2325  020F                     	;# 
  2326  020F                     	;# 
  2327  0210                     	;# 
  2328  0210                     	;# 
  2329  0211                     	;# 
  2330  0211                     	;# 
  2331  028C                     	;# 
  2332  028C                     	;# 
  2333  028D                     	;# 
  2334  028D                     	;# 
  2335  028E                     	;# 
  2336  028F                     	;# 
  2337  0290                     	;# 
  2338  0291                     	;# 
  2339  030C                     	;# 
  2340  030C                     	;# 
  2341  030D                     	;# 
  2342  030E                     	;# 
  2343  030F                     	;# 
  2344  0310                     	;# 
  2345  0310                     	;# 
  2346  0311                     	;# 
  2347  0312                     	;# 
  2348  0313                     	;# 
  2349  0314                     	;# 
  2350  0314                     	;# 
  2351  0315                     	;# 
  2352  0316                     	;# 
  2353  0318                     	;# 
  2354  0318                     	;# 
  2355  0319                     	;# 
  2356  031A                     	;# 
  2357  031C                     	;# 
  2358  031C                     	;# 
  2359  031D                     	;# 
  2360  031E                     	;# 
  2361  038C                     	;# 
  2362  038C                     	;# 
  2363  038D                     	;# 
  2364  038E                     	;# 
  2365  058C                     	;# 
  2366  058C                     	;# 
  2367  058D                     	;# 
  2368  058E                     	;# 
  2369  058F                     	;# 
  2370  058F                     	;# 
  2371  0590                     	;# 
  2372  0591                     	;# 
  2373  0592                     	;# 
  2374  0593                     	;# 
  2375  059C                     	;# 
  2376  059C                     	;# 
  2377  059D                     	;# 
  2378  059D                     	;# 
  2379  059E                     	;# 
  2380  059F                     	;# 
  2381  060C                     	;# 
  2382  060D                     	;# 
  2383  060E                     	;# 
  2384  060F                     	;# 
  2385  0610                     	;# 
  2386  0611                     	;# 
  2387  0612                     	;# 
  2388  0613                     	;# 
  2389  0614                     	;# 
  2390  070C                     	;# 
  2391  070D                     	;# 
  2392  070E                     	;# 
  2393  070F                     	;# 
  2394  0710                     	;# 
  2395  0711                     	;# 
  2396  0712                     	;# 
  2397  0713                     	;# 
  2398  0716                     	;# 
  2399  0717                     	;# 
  2400  0718                     	;# 
  2401  0719                     	;# 
  2402  071A                     	;# 
  2403  071B                     	;# 
  2404  071C                     	;# 
  2405  071D                     	;# 
  2406  0796                     	;# 
  2407  0797                     	;# 
  2408  0798                     	;# 
  2409  0799                     	;# 
  2410  079A                     	;# 
  2411  079B                     	;# 
  2412  080C                     	;# 
  2413  080D                     	;# 
  2414  080E                     	;# 
  2415  080F                     	;# 
  2416  0810                     	;# 
  2417  0811                     	;# 
  2418  0812                     	;# 
  2419  0813                     	;# 
  2420  0814                     	;# 
  2421  081A                     	;# 
  2422  081A                     	;# 
  2423  081B                     	;# 
  2424  081C                     	;# 
  2425  081C                     	;# 
  2426  081D                     	;# 
  2427  081E                     	;# 
  2428  081F                     	;# 
  2429  088C                     	;# 
  2430  088D                     	;# 
  2431  088E                     	;# 
  2432  088F                     	;# 
  2433  0890                     	;# 
  2434  0891                     	;# 
  2435  0892                     	;# 
  2436  0893                     	;# 
  2437  0895                     	;# 
  2438  0896                     	;# 
  2439  090C                     	;# 
  2440  090E                     	;# 
  2441  090F                     	;# 
  2442  091F                     	;# 
  2443  098F                     	;# 
  2444  098F                     	;# 
  2445  0990                     	;# 
  2446  0991                     	;# 
  2447  0992                     	;# 
  2448  0993                     	;# 
  2449  0994                     	;# 
  2450  0995                     	;# 
  2451  0996                     	;# 
  2452  0997                     	;# 
  2453  0A19                     	;# 
  2454  0A19                     	;# 
  2455  0A1A                     	;# 
  2456  0A1A                     	;# 
  2457  0A1B                     	;# 
  2458  0A1B                     	;# 
  2459  0A1B                     	;# 
  2460  0A1C                     	;# 
  2461  0A1C                     	;# 
  2462  0A1D                     	;# 
  2463  0A1D                     	;# 
  2464  0A1E                     	;# 
  2465  0A1E                     	;# 
  2466  0A1F                     	;# 
  2467  0A1F                     	;# 
  2468  0A1F                     	;# 
  2469  1E0F                     	;# 
  2470  1E10                     	;# 
  2471  1E11                     	;# 
  2472  1E12                     	;# 
  2473  1E13                     	;# 
  2474  1E14                     	;# 
  2475  1E15                     	;# 
  2476  1E16                     	;# 
  2477  1E17                     	;# 
  2478  1E18                     	;# 
  2479  1E19                     	;# 
  2480  1E1A                     	;# 
  2481  1E1B                     	;# 
  2482  1E1C                     	;# 
  2483  1E1D                     	;# 
  2484  1E1E                     	;# 
  2485  1E1F                     	;# 
  2486  1E20                     	;# 
  2487  1E21                     	;# 
  2488  1E22                     	;# 
  2489  1E23                     	;# 
  2490  1E24                     	;# 
  2491  1E25                     	;# 
  2492  1E26                     	;# 
  2493  1E27                     	;# 
  2494  1E28                     	;# 
  2495  1E29                     	;# 
  2496  1E2A                     	;# 
  2497  1E2B                     	;# 
  2498  1E2C                     	;# 
  2499  1E2D                     	;# 
  2500  1E2E                     	;# 
  2501  1E2F                     	;# 
  2502  1E30                     	;# 
  2503  1E31                     	;# 
  2504  1E32                     	;# 
  2505  1E33                     	;# 
  2506  1E34                     	;# 
  2507  1E35                     	;# 
  2508  1E36                     	;# 
  2509  1E37                     	;# 
  2510  1E8F                     	;# 
  2511  1E90                     	;# 
  2512  1E91                     	;# 
  2513  1E92                     	;# 
  2514  1E93                     	;# 
  2515  1E9C                     	;# 
  2516  1EA1                     	;# 
  2517  1EA2                     	;# 
  2518  1EB1                     	;# 
  2519  1EBB                     	;# 
  2520  1EBC                     	;# 
  2521  1EBD                     	;# 
  2522  1EBE                     	;# 
  2523  1EC3                     	;# 
  2524  1EC5                     	;# 
  2525  1EC6                     	;# 
  2526  1EC7                     	;# 
  2527  1ECB                     	;# 
  2528  1ECC                     	;# 
  2529  1ECD                     	;# 
  2530  1ECE                     	;# 
  2531  1F10                     	;# 
  2532  1F11                     	;# 
  2533  1F12                     	;# 
  2534  1F13                     	;# 
  2535  1F14                     	;# 
  2536  1F15                     	;# 
  2537  1F20                     	;# 
  2538  1F21                     	;# 
  2539  1F22                     	;# 
  2540  1F23                     	;# 
  2541  1F24                     	;# 
  2542  1F25                     	;# 
  2543  1F38                     	;# 
  2544  1F39                     	;# 
  2545  1F3A                     	;# 
  2546  1F3B                     	;# 
  2547  1F3C                     	;# 
  2548  1F3D                     	;# 
  2549  1F3E                     	;# 
  2550  1F3F                     	;# 
  2551  1F4E                     	;# 
  2552  1F4F                     	;# 
  2553  1F50                     	;# 
  2554  1F51                     	;# 
  2555  1F52                     	;# 
  2556  1F53                     	;# 
  2557  1F54                     	;# 
  2558  1F55                     	;# 
  2559  1FE4                     	;# 
  2560  1FE5                     	;# 
  2561  1FE6                     	;# 
  2562  1FE7                     	;# 
  2563  1FE8                     	;# 
  2564  1FE8                     	;# 
  2565  1FE9                     	;# 
  2566  1FEA                     	;# 
  2567  1FEA                     	;# 
  2568  1FEB                     	;# 
  2569  1FED                     	;# 
  2570  1FEE                     	;# 
  2571  1FEF                     	;# 
  2572  0000                     	;# 
  2573  0001                     	;# 
  2574  0002                     	;# 
  2575  0003                     	;# 
  2576  0004                     	;# 
  2577  0005                     	;# 
  2578  0006                     	;# 
  2579  0007                     	;# 
  2580  0008                     	;# 
  2581  0009                     	;# 
  2582  000A                     	;# 
  2583  000B                     	;# 
  2584  000C                     	;# 
  2585  000E                     	;# 
  2586  0012                     	;# 
  2587  0014                     	;# 
  2588  0018                     	;# 
  2589  001A                     	;# 
  2590  009B                     	;# 
  2591  009B                     	;# 
  2592  009C                     	;# 
  2593  009D                     	;# 
  2594  009E                     	;# 
  2595  009F                     	;# 
  2596  0119                     	;# 
  2597  0119                     	;# 
  2598  0119                     	;# 
  2599  011A                     	;# 
  2600  011A                     	;# 
  2601  011A                     	;# 
  2602  011B                     	;# 
  2603  011B                     	;# 
  2604  011B                     	;# 
  2605  011B                     	;# 
  2606  011B                     	;# 
  2607  011C                     	;# 
  2608  011C                     	;# 
  2609  011C                     	;# 
  2610  011D                     	;# 
  2611  011D                     	;# 
  2612  011D                     	;# 
  2613  011E                     	;# 
  2614  011E                     	;# 
  2615  011E                     	;# 
  2616  011F                     	;# 
  2617  011F                     	;# 
  2618  011F                     	;# 
  2619  011F                     	;# 
  2620  011F                     	;# 
  2621  018C                     	;# 
  2622  018D                     	;# 
  2623  018E                     	;# 
  2624  018F                     	;# 
  2625  0190                     	;# 
  2626  0191                     	;# 
  2627  0192                     	;# 
  2628  020C                     	;# 
  2629  020C                     	;# 
  2630  020D                     	;# 
  2631  020E                     	;# 
  2632  020F                     	;# 
  2633  020F                     	;# 
  2634  0210                     	;# 
  2635  0210                     	;# 
  2636  0211                     	;# 
  2637  0211                     	;# 
  2638  028C                     	;# 
  2639  028C                     	;# 
  2640  028D                     	;# 
  2641  028D                     	;# 
  2642  028E                     	;# 
  2643  028F                     	;# 
  2644  0290                     	;# 
  2645  0291                     	;# 
  2646  030C                     	;# 
  2647  030C                     	;# 
  2648  030D                     	;# 
  2649  030E                     	;# 
  2650  030F                     	;# 
  2651  0310                     	;# 
  2652  0310                     	;# 
  2653  0311                     	;# 
  2654  0312                     	;# 
  2655  0313                     	;# 
  2656  0314                     	;# 
  2657  0314                     	;# 
  2658  0315                     	;# 
  2659  0316                     	;# 
  2660  0318                     	;# 
  2661  0318                     	;# 
  2662  0319                     	;# 
  2663  031A                     	;# 
  2664  031C                     	;# 
  2665  031C                     	;# 
  2666  031D                     	;# 
  2667  031E                     	;# 
  2668  038C                     	;# 
  2669  038C                     	;# 
  2670  038D                     	;# 
  2671  038E                     	;# 
  2672  058C                     	;# 
  2673  058C                     	;# 
  2674  058D                     	;# 
  2675  058E                     	;# 
  2676  058F                     	;# 
  2677  058F                     	;# 
  2678  0590                     	;# 
  2679  0591                     	;# 
  2680  0592                     	;# 
  2681  0593                     	;# 
  2682  059C                     	;# 
  2683  059C                     	;# 
  2684  059D                     	;# 
  2685  059D                     	;# 
  2686  059E                     	;# 
  2687  059F                     	;# 
  2688  060C                     	;# 
  2689  060D                     	;# 
  2690  060E                     	;# 
  2691  060F                     	;# 
  2692  0610                     	;# 
  2693  0611                     	;# 
  2694  0612                     	;# 
  2695  0613                     	;# 
  2696  0614                     	;# 
  2697  070C                     	;# 
  2698  070D                     	;# 
  2699  070E                     	;# 
  2700  070F                     	;# 
  2701  0710                     	;# 
  2702  0711                     	;# 
  2703  0712                     	;# 
  2704  0713                     	;# 
  2705  0716                     	;# 
  2706  0717                     	;# 
  2707  0718                     	;# 
  2708  0719                     	;# 
  2709  071A                     	;# 
  2710  071B                     	;# 
  2711  071C                     	;# 
  2712  071D                     	;# 
  2713  0796                     	;# 
  2714  0797                     	;# 
  2715  0798                     	;# 
  2716  0799                     	;# 
  2717  079A                     	;# 
  2718  079B                     	;# 
  2719  080C                     	;# 
  2720  080D                     	;# 
  2721  080E                     	;# 
  2722  080F                     	;# 
  2723  0810                     	;# 
  2724  0811                     	;# 
  2725  0812                     	;# 
  2726  0813                     	;# 
  2727  0814                     	;# 
  2728  081A                     	;# 
  2729  081A                     	;# 
  2730  081B                     	;# 
  2731  081C                     	;# 
  2732  081C                     	;# 
  2733  081D                     	;# 
  2734  081E                     	;# 
  2735  081F                     	;# 
  2736  088C                     	;# 
  2737  088D                     	;# 
  2738  088E                     	;# 
  2739  088F                     	;# 
  2740  0890                     	;# 
  2741  0891                     	;# 
  2742  0892                     	;# 
  2743  0893                     	;# 
  2744  0895                     	;# 
  2745  0896                     	;# 
  2746  090C                     	;# 
  2747  090E                     	;# 
  2748  090F                     	;# 
  2749  091F                     	;# 
  2750  098F                     	;# 
  2751  098F                     	;# 
  2752  0990                     	;# 
  2753  0991                     	;# 
  2754  0992                     	;# 
  2755  0993                     	;# 
  2756  0994                     	;# 
  2757  0995                     	;# 
  2758  0996                     	;# 
  2759  0997                     	;# 
  2760  0A19                     	;# 
  2761  0A19                     	;# 
  2762  0A1A                     	;# 
  2763  0A1A                     	;# 
  2764  0A1B                     	;# 
  2765  0A1B                     	;# 
  2766  0A1B                     	;# 
  2767  0A1C                     	;# 
  2768  0A1C                     	;# 
  2769  0A1D                     	;# 
  2770  0A1D                     	;# 
  2771  0A1E                     	;# 
  2772  0A1E                     	;# 
  2773  0A1F                     	;# 
  2774  0A1F                     	;# 
  2775  0A1F                     	;# 
  2776  1E0F                     	;# 
  2777  1E10                     	;# 
  2778  1E11                     	;# 
  2779  1E12                     	;# 
  2780  1E13                     	;# 
  2781  1E14                     	;# 
  2782  1E15                     	;# 
  2783  1E16                     	;# 
  2784  1E17                     	;# 
  2785  1E18                     	;# 
  2786  1E19                     	;# 
  2787  1E1A                     	;# 
  2788  1E1B                     	;# 
  2789  1E1C                     	;# 
  2790  1E1D                     	;# 
  2791  1E1E                     	;# 
  2792  1E1F                     	;# 
  2793  1E20                     	;# 
  2794  1E21                     	;# 
  2795  1E22                     	;# 
  2796  1E23                     	;# 
  2797  1E24                     	;# 
  2798  1E25                     	;# 
  2799  1E26                     	;# 
  2800  1E27                     	;# 
  2801  1E28                     	;# 
  2802  1E29                     	;# 
  2803  1E2A                     	;# 
  2804  1E2B                     	;# 
  2805  1E2C                     	;# 
  2806  1E2D                     	;# 
  2807  1E2E                     	;# 
  2808  1E2F                     	;# 
  2809  1E30                     	;# 
  2810  1E31                     	;# 
  2811  1E32                     	;# 
  2812  1E33                     	;# 
  2813  1E34                     	;# 
  2814  1E35                     	;# 
  2815  1E36                     	;# 
  2816  1E37                     	;# 
  2817  1E8F                     	;# 
  2818  1E90                     	;# 
  2819  1E91                     	;# 
  2820  1E92                     	;# 
  2821  1E93                     	;# 
  2822  1E9C                     	;# 
  2823  1EA1                     	;# 
  2824  1EA2                     	;# 
  2825  1EB1                     	;# 
  2826  1EBB                     	;# 
  2827  1EBC                     	;# 
  2828  1EBD                     	;# 
  2829  1EBE                     	;# 
  2830  1EC3                     	;# 
  2831  1EC5                     	;# 
  2832  1EC6                     	;# 
  2833  1EC7                     	;# 
  2834  1ECB                     	;# 
  2835  1ECC                     	;# 
  2836  1ECD                     	;# 
  2837  1ECE                     	;# 
  2838  1F10                     	;# 
  2839  1F11                     	;# 
  2840  1F12                     	;# 
  2841  1F13                     	;# 
  2842  1F14                     	;# 
  2843  1F15                     	;# 
  2844  1F20                     	;# 
  2845  1F21                     	;# 
  2846  1F22                     	;# 
  2847  1F23                     	;# 
  2848  1F24                     	;# 
  2849  1F25                     	;# 
  2850  1F38                     	;# 
  2851  1F39                     	;# 
  2852  1F3A                     	;# 
  2853  1F3B                     	;# 
  2854  1F3C                     	;# 
  2855  1F3D                     	;# 
  2856  1F3E                     	;# 
  2857  1F3F                     	;# 
  2858  1F4E                     	;# 
  2859  1F4F                     	;# 
  2860  1F50                     	;# 
  2861  1F51                     	;# 
  2862  1F52                     	;# 
  2863  1F53                     	;# 
  2864  1F54                     	;# 
  2865  1F55                     	;# 
  2866  1FE4                     	;# 
  2867  1FE5                     	;# 
  2868  1FE6                     	;# 
  2869  1FE7                     	;# 
  2870  1FE8                     	;# 
  2871  1FE8                     	;# 
  2872  1FE9                     	;# 
  2873  1FEA                     	;# 
  2874  1FEA                     	;# 
  2875  1FEB                     	;# 
  2876  1FED                     	;# 
  2877  1FEE                     	;# 
  2878  1FEF                     	;# 
  2879  0000                     	;# 
  2880  0001                     	;# 
  2881  0002                     	;# 
  2882  0003                     	;# 
  2883  0004                     	;# 
  2884  0005                     	;# 
  2885  0006                     	;# 
  2886  0007                     	;# 
  2887  0008                     	;# 
  2888  0009                     	;# 
  2889  000A                     	;# 
  2890  000B                     	;# 
  2891  000C                     	;# 
  2892  000E                     	;# 
  2893  0012                     	;# 
  2894  0014                     	;# 
  2895  0018                     	;# 
  2896  001A                     	;# 
  2897  009B                     	;# 
  2898  009B                     	;# 
  2899  009C                     	;# 
  2900  009D                     	;# 
  2901  009E                     	;# 
  2902  009F                     	;# 
  2903  0119                     	;# 
  2904  0119                     	;# 
  2905  0119                     	;# 
  2906  011A                     	;# 
  2907  011A                     	;# 
  2908  011A                     	;# 
  2909  011B                     	;# 
  2910  011B                     	;# 
  2911  011B                     	;# 
  2912  011B                     	;# 
  2913  011B                     	;# 
  2914  011C                     	;# 
  2915  011C                     	;# 
  2916  011C                     	;# 
  2917  011D                     	;# 
  2918  011D                     	;# 
  2919  011D                     	;# 
  2920  011E                     	;# 
  2921  011E                     	;# 
  2922  011E                     	;# 
  2923  011F                     	;# 
  2924  011F                     	;# 
  2925  011F                     	;# 
  2926  011F                     	;# 
  2927  011F                     	;# 
  2928  018C                     	;# 
  2929  018D                     	;# 
  2930  018E                     	;# 
  2931  018F                     	;# 
  2932  0190                     	;# 
  2933  0191                     	;# 
  2934  0192                     	;# 
  2935  020C                     	;# 
  2936  020C                     	;# 
  2937  020D                     	;# 
  2938  020E                     	;# 
  2939  020F                     	;# 
  2940  020F                     	;# 
  2941  0210                     	;# 
  2942  0210                     	;# 
  2943  0211                     	;# 
  2944  0211                     	;# 
  2945  028C                     	;# 
  2946  028C                     	;# 
  2947  028D                     	;# 
  2948  028D                     	;# 
  2949  028E                     	;# 
  2950  028F                     	;# 
  2951  0290                     	;# 
  2952  0291                     	;# 
  2953  030C                     	;# 
  2954  030C                     	;# 
  2955  030D                     	;# 
  2956  030E                     	;# 
  2957  030F                     	;# 
  2958  0310                     	;# 
  2959  0310                     	;# 
  2960  0311                     	;# 
  2961  0312                     	;# 
  2962  0313                     	;# 
  2963  0314                     	;# 
  2964  0314                     	;# 
  2965  0315                     	;# 
  2966  0316                     	;# 
  2967  0318                     	;# 
  2968  0318                     	;# 
  2969  0319                     	;# 
  2970  031A                     	;# 
  2971  031C                     	;# 
  2972  031C                     	;# 
  2973  031D                     	;# 
  2974  031E                     	;# 
  2975  038C                     	;# 
  2976  038C                     	;# 
  2977  038D                     	;# 
  2978  038E                     	;# 
  2979  058C                     	;# 
  2980  058C                     	;# 
  2981  058D                     	;# 
  2982  058E                     	;# 
  2983  058F                     	;# 
  2984  058F                     	;# 
  2985  0590                     	;# 
  2986  0591                     	;# 
  2987  0592                     	;# 
  2988  0593                     	;# 
  2989  059C                     	;# 
  2990  059C                     	;# 
  2991  059D                     	;# 
  2992  059D                     	;# 
  2993  059E                     	;# 
  2994  059F                     	;# 
  2995  060C                     	;# 
  2996  060D                     	;# 
  2997  060E                     	;# 
  2998  060F                     	;# 
  2999  0610                     	;# 
  3000  0611                     	;# 
  3001  0612                     	;# 
  3002  0613                     	;# 
  3003  0614                     	;# 
  3004  070C                     	;# 
  3005  070D                     	;# 
  3006  070E                     	;# 
  3007  070F                     	;# 
  3008  0710                     	;# 
  3009  0711                     	;# 
  3010  0712                     	;# 
  3011  0713                     	;# 
  3012  0716                     	;# 
  3013  0717                     	;# 
  3014  0718                     	;# 
  3015  0719                     	;# 
  3016  071A                     	;# 
  3017  071B                     	;# 
  3018  071C                     	;# 
  3019  071D                     	;# 
  3020  0796                     	;# 
  3021  0797                     	;# 
  3022  0798                     	;# 
  3023  0799                     	;# 
  3024  079A                     	;# 
  3025  079B                     	;# 
  3026  080C                     	;# 
  3027  080D                     	;# 
  3028  080E                     	;# 
  3029  080F                     	;# 
  3030  0810                     	;# 
  3031  0811                     	;# 
  3032  0812                     	;# 
  3033  0813                     	;# 
  3034  0814                     	;# 
  3035  081A                     	;# 
  3036  081A                     	;# 
  3037  081B                     	;# 
  3038  081C                     	;# 
  3039  081C                     	;# 
  3040  081D                     	;# 
  3041  081E                     	;# 
  3042  081F                     	;# 
  3043  088C                     	;# 
  3044  088D                     	;# 
  3045  088E                     	;# 
  3046  088F                     	;# 
  3047  0890                     	;# 
  3048  0891                     	;# 
  3049  0892                     	;# 
  3050  0893                     	;# 
  3051  0895                     	;# 
  3052  0896                     	;# 
  3053  090C                     	;# 
  3054  090E                     	;# 
  3055  090F                     	;# 
  3056  091F                     	;# 
  3057  098F                     	;# 
  3058  098F                     	;# 
  3059  0990                     	;# 
  3060  0991                     	;# 
  3061  0992                     	;# 
  3062  0993                     	;# 
  3063  0994                     	;# 
  3064  0995                     	;# 
  3065  0996                     	;# 
  3066  0997                     	;# 
  3067  0A19                     	;# 
  3068  0A19                     	;# 
  3069  0A1A                     	;# 
  3070  0A1A                     	;# 
  3071  0A1B                     	;# 
  3072  0A1B                     	;# 
  3073  0A1B                     	;# 
  3074  0A1C                     	;# 
  3075  0A1C                     	;# 
  3076  0A1D                     	;# 
  3077  0A1D                     	;# 
  3078  0A1E                     	;# 
  3079  0A1E                     	;# 
  3080  0A1F                     	;# 
  3081  0A1F                     	;# 
  3082  0A1F                     	;# 
  3083  1E0F                     	;# 
  3084  1E10                     	;# 
  3085  1E11                     	;# 
  3086  1E12                     	;# 
  3087  1E13                     	;# 
  3088  1E14                     	;# 
  3089  1E15                     	;# 
  3090  1E16                     	;# 
  3091  1E17                     	;# 
  3092  1E18                     	;# 
  3093  1E19                     	;# 
  3094  1E1A                     	;# 
  3095  1E1B                     	;# 
  3096  1E1C                     	;# 
  3097  1E1D                     	;# 
  3098  1E1E                     	;# 
  3099  1E1F                     	;# 
  3100  1E20                     	;# 
  3101  1E21                     	;# 
  3102  1E22                     	;# 
  3103  1E23                     	;# 
  3104  1E24                     	;# 
  3105  1E25                     	;# 
  3106  1E26                     	;# 
  3107  1E27                     	;# 
  3108  1E28                     	;# 
  3109  1E29                     	;# 
  3110  1E2A                     	;# 
  3111  1E2B                     	;# 
  3112  1E2C                     	;# 
  3113  1E2D                     	;# 
  3114  1E2E                     	;# 
  3115  1E2F                     	;# 
  3116  1E30                     	;# 
  3117  1E31                     	;# 
  3118  1E32                     	;# 
  3119  1E33                     	;# 
  3120  1E34                     	;# 
  3121  1E35                     	;# 
  3122  1E36                     	;# 
  3123  1E37                     	;# 
  3124  1E8F                     	;# 
  3125  1E90                     	;# 
  3126  1E91                     	;# 
  3127  1E92                     	;# 
  3128  1E93                     	;# 
  3129  1E9C                     	;# 
  3130  1EA1                     	;# 
  3131  1EA2                     	;# 
  3132  1EB1                     	;# 
  3133  1EBB                     	;# 
  3134  1EBC                     	;# 
  3135  1EBD                     	;# 
  3136  1EBE                     	;# 
  3137  1EC3                     	;# 
  3138  1EC5                     	;# 
  3139  1EC6                     	;# 
  3140  1EC7                     	;# 
  3141  1ECB                     	;# 
  3142  1ECC                     	;# 
  3143  1ECD                     	;# 
  3144  1ECE                     	;# 
  3145  1F10                     	;# 
  3146  1F11                     	;# 
  3147  1F12                     	;# 
  3148  1F13                     	;# 
  3149  1F14                     	;# 
  3150  1F15                     	;# 
  3151  1F20                     	;# 
  3152  1F21                     	;# 
  3153  1F22                     	;# 
  3154  1F23                     	;# 
  3155  1F24                     	;# 
  3156  1F25                     	;# 
  3157  1F38                     	;# 
  3158  1F39                     	;# 
  3159  1F3A                     	;# 
  3160  1F3B                     	;# 
  3161  1F3C                     	;# 
  3162  1F3D                     	;# 
  3163  1F3E                     	;# 
  3164  1F3F                     	;# 
  3165  1F4E                     	;# 
  3166  1F4F                     	;# 
  3167  1F50                     	;# 
  3168  1F51                     	;# 
  3169  1F52                     	;# 
  3170  1F53                     	;# 
  3171  1F54                     	;# 
  3172  1F55                     	;# 
  3173  1FE4                     	;# 
  3174  1FE5                     	;# 
  3175  1FE6                     	;# 
  3176  1FE7                     	;# 
  3177  1FE8                     	;# 
  3178  1FE8                     	;# 
  3179  1FE9                     	;# 
  3180  1FEA                     	;# 
  3181  1FEA                     	;# 
  3182  1FEB                     	;# 
  3183  1FED                     	;# 
  3184  1FEE                     	;# 
  3185  1FEF                     	;# 
  3186  0000                     	;# 
  3187  0001                     	;# 
  3188  0002                     	;# 
  3189  0003                     	;# 
  3190  0004                     	;# 
  3191  0005                     	;# 
  3192  0006                     	;# 
  3193  0007                     	;# 
  3194  0008                     	;# 
  3195  0009                     	;# 
  3196  000A                     	;# 
  3197  000B                     	;# 
  3198  000C                     	;# 
  3199  000E                     	;# 
  3200  0012                     	;# 
  3201  0014                     	;# 
  3202  0018                     	;# 
  3203  001A                     	;# 
  3204  009B                     	;# 
  3205  009B                     	;# 
  3206  009C                     	;# 
  3207  009D                     	;# 
  3208  009E                     	;# 
  3209  009F                     	;# 
  3210  0119                     	;# 
  3211  0119                     	;# 
  3212  0119                     	;# 
  3213  011A                     	;# 
  3214  011A                     	;# 
  3215  011A                     	;# 
  3216  011B                     	;# 
  3217  011B                     	;# 
  3218  011B                     	;# 
  3219  011B                     	;# 
  3220  011B                     	;# 
  3221  011C                     	;# 
  3222  011C                     	;# 
  3223  011C                     	;# 
  3224  011D                     	;# 
  3225  011D                     	;# 
  3226  011D                     	;# 
  3227  011E                     	;# 
  3228  011E                     	;# 
  3229  011E                     	;# 
  3230  011F                     	;# 
  3231  011F                     	;# 
  3232  011F                     	;# 
  3233  011F                     	;# 
  3234  011F                     	;# 
  3235  018C                     	;# 
  3236  018D                     	;# 
  3237  018E                     	;# 
  3238  018F                     	;# 
  3239  0190                     	;# 
  3240  0191                     	;# 
  3241  0192                     	;# 
  3242  020C                     	;# 
  3243  020C                     	;# 
  3244  020D                     	;# 
  3245  020E                     	;# 
  3246  020F                     	;# 
  3247  020F                     	;# 
  3248  0210                     	;# 
  3249  0210                     	;# 
  3250  0211                     	;# 
  3251  0211                     	;# 
  3252  028C                     	;# 
  3253  028C                     	;# 
  3254  028D                     	;# 
  3255  028D                     	;# 
  3256  028E                     	;# 
  3257  028F                     	;# 
  3258  0290                     	;# 
  3259  0291                     	;# 
  3260  030C                     	;# 
  3261  030C                     	;# 
  3262  030D                     	;# 
  3263  030E                     	;# 
  3264  030F                     	;# 
  3265  0310                     	;# 
  3266  0310                     	;# 
  3267  0311                     	;# 
  3268  0312                     	;# 
  3269  0313                     	;# 
  3270  0314                     	;# 
  3271  0314                     	;# 
  3272  0315                     	;# 
  3273  0316                     	;# 
  3274  0318                     	;# 
  3275  0318                     	;# 
  3276  0319                     	;# 
  3277  031A                     	;# 
  3278  031C                     	;# 
  3279  031C                     	;# 
  3280  031D                     	;# 
  3281  031E                     	;# 
  3282  038C                     	;# 
  3283  038C                     	;# 
  3284  038D                     	;# 
  3285  038E                     	;# 
  3286  058C                     	;# 
  3287  058C                     	;# 
  3288  058D                     	;# 
  3289  058E                     	;# 
  3290  058F                     	;# 
  3291  058F                     	;# 
  3292  0590                     	;# 
  3293  0591                     	;# 
  3294  0592                     	;# 
  3295  0593                     	;# 
  3296  059C                     	;# 
  3297  059C                     	;# 
  3298  059D                     	;# 
  3299  059D                     	;# 
  3300  059E                     	;# 
  3301  059F                     	;# 
  3302  060C                     	;# 
  3303  060D                     	;# 
  3304  060E                     	;# 
  3305  060F                     	;# 
  3306  0610                     	;# 
  3307  0611                     	;# 
  3308  0612                     	;# 
  3309  0613                     	;# 
  3310  0614                     	;# 
  3311  070C                     	;# 
  3312  070D                     	;# 
  3313  070E                     	;# 
  3314  070F                     	;# 
  3315  0710                     	;# 
  3316  0711                     	;# 
  3317  0712                     	;# 
  3318  0713                     	;# 
  3319  0716                     	;# 
  3320  0717                     	;# 
  3321  0718                     	;# 
  3322  0719                     	;# 
  3323  071A                     	;# 
  3324  071B                     	;# 
  3325  071C                     	;# 
  3326  071D                     	;# 
  3327  0796                     	;# 
  3328  0797                     	;# 
  3329  0798                     	;# 
  3330  0799                     	;# 
  3331  079A                     	;# 
  3332  079B                     	;# 
  3333  080C                     	;# 
  3334  080D                     	;# 
  3335  080E                     	;# 
  3336  080F                     	;# 
  3337  0810                     	;# 
  3338  0811                     	;# 
  3339  0812                     	;# 
  3340  0813                     	;# 
  3341  0814                     	;# 
  3342  081A                     	;# 
  3343  081A                     	;# 
  3344  081B                     	;# 
  3345  081C                     	;# 
  3346  081C                     	;# 
  3347  081D                     	;# 
  3348  081E                     	;# 
  3349  081F                     	;# 
  3350  088C                     	;# 
  3351  088D                     	;# 
  3352  088E                     	;# 
  3353  088F                     	;# 
  3354  0890                     	;# 
  3355  0891                     	;# 
  3356  0892                     	;# 
  3357  0893                     	;# 
  3358  0895                     	;# 
  3359  0896                     	;# 
  3360  090C                     	;# 
  3361  090E                     	;# 
  3362  090F                     	;# 
  3363  091F                     	;# 
  3364  098F                     	;# 
  3365  098F                     	;# 
  3366  0990                     	;# 
  3367  0991                     	;# 
  3368  0992                     	;# 
  3369  0993                     	;# 
  3370  0994                     	;# 
  3371  0995                     	;# 
  3372  0996                     	;# 
  3373  0997                     	;# 
  3374  0A19                     	;# 
  3375  0A19                     	;# 
  3376  0A1A                     	;# 
  3377  0A1A                     	;# 
  3378  0A1B                     	;# 
  3379  0A1B                     	;# 
  3380  0A1B                     	;# 
  3381  0A1C                     	;# 
  3382  0A1C                     	;# 
  3383  0A1D                     	;# 
  3384  0A1D                     	;# 
  3385  0A1E                     	;# 
  3386  0A1E                     	;# 
  3387  0A1F                     	;# 
  3388  0A1F                     	;# 
  3389  0A1F                     	;# 
  3390  1E0F                     	;# 
  3391  1E10                     	;# 
  3392  1E11                     	;# 
  3393  1E12                     	;# 
  3394  1E13                     	;# 
  3395  1E14                     	;# 
  3396  1E15                     	;# 
  3397  1E16                     	;# 
  3398  1E17                     	;# 
  3399  1E18                     	;# 
  3400  1E19                     	;# 
  3401  1E1A                     	;# 
  3402  1E1B                     	;# 
  3403  1E1C                     	;# 
  3404  1E1D                     	;# 
  3405  1E1E                     	;# 
  3406  1E1F                     	;# 
  3407  1E20                     	;# 
  3408  1E21                     	;# 
  3409  1E22                     	;# 
  3410  1E23                     	;# 
  3411  1E24                     	;# 
  3412  1E25                     	;# 
  3413  1E26                     	;# 
  3414  1E27                     	;# 
  3415  1E28                     	;# 
  3416  1E29                     	;# 
  3417  1E2A                     	;# 
  3418  1E2B                     	;# 
  3419  1E2C                     	;# 
  3420  1E2D                     	;# 
  3421  1E2E                     	;# 
  3422  1E2F                     	;# 
  3423  1E30                     	;# 
  3424  1E31                     	;# 
  3425  1E32                     	;# 
  3426  1E33                     	;# 
  3427  1E34                     	;# 
  3428  1E35                     	;# 
  3429  1E36                     	;# 
  3430  1E37                     	;# 
  3431  1E8F                     	;# 
  3432  1E90                     	;# 
  3433  1E91                     	;# 
  3434  1E92                     	;# 
  3435  1E93                     	;# 
  3436  1E9C                     	;# 
  3437  1EA1                     	;# 
  3438  1EA2                     	;# 
  3439  1EB1                     	;# 
  3440  1EBB                     	;# 
  3441  1EBC                     	;# 
  3442  1EBD                     	;# 
  3443  1EBE                     	;# 
  3444  1EC3                     	;# 
  3445  1EC5                     	;# 
  3446  1EC6                     	;# 
  3447  1EC7                     	;# 
  3448  1ECB                     	;# 
  3449  1ECC                     	;# 
  3450  1ECD                     	;# 
  3451  1ECE                     	;# 
  3452  1F10                     	;# 
  3453  1F11                     	;# 
  3454  1F12                     	;# 
  3455  1F13                     	;# 
  3456  1F14                     	;# 
  3457  1F15                     	;# 
  3458  1F20                     	;# 
  3459  1F21                     	;# 
  3460  1F22                     	;# 
  3461  1F23                     	;# 
  3462  1F24                     	;# 
  3463  1F25                     	;# 
  3464  1F38                     	;# 
  3465  1F39                     	;# 
  3466  1F3A                     	;# 
  3467  1F3B                     	;# 
  3468  1F3C                     	;# 
  3469  1F3D                     	;# 
  3470  1F3E                     	;# 
  3471  1F3F                     	;# 
  3472  1F4E                     	;# 
  3473  1F4F                     	;# 
  3474  1F50                     	;# 
  3475  1F51                     	;# 
  3476  1F52                     	;# 
  3477  1F53                     	;# 
  3478  1F54                     	;# 
  3479  1F55                     	;# 
  3480  1FE4                     	;# 
  3481  1FE5                     	;# 
  3482  1FE6                     	;# 
  3483  1FE7                     	;# 
  3484  1FE8                     	;# 
  3485  1FE8                     	;# 
  3486  1FE9                     	;# 
  3487  1FEA                     	;# 
  3488  1FEA                     	;# 
  3489  1FEB                     	;# 
  3490  1FED                     	;# 
  3491  1FEE                     	;# 
  3492  1FEF                     	;# 
  3493                           
  3494                           	psect	idataBANK0
  3495  0000'                    __pidataBANK0:	
  3496                           
  3497                           ;initializer for _mode
  3498  0000' 3402               	retlw	2
  3499                           
  3500                           	psect	idataBANK1
  3501  0000'                    __pidataBANK1:	
  3502                           
  3503                           ;initializer for _BOOST_FREQ
  3504  0000' 3401               	retlw	1
  3505                           
  3506                           ;initializer for _VINDPM_OS
  3507  0001' 3406               	retlw	6
  3508                           
  3509                           ;initializer for _INILIM
  3510  0002' 343A               	retlw	58
  3511                           
  3512                           ;initializer for _EN_ILIM
  3513  0003' 3401               	retlw	1
  3514                           
  3515                           	psect	idataBANK2
  3516  0000'                    __pidataBANK2:	
  3517                           
  3518                           ;initializer for _TREG
  3519  0000' 3401               	retlw	1
  3520                           
  3521                           ;initializer for _CHG_TIMER
  3522  0001' 340A               	retlw	10
  3523                           
  3524                           ;initializer for _EN_TIMER
  3525  0002' 3401               	retlw	1
  3526                           
  3527                           ;initializer for _STAT_DIS
  3528  0003' 3401               	retlw	1
  3529                           
  3530                           ;initializer for _EN_TERM
  3531  0004' 3401               	retlw	1
  3532                           
  3533                           ;initializer for _VREG
  3534  0005' 3416               	retlw	22
  3535                           
  3536                           ;initializer for _ITERM
  3537  0006' 3403               	retlw	3
  3538                           
  3539                           ;initializer for _IPRECHG
  3540  0007' 3401               	retlw	1
  3541                           
  3542                           ;initializer for _ICHG
  3543  0008' 3460               	retlw	96
  3544                           
  3545                           ;initializer for _SYS_MIN
  3546  0009' 3405               	retlw	5
  3547                           
  3548                           ;initializer for _CHG_CONFIG
  3549  000A' 3401               	retlw	1
  3550                           
  3551                           ;initializer for _AUTO_DPDM_EN
  3552  000B' 3401               	retlw	1
  3553                           
  3554                           ;initializer for _MAXC_EN
  3555  000C' 3401               	retlw	1
  3556                           
  3557                           ;initializer for _ICO_EN
  3558  000D' 3401               	retlw	1
  3559                           
  3560                           	psect	stringtext1
  3561  0000'                    __pstringtext1:	
  3562  0000'                    _nvm_config:	
  3563  0000' 3400               	retlw	0
  3564  0001' 3400               	retlw	0
  3565  0002' 34B0               	retlw	176
  3566  0003' 34AA               	retlw	170
  3567  0004' 3400               	retlw	0
  3568  0005' 3445               	retlw	69
  3569  0006' 3400               	retlw	0
  3570  0007' 3400               	retlw	0
  3571  0008' 3410               	retlw	16
  3572  0009' 3440               	retlw	64
  3573  000A' 349C               	retlw	156
  3574  000B' 341C               	retlw	28
  3575  000C' 34FF               	retlw	255
  3576  000D' 3401               	retlw	1
  3577  000E' 343C               	retlw	60
  3578  000F' 34DF               	retlw	223
  3579  0010' 3402               	retlw	2
  3580  0011' 3440               	retlw	64
  3581  0012' 340F               	retlw	15
  3582  0013' 3400               	retlw	0
  3583  0014' 3432               	retlw	50
  3584  0015' 3400               	retlw	0
  3585  0016' 34FC               	retlw	252
  3586  0017' 34F1               	retlw	241
  3587  0018' 3400               	retlw	0
  3588  0019' 3419               	retlw	25
  3589  001A' 3456               	retlw	86
  3590  001B' 34AF               	retlw	175
  3591  001C' 34FB               	retlw	251
  3592  001D' 3475               	retlw	117
  3593  001E' 345F               	retlw	95
  3594  001F' 3400               	retlw	0
  3595  0020' 3400               	retlw	0
  3596  0021' 342D               	retlw	45
  3597  0022' 34F0               	retlw	240
  3598  0023' 3420               	retlw	32
  3599  0024' 3443               	retlw	67
  3600  0025' 3400               	retlw	0
  3601  0026' 3450               	retlw	80
  3602  0027' 34FB               	retlw	251
  3603  0028'                    __end_of_nvm_config:	
  3604  0012                     _TRISAbits	set	18
  3605  0014                     _TRISCbits	set	20
  3606  000B                     _INTCONbits	set	11
  3607  0014                     _TRISC	set	20
  3608  0012                     _TRISA	set	18
  3609  0070                     _RC0	set	112
  3610  0071                     _RC1	set	113
  3611  0074                     _RC4	set	116
  3612  0073                     _RC3	set	115
  3613  0072                     _RC2	set	114
  3614  0075                     _RC5	set	117
  3615  0062                     _RA2	set	98
  3616  0065                     _RA5	set	101
  3617  009C                     _ADRESH	set	156
  3618  009D                     _ADCON0bits	set	157
  3619  009D                     _ADCON0	set	157
  3620  009E                     _ADCON1	set	158
  3621  0192                     _SSP1CON3	set	402
  3622  018C                     _SSP1BUF	set	396
  3623  0191                     _SSP1CON2bits	set	401
  3624  018F                     _SSP1STAT	set	399
  3625  018D                     _SSP1ADD	set	397
  3626  0191                     _SSP1CON2	set	401
  3627  0190                     _SSP1CON1	set	400
  3628  020C                     _TMR1	set	524
  3629  0211                     _T1CLK	set	529
  3630  020F                     _T1GCONbits	set	527
  3631  020E                     _T1CONbits	set	526
  3632  028C                     _TMR2	set	652
  3633  0290                     _T2CLKCON	set	656
  3634  028D                     _PR2	set	653
  3635  1473                     _T2OUTPS3	set	5235
  3636  1472                     _T2OUTPS2	set	5234
  3637  1471                     _T2OUTPS1	set	5233
  3638  1470                     _T2OUTPS0	set	5232
  3639  1476                     _T2CKPS2	set	5238
  3640  1475                     _T2CKPS1	set	5237
  3641  1474                     _T2CKPS0	set	5236
  3642  1477                     _TMR2ON	set	5239
  3643  031E                     _PWM5CONbits	set	798
  3644  031A                     _PWM4CONbits	set	794
  3645  0316                     _PWM3CONbits	set	790
  3646  031C                     _PWM5DCL	set	796
  3647  031D                     _PWM5DCH	set	797
  3648  031E                     _PWM5CON	set	798
  3649  0318                     _PWM4DCL	set	792
  3650  0319                     _PWM4DCH	set	793
  3651  031A                     _PWM4CON	set	794
  3652  0314                     _PWM3DCL	set	788
  3653  0315                     _PWM3DCH	set	789
  3654  0316                     _PWM3CON	set	790
  3655  0716                     _PIE0bits	set	1814
  3656  071A                     _PIE4bits	set	1818
  3657  3881                     _TMR2IF	set	14465
  3658  3880                     _TMR1IF	set	14464
  3659  081F                     _NVMCON2	set	2079
  3660  081C                     _NVMDATL	set	2076
  3661  081A                     _NVMADRL	set	2074
  3662  081B                     _NVMADRH	set	2075
  3663  081E                     _NVMCON1bits	set	2078
  3664  0812                     _VREGCON	set	2066
  3665  088C                     _CPUDOZEbits	set	2188
  3666  1E8F                     _PPSLOCK	set	7823
  3667  1EC5                     _SSP1CLKPPS	set	7877
  3668  1EC6                     _SSP1DATPPS	set	7878
  3669  1F24                     _RC4PPS	set	7972
  3670  1F23                     _RC3PPS	set	7971
  3671  1F22                     _RC2PPS	set	7970
  3672  1F20                     _RC0PPS	set	7968
  3673  1F21                     _RC1PPS	set	7969
  3674  1F3F                     _IOCAF	set	7999
  3675  1F3E                     _IOCAN	set	7998
  3676  1F3D                     _IOCAP	set	7997
  3677  1F39                     _WPUA	set	7993
  3678  1F38                     _ANSELAbits	set	7992
  3679  1F4E                     _ANSELC	set	8014
  3680  1F38                     _ANSELA	set	7992
  3681  F9FD                     _IOCAF5	set	63997
  3682                           
  3683                           ; #config settings
  3684  0000                     
  3685                           	psect	cinit
  3686  0000'                    start_initialization:	
  3687  0000'                    __initialization:	
  3688                           
  3689                           ; Initialize objects allocated to BANK0
  3690  0000' 3180' 2000' 3180'  	fcall	__pidataBANK0	;fetch initializer
  3691  0003' 0080'              	movwf	__pdataBANK0& (0+127)
  3692                           
  3693                           ; Initialize objects allocated to BANK1
  3694  0004' 3000'              	movlw	low __pidataBANK1
  3695  0005' 0084               	movwf	4
  3696  0006' 3000'              	movlw	(high __pidataBANK1)| (0+128)
  3697  0007' 0085               	movwf	5
  3698  0008' 3000'              	movlw	low __pdataBANK1
  3699  0009' 0086               	movwf	6
  3700  000A' 3000'              	movlw	high __pdataBANK1
  3701  000B' 0087               	movwf	7
  3702  000C' 3004               	movlw	4
  3703  000D' 3180' 2000' 3180'  	fcall	init_ram
  3704                           
  3705                           ; Initialize objects allocated to BANK2
  3706  0010' 3000'              	movlw	low __pidataBANK2
  3707  0011' 0084               	movwf	4
  3708  0012' 3000'              	movlw	(high __pidataBANK2)| (0+128)
  3709  0013' 0085               	movwf	5
  3710  0014' 3000'              	movlw	low __pdataBANK2
  3711  0015' 0086               	movwf	6
  3712  0016' 3000'              	movlw	high __pdataBANK2
  3713  0017' 0087               	movwf	7
  3714  0018' 300E               	movlw	14
  3715  0019' 3180' 2000' 3180'  	fcall	init_ram
  3716                           
  3717                           ; Clear objects allocated to COMMON
  3718  001C' 0180'              	clrf	__pbssCOMMON& (0+127)
  3719  001D' 0180'              	clrf	(__pbssCOMMON+1)& (0+127)
  3720  001E' 0180'              	clrf	(__pbssCOMMON+2)& (0+127)
  3721  001F' 0180'              	clrf	(__pbssCOMMON+3)& (0+127)
  3722  0020' 0180'              	clrf	(__pbssCOMMON+4)& (0+127)
  3723  0021' 0180'              	clrf	(__pbssCOMMON+5)& (0+127)
  3724                           
  3725                           ; Clear objects allocated to BANK0
  3726  0022' 3000'              	movlw	low __pbssBANK0
  3727  0023' 0084               	movwf	4
  3728  0024' 3000'              	movlw	high __pbssBANK0
  3729  0025' 0085               	movwf	5
  3730  0026' 300F               	movlw	15
  3731  0027' 3180' 2000' 3180'  	fcall	clear_ram0
  3732                           
  3733                           ; Clear objects allocated to BANK1
  3734  002A' 3000'              	movlw	low __pbssBANK1
  3735  002B' 0084               	movwf	4
  3736  002C' 3000'              	movlw	high __pbssBANK1
  3737  002D' 0085               	movwf	5
  3738  002E' 3009               	movlw	9
  3739  002F' 3180' 2000' 3180'  	fcall	clear_ram0
  3740                           
  3741                           ; Clear objects allocated to BANK2
  3742  0032' 3000'              	movlw	low __pbssBANK2
  3743  0033' 0084               	movwf	4
  3744  0034' 3000'              	movlw	high __pbssBANK2
  3745  0035' 0085               	movwf	5
  3746  0036' 3025               	movlw	37
  3747  0037' 3180' 2000' 3180'  	fcall	clear_ram0
  3748  003A'                    end_of_initialization:	
  3749                           ;End of C runtime variable initialization code
  3750                           
  3751  003A'                    __end_of__initialization:	
  3752  003A' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3753  003B' 0140               	movlb	0
  3754  003C' 3180' 2800'        	ljmp	_main	;jump to C main() function
  3755                           
  3756                           	psect	bssCOMMON
  3757  0000'                    __pbssCOMMON:	
  3758  0000'                    _REG08_config:	
  3759  0000'                    	ds	1
  3760  0001'                    _REG07_config:	
  3761  0001'                    	ds	1
  3762  0002'                    _REG06_config:	
  3763  0002'                    	ds	1
  3764  0003'                    _REG05_config:	
  3765  0003'                    	ds	1
  3766  0004'                    _REG04_config:	
  3767  0004'                    	ds	1
  3768  0005'                    _btn_is_pressed:	
  3769  0005'                    	ds	1
  3770                           
  3771                           	psect	bssBANK0
  3772  0000'                    __pbssBANK0:	
  3773  0000'                    _flash_state:	
  3774  0000'                    	ds	1
  3775  0001'                    _dir:	
  3776  0001'                    	ds	1
  3777  0002'                    _color:	
  3778  0002'                    	ds	1
  3779  0003'                    _c:	
  3780  0003'                    	ds	1
  3781  0004'                    _i:	
  3782  0004'                    	ds	1
  3783  0005'                    _REG03_config:	
  3784  0005'                    	ds	1
  3785  0006'                    _REG02_config:	
  3786  0006'                    	ds	1
  3787  0007'                    _REG01_config:	
  3788  0007'                    	ds	1
  3789  0008'                    _REG00_config:	
  3790  0008'                    	ds	1
  3791  0009'                    _set_stusb4500:	
  3792  0009'                    	ds	1
  3793  000A'                    _btn_is_debounced:	
  3794  000A'                    	ds	1
  3795  000B'                    _SYS_ENABLE:	
  3796  000B'                    	ds	1
  3797  000C'                    _BQ_adc_state:	
  3798  000C'                    	ds	1
  3799  000D'                    _BATTERY_VOLTAGE:	
  3800  000D'                    	ds	1
  3801  000E'                    _VBUS_CHRG_STATE:	
  3802  000E'                    	ds	1
  3803                           
  3804                           	psect	dataBANK0
  3805  0000'                    __pdataBANK0:	
  3806  0000'                    _mode:	
  3807  0000'                    	ds	1
  3808                           
  3809                           	psect	bssBANK1
  3810  0000'                    __pbssBANK1:	
  3811  0000'                    _timer_counter:	
  3812  0000'                    	ds	4
  3813  0004'                    _CONV_RATE:	
  3814  0004'                    	ds	1
  3815  0005'                    _CONV_START:	
  3816  0005'                    	ds	1
  3817  0006'                    _BCOLD:	
  3818  0006'                    	ds	1
  3819  0007'                    _BHOT:	
  3820  0007'                    	ds	1
  3821  0008'                    _EN_HIZ:	
  3822  0008'                    	ds	1
  3823                           
  3824                           	psect	dataBANK1
  3825  0000'                    __pdataBANK1:	
  3826  0000'                    _BOOST_FREQ:	
  3827  0000'                    	ds	1
  3828  0001'                    _VINDPM_OS:	
  3829  0001'                    	ds	1
  3830  0002'                    _INILIM:	
  3831  0002'                    	ds	1
  3832  0003'                    _EN_ILIM:	
  3833  0003'                    	ds	1
  3834                           
  3835                           	psect	bssBANK2
  3836  0000'                    __pbssBANK2:	
  3837  0000'                    _flash_time:	
  3838  0000'                    	ds	4
  3839  0004'                    _chrg_delay:	
  3840  0004'                    	ds	4
  3841  0008'                    _rgb_delay:	
  3842  0008'                    	ds	4
  3843  000C'                    _BQ_adc_time:	
  3844  000C'                    	ds	4
  3845  0010'                    _stusb4500_timeout:	
  3846  0010'                    	ds	4
  3847  0014'                    _btn_time:	
  3848  0014'                    	ds	4
  3849  0018'                    _btn_time_start:	
  3850  0018'                    	ds	4
  3851  001C'                    _VCLAMP:	
  3852  001C'                    	ds	1
  3853  001D'                    _BAT_COMP:	
  3854  001D'                    	ds	1
  3855  001E'                    _WATCHDOG:	
  3856  001E'                    	ds	1
  3857  001F'                    _VRECHG:	
  3858  001F'                    	ds	1
  3859  0020'                    _BATLOWV:	
  3860  0020'                    	ds	1
  3861  0021'                    _OTG_CONFIG:	
  3862  0021'                    	ds	1
  3863  0022'                    _WD_RST:	
  3864  0022'                    	ds	1
  3865  0023'                    _FORCE_DPDM:	
  3866  0023'                    	ds	1
  3867  0024'                    _HVDCP_EN:	
  3868  0024'                    	ds	1
  3869                           
  3870                           	psect	dataBANK2
  3871  0000'                    __pdataBANK2:	
  3872  0000'                    _TREG:	
  3873  0000'                    	ds	1
  3874  0001'                    _CHG_TIMER:	
  3875  0001'                    	ds	1
  3876  0002'                    _EN_TIMER:	
  3877  0002'                    	ds	1
  3878  0003'                    _STAT_DIS:	
  3879  0003'                    	ds	1
  3880  0004'                    _EN_TERM:	
  3881  0004'                    	ds	1
  3882  0005'                    _VREG:	
  3883  0005'                    	ds	1
  3884  0006'                    _ITERM:	
  3885  0006'                    	ds	1
  3886  0007'                    _IPRECHG:	
  3887  0007'                    	ds	1
  3888  0008'                    _ICHG:	
  3889  0008'                    	ds	1
  3890  0009'                    _SYS_MIN:	
  3891  0009'                    	ds	1
  3892  000A'                    _CHG_CONFIG:	
  3893  000A'                    	ds	1
  3894  000B'                    _AUTO_DPDM_EN:	
  3895  000B'                    	ds	1
  3896  000C'                    _MAXC_EN:	
  3897  000C'                    	ds	1
  3898  000D'                    _ICO_EN:	
  3899  000D'                    	ds	1
  3900                           
  3901                           	psect	inittext
  3902  0000'                    init_ram:	
  3903  0000' 00FE               	movwf	btemp
  3904  0001'                    initloop:	
  3905  0001' 0012               	moviw fsr0++
  3906  0002' 001E               	movwi fsr1++
  3907  0003' 0BFE               	decfsz	btemp,f
  3908  0004' 2800'              	goto	initloop
  3909  0005' 3400               	retlw	0
  3910                           
  3911                           	psect	clrtext
  3912  0000'                    clear_ram0:	
  3913                           ;	Called with FSR0 containing the base address, and
  3914                           ;	WREG with the size to clear
  3915                           
  3916  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
  3917  0001'                    clrloop0:	
  3918  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
  3919  0002' 3101               	addfsr 0,1
  3920  0003' 0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3921  0004' 2800'              	goto	clrloop0	;have we reached the end yet?
  3922  0005' 3400               	retlw	0	;all done for this memory range, return
  3923                           
  3924                           	psect	cstackBANK1
  3925  0000'                    __pcstackBANK1:	
  3926  0000'                    negotiate_optimal_pdo@opt_pdo_power:	
  3927                           
  3928                           ; 4 bytes @ 0x0
  3929  0000'                    	ds	4
  3930  0004'                    negotiate_optimal_pdo@opt_pdo_current:	
  3931                           
  3932                           ; 2 bytes @ 0x4
  3933  0004'                    	ds	2
  3934  0006'                    negotiate_optimal_pdo@opt_pdo_voltage:	
  3935                           
  3936                           ; 2 bytes @ 0x6
  3937  0006'                    	ds	2
  3938  0008'                    negotiate_optimal_pdo@src_pdos:	
  3939                           
  3940                           ; 1 bytes @ 0x8
  3941  0008'                    	ds	1
  3942  0009'                    negotiate_optimal_pdo@pdo_power:	
  3943                           
  3944                           ; 4 bytes @ 0x9
  3945  0009'                    	ds	4
  3946  000D'                    negotiate_optimal_pdo@pdo_current:	
  3947                           
  3948                           ; 2 bytes @ 0xD
  3949  000D'                    	ds	2
  3950  000F'                    negotiate_optimal_pdo@i:	
  3951                           
  3952                           ; 2 bytes @ 0xF
  3953  000F'                    	ds	2
  3954  0011'                    negotiate_optimal_pdo@ok:	
  3955                           
  3956                           ; 2 bytes @ 0x11
  3957  0011'                    	ds	2
  3958  0013'                    negotiate_optimal_pdo@pdo:	
  3959                           
  3960                           ; 4 bytes @ 0x13
  3961  0013'                    	ds	4
  3962  0017'                    negotiate_optimal_pdo@pdo_voltage:	
  3963                           
  3964                           ; 2 bytes @ 0x17
  3965  0017'                    	ds	2
  3966  0019'                    stusb_negotiate@buffer:	
  3967                           
  3968                           ; 40 bytes @ 0x19
  3969  0019'                    	ds	40
  3970  0041'                    stusb_negotiate@header:	
  3971                           
  3972                           ; 2 bytes @ 0x41
  3973  0041'                    	ds	2
  3974                           
  3975                           	psect	cstackCOMMON
  3976  0000'                    __pcstackCOMMON:	
  3977  0000'                    ?_I2C_bus_reset:	
  3978  0000'                    ?_PPS_unlock:	
  3979                           ; 1 bytes @ 0x0
  3980                           
  3981  0000'                    ?_PPS_lock:	
  3982                           ; 1 bytes @ 0x0
  3983                           
  3984  0000'                    ?_BQ_CONFIG_INIT:	
  3985                           ; 1 bytes @ 0x0
  3986                           
  3987  0000'                    ?_BQ_INIT:	
  3988                           ; 1 bytes @ 0x0
  3989                           
  3990  0000'                    ?_PWM_INIT:	
  3991                           ; 1 bytes @ 0x0
  3992                           
  3993  0000'                    ?_BQ_UPDATE:	
  3994                           ; 1 bytes @ 0x0
  3995                           
  3996  0000'                    ?_led_modes:	
  3997                           ; 1 bytes @ 0x0
  3998                           
  3999  0000'                    ?_chrg_led:	
  4000                           ; 1 bytes @ 0x0
  4001                           
  4002  0000'                    ?_PWM_power_down:	
  4003                           ; 1 bytes @ 0x0
  4004                           
  4005  0000'                    ?_BQ_get_chrg_state:	
  4006                           ; 1 bytes @ 0x0
  4007                           
  4008  0000'                    ?_PIC_SETUP:	
  4009                           ; 1 bytes @ 0x0
  4010                           
  4011  0000'                    ?_ISR:	
  4012                           ; 1 bytes @ 0x0
  4013                           
  4014  0000'                    ?_thermal_protection:	
  4015                           ; 1 bytes @ 0x0
  4016                           
  4017  0000'                    ?_main:	
  4018                           ; 1 bytes @ 0x0
  4019                           
  4020  0000'                    ?_I2C_Master_Wait:	
  4021                           ; 1 bytes @ 0x0
  4022                           
  4023  0000'                    ?_I2C_Master_Start:	
  4024                           ; 1 bytes @ 0x0
  4025                           
  4026  0000'                    ?_I2C_Master_Stop:	
  4027                           ; 1 bytes @ 0x0
  4028                           
  4029  0000'                    ?_I2C_Master_Write:	
  4030                           ; 1 bytes @ 0x0
  4031                           
  4032  0000'                    ?_I2C_Master_Ack:	
  4033                           ; 1 bytes @ 0x0
  4034                           
  4035  0000'                    ?_I2C_Master_nAck:	
  4036                           ; 1 bytes @ 0x0
  4037                           
  4038  0000'                    ?_I2C_Master_Read:	
  4039                           ; 1 bytes @ 0x0
  4040                           
  4041  0000'                    ?_RGB_fade:	
  4042                           ; 1 bytes @ 0x0
  4043                           
  4044  0000'                    ?_battery_fade:	
  4045                           ; 1 bytes @ 0x0
  4046                           
  4047  0000'                    ?_flash_led:	
  4048                           ; 1 bytes @ 0x0
  4049                           
  4050  0000'                    ?_i2c_master_wait:	
  4051                           ; 1 bytes @ 0x0
  4052                           
  4053  0000'                    ?_i2c_master_start:	
  4054                           ; 1 bytes @ 0x0
  4055                           
  4056  0000'                    ?_i2c_master_repeat_start:	
  4057                           ; 1 bytes @ 0x0
  4058                           
  4059  0000'                    ?_i2c_master_stop:	
  4060                           ; 1 bytes @ 0x0
  4061                           
  4062  0000'                    ?_i2c_master_receive_byte:	
  4063                           ; 1 bytes @ 0x0
  4064                           
  4065  0000'                    ?_nvm_flash:	
  4066                           ; 1 bytes @ 0x0
  4067                           
  4068  0000'                    ?_stusb_negotiate:	
  4069                           ; 2 bytes @ 0x0
  4070                           
  4071  0000'                    ?i1_get_time:	
  4072                           ; 2 bytes @ 0x0
  4073                           
  4074  0000'                    ?i1_timer_diff:	
  4075                           ; 4 bytes @ 0x0
  4076                           
  4077  0000'                    i1timer_diff@t:	
  4078                           ; 4 bytes @ 0x0
  4079                           
  4080                           
  4081                           ; 4 bytes @ 0x0
  4082  0000'                    	ds	4
  4083  0004'                    ??i1_get_time:	
  4084  0004'                    ??i1_timer_diff:	
  4085                           ; 1 bytes @ 0x4
  4086                           
  4087                           
  4088                           ; 1 bytes @ 0x4
  4089  0004'                    	ds	4
  4090  0008'                    ??_ISR:	
  4091                           
  4092                           	psect	cstackBANK0
  4093  0000'                    __pcstackBANK0:	
  4094                           ; 1 bytes @ 0x8
  4095                           
  4096  0000'                    ??_I2C_bus_reset:	
  4097  0000'                    ??_PPS_unlock:	
  4098                           ; 1 bytes @ 0x0
  4099                           
  4100  0000'                    ??_PPS_lock:	
  4101                           ; 1 bytes @ 0x0
  4102                           
  4103  0000'                    ??_BQ_CONFIG_INIT:	
  4104                           ; 1 bytes @ 0x0
  4105                           
  4106  0000'                    ??_PWM_INIT:	
  4107                           ; 1 bytes @ 0x0
  4108                           
  4109  0000'                    ??_PWM_power_down:	
  4110                           ; 1 bytes @ 0x0
  4111                           
  4112  0000'                    ??_PIC_SETUP:	
  4113                           ; 1 bytes @ 0x0
  4114                           
  4115  0000'                    ??_I2C_Master_Wait:	
  4116                           ; 1 bytes @ 0x0
  4117                           
  4118  0000'                    ??_I2C_Master_Start:	
  4119                           ; 1 bytes @ 0x0
  4120                           
  4121  0000'                    ??_I2C_Master_Stop:	
  4122                           ; 1 bytes @ 0x0
  4123                           
  4124  0000'                    ??_I2C_Master_Write:	
  4125                           ; 1 bytes @ 0x0
  4126                           
  4127  0000'                    ??_I2C_Master_Ack:	
  4128                           ; 1 bytes @ 0x0
  4129                           
  4130  0000'                    ??_I2C_Master_nAck:	
  4131                           ; 1 bytes @ 0x0
  4132                           
  4133  0000'                    ??_I2C_Master_Read:	
  4134                           ; 1 bytes @ 0x0
  4135                           
  4136  0000'                    ??_i2c_master_wait:	
  4137                           ; 1 bytes @ 0x0
  4138                           
  4139  0000'                    ??_i2c_master_start:	
  4140                           ; 1 bytes @ 0x0
  4141                           
  4142  0000'                    ??_i2c_master_repeat_start:	
  4143                           ; 1 bytes @ 0x0
  4144                           
  4145  0000'                    ??_i2c_master_stop:	
  4146                           ; 1 bytes @ 0x0
  4147                           
  4148  0000'                    ??_i2c_master_receive_byte:	
  4149                           ; 1 bytes @ 0x0
  4150                           
  4151  0000'                    ?_readADC:	
  4152                           ; 1 bytes @ 0x0
  4153                           
  4154  0000'                    ?_i2c_master_send_byte:	
  4155                           ; 2 bytes @ 0x0
  4156                           
  4157  0000'                    ?___wmul:	
  4158                           ; 2 bytes @ 0x0
  4159                           
  4160  0000'                    ?___lwdiv:	
  4161                           ; 2 bytes @ 0x0
  4162                           
  4163  0000'                    ?_get_time:	
  4164                           ; 2 bytes @ 0x0
  4165                           
  4166  0000'                    ?_timer_diff:	
  4167                           ; 4 bytes @ 0x0
  4168                           
  4169  0000'                    ?___lmul:	
  4170                           ; 4 bytes @ 0x0
  4171                           
  4172  0000'                    I2C_Master_Write@data:	
  4173                           ; 4 bytes @ 0x0
  4174                           
  4175  0000'                    ___wmul@multiplier:	
  4176                           ; 1 bytes @ 0x0
  4177                           
  4178  0000'                    ___lwdiv@divisor:	
  4179                           ; 2 bytes @ 0x0
  4180                           
  4181  0000'                    timer_diff@t:	
  4182                           ; 2 bytes @ 0x0
  4183                           
  4184  0000'                    ___lmul@multiplier:	
  4185                           ; 4 bytes @ 0x0
  4186                           
  4187                           
  4188                           ; 4 bytes @ 0x0
  4189  0000'                    	ds	1
  4190  0001'                    ?_BQ_Write:	
  4191  0001'                    I2C_bus_reset@i:	
  4192                           ; 1 bytes @ 0x1
  4193                           
  4194  0001'                    I2C_Master_Read@ack:	
  4195                           ; 1 bytes @ 0x1
  4196                           
  4197  0001'                    BQ_Write@data:	
  4198                           ; 1 bytes @ 0x1
  4199                           
  4200  0001'                    i2c_master_receive_byte@ack:	
  4201                           ; 1 bytes @ 0x1
  4202                           
  4203                           
  4204                           ; 1 bytes @ 0x1
  4205  0001'                    	ds	1
  4206  0002'                    ??_readADC:	
  4207  0002'                    ??_BQ_Write:	
  4208                           ; 1 bytes @ 0x2
  4209                           
  4210  0002'                    I2C_Master_Read@data:	
  4211                           ; 1 bytes @ 0x2
  4212                           
  4213  0002'                    BQ_Write@reg:	
  4214                           ; 1 bytes @ 0x2
  4215                           
  4216  0002'                    i2c_master_receive_byte@data:	
  4217                           ; 1 bytes @ 0x2
  4218                           
  4219  0002'                    ___wmul@multiplicand:	
  4220                           ; 1 bytes @ 0x2
  4221                           
  4222  0002'                    ___lwdiv@dividend:	
  4223                           ; 2 bytes @ 0x2
  4224                           
  4225                           
  4226                           ; 2 bytes @ 0x2
  4227  0002'                    	ds	1
  4228  0003'                    ??_BQ_INIT:	
  4229  0003'                    ??_i2c_master_send_byte:	
  4230                           ; 1 bytes @ 0x3
  4231                           
  4232  0003'                    ?_BQ_Read:	
  4233                           ; 1 bytes @ 0x3
  4234                           
  4235  0003'                    i2c_master_send_byte@data:	
  4236                           ; 2 bytes @ 0x3
  4237                           
  4238                           
  4239                           ; 1 bytes @ 0x3
  4240  0003'                    	ds	1
  4241  0004'                    ??_get_time:	
  4242  0004'                    ??_timer_diff:	
  4243                           ; 1 bytes @ 0x4
  4244                           
  4245  0004'                    ??___wmul:	
  4246                           ; 1 bytes @ 0x4
  4247                           
  4248  0004'                    ??___lwdiv:	
  4249                           ; 1 bytes @ 0x4
  4250                           
  4251  0004'                    ?_i2c_master_read:	
  4252                           ; 1 bytes @ 0x4
  4253                           
  4254  0004'                    ?_i2c_master_write:	
  4255                           ; 2 bytes @ 0x4
  4256                           
  4257  0004'                    readADC@channel:	
  4258                           ; 2 bytes @ 0x4
  4259                           
  4260  0004'                    i2c_master_write@reg:	
  4261                           ; 1 bytes @ 0x4
  4262                           
  4263  0004'                    i2c_master_read@reg:	
  4264                           ; 1 bytes @ 0x4
  4265                           
  4266  0004'                    ___wmul@product:	
  4267                           ; 1 bytes @ 0x4
  4268                           
  4269  0004'                    ___lmul@multiplicand:	
  4270                           ; 2 bytes @ 0x4
  4271                           
  4272                           
  4273                           ; 4 bytes @ 0x4
  4274  0004'                    	ds	1
  4275  0005'                    ??_thermal_protection:	
  4276  0005'                    ??_BQ_Read:	
  4277                           ; 1 bytes @ 0x5
  4278                           
  4279  0005'                    i2c_master_read@buf:	
  4280                           ; 1 bytes @ 0x5
  4281                           
  4282  0005'                    i2c_master_write@buf:	
  4283                           ; 1 bytes @ 0x5
  4284                           
  4285  0005'                    ___lwdiv@quotient:	
  4286                           ; 2 bytes @ 0x5
  4287                           
  4288                           
  4289                           ; 2 bytes @ 0x5
  4290  0005'                    	ds	1
  4291  0006'                    ?___awdiv:	
  4292  0006'                    i2c_master_read@len:	
  4293                           ; 2 bytes @ 0x6
  4294                           
  4295  0006'                    ___awdiv@divisor:	
  4296                           ; 2 bytes @ 0x6
  4297                           
  4298                           
  4299                           ; 2 bytes @ 0x6
  4300  0006'                    	ds	1
  4301  0007'                    BQ_Read@reg:	
  4302  0007'                    ___lwdiv@counter:	
  4303                           ; 1 bytes @ 0x7
  4304                           
  4305  0007'                    i2c_master_write@len:	
  4306                           ; 1 bytes @ 0x7
  4307                           
  4308                           
  4309                           ; 2 bytes @ 0x7
  4310  0007'                    	ds	1
  4311  0008'                    ??_chrg_led:	
  4312  0008'                    ??_i2c_master_read:	
  4313                           ; 1 bytes @ 0x8
  4314                           
  4315  0008'                    ??_RGB_fade:	
  4316                           ; 1 bytes @ 0x8
  4317                           
  4318  0008'                    ??_flash_led:	
  4319                           ; 1 bytes @ 0x8
  4320                           
  4321  0008'                    ??___lmul:	
  4322                           ; 1 bytes @ 0x8
  4323                           
  4324  0008'                    BQ_Read@data:	
  4325                           ; 1 bytes @ 0x8
  4326                           
  4327  0008'                    ___awdiv@dividend:	
  4328                           ; 1 bytes @ 0x8
  4329                           
  4330  0008'                    ___lmul@product:	
  4331                           ; 2 bytes @ 0x8
  4332                           
  4333                           
  4334                           ; 4 bytes @ 0x8
  4335  0008'                    	ds	1
  4336  0009'                    ??_BQ_get_chrg_state:	
  4337  0009'                    ??_i2c_master_write:	
  4338                           ; 1 bytes @ 0x9
  4339                           
  4340  0009'                    i2c_master_write@device:	
  4341                           ; 1 bytes @ 0x9
  4342                           
  4343  0009'                    i2c_master_read@device:	
  4344                           ; 1 bytes @ 0x9
  4345                           
  4346                           
  4347                           ; 1 bytes @ 0x9
  4348  0009'                    	ds	1
  4349  000A'                    ??___awdiv:	
  4350  000A'                    i2c_master_read@data:	
  4351                           ; 1 bytes @ 0xA
  4352                           
  4353  000A'                    i2c_master_write@data:	
  4354                           ; 1 bytes @ 0xA
  4355                           
  4356                           
  4357                           ; 2 bytes @ 0xA
  4358  000A'                    	ds	1
  4359  000B'                    ___awdiv@counter:	
  4360  000B'                    BQ_get_chrg_state@data:	
  4361                           ; 1 bytes @ 0xB
  4362                           
  4363  000B'                    i2c_master_read@ok:	
  4364                           ; 2 bytes @ 0xB
  4365                           
  4366                           
  4367                           ; 2 bytes @ 0xB
  4368  000B'                    	ds	1
  4369  000C'                    ?___lldiv:	
  4370  000C'                    ___awdiv@sign:	
  4371                           ; 4 bytes @ 0xC
  4372                           
  4373  000C'                    i2c_master_write@ok:	
  4374                           ; 1 bytes @ 0xC
  4375                           
  4376  000C'                    ___lldiv@divisor:	
  4377                           ; 2 bytes @ 0xC
  4378                           
  4379                           
  4380                           ; 4 bytes @ 0xC
  4381  000C'                    	ds	1
  4382  000D'                    ?_i2c_master_read_u8:	
  4383  000D'                    ?_i2c_master_read_u16:	
  4384                           ; 2 bytes @ 0xD
  4385                           
  4386  000D'                    BQ_get_chrg_state@temp:	
  4387                           ; 2 bytes @ 0xD
  4388                           
  4389  000D'                    i2c_master_read_u8@reg:	
  4390                           ; 1 bytes @ 0xD
  4391                           
  4392  000D'                    i2c_master_read_u16@reg:	
  4393                           ; 1 bytes @ 0xD
  4394                           
  4395  000D'                    ___awdiv@quotient:	
  4396                           ; 1 bytes @ 0xD
  4397                           
  4398                           
  4399                           ; 2 bytes @ 0xD
  4400  000D'                    	ds	1
  4401  000E'                    ??_BQ_UPDATE:	
  4402  000E'                    ?_i2c_master_write_u8:	
  4403                           ; 1 bytes @ 0xE
  4404                           
  4405  000E'                    ?_i2c_master_write_u32:	
  4406                           ; 2 bytes @ 0xE
  4407                           
  4408  000E'                    i2c_master_write_u8@reg:	
  4409                           ; 2 bytes @ 0xE
  4410                           
  4411  000E'                    i2c_master_write_u32@reg:	
  4412                           ; 1 bytes @ 0xE
  4413                           
  4414  000E'                    i2c_master_read_u8@data:	
  4415                           ; 1 bytes @ 0xE
  4416                           
  4417  000E'                    i2c_master_read_u16@data:	
  4418                           ; 1 bytes @ 0xE
  4419                           
  4420                           
  4421                           ; 1 bytes @ 0xE
  4422  000E'                    	ds	1
  4423  000F'                    ??_i2c_master_read_u8:	
  4424  000F'                    ??_i2c_master_read_u16:	
  4425                           ; 1 bytes @ 0xF
  4426                           
  4427  000F'                    ?_Map:	
  4428                           ; 1 bytes @ 0xF
  4429                           
  4430  000F'                    i2c_master_write_u8@data:	
  4431                           ; 1 bytes @ 0xF
  4432                           
  4433  000F'                    Map@x:	
  4434                           ; 1 bytes @ 0xF
  4435                           
  4436  000F'                    i2c_master_write_u32@data:	
  4437                           ; 2 bytes @ 0xF
  4438                           
  4439                           
  4440                           ; 4 bytes @ 0xF
  4441  000F'                    	ds	1
  4442  0010'                    ??_i2c_master_write_u8:	
  4443  0010'                    ___lldiv@dividend:	
  4444                           ; 1 bytes @ 0x10
  4445                           
  4446                           
  4447                           ; 4 bytes @ 0x10
  4448  0010'                    	ds	1
  4449  0011'                    Map@inMin:	
  4450  0011'                    i2c_master_write_u8@device:	
  4451                           ; 1 bytes @ 0x11
  4452                           
  4453  0011'                    i2c_master_read_u8@device:	
  4454                           ; 1 bytes @ 0x11
  4455                           
  4456  0011'                    i2c_master_read_u16@device:	
  4457                           ; 1 bytes @ 0x11
  4458                           
  4459                           
  4460                           ; 1 bytes @ 0x11
  4461  0011'                    	ds	1
  4462  0012'                    ?_reset:	
  4463  0012'                    ?_enter_write_mode:	
  4464                           ; 2 bytes @ 0x12
  4465                           
  4466  0012'                    ?_write_sector:	
  4467                           ; 2 bytes @ 0x12
  4468                           
  4469  0012'                    ?_exit_rw_mode:	
  4470                           ; 2 bytes @ 0x12
  4471                           
  4472  0012'                    Map@inMax:	
  4473                           ; 2 bytes @ 0x12
  4474                           
  4475  0012'                    write_sector@sector_data:	
  4476                           ; 1 bytes @ 0x12
  4477                           
  4478                           
  4479                           ; 2 bytes @ 0x12
  4480  0012'                    	ds	1
  4481  0013'                    ??_i2c_master_write_u32:	
  4482  0013'                    Map@outMin:	
  4483                           ; 1 bytes @ 0x13
  4484                           
  4485                           
  4486                           ; 1 bytes @ 0x13
  4487  0013'                    	ds	1
  4488  0014'                    ??_reset:	
  4489  0014'                    ??_enter_write_mode:	
  4490                           ; 1 bytes @ 0x14
  4491                           
  4492  0014'                    ??_write_sector:	
  4493                           ; 1 bytes @ 0x14
  4494                           
  4495  0014'                    ??_exit_rw_mode:	
  4496                           ; 1 bytes @ 0x14
  4497                           
  4498  0014'                    ??___lldiv:	
  4499                           ; 1 bytes @ 0x14
  4500                           
  4501  0014'                    Map@outMax:	
  4502                           ; 1 bytes @ 0x14
  4503                           
  4504  0014'                    i2c_master_write_u32@device:	
  4505                           ; 1 bytes @ 0x14
  4506                           
  4507                           
  4508                           ; 1 bytes @ 0x14
  4509  0014'                    	ds	1
  4510  0015'                    ??_Map:	
  4511  0015'                    ___lldiv@quotient:	
  4512                           ; 1 bytes @ 0x15
  4513                           
  4514                           
  4515                           ; 4 bytes @ 0x15
  4516  0015'                    	ds	1
  4517  0016'                    reset@res:	
  4518  0016'                    enter_write_mode@buffer:	
  4519                           ; 1 bytes @ 0x16
  4520                           
  4521  0016'                    write_sector@sector_num:	
  4522                           ; 1 bytes @ 0x16
  4523                           
  4524                           
  4525                           ; 1 bytes @ 0x16
  4526  0016'                    	ds	1
  4527  0017'                    ??_battery_fade:	
  4528  0017'                    write_sector@buffer:	
  4529                           ; 1 bytes @ 0x17
  4530                           
  4531  0017'                    reset@ok:	
  4532                           ; 1 bytes @ 0x17
  4533                           
  4534                           
  4535                           ; 2 bytes @ 0x17
  4536  0017'                    	ds	1
  4537  0018'                    ??_nvm_flash:	
  4538                           
  4539                           ; 1 bytes @ 0x18
  4540  0018'                    	ds	1
  4541  0019'                    ?_write_pdo:	
  4542  0019'                    ___lldiv@counter:	
  4543                           ; 2 bytes @ 0x19
  4544                           
  4545  0019'                    write_pdo@current_mA:	
  4546                           ; 1 bytes @ 0x19
  4547                           
  4548                           
  4549                           ; 2 bytes @ 0x19
  4550  0019'                    	ds	1
  4551  001A'                    ?_I2C_Master_Init:	
  4552  001A'                    I2C_Master_Init@clk:	
  4553                           ; 1 bytes @ 0x1A
  4554                           
  4555                           
  4556                           ; 4 bytes @ 0x1A
  4557  001A'                    	ds	1
  4558  001B'                    write_pdo@voltage_mV:	
  4559                           
  4560                           ; 2 bytes @ 0x1B
  4561  001B'                    	ds	2
  4562  001D'                    write_pdo@pdo_num:	
  4563                           
  4564                           ; 1 bytes @ 0x1D
  4565  001D'                    	ds	1
  4566  001E'                    ??_I2C_Master_Init:	
  4567  001E'                    ??_write_pdo:	
  4568                           ; 1 bytes @ 0x1E
  4569                           
  4570                           
  4571                           ; 1 bytes @ 0x1E
  4572  001E'                    	ds	1
  4573  001F'                    battery_fade@v:	
  4574                           
  4575                           ; 1 bytes @ 0x1F
  4576  001F'                    	ds	1
  4577  0020'                    ??_led_modes:	
  4578                           
  4579                           ; 1 bytes @ 0x20
  4580  0020'                    	ds	10
  4581  002A'                    write_pdo@pdo:	
  4582                           
  4583                           ; 4 bytes @ 0x2A
  4584  002A'                    	ds	4
  4585  002E'                    ?_negotiate_optimal_pdo:	
  4586  002E'                    negotiate_optimal_pdo@num_pdos:	
  4587                           ; 2 bytes @ 0x2E
  4588                           
  4589                           
  4590                           ; 1 bytes @ 0x2E
  4591  002E'                    	ds	2
  4592  0030'                    ??_negotiate_optimal_pdo:	
  4593                           
  4594                           ; 1 bytes @ 0x30
  4595  0030'                    	ds	8
  4596  0038'                    ??_stusb_negotiate:	
  4597                           
  4598                           ; 1 bytes @ 0x38
  4599  0038'                    	ds	6
  4600  003E'                    ??_main:	
  4601                           
  4602                           ; 1 bytes @ 0x3E
  4603  003E'                    	ds	1
  4604                           
  4605                           	psect	maintext
  4606  0000'                    __pmaintext:	
  4607 ;;
  4608 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4609 ;;
  4610 ;; *************** function _main *****************
  4611 ;; Defined at:
  4612 ;;		line 115 in file "main.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;		None
  4615 ;; Auto vars:     Size  Location     Type
  4616 ;;		None
  4617 ;; Return value:  Size  Location     Type
  4618 ;;                  1    wreg      void 
  4619 ;; Registers used:
  4620 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4621 ;; Tracked objects:
  4622 ;;		On entry : B3F/0
  4623 ;;		On exit  : 0/0
  4624 ;;		Unchanged: 0/0
  4625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4626 ;;      Params:         0       0       0       0       0       0       0       0
  4627 ;;      Locals:         0       0       0       0       0       0       0       0
  4628 ;;      Temps:          0       1       0       0       0       0       0       0
  4629 ;;      Totals:         0       1       0       0       0       0       0       0
  4630 ;;Total ram usage:        1 bytes
  4631 ;; Hardware stack levels required when called:   10
  4632 ;; This function calls:
  4633 ;;		_BQ_CONFIG_INIT
  4634 ;;		_BQ_INIT
  4635 ;;		_BQ_UPDATE
  4636 ;;		_BQ_Write
  4637 ;;		_I2C_Master_Init
  4638 ;;		_I2C_bus_reset
  4639 ;;		_PIC_SETUP
  4640 ;;		_PPS_lock
  4641 ;;		_PPS_unlock
  4642 ;;		_PWM_INIT
  4643 ;;		_PWM_power_down
  4644 ;;		_chrg_led
  4645 ;;		_get_time
  4646 ;;		_led_modes
  4647 ;;		_nvm_flash
  4648 ;;		_stusb_negotiate
  4649 ;;		_thermal_protection
  4650 ;;		_timer_diff
  4651 ;; This function is called by:
  4652 ;;		Startup code after reset
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           
  4657                           ;psect for function _main
  4658  0000'                    _main:	
  4659  0000'                    l3969:	
  4660                           ;incstack = 0
  4661                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4662                           
  4663                           
  4664                           ;main.c: 117: PIC_SETUP();
  4665  0000' 3180' 2000' 3180'  	fcall	_PIC_SETUP
  4666                           
  4667                           ;main.c: 120: I2C_bus_reset();
  4668  0003' 3180' 2000' 3180'  	fcall	_I2C_bus_reset
  4669                           
  4670                           ;main.c: 123: PPS_unlock();
  4671  0006' 3180' 2000' 3180'  	fcall	_PPS_unlock
  4672  0009'                    l3971:	
  4673                           
  4674                           ;main.c: 124: SSP1DATPPS = 0x11;
  4675  0009' 3011               	movlw	17
  4676  000A' 017D               	movlb	61	; select bank61
  4677  000B' 00C6               	movwf	70	;volatile
  4678  000C'                    l3973:	
  4679                           
  4680                           ;main.c: 125: RC1PPS = 0x16;
  4681  000C' 3016               	movlw	22
  4682  000D' 017E               	movlb	62	; select bank62
  4683  000E' 00A1               	movwf	33	;volatile
  4684  000F'                    l3975:	
  4685                           
  4686                           ;main.c: 126: SSP1CLKPPS = 0x10;
  4687  000F' 3010               	movlw	16
  4688  0010' 017D               	movlb	61	; select bank61
  4689  0011' 00C5               	movwf	69	;volatile
  4690  0012'                    l3977:	
  4691                           
  4692                           ;main.c: 127: RC0PPS = 0x15;
  4693  0012' 3015               	movlw	21
  4694  0013' 017E               	movlb	62	; select bank62
  4695  0014' 00A0               	movwf	32	;volatile
  4696                           
  4697                           ;main.c: 128: PPS_lock();
  4698  0015' 3180' 2000' 3180'  	fcall	_PPS_lock
  4699                           
  4700                           ;main.c: 129: I2C_Master_Init(350000);
  4701  0018' 3000               	movlw	0
  4702  0019' 0140               	movlb	0	; select bank0
  4703  001A' 009D'              	movwf	I2C_Master_Init@clk+3
  4704  001B' 3005               	movlw	5
  4705  001C' 009C'              	movwf	I2C_Master_Init@clk+2
  4706  001D' 3057               	movlw	87
  4707  001E' 009B'              	movwf	I2C_Master_Init@clk+1
  4708  001F' 3030               	movlw	48
  4709  0020' 009A'              	movwf	I2C_Master_Init@clk
  4710  0021' 3180' 2000' 3180'  	fcall	_I2C_Master_Init
  4711                           
  4712                           ;main.c: 131: BQ_CONFIG_INIT();
  4713  0024' 3180' 2000' 3180'  	fcall	_BQ_CONFIG_INIT
  4714                           
  4715                           ;main.c: 132: BQ_INIT();
  4716  0027' 3180' 2000' 3180'  	fcall	_BQ_INIT
  4717                           
  4718                           ;main.c: 134: PWM_INIT();
  4719  002A' 3180' 2000' 3180'  	fcall	_PWM_INIT
  4720  002D'                    l145:	
  4721                           ;main.c: 136: while(1) {
  4722                           
  4723  002D' 0064               	clrwdt	;# 
  4724  002E'                    l3979:	
  4725                           
  4726                           ;main.c: 140: if(btn_is_debounced) {
  4727  002E' 0140               	movlb	0	; select bank0
  4728  002F' 080A'              	movf	_btn_is_debounced,w
  4729  0030' 1903               	btfsc	3,2
  4730  0031' 2800'              	goto	u3751
  4731  0032' 2800'              	goto	u3750
  4732  0033'                    u3751:	
  4733  0033' 2800'              	goto	l4007
  4734  0034'                    u3750:	
  4735  0034'                    l3981:	
  4736                           
  4737                           ;main.c: 141: if(btn_time >= 85) {
  4738  0034' 0142               	movlb	2	; select bank2
  4739  0035' 0800'              	movf	(_btn_time+3)^(0+256),w
  4740  0036' 1D03               	btfss	3,2
  4741  0037' 2800'              	goto	u3760
  4742  0038' 0800'              	movf	(_btn_time+2)^(0+256),w
  4743  0039' 1D03               	btfss	3,2
  4744  003A' 2800'              	goto	u3760
  4745  003B' 0800'              	movf	(_btn_time+1)^(0+256),w
  4746  003C' 1D03               	btfss	3,2
  4747  003D' 2800'              	goto	u3760
  4748  003E' 3055               	movlw	85
  4749  003F' 0200'              	subwf	_btn_time^(0+256),w
  4750  0040' 1C03               	btfss	3,0
  4751  0041' 2800'              	goto	u3761
  4752  0042' 2800'              	goto	u3760
  4753  0043'                    u3761:	
  4754  0043' 2800'              	goto	l3993
  4755  0044'                    u3760:	
  4756  0044'                    l3983:	
  4757                           
  4758                           ;main.c: 142: SYS_ENABLE = !SYS_ENABLE;
  4759  0044' 0140               	movlb	0	; select bank0
  4760  0045' 080B'              	movf	_SYS_ENABLE,w
  4761  0046' 1903               	btfsc	3,2
  4762  0047' 2800'              	goto	u3771
  4763  0048' 2800'              	goto	u3770
  4764  0049'                    u3771:	
  4765  0049' 3001               	movlw	1
  4766  004A' 2800'              	goto	u3780
  4767  004B'                    u3770:	
  4768  004B' 3000               	movlw	0
  4769  004C'                    u3780:	
  4770  004C' 00BE'              	movwf	??_main
  4771  004D' 083E'              	movf	??_main,w
  4772  004E' 008B'              	movwf	_SYS_ENABLE
  4773                           
  4774                           ;main.c: 143: if(SYS_ENABLE) {
  4775  004F' 080B'              	movf	_SYS_ENABLE,w
  4776  0050' 1903               	btfsc	3,2
  4777  0051' 2800'              	goto	u3791
  4778  0052' 2800'              	goto	u3790
  4779  0053'                    u3791:	
  4780  0053' 2800'              	goto	l148
  4781  0054'                    u3790:	
  4782  0054'                    l3985:	
  4783                           
  4784                           ;main.c: 144: TRISCbits.TRISC5 = 0;
  4785  0054' 1294               	bcf	20,5	;volatile
  4786                           
  4787                           ;main.c: 145: RC5 = 1;
  4788  0055' 168E               	bsf	14,5	;volatile
  4789  0056'                    l3987:	
  4790                           
  4791                           ;main.c: 146: nvm_flash();
  4792  0056' 3180' 2000' 3180'  	fcall	_nvm_flash
  4793                           
  4794                           ;main.c: 148: }
  4795  0059' 2800'              	goto	l4005
  4796  005A'                    l148:	
  4797                           
  4798                           ;main.c: 149: else {;main.c: 150: TRISCbits.TRISC5 = 1;
  4799  005A' 1694               	bsf	20,5	;volatile
  4800  005B'                    l3989:	
  4801                           
  4802                           ;main.c: 151: if(mode == 3) {
  4803  005B' 3003               	movlw	3
  4804  005C' 0600'              	xorwf	_mode,w
  4805  005D' 1D03               	btfss	3,2
  4806  005E' 2800'              	goto	u3801
  4807  005F' 2800'              	goto	u3800
  4808  0060'                    u3801:	
  4809  0060' 2800'              	goto	l4005
  4810  0061'                    u3800:	
  4811  0061'                    l3991:	
  4812                           
  4813                           ;main.c: 152: BQ_Write(0x09, 0b01100100);
  4814  0061' 3064               	movlw	100
  4815  0062' 00BE'              	movwf	??_main
  4816  0063' 083E'              	movf	??_main,w
  4817  0064' 0081'              	movwf	BQ_Write@data
  4818  0065' 3009               	movlw	9
  4819  0066' 3180' 2000' 3180'  	fcall	_BQ_Write
  4820  0069' 2800'              	goto	l4005
  4821  006A'                    l3993:	
  4822                           
  4823                           ;main.c: 156: else if(SYS_ENABLE && btn_time<=50 && !VBUS_CHRG_STATE[1]) {
  4824  006A' 0140               	movlb	0	; select bank0
  4825  006B' 080B'              	movf	_SYS_ENABLE,w
  4826  006C' 1903               	btfsc	3,2
  4827  006D' 2800'              	goto	u3811
  4828  006E' 2800'              	goto	u3810
  4829  006F'                    u3811:	
  4830  006F' 2800'              	goto	l4005
  4831  0070'                    u3810:	
  4832  0070'                    l3995:	
  4833  0070' 0142               	movlb	2	; select bank2
  4834  0071' 0800'              	movf	(_btn_time+3)^(0+256),w
  4835  0072' 1D03               	btfss	3,2
  4836  0073' 2800'              	goto	u3821
  4837  0074' 0800'              	movf	(_btn_time+2)^(0+256),w
  4838  0075' 1D03               	btfss	3,2
  4839  0076' 2800'              	goto	u3821
  4840  0077' 0800'              	movf	(_btn_time+1)^(0+256),w
  4841  0078' 1D03               	btfss	3,2
  4842  0079' 2800'              	goto	u3821
  4843  007A' 3033               	movlw	51
  4844  007B' 0200'              	subwf	_btn_time^(0+256),w
  4845  007C' 1803               	btfsc	3,0
  4846  007D' 2800'              	goto	u3821
  4847  007E' 2800'              	goto	u3820
  4848  007F'                    u3821:	
  4849  007F' 2800'              	goto	l4005
  4850  0080'                    u3820:	
  4851  0080'                    l3997:	
  4852  0080' 0140               	movlb	0	; select bank0
  4853  0081' 0A0E'              	incf	_VBUS_CHRG_STATE,w
  4854  0082' 0086               	movwf	6
  4855  0083' 0187               	clrf	7
  4856  0084' 0801               	movf	1,w
  4857  0085' 1D03               	btfss	3,2
  4858  0086' 2800'              	goto	u3831
  4859  0087' 2800'              	goto	u3830
  4860  0088'                    u3831:	
  4861  0088' 2800'              	goto	l4005
  4862  0089'                    u3830:	
  4863  0089'                    l3999:	
  4864                           
  4865                           ;main.c: 159: if(BATTERY_VOLTAGE <= 50) {
  4866  0089' 3033               	movlw	51
  4867  008A' 020D'              	subwf	_BATTERY_VOLTAGE,w
  4868  008B' 1803               	skipnc
  4869  008C' 2800'              	goto	u3841
  4870  008D' 2800'              	goto	u3840
  4871  008E'                    u3841:	
  4872  008E' 2800'              	goto	l4003
  4873  008F'                    u3840:	
  4874  008F'                    l4001:	
  4875                           
  4876                           ;main.c: 160: mode = 2;
  4877  008F' 3002               	movlw	2
  4878  0090' 00BE'              	movwf	??_main
  4879  0091' 083E'              	movf	??_main,w
  4880  0092' 0080'              	movwf	_mode
  4881                           
  4882                           ;main.c: 161: }
  4883  0093' 2800'              	goto	l4005
  4884  0094'                    l4003:	
  4885                           
  4886                           ;main.c: 162: else {;main.c: 163: mode++;
  4887  0094' 3001               	movlw	1
  4888  0095' 00BE'              	movwf	??_main
  4889  0096' 083E'              	movf	??_main,w
  4890  0097' 0780'              	addwf	_mode,f
  4891  0098'                    l4005:	
  4892                           
  4893                           ;main.c: 164: };main.c: 165: };main.c: 166: btn_is_debounced = 0;
  4894  0098' 0140               	movlb	0	; select bank0
  4895  0099' 018A'              	clrf	_btn_is_debounced
  4896  009A'                    l4007:	
  4897                           
  4898                           ;main.c: 167: };main.c: 169: BQ_UPDATE();
  4899  009A' 3180' 2000' 3180'  	fcall	_BQ_UPDATE
  4900  009D'                    l4009:	
  4901                           
  4902                           ;main.c: 171: thermal_protection();
  4903  009D' 3180' 2000' 3180'  	fcall	_thermal_protection
  4904  00A0'                    l4011:	
  4905                           
  4906                           ;main.c: 174: if(VBUS_CHRG_STATE[1] == 0) {
  4907  00A0' 0140               	movlb	0	; select bank0
  4908  00A1' 0A0E'              	incf	_VBUS_CHRG_STATE,w
  4909  00A2' 0086               	movwf	6
  4910  00A3' 0187               	clrf	7
  4911  00A4' 0801               	movf	1,w
  4912  00A5' 1D03               	btfss	3,2
  4913  00A6' 2800'              	goto	u3851
  4914  00A7' 2800'              	goto	u3850
  4915  00A8'                    u3851:	
  4916  00A8' 2800'              	goto	l4019
  4917  00A9'                    u3850:	
  4918  00A9'                    l4013:	
  4919                           
  4920                           ;main.c: 175: if(SYS_ENABLE) {
  4921  00A9' 080B'              	movf	_SYS_ENABLE,w
  4922  00AA' 1903               	btfsc	3,2
  4923  00AB' 2800'              	goto	u3861
  4924  00AC' 2800'              	goto	u3860
  4925  00AD'                    u3861:	
  4926  00AD' 2800'              	goto	l156
  4927  00AE'                    u3860:	
  4928  00AE'                    l4015:	
  4929                           
  4930                           ;main.c: 176: led_modes();
  4931  00AE' 3180' 2000' 3180'  	fcall	_led_modes
  4932  00B1'                    l156:	
  4933                           
  4934                           ;main.c: 177: };main.c: 178: if(timer_diff(stusb4500_timeout) >= 500) {
  4935  00B1' 0142               	movlb	2	; select bank2
  4936  00B2' 0800'              	movf	(_stusb4500_timeout+3)^(0+256),w
  4937  00B3' 0140               	movlb	0	; select bank0
  4938  00B4' 0083'              	movwf	timer_diff@t+3
  4939  00B5' 0142               	movlb	2	; select bank2
  4940  00B6' 0800'              	movf	(_stusb4500_timeout+2)^(0+256),w
  4941  00B7' 0140               	movlb	0	; select bank0
  4942  00B8' 0082'              	movwf	timer_diff@t+2
  4943  00B9' 0142               	movlb	2	; select bank2
  4944  00BA' 0800'              	movf	(_stusb4500_timeout+1)^(0+256),w
  4945  00BB' 0140               	movlb	0	; select bank0
  4946  00BC' 0081'              	movwf	timer_diff@t+1
  4947  00BD' 0142               	movlb	2	; select bank2
  4948  00BE' 0800'              	movf	_stusb4500_timeout^(0+256),w
  4949  00BF' 0140               	movlb	0	; select bank0
  4950  00C0' 0080'              	movwf	timer_diff@t
  4951  00C1' 3180' 2000' 3180'  	fcall	_timer_diff
  4952  00C4' 0140               	movlb	0	; select bank0
  4953  00C5' 0803'              	movf	?_timer_diff+3,w
  4954  00C6' 1D03               	btfss	3,2
  4955  00C7' 2800'              	goto	u3870
  4956  00C8' 0802'              	movf	?_timer_diff+2,w
  4957  00C9' 1D03               	btfss	3,2
  4958  00CA' 2800'              	goto	u3870
  4959  00CB' 30F4               	movlw	244
  4960  00CC' 0200'              	subwf	?_timer_diff,w
  4961  00CD' 3001               	movlw	1
  4962  00CE' 3B01'              	subwfb	?_timer_diff+1,w
  4963  00CF' 1C03               	btfss	3,0
  4964  00D0' 2800'              	goto	u3871
  4965  00D1' 2800'              	goto	u3870
  4966  00D2'                    u3871:	
  4967  00D2' 2800'              	goto	l4029
  4968  00D3'                    u3870:	
  4969  00D3'                    l4017:	
  4970                           
  4971                           ;main.c: 179: set_stusb4500 = 0;
  4972  00D3' 0189'              	clrf	_set_stusb4500
  4973  00D4' 2800'              	goto	l4029
  4974  00D5'                    l4019:	
  4975                           
  4976                           ;main.c: 182: else {;main.c: 183: chrg_led();
  4977  00D5' 3180' 2000' 3180'  	fcall	_chrg_led
  4978  00D8'                    l4021:	
  4979                           
  4980                           ;main.c: 184: if(!set_stusb4500) {
  4981  00D8' 0140               	movlb	0	; select bank0
  4982  00D9' 0809'              	movf	_set_stusb4500,w
  4983  00DA' 1D03               	btfss	3,2
  4984  00DB' 2800'              	goto	u3881
  4985  00DC' 2800'              	goto	u3880
  4986  00DD'                    u3881:	
  4987  00DD' 2800'              	goto	l4029
  4988  00DE'                    u3880:	
  4989  00DE'                    l4023:	
  4990                           
  4991                           ;main.c: 185: stusb_negotiate();
  4992  00DE' 3180' 2000' 3180'  	fcall	_stusb_negotiate
  4993  00E1'                    l4025:	
  4994                           
  4995                           ;main.c: 186: set_stusb4500 = 1;
  4996  00E1' 0140               	movlb	0	; select bank0
  4997  00E2' 0189'              	clrf	_set_stusb4500
  4998  00E3' 0A89'              	incf	_set_stusb4500,f
  4999  00E4'                    l4027:	
  5000                           
  5001                           ;main.c: 187: stusb4500_timeout = get_time();
  5002  00E4' 3180' 2000' 3180'  	fcall	_get_time
  5003  00E7' 0140               	movlb	0	; select bank0
  5004  00E8' 0803'              	movf	?_get_time+3,w
  5005  00E9' 0142               	movlb	2	; select bank2
  5006  00EA' 0080'              	movwf	(_stusb4500_timeout+3)^(0+256)
  5007  00EB' 0140               	movlb	0	; select bank0
  5008  00EC' 0802'              	movf	?_get_time+2,w
  5009  00ED' 0142               	movlb	2	; select bank2
  5010  00EE' 0080'              	movwf	(_stusb4500_timeout+2)^(0+256)
  5011  00EF' 0140               	movlb	0	; select bank0
  5012  00F0' 0801'              	movf	?_get_time+1,w
  5013  00F1' 0142               	movlb	2	; select bank2
  5014  00F2' 0080'              	movwf	(_stusb4500_timeout+1)^(0+256)
  5015  00F3' 0140               	movlb	0	; select bank0
  5016  00F4' 0800'              	movf	?_get_time,w
  5017  00F5' 0142               	movlb	2	; select bank2
  5018  00F6' 0080'              	movwf	_stusb4500_timeout^(0+256)
  5019  00F7'                    l4029:	
  5020                           
  5021                           ;main.c: 188: };main.c: 189: };main.c: 192: if(!SYS_ENABLE && VBUS_CHRG_STATE[1]==0 && !
      +                          btn_is_debounced && RA5 && BQ_adc_state==0 && !set_stusb4500) {
  5022  00F7' 0140               	movlb	0	; select bank0
  5023  00F8' 080B'              	movf	_SYS_ENABLE,w
  5024  00F9' 1D03               	btfss	3,2
  5025  00FA' 2800'              	goto	u3891
  5026  00FB' 2800'              	goto	u3890
  5027  00FC'                    u3891:	
  5028  00FC' 2800'              	goto	l145
  5029  00FD'                    u3890:	
  5030  00FD'                    l4031:	
  5031  00FD' 0A0E'              	incf	_VBUS_CHRG_STATE,w
  5032  00FE' 0086               	movwf	6
  5033  00FF' 0187               	clrf	7
  5034  0100' 0801               	movf	1,w
  5035  0101' 1D03               	btfss	3,2
  5036  0102' 2800'              	goto	u3901
  5037  0103' 2800'              	goto	u3900
  5038  0104'                    u3901:	
  5039  0104' 2800'              	goto	l145
  5040  0105'                    u3900:	
  5041  0105'                    l4033:	
  5042  0105' 080A'              	movf	_btn_is_debounced,w
  5043  0106' 1D03               	btfss	3,2
  5044  0107' 2800'              	goto	u3911
  5045  0108' 2800'              	goto	u3910
  5046  0109'                    u3911:	
  5047  0109' 2800'              	goto	l145
  5048  010A'                    u3910:	
  5049  010A'                    l4035:	
  5050  010A' 1E8C               	btfss	12,5	;volatile
  5051  010B' 2800'              	goto	u3921
  5052  010C' 2800'              	goto	u3920
  5053  010D'                    u3921:	
  5054  010D' 2800'              	goto	l145
  5055  010E'                    u3920:	
  5056  010E'                    l4037:	
  5057  010E' 080C'              	movf	_BQ_adc_state,w
  5058  010F' 1D03               	btfss	3,2
  5059  0110' 2800'              	goto	u3931
  5060  0111' 2800'              	goto	u3930
  5061  0112'                    u3931:	
  5062  0112' 2800'              	goto	l145
  5063  0113'                    u3930:	
  5064  0113'                    l4039:	
  5065  0113' 0809'              	movf	_set_stusb4500,w
  5066  0114' 1D03               	btfss	3,2
  5067  0115' 2800'              	goto	u3941
  5068  0116' 2800'              	goto	u3940
  5069  0117'                    u3941:	
  5070  0117' 2800'              	goto	l145
  5071  0118'                    u3940:	
  5072  0118'                    l4041:	
  5073                           
  5074                           ;main.c: 193: PWM_power_down();
  5075  0118' 3180' 2000' 3180'  	fcall	_PWM_power_down
  5076  011B' 0064               	clrwdt	;# 
  5077  011C' 0063               	sleep	;# 
  5078  011D' 0001               	reset	;# 
  5079  011E' 2800'              	goto	l145
  5080  011F' 3180' 2800'        	ljmp	start
  5081  0121'                    __end_of_main:	
  5082                           
  5083                           	psect	text1
  5084  0000'                    __ptext1:	
  5085 ;; *************** function _thermal_protection *****************
  5086 ;; Defined at:
  5087 ;;		line 93 in file "main.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;		None
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;		None
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  1    wreg      void 
  5094 ;; Registers used:
  5095 ;;		wreg, status,2, status,0, pclath, cstack
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5101 ;;      Params:         0       0       0       0       0       0       0       0
  5102 ;;      Locals:         0       0       0       0       0       0       0       0
  5103 ;;      Temps:          0       1       0       0       0       0       0       0
  5104 ;;      Totals:         0       1       0       0       0       0       0       0
  5105 ;;Total ram usage:        1 bytes
  5106 ;; Hardware stack levels used:    1
  5107 ;; Hardware stack levels required when called:    5
  5108 ;; This function calls:
  5109 ;;		_BQ_Write
  5110 ;;		_readADC
  5111 ;; This function is called by:
  5112 ;;		_main
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           
  5117                           ;psect for function _thermal_protection
  5118  0000'                    _thermal_protection:	
  5119  0000'                    l3591:	
  5120                           ;incstack = 0
  5121                           ; Regs used in _thermal_protection: [wreg+status,2+status,0+pclath+cstack]
  5122                           
  5123                           
  5124                           ;main.c: 96: if(readADC(0b000100) >= 222) {
  5125  0000' 3004               	movlw	4
  5126  0001' 3180' 2000' 3180'  	fcall	_readADC
  5127  0004' 3000               	movlw	0
  5128  0005' 0140               	movlb	0	; select bank0
  5129  0006' 0201'              	subwf	?_readADC+1,w
  5130  0007' 30DE               	movlw	222
  5131  0008' 1903               	skipnz
  5132  0009' 0200'              	subwf	?_readADC,w
  5133  000A' 1C03               	skipc
  5134  000B' 2800'              	goto	u3231
  5135  000C' 2800'              	goto	u3230
  5136  000D'                    u3231:	
  5137  000D' 2800'              	goto	l133
  5138  000E'                    u3230:	
  5139  000E'                    l3593:	
  5140                           
  5141                           ;main.c: 97: SYS_ENABLE = 0;
  5142  000E' 018B'              	clrf	_SYS_ENABLE
  5143  000F'                    l3595:	
  5144                           
  5145                           ;main.c: 98: TRISCbits.TRISC5 = 1;
  5146  000F' 1694               	bsf	20,5	;volatile
  5147  0010'                    l3597:	
  5148                           
  5149                           ;main.c: 99: BQ_Write(0x09, 0b01100100);
  5150  0010' 3064               	movlw	100
  5151  0011' 0085'              	movwf	??_thermal_protection
  5152  0012' 0805'              	movf	??_thermal_protection,w
  5153  0013' 0081'              	movwf	BQ_Write@data
  5154  0014' 3009               	movlw	9
  5155  0015' 3180' 2000' 3180'  	fcall	_BQ_Write
  5156  0018'                    l133:	
  5157  0018' 0008               	return
  5158  0019'                    __end_of_thermal_protection:	
  5159                           
  5160                           	psect	text2
  5161  0000'                    __ptext2:	
  5162 ;; *************** function _readADC *****************
  5163 ;; Defined at:
  5164 ;;		line 11 in file "ADC.c"
  5165 ;; Parameters:    Size  Location     Type
  5166 ;;  channel         1    wreg     unsigned char 
  5167 ;; Auto vars:     Size  Location     Type
  5168 ;;  channel         1    4[BANK0 ] unsigned char 
  5169 ;; Return value:  Size  Location     Type
  5170 ;;                  2    0[BANK0 ] unsigned int 
  5171 ;; Registers used:
  5172 ;;		wreg, status,2, status,0
  5173 ;; Tracked objects:
  5174 ;;		On entry : 0/0
  5175 ;;		On exit  : 0/0
  5176 ;;		Unchanged: 0/0
  5177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5178 ;;      Params:         0       2       0       0       0       0       0       0
  5179 ;;      Locals:         0       1       0       0       0       0       0       0
  5180 ;;      Temps:          0       2       0       0       0       0       0       0
  5181 ;;      Totals:         0       5       0       0       0       0       0       0
  5182 ;;Total ram usage:        5 bytes
  5183 ;; Hardware stack levels used:    1
  5184 ;; Hardware stack levels required when called:    2
  5185 ;; This function calls:
  5186 ;;		Nothing
  5187 ;; This function is called by:
  5188 ;;		_thermal_protection
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192                           
  5193                           ;psect for function _readADC
  5194  0000'                    _readADC:	
  5195                           
  5196                           ;incstack = 0
  5197                           ; Regs used in _readADC: [wreg+status,2+status,0]
  5198                           ;readADC@channel stored from wreg
  5199  0000' 0140               	movlb	0	; select bank0
  5200  0001' 0084'              	movwf	readADC@channel
  5201  0002'                    l3121:	
  5202                           
  5203                           ;ADC.c: 13: ADCON1 = 0b01100000;
  5204  0002' 3060               	movlw	96
  5205  0003' 0141               	movlb	1	; select bank1
  5206  0004' 009E               	movwf	30	;volatile
  5207  0005'                    l3123:	
  5208                           
  5209                           ;ADC.c: 14: ADCON0 = (channel << 2) | 0b1;
  5210  0005' 0140               	movlb	0	; select bank0
  5211  0006' 0804'              	movf	readADC@channel,w
  5212  0007' 0082'              	movwf	??_readADC
  5213  0008' 3001               	movlw	1
  5214  0009'                    u2565:	
  5215  0009' 3582'              	lslf	??_readADC,f
  5216  000A' 3EFF               	addlw	-1
  5217  000B' 1D03               	skipz
  5218  000C' 2800'              	goto	u2565
  5219  000D' 3502'              	lslf	??_readADC,w
  5220  000E' 3801               	iorlw	1
  5221  000F' 0141               	movlb	1	; select bank1
  5222  0010' 009D               	movwf	29	;volatile
  5223  0011'                    l3125:	
  5224                           
  5225                           ;ADC.c: 16: _delay((unsigned long)((5)*(32000000/4000.0)));
  5226  0011' 3034               	movlw	52
  5227  0012' 0140               	movlb	0	; select bank0
  5228  0013' 0082'              	movwf	??_readADC
  5229  0014' 30F1               	movlw	241
  5230  0015'                    u3997:	
  5231  0015' 0B89               	decfsz	9,f
  5232  0016' 2800'              	goto	u3997
  5233  0017' 0B82'              	decfsz	??_readADC,f
  5234  0018' 2800'              	goto	u3997
  5235  0019' 3200               	nop2
  5236  001A'                    l3127:	
  5237                           
  5238                           ;ADC.c: 18: ADCON0bits.GOnDONE = 1;
  5239  001A' 0141               	movlb	1	; select bank1
  5240  001B' 149D               	bsf	29,1	;volatile
  5241  001C'                    l456:	
  5242                           ;ADC.c: 19: while (ADCON0bits.GOnDONE);
  5243                           
  5244  001C' 189D               	btfsc	29,1	;volatile
  5245  001D' 2800'              	goto	u2571
  5246  001E' 2800'              	goto	u2570
  5247  001F'                    u2571:	
  5248  001F' 2800'              	goto	l456
  5249  0020'                    u2570:	
  5250  0020'                    l3129:	
  5251                           
  5252                           ;ADC.c: 22: return ADRESH;
  5253  0020' 081C               	movf	28,w	;volatile
  5254  0021' 0140               	movlb	0	; select bank0
  5255  0022' 0082'              	movwf	??_readADC
  5256  0023' 0183'              	clrf	??_readADC+1
  5257  0024' 0802'              	movf	??_readADC,w
  5258  0025' 0080'              	movwf	?_readADC
  5259  0026' 0803'              	movf	??_readADC+1,w
  5260  0027' 0081'              	movwf	?_readADC+1
  5261  0028'                    l459:	
  5262  0028' 0008               	return
  5263  0029'                    __end_of_readADC:	
  5264                           
  5265                           	psect	text3
  5266  0000'                    __ptext3:	
  5267 ;; *************** function _stusb_negotiate *****************
  5268 ;; Defined at:
  5269 ;;		line 143 in file "stusb4500.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;		None
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;  buffer         40   25[BANK1 ] unsigned char [40]
  5274 ;;  header          2   65[BANK1 ] unsigned int 
  5275 ;; Return value:  Size  Location     Type
  5276 ;;                  2  100[None  ] int 
  5277 ;; Registers used:
  5278 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5284 ;;      Params:         0       0       0       0       0       0       0       0
  5285 ;;      Locals:         0       0      42       0       0       0       0       0
  5286 ;;      Temps:          0       6       0       0       0       0       0       0
  5287 ;;      Totals:         0       6      42       0       0       0       0       0
  5288 ;;Total ram usage:       48 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; Hardware stack levels required when called:    9
  5291 ;; This function calls:
  5292 ;;		_i2c_master_read
  5293 ;;		_i2c_master_read_u16
  5294 ;;		_i2c_master_read_u8
  5295 ;;		_negotiate_optimal_pdo
  5296 ;;		_reset
  5297 ;; This function is called by:
  5298 ;;		_main
  5299 ;; This function uses a non-reentrant model
  5300 ;;
  5301                           
  5302                           
  5303                           ;psect for function _stusb_negotiate
  5304  0000'                    _stusb_negotiate:	
  5305  0000'                    l3817:	
  5306                           ;incstack = 0
  5307                           ; Regs used in _stusb_negotiate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5308                           
  5309                           
  5310                           ;stusb4500.c: 144: uint8_t buffer[40];;stusb4500.c: 145: uint16_t header;;stusb4500.c: 1
      +                          48: if (;stusb4500.c: 149: i2c_master_read_u8(0x28, 0x0E, buffer) != 0 ||;stusb4500.c: 1
      +                          50: !(buffer[0] & 0x01))
  5311  0000' 300E               	movlw	14
  5312  0001' 0140               	movlb	0	; select bank0
  5313  0002' 00B8'              	movwf	??_stusb_negotiate
  5314  0003' 0838'              	movf	??_stusb_negotiate,w
  5315  0004' 008D'              	movwf	i2c_master_read_u8@reg
  5316  0005' 3000'              	movlw	(low (stusb_negotiate@buffer| 0))& (0+255)
  5317  0006' 00B9'              	movwf	??_stusb_negotiate+1
  5318  0007' 0839'              	movf	??_stusb_negotiate+1,w
  5319  0008' 008E'              	movwf	i2c_master_read_u8@data
  5320  0009' 3028               	movlw	40
  5321  000A' 3180' 2000' 3180'  	fcall	_i2c_master_read_u8
  5322  000D' 0140               	movlb	0	; select bank0
  5323  000E' 080D'              	movf	?_i2c_master_read_u8,w
  5324  000F' 040E'              	iorwf	?_i2c_master_read_u8+1,w
  5325  0010' 1D03               	btfss	3,2
  5326  0011' 2800'              	goto	u3491
  5327  0012' 2800'              	goto	u3490
  5328  0013'                    u3491:	
  5329  0013' 2800'              	goto	l627
  5330  0014'                    u3490:	
  5331  0014'                    l3819:	
  5332  0014' 0141               	movlb	1	; select bank1
  5333  0015' 1800'              	btfsc	stusb_negotiate@buffer^(0+128),0
  5334  0016' 2800'              	goto	u3501
  5335  0017' 2800'              	goto	u3500
  5336  0018'                    u3501:	
  5337  0018' 2800'              	goto	l3821
  5338  0019'                    u3500:	
  5339  0019' 2800'              	goto	l627
  5340  001A'                    l3821:	
  5341                           
  5342                           ;stusb4500.c: 154: if (reset() != 0) return -1;
  5343  001A' 3180' 2000' 3180'  	fcall	_reset
  5344  001D' 0140               	movlb	0	; select bank0
  5345  001E' 0812'              	movf	?_reset,w
  5346  001F' 0413'              	iorwf	?_reset+1,w
  5347  0020' 1903               	btfsc	3,2
  5348  0021' 2800'              	goto	u3511
  5349  0022' 2800'              	goto	u3510
  5350  0023'                    u3511:	
  5351  0023' 2800'              	goto	l3825
  5352  0024'                    u3510:	
  5353  0024' 2800'              	goto	l627
  5354  0025'                    l3825:	
  5355                           
  5356                           ;stusb4500.c: 158: if (i2c_master_read_u8(0x28, 0x16, buffer) != 0)
  5357  0025' 3016               	movlw	22
  5358  0026' 0140               	movlb	0	; select bank0
  5359  0027' 00B8'              	movwf	??_stusb_negotiate
  5360  0028' 0838'              	movf	??_stusb_negotiate,w
  5361  0029' 008D'              	movwf	i2c_master_read_u8@reg
  5362  002A' 3000'              	movlw	(low (stusb_negotiate@buffer| 0))& (0+255)
  5363  002B' 00B9'              	movwf	??_stusb_negotiate+1
  5364  002C' 0839'              	movf	??_stusb_negotiate+1,w
  5365  002D' 008E'              	movwf	i2c_master_read_u8@data
  5366  002E' 3028               	movlw	40
  5367  002F' 3180' 2000' 3180'  	fcall	_i2c_master_read_u8
  5368  0032' 0140               	movlb	0	; select bank0
  5369  0033' 080D'              	movf	?_i2c_master_read_u8,w
  5370  0034' 040E'              	iorwf	?_i2c_master_read_u8+1,w
  5371  0035' 1903               	btfsc	3,2
  5372  0036' 2800'              	goto	u3521
  5373  0037' 2800'              	goto	u3520
  5374  0038'                    u3521:	
  5375  0038' 2800'              	goto	l630
  5376  0039'                    u3520:	
  5377  0039' 2800'              	goto	l627
  5378  003A'                    l630:	
  5379                           
  5380                           ;stusb4500.c: 162: if (!(buffer[0] & 0x04)) continue;
  5381  003A' 0141               	movlb	1	; select bank1
  5382  003B' 1900'              	btfsc	stusb_negotiate@buffer^(0+128),2
  5383  003C' 2800'              	goto	u3531
  5384  003D' 2800'              	goto	u3530
  5385  003E'                    u3531:	
  5386  003E' 2800'              	goto	l3831
  5387  003F'                    u3530:	
  5388  003F' 2800'              	goto	l3825
  5389  0040'                    l3831:	
  5390                           
  5391                           ;stusb4500.c: 165: if (i2c_master_read_u16(0x28, 0x31, &header) != 0)
  5392  0040' 3031               	movlw	49
  5393  0041' 0140               	movlb	0	; select bank0
  5394  0042' 00B8'              	movwf	??_stusb_negotiate
  5395  0043' 0838'              	movf	??_stusb_negotiate,w
  5396  0044' 008D'              	movwf	i2c_master_read_u16@reg
  5397  0045' 3000'              	movlw	(low (stusb_negotiate@header| 0))& (0+255)
  5398  0046' 00B9'              	movwf	??_stusb_negotiate+1
  5399  0047' 0839'              	movf	??_stusb_negotiate+1,w
  5400  0048' 008E'              	movwf	i2c_master_read_u16@data
  5401  0049' 3028               	movlw	40
  5402  004A' 3180' 2000' 3180'  	fcall	_i2c_master_read_u16
  5403  004D' 0140               	movlb	0	; select bank0
  5404  004E' 080D'              	movf	?_i2c_master_read_u16,w
  5405  004F' 040E'              	iorwf	?_i2c_master_read_u16+1,w
  5406  0050' 1903               	btfsc	3,2
  5407  0051' 2800'              	goto	u3541
  5408  0052' 2800'              	goto	u3540
  5409  0053'                    u3541:	
  5410  0053' 2800'              	goto	l3835
  5411  0054'                    u3540:	
  5412  0054' 2800'              	goto	l627
  5413  0055'                    l3835:	
  5414                           
  5415                           ;stusb4500.c: 169: if (;stusb4500.c: 170: !((header >> 12) & 0x07) ||;stusb4500.c: 171: 
      +                          (header & 0x0F) != 0x01)
  5416  0055' 0141               	movlb	1	; select bank1
  5417  0056' 0800'              	movf	(stusb_negotiate@header+1)^(0+128),w
  5418  0057' 0140               	movlb	0	; select bank0
  5419  0058' 00B9'              	movwf	??_stusb_negotiate+1
  5420  0059' 0141               	movlb	1	; select bank1
  5421  005A' 0800'              	movf	stusb_negotiate@header^(0+128),w
  5422  005B' 0140               	movlb	0	; select bank0
  5423  005C' 00B8'              	movwf	??_stusb_negotiate
  5424  005D' 0E39'              	swapf	??_stusb_negotiate+1,w
  5425  005E' 390F               	andlw	15
  5426  005F' 00B8'              	movwf	??_stusb_negotiate
  5427  0060' 01B9'              	clrf	??_stusb_negotiate+1
  5428  0061' 3007               	movlw	7
  5429  0062' 0538'              	andwf	??_stusb_negotiate,w
  5430  0063' 00BA'              	movwf	??_stusb_negotiate+2
  5431  0064' 3000               	movlw	0
  5432  0065' 0539'              	andwf	??_stusb_negotiate+1,w
  5433  0066' 00BB'              	movwf	??_stusb_negotiate+3
  5434  0067' 083A'              	movf	??_stusb_negotiate+2,w
  5435  0068' 043B'              	iorwf	??_stusb_negotiate+3,w
  5436  0069' 1903               	btfsc	3,2
  5437  006A' 2800'              	goto	u3551
  5438  006B' 2800'              	goto	u3550
  5439  006C'                    u3551:	
  5440  006C' 2800'              	goto	l3825
  5441  006D'                    u3550:	
  5442  006D'                    l3837:	
  5443  006D' 300F               	movlw	15
  5444  006E' 0141               	movlb	1	; select bank1
  5445  006F' 0500'              	andwf	stusb_negotiate@header^(0+128),w
  5446  0070' 0140               	movlb	0	; select bank0
  5447  0071' 00B8'              	movwf	??_stusb_negotiate
  5448  0072' 3000               	movlw	0
  5449  0073' 0141               	movlb	1	; select bank1
  5450  0074' 0500'              	andwf	(stusb_negotiate@header+1)^(0+128),w
  5451  0075' 0140               	movlb	0	; select bank0
  5452  0076' 00B9'              	movwf	??_stusb_negotiate+1
  5453  0077' 0338'              	decf	??_stusb_negotiate,w
  5454  0078' 0439'              	iorwf	??_stusb_negotiate+1,w
  5455  0079' 1903               	btfsc	3,2
  5456  007A' 2800'              	goto	u3561
  5457  007B' 2800'              	goto	u3560
  5458  007C'                    u3561:	
  5459  007C' 2800'              	goto	l3839
  5460  007D'                    u3560:	
  5461  007D' 2800'              	goto	l3825
  5462  007E'                    l3839:	
  5463                           
  5464                           ;stusb4500.c: 175: if (i2c_master_read_u8(0x28, 0x30, buffer) != 0)
  5465  007E' 3030               	movlw	48
  5466  007F' 00B8'              	movwf	??_stusb_negotiate
  5467  0080' 0838'              	movf	??_stusb_negotiate,w
  5468  0081' 008D'              	movwf	i2c_master_read_u8@reg
  5469  0082' 3000'              	movlw	(low (stusb_negotiate@buffer| 0))& (0+255)
  5470  0083' 00B9'              	movwf	??_stusb_negotiate+1
  5471  0084' 0839'              	movf	??_stusb_negotiate+1,w
  5472  0085' 008E'              	movwf	i2c_master_read_u8@data
  5473  0086' 3028               	movlw	40
  5474  0087' 3180' 2000' 3180'  	fcall	_i2c_master_read_u8
  5475  008A' 0140               	movlb	0	; select bank0
  5476  008B' 080D'              	movf	?_i2c_master_read_u8,w
  5477  008C' 040E'              	iorwf	?_i2c_master_read_u8+1,w
  5478  008D' 1903               	btfsc	3,2
  5479  008E' 2800'              	goto	u3571
  5480  008F' 2800'              	goto	u3570
  5481  0090'                    u3571:	
  5482  0090' 2800'              	goto	l3843
  5483  0091'                    u3570:	
  5484  0091' 2800'              	goto	l627
  5485  0092'                    l3843:	
  5486                           
  5487                           ;stusb4500.c: 179: if (buffer[0] != ((header >> 12) & 0x07) * 4)
  5488  0092' 0141               	movlb	1	; select bank1
  5489  0093' 0800'              	movf	(stusb_negotiate@header+1)^(0+128),w
  5490  0094' 0140               	movlb	0	; select bank0
  5491  0095' 00B9'              	movwf	??_stusb_negotiate+1
  5492  0096' 0141               	movlb	1	; select bank1
  5493  0097' 0800'              	movf	stusb_negotiate@header^(0+128),w
  5494  0098' 0140               	movlb	0	; select bank0
  5495  0099' 00B8'              	movwf	??_stusb_negotiate
  5496  009A' 0E39'              	swapf	??_stusb_negotiate+1,w
  5497  009B' 390F               	andlw	15
  5498  009C' 00B8'              	movwf	??_stusb_negotiate
  5499  009D' 01B9'              	clrf	??_stusb_negotiate+1
  5500  009E' 3007               	movlw	7
  5501  009F' 0538'              	andwf	??_stusb_negotiate,w
  5502  00A0' 00BA'              	movwf	??_stusb_negotiate+2
  5503  00A1' 3000               	movlw	0
  5504  00A2' 0539'              	andwf	??_stusb_negotiate+1,w
  5505  00A3' 00BB'              	movwf	??_stusb_negotiate+3
  5506  00A4' 35BA'              	lslf	??_stusb_negotiate+2,f
  5507  00A5' 0DBB'              	rlf	??_stusb_negotiate+3,f
  5508  00A6' 35BA'              	lslf	??_stusb_negotiate+2,f
  5509  00A7' 0DBB'              	rlf	??_stusb_negotiate+3,f
  5510  00A8' 0141               	movlb	1	; select bank1
  5511  00A9' 0800'              	movf	stusb_negotiate@buffer^(0+128),w
  5512  00AA' 0140               	movlb	0	; select bank0
  5513  00AB' 00BC'              	movwf	??_stusb_negotiate+4
  5514  00AC' 01BD'              	clrf	??_stusb_negotiate+5
  5515  00AD' 083B'              	movf	??_stusb_negotiate+3,w
  5516  00AE' 063D'              	xorwf	??_stusb_negotiate+5,w
  5517  00AF' 1D03               	skipz
  5518  00B0' 2800'              	goto	u3585
  5519  00B1' 083A'              	movf	??_stusb_negotiate+2,w
  5520  00B2' 063C'              	xorwf	??_stusb_negotiate+4,w
  5521  00B3'                    u3585:	
  5522  00B3' 1903               	skipnz
  5523  00B4' 2800'              	goto	u3581
  5524  00B5' 2800'              	goto	u3580
  5525  00B6'                    u3581:	
  5526  00B6' 2800'              	goto	l3847
  5527  00B7'                    u3580:	
  5528  00B7' 2800'              	goto	l627
  5529  00B8'                    l3847:	
  5530                           
  5531                           ;stusb4500.c: 183: };stusb4500.c: 189: if (;stusb4500.c: 190: i2c_master_read(;stusb4500
      +                          .c: 191: 0x28, 0x33, buffer, ((header >> 12) & 0x07) * 4) !=;stusb4500.c: 192: 0)
  5532  00B8' 3033               	movlw	51
  5533  00B9' 00B8'              	movwf	??_stusb_negotiate
  5534  00BA' 0838'              	movf	??_stusb_negotiate,w
  5535  00BB' 0084'              	movwf	i2c_master_read@reg
  5536  00BC' 3000'              	movlw	(low (stusb_negotiate@buffer| 0))& (0+255)
  5537  00BD' 00B9'              	movwf	??_stusb_negotiate+1
  5538  00BE' 0839'              	movf	??_stusb_negotiate+1,w
  5539  00BF' 0085'              	movwf	i2c_master_read@buf
  5540  00C0' 0141               	movlb	1	; select bank1
  5541  00C1' 0800'              	movf	(stusb_negotiate@header+1)^(0+128),w
  5542  00C2' 0140               	movlb	0	; select bank0
  5543  00C3' 00BB'              	movwf	??_stusb_negotiate+3
  5544  00C4' 0141               	movlb	1	; select bank1
  5545  00C5' 0800'              	movf	stusb_negotiate@header^(0+128),w
  5546  00C6' 0140               	movlb	0	; select bank0
  5547  00C7' 00BA'              	movwf	??_stusb_negotiate+2
  5548  00C8' 0E3B'              	swapf	??_stusb_negotiate+3,w
  5549  00C9' 390F               	andlw	15
  5550  00CA' 00BA'              	movwf	??_stusb_negotiate+2
  5551  00CB' 01BB'              	clrf	??_stusb_negotiate+3
  5552  00CC' 3007               	movlw	7
  5553  00CD' 053A'              	andwf	??_stusb_negotiate+2,w
  5554  00CE' 00BC'              	movwf	??_stusb_negotiate+4
  5555  00CF' 3000               	movlw	0
  5556  00D0' 053B'              	andwf	??_stusb_negotiate+3,w
  5557  00D1' 00BD'              	movwf	??_stusb_negotiate+5
  5558  00D2' 35BC'              	lslf	??_stusb_negotiate+4,f
  5559  00D3' 0DBD'              	rlf	??_stusb_negotiate+5,f
  5560  00D4' 35BC'              	lslf	??_stusb_negotiate+4,f
  5561  00D5' 0DBD'              	rlf	??_stusb_negotiate+5,f
  5562  00D6' 083C'              	movf	??_stusb_negotiate+4,w
  5563  00D7' 0086'              	movwf	i2c_master_read@len
  5564  00D8' 083D'              	movf	??_stusb_negotiate+5,w
  5565  00D9' 0087'              	movwf	i2c_master_read@len+1
  5566  00DA' 3028               	movlw	40
  5567  00DB' 3180' 2000' 3180'  	fcall	_i2c_master_read
  5568  00DE' 0140               	movlb	0	; select bank0
  5569  00DF' 0804'              	movf	?_i2c_master_read,w
  5570  00E0' 0405'              	iorwf	?_i2c_master_read+1,w
  5571  00E1' 1903               	btfsc	3,2
  5572  00E2' 2800'              	goto	u3591
  5573  00E3' 2800'              	goto	u3590
  5574  00E4'                    u3591:	
  5575  00E4' 2800'              	goto	l3851
  5576  00E5'                    u3590:	
  5577  00E5' 2800'              	goto	l627
  5578  00E6'                    l3851:	
  5579                           
  5580                           ;stusb4500.c: 196: return negotiate_optimal_pdo(;stusb4500.c: 197: (uint32_t*)buffer, ((
      +                          header >> 12) & 0x07));;	Return value of _stusb_negotiate is never used
  5581  00E6' 0141               	movlb	1	; select bank1
  5582  00E7' 0800'              	movf	(stusb_negotiate@header+1)^(0+128),w
  5583  00E8' 0140               	movlb	0	; select bank0
  5584  00E9' 00B9'              	movwf	??_stusb_negotiate+1
  5585  00EA' 0141               	movlb	1	; select bank1
  5586  00EB' 0800'              	movf	stusb_negotiate@header^(0+128),w
  5587  00EC' 0140               	movlb	0	; select bank0
  5588  00ED' 00B8'              	movwf	??_stusb_negotiate
  5589  00EE' 0E39'              	swapf	??_stusb_negotiate+1,w
  5590  00EF' 390F               	andlw	15
  5591  00F0' 00B8'              	movwf	??_stusb_negotiate
  5592  00F1' 01B9'              	clrf	??_stusb_negotiate+1
  5593  00F2' 0838'              	movf	??_stusb_negotiate,w
  5594  00F3' 3907               	andlw	7
  5595  00F4' 00BA'              	movwf	??_stusb_negotiate+2
  5596  00F5' 083A'              	movf	??_stusb_negotiate+2,w
  5597  00F6' 00AE'              	movwf	negotiate_optimal_pdo@num_pdos
  5598  00F7' 3000'              	movlw	(low (stusb_negotiate@buffer| 0))& (0+255)
  5599  00F8' 3180' 2000' 3180'  	fcall	_negotiate_optimal_pdo
  5600  00FB'                    l627:	
  5601  00FB' 0008               	return
  5602  00FC'                    __end_of_stusb_negotiate:	
  5603                           
  5604                           	psect	text4
  5605  0000'                    __ptext4:	
  5606 ;; *************** function _negotiate_optimal_pdo *****************
  5607 ;; Defined at:
  5608 ;;		line 109 in file "stusb4500.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;  src_pdos        1    wreg     PTR unsigned long 
  5611 ;;		 -> stusb_negotiate@buffer(40), 
  5612 ;;  num_pdos        1   46[BANK0 ] unsigned char 
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;  src_pdos        1    8[BANK1 ] PTR unsigned long 
  5615 ;;		 -> stusb_negotiate@buffer(40), 
  5616 ;;  pdo             4   19[BANK1 ] unsigned long 
  5617 ;;  pdo_power       4    9[BANK1 ] unsigned long 
  5618 ;;  pdo_voltage     2   23[BANK1 ] unsigned int 
  5619 ;;  pdo_current     2   13[BANK1 ] unsigned int 
  5620 ;;  i               2   15[BANK1 ] int 
  5621 ;;  opt_pdo_powe    4    0[BANK1 ] unsigned long 
  5622 ;;  ok              2   17[BANK1 ] int 
  5623 ;;  opt_pdo_volt    2    6[BANK1 ] unsigned int 
  5624 ;;  opt_pdo_curr    2    4[BANK1 ] unsigned int 
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  2   46[BANK0 ] int 
  5627 ;; Registers used:
  5628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5634 ;;      Params:         0       2       0       0       0       0       0       0
  5635 ;;      Locals:         0       0      25       0       0       0       0       0
  5636 ;;      Temps:          0       8       0       0       0       0       0       0
  5637 ;;      Totals:         0      10      25       0       0       0       0       0
  5638 ;;Total ram usage:       35 bytes
  5639 ;; Hardware stack levels used:    1
  5640 ;; Hardware stack levels required when called:    8
  5641 ;; This function calls:
  5642 ;;		___lldiv
  5643 ;;		___lmul
  5644 ;;		___wmul
  5645 ;;		_write_pdo
  5646 ;; This function is called by:
  5647 ;;		_stusb_negotiate
  5648 ;; This function uses a non-reentrant model
  5649 ;;
  5650                           
  5651                           
  5652                           ;psect for function _negotiate_optimal_pdo
  5653  0000'                    _negotiate_optimal_pdo:	
  5654                           
  5655                           ;incstack = 0
  5656                           ; Regs used in _negotiate_optimal_pdo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5657                           ;negotiate_optimal_pdo@src_pdos stored from wreg
  5658  0000' 0141               	movlb	1	; select bank1
  5659  0001' 0080'              	movwf	negotiate_optimal_pdo@src_pdos^(0+128)
  5660  0002'                    l3233:	
  5661                           
  5662                           ;stusb4500.c: 110: int ok = -1;
  5663  0002' 30FF               	movlw	255
  5664  0003' 0080'              	movwf	negotiate_optimal_pdo@ok^(0+128)
  5665  0004' 30FF               	movlw	255
  5666  0005' 0081'              	movwf	(negotiate_optimal_pdo@ok^(0+128)+1)
  5667  0006'                    l3235:	
  5668                           
  5669                           ;stusb4500.c: 112: uint16_t opt_pdo_current = 0;
  5670  0006' 0180'              	clrf	negotiate_optimal_pdo@opt_pdo_current^(0+128)
  5671  0007' 0180'              	clrf	(negotiate_optimal_pdo@opt_pdo_current+1)^(0+128)
  5672                           
  5673                           ;stusb4500.c: 113: uint16_t opt_pdo_voltage = 0;
  5674  0008' 0180'              	clrf	negotiate_optimal_pdo@opt_pdo_voltage^(0+128)
  5675  0009' 0180'              	clrf	(negotiate_optimal_pdo@opt_pdo_voltage+1)^(0+128)
  5676  000A'                    l3237:	
  5677                           
  5678                           ;stusb4500.c: 114: uint32_t opt_pdo_power = 0;
  5679  000A' 3000               	movlw	0
  5680  000B' 0080'              	movwf	(negotiate_optimal_pdo@opt_pdo_power+3)^(0+128)
  5681  000C' 3000               	movlw	0
  5682  000D' 0080'              	movwf	(negotiate_optimal_pdo@opt_pdo_power+2)^(0+128)
  5683  000E' 3000               	movlw	0
  5684  000F' 0080'              	movwf	(negotiate_optimal_pdo@opt_pdo_power+1)^(0+128)
  5685  0010' 3000               	movlw	0
  5686  0011' 0080'              	movwf	negotiate_optimal_pdo@opt_pdo_power^(0+128)
  5687  0012'                    l3239:	
  5688                           
  5689                           ;stusb4500.c: 117: for (int i = 0; i < num_pdos; i++) {
  5690  0012' 0180'              	clrf	negotiate_optimal_pdo@i^(0+128)
  5691  0013' 0180'              	clrf	(negotiate_optimal_pdo@i+1)^(0+128)
  5692  0014' 2800'              	goto	l3263
  5693  0015'                    l3241:	
  5694                           
  5695                           ;stusb4500.c: 118: uint32_t pdo = src_pdos[i];
  5696  0015' 0141               	movlb	1	; select bank1
  5697  0016' 0800'              	movf	negotiate_optimal_pdo@i^(0+128),w
  5698  0017' 0140               	movlb	0	; select bank0
  5699  0018' 00B0'              	movwf	??_negotiate_optimal_pdo
  5700  0019' 3001               	movlw	1
  5701  001A'                    u2735:	
  5702  001A' 35B0'              	lslf	??_negotiate_optimal_pdo,f
  5703  001B' 3EFF               	addlw	-1
  5704  001C' 1D03               	skipz
  5705  001D' 2800'              	goto	u2735
  5706  001E' 3530'              	lslf	??_negotiate_optimal_pdo,w
  5707  001F' 0141               	movlb	1	; select bank1
  5708  0020' 0700'              	addwf	negotiate_optimal_pdo@src_pdos^(0+128),w
  5709  0021' 0140               	movlb	0	; select bank0
  5710  0022' 00B1'              	movwf	??_negotiate_optimal_pdo+1
  5711  0023' 0831'              	movf	??_negotiate_optimal_pdo+1,w
  5712  0024' 0086               	movwf	6
  5713  0025' 0187               	clrf	7
  5714  0026' 3F40               	moviw [0]fsr1
  5715  0027' 0141               	movlb	1	; select bank1
  5716  0028' 0080'              	movwf	negotiate_optimal_pdo@pdo^(0+128)
  5717  0029' 3F41               	moviw [1]fsr1
  5718  002A' 0080'              	movwf	(negotiate_optimal_pdo@pdo+1)^(0+128)
  5719  002B' 3F42               	moviw [2]fsr1
  5720  002C' 0080'              	movwf	(negotiate_optimal_pdo@pdo+2)^(0+128)
  5721  002D' 3F43               	moviw [3]fsr1
  5722  002E' 0080'              	movwf	(negotiate_optimal_pdo@pdo+3)^(0+128)
  5723  002F'                    l3243:	
  5724                           
  5725                           ;stusb4500.c: 121: uint16_t pdo_current = ((pdo & 0x03FF) * 10);
  5726  002F' 30FF               	movlw	255
  5727  0030' 0500'              	andwf	negotiate_optimal_pdo@pdo^(0+128),w
  5728  0031' 0140               	movlb	0	; select bank0
  5729  0032' 0080'              	movwf	___wmul@multiplier
  5730  0033' 3003               	movlw	3
  5731  0034' 0141               	movlb	1	; select bank1
  5732  0035' 0500'              	andwf	(negotiate_optimal_pdo@pdo+1)^(0+128),w
  5733  0036' 0140               	movlb	0	; select bank0
  5734  0037' 0081'              	movwf	___wmul@multiplier+1
  5735  0038' 300A               	movlw	10
  5736  0039' 0082'              	movwf	___wmul@multiplicand
  5737  003A' 3000               	movlw	0
  5738  003B' 0083'              	movwf	___wmul@multiplicand+1
  5739  003C' 3180' 2000' 3180'  	fcall	___wmul
  5740  003F' 0140               	movlb	0	; select bank0
  5741  0040' 0801'              	movf	?___wmul+1,w
  5742  0041' 0141               	movlb	1	; select bank1
  5743  0042' 0080'              	movwf	(negotiate_optimal_pdo@pdo_current+1)^(0+128)
  5744  0043' 0140               	movlb	0	; select bank0
  5745  0044' 0800'              	movf	?___wmul,w
  5746  0045' 0141               	movlb	1	; select bank1
  5747  0046' 0080'              	movwf	negotiate_optimal_pdo@pdo_current^(0+128)
  5748  0047'                    l3245:	
  5749                           
  5750                           ;stusb4500.c: 122: uint16_t pdo_voltage = (((pdo >> 10) & 0x03FF) * 50);
  5751  0047' 0800'              	movf	negotiate_optimal_pdo@pdo^(0+128),w
  5752  0048' 0140               	movlb	0	; select bank0
  5753  0049' 00B0'              	movwf	??_negotiate_optimal_pdo
  5754  004A' 0141               	movlb	1	; select bank1
  5755  004B' 0800'              	movf	(negotiate_optimal_pdo@pdo+1)^(0+128),w
  5756  004C' 0140               	movlb	0	; select bank0
  5757  004D' 00B1'              	movwf	??_negotiate_optimal_pdo+1
  5758  004E' 0141               	movlb	1	; select bank1
  5759  004F' 0800'              	movf	(negotiate_optimal_pdo@pdo+2)^(0+128),w
  5760  0050' 0140               	movlb	0	; select bank0
  5761  0051' 00B2'              	movwf	??_negotiate_optimal_pdo+2
  5762  0052' 0141               	movlb	1	; select bank1
  5763  0053' 0800'              	movf	(negotiate_optimal_pdo@pdo+3)^(0+128),w
  5764  0054' 0140               	movlb	0	; select bank0
  5765  0055' 00B3'              	movwf	??_negotiate_optimal_pdo+3
  5766  0056' 300A               	movlw	10
  5767  0057'                    u2745:	
  5768  0057' 36B3'              	lsrf	??_negotiate_optimal_pdo+3,f
  5769  0058' 0CB2'              	rrf	??_negotiate_optimal_pdo+2,f
  5770  0059' 0CB1'              	rrf	??_negotiate_optimal_pdo+1,f
  5771  005A' 0CB0'              	rrf	??_negotiate_optimal_pdo,f
  5772  005B'                    u2740:	
  5773  005B' 0B89               	decfsz	9,f
  5774  005C' 2800'              	goto	u2745
  5775  005D' 30FF               	movlw	255
  5776  005E' 0530'              	andwf	??_negotiate_optimal_pdo,w
  5777  005F' 0080'              	movwf	___wmul@multiplier
  5778  0060' 3003               	movlw	3
  5779  0061' 0531'              	andwf	??_negotiate_optimal_pdo+1,w
  5780  0062' 0081'              	movwf	___wmul@multiplier+1
  5781  0063' 3032               	movlw	50
  5782  0064' 0082'              	movwf	___wmul@multiplicand
  5783  0065' 3000               	movlw	0
  5784  0066' 0083'              	movwf	___wmul@multiplicand+1
  5785  0067' 3180' 2000' 3180'  	fcall	___wmul
  5786  006A' 0140               	movlb	0	; select bank0
  5787  006B' 0801'              	movf	?___wmul+1,w
  5788  006C' 0141               	movlb	1	; select bank1
  5789  006D' 0080'              	movwf	(negotiate_optimal_pdo@pdo_voltage+1)^(0+128)
  5790  006E' 0140               	movlb	0	; select bank0
  5791  006F' 0800'              	movf	?___wmul,w
  5792  0070' 0141               	movlb	1	; select bank1
  5793  0071' 0080'              	movwf	negotiate_optimal_pdo@pdo_voltage^(0+128)
  5794  0072'                    l3247:	
  5795                           
  5796                           ;stusb4500.c: 123: uint32_t pdo_power = (uint32_t)pdo_current * pdo_voltage / 1000;
  5797  0072' 3000               	movlw	0
  5798  0073' 0140               	movlb	0	; select bank0
  5799  0074' 008F'              	movwf	___lldiv@divisor+3
  5800  0075' 3000               	movlw	0
  5801  0076' 008E'              	movwf	___lldiv@divisor+2
  5802  0077' 3003               	movlw	3
  5803  0078' 008D'              	movwf	___lldiv@divisor+1
  5804  0079' 30E8               	movlw	232
  5805  007A' 008C'              	movwf	___lldiv@divisor
  5806  007B' 0141               	movlb	1	; select bank1
  5807  007C' 0800'              	movf	negotiate_optimal_pdo@pdo_current^(0+128),w
  5808  007D' 0140               	movlb	0	; select bank0
  5809  007E' 0080'              	movwf	___lmul@multiplier
  5810  007F' 0141               	movlb	1	; select bank1
  5811  0080' 0800'              	movf	(negotiate_optimal_pdo@pdo_current+1)^(0+128),w
  5812  0081' 0140               	movlb	0	; select bank0
  5813  0082' 0081'              	movwf	___lmul@multiplier+1
  5814  0083' 0182'              	clrf	___lmul@multiplier+2
  5815  0084' 0183'              	clrf	___lmul@multiplier+3
  5816  0085' 0141               	movlb	1	; select bank1
  5817  0086' 0800'              	movf	negotiate_optimal_pdo@pdo_voltage^(0+128),w
  5818  0087' 0140               	movlb	0	; select bank0
  5819  0088' 0084'              	movwf	___lmul@multiplicand
  5820  0089' 0141               	movlb	1	; select bank1
  5821  008A' 0800'              	movf	(negotiate_optimal_pdo@pdo_voltage+1)^(0+128),w
  5822  008B' 0140               	movlb	0	; select bank0
  5823  008C' 0085'              	movwf	___lmul@multiplicand+1
  5824  008D' 0186'              	clrf	___lmul@multiplicand+2
  5825  008E' 0187'              	clrf	___lmul@multiplicand+3
  5826  008F' 3180' 2000' 3180'  	fcall	___lmul
  5827  0092' 0140               	movlb	0	; select bank0
  5828  0093' 0803'              	movf	?___lmul+3,w
  5829  0094' 0093'              	movwf	___lldiv@dividend+3
  5830  0095' 0802'              	movf	?___lmul+2,w
  5831  0096' 0092'              	movwf	___lldiv@dividend+2
  5832  0097' 0801'              	movf	?___lmul+1,w
  5833  0098' 0091'              	movwf	___lldiv@dividend+1
  5834  0099' 0800'              	movf	?___lmul,w
  5835  009A' 0090'              	movwf	___lldiv@dividend
  5836  009B' 3180' 2000' 3180'  	fcall	___lldiv
  5837  009E' 0140               	movlb	0	; select bank0
  5838  009F' 080F'              	movf	?___lldiv+3,w
  5839  00A0' 0141               	movlb	1	; select bank1
  5840  00A1' 0080'              	movwf	(negotiate_optimal_pdo@pdo_power+3)^(0+128)
  5841  00A2' 0140               	movlb	0	; select bank0
  5842  00A3' 080E'              	movf	?___lldiv+2,w
  5843  00A4' 0141               	movlb	1	; select bank1
  5844  00A5' 0080'              	movwf	(negotiate_optimal_pdo@pdo_power+2)^(0+128)
  5845  00A6' 0140               	movlb	0	; select bank0
  5846  00A7' 080D'              	movf	?___lldiv+1,w
  5847  00A8' 0141               	movlb	1	; select bank1
  5848  00A9' 0080'              	movwf	(negotiate_optimal_pdo@pdo_power+1)^(0+128)
  5849  00AA' 0140               	movlb	0	; select bank0
  5850  00AB' 080C'              	movf	?___lldiv,w
  5851  00AC' 0141               	movlb	1	; select bank1
  5852  00AD' 0080'              	movwf	negotiate_optimal_pdo@pdo_power^(0+128)
  5853  00AE'                    l3249:	
  5854                           
  5855                           ;stusb4500.c: 125: if (;stusb4500.c: 126: ((pdo >> 30) & 0x03) != 0x00 || pdo_current < 
      +                          0 ||;stusb4500.c: 127: pdo_voltage < 5000 || pdo_voltage > 12000)
  5856  00AE' 3003               	movlw	3
  5857  00AF' 0140               	movlb	0	; select bank0
  5858  00B0' 00B0'              	movwf	??_negotiate_optimal_pdo
  5859  00B1' 3000               	movlw	0
  5860  00B2' 00B1'              	movwf	??_negotiate_optimal_pdo+1
  5861  00B3' 3000               	movlw	0
  5862  00B4' 00B2'              	movwf	??_negotiate_optimal_pdo+2
  5863  00B5' 3000               	movlw	0
  5864  00B6' 00B3'              	movwf	??_negotiate_optimal_pdo+3
  5865  00B7' 0141               	movlb	1	; select bank1
  5866  00B8' 0800'              	movf	negotiate_optimal_pdo@pdo^(0+128),w
  5867  00B9' 0140               	movlb	0	; select bank0
  5868  00BA' 00B4'              	movwf	??_negotiate_optimal_pdo+4
  5869  00BB' 0141               	movlb	1	; select bank1
  5870  00BC' 0800'              	movf	(negotiate_optimal_pdo@pdo+1)^(0+128),w
  5871  00BD' 0140               	movlb	0	; select bank0
  5872  00BE' 00B5'              	movwf	??_negotiate_optimal_pdo+5
  5873  00BF' 0141               	movlb	1	; select bank1
  5874  00C0' 0800'              	movf	(negotiate_optimal_pdo@pdo+2)^(0+128),w
  5875  00C1' 0140               	movlb	0	; select bank0
  5876  00C2' 00B6'              	movwf	??_negotiate_optimal_pdo+6
  5877  00C3' 0141               	movlb	1	; select bank1
  5878  00C4' 0800'              	movf	(negotiate_optimal_pdo@pdo+3)^(0+128),w
  5879  00C5' 0140               	movlb	0	; select bank0
  5880  00C6' 00B7'              	movwf	??_negotiate_optimal_pdo+7
  5881  00C7' 301E               	movlw	30
  5882  00C8'                    u2755:	
  5883  00C8' 36B7'              	lsrf	??_negotiate_optimal_pdo+7,f
  5884  00C9' 0CB6'              	rrf	??_negotiate_optimal_pdo+6,f
  5885  00CA' 0CB5'              	rrf	??_negotiate_optimal_pdo+5,f
  5886  00CB' 0CB4'              	rrf	??_negotiate_optimal_pdo+4,f
  5887  00CC'                    u2750:	
  5888  00CC' 0B89               	decfsz	9,f
  5889  00CD' 2800'              	goto	u2755
  5890  00CE' 0834'              	movf	??_negotiate_optimal_pdo+4,w
  5891  00CF' 05B0'              	andwf	??_negotiate_optimal_pdo,f
  5892  00D0' 0835'              	movf	??_negotiate_optimal_pdo+5,w
  5893  00D1' 05B1'              	andwf	??_negotiate_optimal_pdo+1,f
  5894  00D2' 0836'              	movf	??_negotiate_optimal_pdo+6,w
  5895  00D3' 05B2'              	andwf	??_negotiate_optimal_pdo+2,f
  5896  00D4' 0837'              	movf	??_negotiate_optimal_pdo+7,w
  5897  00D5' 05B3'              	andwf	??_negotiate_optimal_pdo+3,f
  5898  00D6' 0833'              	movf	??_negotiate_optimal_pdo+3,w
  5899  00D7' 0432'              	iorwf	??_negotiate_optimal_pdo+2,w
  5900  00D8' 0431'              	iorwf	??_negotiate_optimal_pdo+1,w
  5901  00D9' 0430'              	iorwf	??_negotiate_optimal_pdo,w
  5902  00DA' 1D03               	skipz
  5903  00DB' 2800'              	goto	u2761
  5904  00DC' 2800'              	goto	u2760
  5905  00DD'                    u2761:	
  5906  00DD' 2800'              	goto	l3261
  5907  00DE'                    u2760:	
  5908  00DE'                    l3251:	
  5909  00DE' 3013               	movlw	19
  5910  00DF' 0141               	movlb	1	; select bank1
  5911  00E0' 0200'              	subwf	(negotiate_optimal_pdo@pdo_voltage+1)^(0+128),w
  5912  00E1' 3088               	movlw	136
  5913  00E2' 1903               	skipnz
  5914  00E3' 0200'              	subwf	negotiate_optimal_pdo@pdo_voltage^(0+128),w
  5915  00E4' 1C03               	skipc
  5916  00E5' 2800'              	goto	u2771
  5917  00E6' 2800'              	goto	u2770
  5918  00E7'                    u2771:	
  5919  00E7' 2800'              	goto	l3261
  5920  00E8'                    u2770:	
  5921  00E8'                    l3253:	
  5922  00E8' 302E               	movlw	46
  5923  00E9' 0200'              	subwf	(negotiate_optimal_pdo@pdo_voltage+1)^(0+128),w
  5924  00EA' 30E1               	movlw	225
  5925  00EB' 1903               	skipnz
  5926  00EC' 0200'              	subwf	negotiate_optimal_pdo@pdo_voltage^(0+128),w
  5927  00ED' 1C03               	skipc
  5928  00EE' 2800'              	goto	u2781
  5929  00EF' 2800'              	goto	u2780
  5930  00F0'                    u2781:	
  5931  00F0' 2800'              	goto	l3255
  5932  00F1'                    u2780:	
  5933  00F1' 2800'              	goto	l3261
  5934  00F2'                    l3255:	
  5935                           
  5936                           ;stusb4500.c: 129: if (pdo_power > opt_pdo_power) {
  5937  00F2' 0800'              	movf	(negotiate_optimal_pdo@pdo_power+3)^(0+128),w
  5938  00F3' 0200'              	subwf	(negotiate_optimal_pdo@opt_pdo_power+3)^(0+128),w
  5939  00F4' 1D03               	skipz
  5940  00F5' 2800'              	goto	u2795
  5941  00F6' 0800'              	movf	(negotiate_optimal_pdo@pdo_power+2)^(0+128),w
  5942  00F7' 0200'              	subwf	(negotiate_optimal_pdo@opt_pdo_power+2)^(0+128),w
  5943  00F8' 1D03               	skipz
  5944  00F9' 2800'              	goto	u2795
  5945  00FA' 0800'              	movf	(negotiate_optimal_pdo@pdo_power+1)^(0+128),w
  5946  00FB' 0200'              	subwf	(negotiate_optimal_pdo@opt_pdo_power+1)^(0+128),w
  5947  00FC' 1D03               	skipz
  5948  00FD' 2800'              	goto	u2795
  5949  00FE' 0800'              	movf	negotiate_optimal_pdo@pdo_power^(0+128),w
  5950  00FF' 0200'              	subwf	negotiate_optimal_pdo@opt_pdo_power^(0+128),w
  5951  0100'                    u2795:	
  5952  0100' 1803               	skipnc
  5953  0101' 2800'              	goto	u2791
  5954  0102' 2800'              	goto	u2790
  5955  0103'                    u2791:	
  5956  0103' 2800'              	goto	l3261
  5957  0104'                    u2790:	
  5958  0104'                    l3257:	
  5959                           
  5960                           ;stusb4500.c: 130: opt_pdo_current = pdo_current;
  5961  0104' 0800'              	movf	(negotiate_optimal_pdo@pdo_current+1)^(0+128),w
  5962  0105' 0080'              	movwf	(negotiate_optimal_pdo@opt_pdo_current+1)^(0+128)
  5963  0106' 0800'              	movf	negotiate_optimal_pdo@pdo_current^(0+128),w
  5964  0107' 0080'              	movwf	negotiate_optimal_pdo@opt_pdo_current^(0+128)
  5965                           
  5966                           ;stusb4500.c: 131: opt_pdo_voltage = pdo_voltage;
  5967  0108' 0800'              	movf	(negotiate_optimal_pdo@pdo_voltage+1)^(0+128),w
  5968  0109' 0080'              	movwf	(negotiate_optimal_pdo@opt_pdo_voltage+1)^(0+128)
  5969  010A' 0800'              	movf	negotiate_optimal_pdo@pdo_voltage^(0+128),w
  5970  010B' 0080'              	movwf	negotiate_optimal_pdo@opt_pdo_voltage^(0+128)
  5971                           
  5972                           ;stusb4500.c: 132: opt_pdo_power = pdo_power;
  5973  010C' 0800'              	movf	(negotiate_optimal_pdo@pdo_power+3)^(0+128),w
  5974  010D' 0080'              	movwf	(negotiate_optimal_pdo@opt_pdo_power+3)^(0+128)
  5975  010E' 0800'              	movf	(negotiate_optimal_pdo@pdo_power+2)^(0+128),w
  5976  010F' 0080'              	movwf	(negotiate_optimal_pdo@opt_pdo_power+2)^(0+128)
  5977  0110' 0800'              	movf	(negotiate_optimal_pdo@pdo_power+1)^(0+128),w
  5978  0111' 0080'              	movwf	(negotiate_optimal_pdo@opt_pdo_power+1)^(0+128)
  5979  0112' 0800'              	movf	negotiate_optimal_pdo@pdo_power^(0+128),w
  5980  0113' 0080'              	movwf	negotiate_optimal_pdo@opt_pdo_power^(0+128)
  5981  0114'                    l3259:	
  5982                           
  5983                           ;stusb4500.c: 133: ok = 0;
  5984  0114' 0180'              	clrf	negotiate_optimal_pdo@ok^(0+128)
  5985  0115' 0180'              	clrf	(negotiate_optimal_pdo@ok+1)^(0+128)
  5986  0116'                    l3261:	
  5987  0116' 3001               	movlw	1
  5988  0117' 0141               	movlb	1	; select bank1
  5989  0118' 0780'              	addwf	negotiate_optimal_pdo@i^(0+128),f
  5990  0119' 3000               	movlw	0
  5991  011A' 3D80'              	addwfc	(negotiate_optimal_pdo@i+1)^(0+128),f
  5992  011B'                    l3263:	
  5993  011B' 0800'              	movf	(negotiate_optimal_pdo@i+1)^(0+128),w
  5994  011C' 3A80               	xorlw	128
  5995  011D' 0140               	movlb	0	; select bank0
  5996  011E' 00B0'              	movwf	??_negotiate_optimal_pdo
  5997  011F' 3080               	movlw	128
  5998  0120' 0230'              	subwf	??_negotiate_optimal_pdo,w
  5999  0121' 1D03               	skipz
  6000  0122' 2800'              	goto	u2805
  6001  0123' 082E'              	movf	negotiate_optimal_pdo@num_pdos,w
  6002  0124' 0141               	movlb	1	; select bank1
  6003  0125' 0200'              	subwf	negotiate_optimal_pdo@i^(0+128),w
  6004  0126'                    u2805:	
  6005  0126' 1C03               	skipc
  6006  0127' 2800'              	goto	u2801
  6007  0128' 2800'              	goto	u2800
  6008  0129'                    u2801:	
  6009  0129' 2800'              	goto	l3241
  6010  012A'                    u2800:	
  6011  012A'                    l3265:	
  6012                           
  6013                           ;stusb4500.c: 134: };stusb4500.c: 135: };stusb4500.c: 138: if (ok == 0) ok = write_pdo(o
      +                          pt_pdo_current, opt_pdo_voltage, 3);
  6014  012A' 0141               	movlb	1	; select bank1
  6015  012B' 0800'              	movf	negotiate_optimal_pdo@ok^(0+128),w
  6016  012C' 0400'              	iorwf	(negotiate_optimal_pdo@ok+1)^(0+128),w
  6017  012D' 1D03               	btfss	3,2
  6018  012E' 2800'              	goto	u2811
  6019  012F' 2800'              	goto	u2810
  6020  0130'                    u2811:	
  6021  0130' 2800'              	goto	l3269
  6022  0131'                    u2810:	
  6023  0131'                    l3267:	
  6024  0131' 0800'              	movf	(negotiate_optimal_pdo@opt_pdo_current+1)^(0+128),w
  6025  0132' 0140               	movlb	0	; select bank0
  6026  0133' 009A'              	movwf	write_pdo@current_mA+1
  6027  0134' 0141               	movlb	1	; select bank1
  6028  0135' 0800'              	movf	negotiate_optimal_pdo@opt_pdo_current^(0+128),w
  6029  0136' 0140               	movlb	0	; select bank0
  6030  0137' 0099'              	movwf	write_pdo@current_mA
  6031  0138' 0141               	movlb	1	; select bank1
  6032  0139' 0800'              	movf	(negotiate_optimal_pdo@opt_pdo_voltage+1)^(0+128),w
  6033  013A' 0140               	movlb	0	; select bank0
  6034  013B' 009C'              	movwf	write_pdo@voltage_mV+1
  6035  013C' 0141               	movlb	1	; select bank1
  6036  013D' 0800'              	movf	negotiate_optimal_pdo@opt_pdo_voltage^(0+128),w
  6037  013E' 0140               	movlb	0	; select bank0
  6038  013F' 009B'              	movwf	write_pdo@voltage_mV
  6039  0140' 3003               	movlw	3
  6040  0141' 00B0'              	movwf	??_negotiate_optimal_pdo
  6041  0142' 0830'              	movf	??_negotiate_optimal_pdo,w
  6042  0143' 009D'              	movwf	write_pdo@pdo_num
  6043  0144' 3180' 2000' 3180'  	fcall	_write_pdo
  6044  0147' 0140               	movlb	0	; select bank0
  6045  0148' 081A'              	movf	?_write_pdo+1,w
  6046  0149' 0141               	movlb	1	; select bank1
  6047  014A' 0080'              	movwf	(negotiate_optimal_pdo@ok+1)^(0+128)
  6048  014B' 0140               	movlb	0	; select bank0
  6049  014C' 0819'              	movf	?_write_pdo,w
  6050  014D' 0141               	movlb	1	; select bank1
  6051  014E' 0080'              	movwf	negotiate_optimal_pdo@ok^(0+128)
  6052  014F'                    l3269:	
  6053                           
  6054                           ;stusb4500.c: 140: return ok;
  6055  014F' 0800'              	movf	(negotiate_optimal_pdo@ok+1)^(0+128),w
  6056  0150' 0140               	movlb	0	; select bank0
  6057  0151' 00AF'              	movwf	?_negotiate_optimal_pdo+1
  6058  0152' 0141               	movlb	1	; select bank1
  6059  0153' 0800'              	movf	negotiate_optimal_pdo@ok^(0+128),w
  6060  0154' 0140               	movlb	0	; select bank0
  6061  0155' 00AE'              	movwf	?_negotiate_optimal_pdo
  6062  0156'                    l621:	
  6063  0156' 0008               	return
  6064  0157'                    __end_of_negotiate_optimal_pdo:	
  6065                           
  6066                           	psect	text5
  6067  0000'                    __ptext5:	
  6068 ;; *************** function _write_pdo *****************
  6069 ;; Defined at:
  6070 ;;		line 92 in file "stusb4500.c"
  6071 ;; Parameters:    Size  Location     Type
  6072 ;;  current_mA      2   25[BANK0 ] unsigned int 
  6073 ;;  voltage_mV      2   27[BANK0 ] unsigned int 
  6074 ;;  pdo_num         1   29[BANK0 ] unsigned char 
  6075 ;; Auto vars:     Size  Location     Type
  6076 ;;  pdo             4   42[BANK0 ] unsigned long 
  6077 ;; Return value:  Size  Location     Type
  6078 ;;                  2   25[BANK0 ] int 
  6079 ;; Registers used:
  6080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/0
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6086 ;;      Params:         0       5       0       0       0       0       0       0
  6087 ;;      Locals:         0       4       0       0       0       0       0       0
  6088 ;;      Temps:          0      12       0       0       0       0       0       0
  6089 ;;      Totals:         0      21       0       0       0       0       0       0
  6090 ;;Total ram usage:       21 bytes
  6091 ;; Hardware stack levels used:    1
  6092 ;; Hardware stack levels required when called:    7
  6093 ;; This function calls:
  6094 ;;		___lwdiv
  6095 ;;		_i2c_master_write_u32
  6096 ;;		_reset
  6097 ;; This function is called by:
  6098 ;;		_negotiate_optimal_pdo
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           
  6103                           ;psect for function _write_pdo
  6104  0000'                    _write_pdo:	
  6105  0000'                    l3063:	
  6106                           ;incstack = 0
  6107                           ; Regs used in _write_pdo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6108                           
  6109                           
  6110                           ;stusb4500.c: 93: if (pdo_num < 1 || pdo_num > 3) return -1;
  6111  0000' 0140               	movlb	0	; select bank0
  6112  0001' 081D'              	movf	write_pdo@pdo_num,w
  6113  0002' 1903               	btfsc	3,2
  6114  0003' 2800'              	goto	u2401
  6115  0004' 2800'              	goto	u2400
  6116  0005'                    u2401:	
  6117  0005' 2800'              	goto	l3067
  6118  0006'                    u2400:	
  6119  0006'                    l3065:	
  6120  0006' 3004               	movlw	4
  6121  0007' 021D'              	subwf	write_pdo@pdo_num,w
  6122  0008' 1C03               	skipc
  6123  0009' 2800'              	goto	u2411
  6124  000A' 2800'              	goto	u2410
  6125  000B'                    u2411:	
  6126  000B' 2800'              	goto	l3071
  6127  000C'                    u2410:	
  6128  000C'                    l3067:	
  6129  000C' 30FF               	movlw	255
  6130  000D' 0099'              	movwf	?_write_pdo
  6131  000E' 30FF               	movlw	255
  6132  000F' 009A'              	movwf	?_write_pdo+1
  6133  0010' 2800'              	goto	l608
  6134  0011'                    l3071:	
  6135                           
  6136                           ;stusb4500.c: 96: uint32_t pdo =;stusb4500.c: 97: 0x00000000 | ((current_mA / 10) & 0x03
      +                          FF) | ((uint32_t)((voltage_mV / 50) & 0x03FF) << 10);
  6137  0011' 3032               	movlw	50
  6138  0012' 0080'              	movwf	___lwdiv@divisor
  6139  0013' 3000               	movlw	0
  6140  0014' 0081'              	movwf	___lwdiv@divisor+1
  6141  0015' 081C'              	movf	write_pdo@voltage_mV+1,w
  6142  0016' 0083'              	movwf	___lwdiv@dividend+1
  6143  0017' 081B'              	movf	write_pdo@voltage_mV,w
  6144  0018' 0082'              	movwf	___lwdiv@dividend
  6145  0019' 3180' 2000' 3180'  	fcall	___lwdiv
  6146  001C' 30FF               	movlw	255
  6147  001D' 0140               	movlb	0	; select bank0
  6148  001E' 0500'              	andwf	?___lwdiv,w
  6149  001F' 009E'              	movwf	??_write_pdo
  6150  0020' 3003               	movlw	3
  6151  0021' 0501'              	andwf	?___lwdiv+1,w
  6152  0022' 009F'              	movwf	??_write_pdo+1
  6153  0023' 081E'              	movf	??_write_pdo,w
  6154  0024' 00A0'              	movwf	??_write_pdo+2
  6155  0025' 081F'              	movf	??_write_pdo+1,w
  6156  0026' 00A1'              	movwf	??_write_pdo+3
  6157  0027' 01A2'              	clrf	??_write_pdo+4
  6158  0028' 01A3'              	clrf	??_write_pdo+5
  6159  0029' 300A               	movlw	10
  6160  002A'                    u2425:	
  6161  002A' 35A0'              	lslf	??_write_pdo+2,f
  6162  002B' 0DA1'              	rlf	??_write_pdo+3,f
  6163  002C' 0DA2'              	rlf	??_write_pdo+4,f
  6164  002D' 0DA3'              	rlf	??_write_pdo+5,f
  6165  002E'                    u2420:	
  6166  002E' 0B89               	decfsz	9,f
  6167  002F' 2800'              	goto	u2425
  6168  0030' 300A               	movlw	10
  6169  0031' 0080'              	movwf	___lwdiv@divisor
  6170  0032' 3000               	movlw	0
  6171  0033' 0081'              	movwf	___lwdiv@divisor+1
  6172  0034' 081A'              	movf	write_pdo@current_mA+1,w
  6173  0035' 0083'              	movwf	___lwdiv@dividend+1
  6174  0036' 0819'              	movf	write_pdo@current_mA,w
  6175  0037' 0082'              	movwf	___lwdiv@dividend
  6176  0038' 3180' 2000' 3180'  	fcall	___lwdiv
  6177  003B' 30FF               	movlw	255
  6178  003C' 0140               	movlb	0	; select bank0
  6179  003D' 0500'              	andwf	?___lwdiv,w
  6180  003E' 00A4'              	movwf	??_write_pdo+6
  6181  003F' 3003               	movlw	3
  6182  0040' 0501'              	andwf	?___lwdiv+1,w
  6183  0041' 00A5'              	movwf	??_write_pdo+7
  6184  0042' 0824'              	movf	??_write_pdo+6,w
  6185  0043' 00A6'              	movwf	??_write_pdo+8
  6186  0044' 0825'              	movf	??_write_pdo+7,w
  6187  0045' 00A7'              	movwf	??_write_pdo+9
  6188  0046' 01A8'              	clrf	??_write_pdo+10
  6189  0047' 01A9'              	clrf	??_write_pdo+11
  6190  0048' 0820'              	movf	??_write_pdo+2,w
  6191  0049' 0426'              	iorwf	??_write_pdo+8,w
  6192  004A' 00AA'              	movwf	write_pdo@pdo
  6193  004B' 0821'              	movf	??_write_pdo+3,w
  6194  004C' 0427'              	iorwf	??_write_pdo+9,w
  6195  004D' 00AB'              	movwf	write_pdo@pdo+1
  6196  004E' 0822'              	movf	??_write_pdo+4,w
  6197  004F' 0428'              	iorwf	??_write_pdo+10,w
  6198  0050' 00AC'              	movwf	write_pdo@pdo+2
  6199  0051' 0823'              	movf	??_write_pdo+5,w
  6200  0052' 0429'              	iorwf	??_write_pdo+11,w
  6201  0053' 00AD'              	movwf	write_pdo@pdo+3
  6202  0054'                    l3073:	
  6203                           
  6204                           ;stusb4500.c: 100: if (;stusb4500.c: 101: i2c_master_write_u32(0x28, 0x85 + 4 * (pdo_num
      +                           - 1), pdo) !=;stusb4500.c: 102: 0)
  6205  0054' 081D'              	movf	write_pdo@pdo_num,w
  6206  0055' 009E'              	movwf	??_write_pdo
  6207  0056' 3001               	movlw	1
  6208  0057'                    u2435:	
  6209  0057' 359E'              	lslf	??_write_pdo,f
  6210  0058' 3EFF               	addlw	-1
  6211  0059' 1D03               	skipz
  6212  005A' 2800'              	goto	u2435
  6213  005B' 351E'              	lslf	??_write_pdo,w
  6214  005C' 3E81               	addlw	129
  6215  005D' 009F'              	movwf	??_write_pdo+1
  6216  005E' 081F'              	movf	??_write_pdo+1,w
  6217  005F' 008E'              	movwf	i2c_master_write_u32@reg
  6218  0060' 082D'              	movf	write_pdo@pdo+3,w
  6219  0061' 0092'              	movwf	i2c_master_write_u32@data+3
  6220  0062' 082C'              	movf	write_pdo@pdo+2,w
  6221  0063' 0091'              	movwf	i2c_master_write_u32@data+2
  6222  0064' 082B'              	movf	write_pdo@pdo+1,w
  6223  0065' 0090'              	movwf	i2c_master_write_u32@data+1
  6224  0066' 082A'              	movf	write_pdo@pdo,w
  6225  0067' 008F'              	movwf	i2c_master_write_u32@data
  6226  0068' 3028               	movlw	40
  6227  0069' 3180' 2000' 3180'  	fcall	_i2c_master_write_u32
  6228  006C' 0140               	movlb	0	; select bank0
  6229  006D' 080E'              	movf	?_i2c_master_write_u32,w
  6230  006E' 040F'              	iorwf	?_i2c_master_write_u32+1,w
  6231  006F' 1903               	btfsc	3,2
  6232  0070' 2800'              	goto	u2441
  6233  0071' 2800'              	goto	u2440
  6234  0072'                    u2441:	
  6235  0072' 2800'              	goto	l3079
  6236  0073'                    u2440:	
  6237  0073' 2800'              	goto	l3067
  6238  0074'                    l3079:	
  6239                           
  6240                           ;stusb4500.c: 106: return reset();
  6241  0074' 3180' 2000' 3180'  	fcall	_reset
  6242  0077' 0140               	movlb	0	; select bank0
  6243  0078' 0813'              	movf	?_reset+1,w
  6244  0079' 009A'              	movwf	?_write_pdo+1
  6245  007A' 0812'              	movf	?_reset,w
  6246  007B' 0099'              	movwf	?_write_pdo
  6247  007C'                    l608:	
  6248  007C' 0008               	return
  6249  007D'                    __end_of_write_pdo:	
  6250                           
  6251                           	psect	text6
  6252  0000'                    __ptext6:	
  6253 ;; *************** function _reset *****************
  6254 ;; Defined at:
  6255 ;;		line 66 in file "stusb4500.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;		None
  6258 ;; Auto vars:     Size  Location     Type
  6259 ;;  res             1   22[BANK0 ] unsigned char 
  6260 ;;  ok              2   23[BANK0 ] int 
  6261 ;; Return value:  Size  Location     Type
  6262 ;;                  2   18[BANK0 ] int 
  6263 ;; Registers used:
  6264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6265 ;; Tracked objects:
  6266 ;;		On entry : 0/0
  6267 ;;		On exit  : 0/0
  6268 ;;		Unchanged: 0/0
  6269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6270 ;;      Params:         0       2       0       0       0       0       0       0
  6271 ;;      Locals:         0       3       0       0       0       0       0       0
  6272 ;;      Temps:          0       2       0       0       0       0       0       0
  6273 ;;      Totals:         0       7       0       0       0       0       0       0
  6274 ;;Total ram usage:        7 bytes
  6275 ;; Hardware stack levels used:    1
  6276 ;; Hardware stack levels required when called:    6
  6277 ;; This function calls:
  6278 ;;		_i2c_master_read_u8
  6279 ;;		_i2c_master_write_u8
  6280 ;; This function is called by:
  6281 ;;		_write_pdo
  6282 ;;		_stusb_negotiate
  6283 ;; This function uses a non-reentrant model
  6284 ;;
  6285                           
  6286                           
  6287                           ;psect for function _reset
  6288  0000'                    _reset:	
  6289  0000'                    l2925:	
  6290                           ;incstack = 0
  6291                           ; Regs used in _reset: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6292                           
  6293  0000'                    l2927:	
  6294  0000'                    l2929:	
  6295                           ;stusb4500.c: 70: if (ok == 0)
  6296                           
  6297                           
  6298                           ;stusb4500.c: 71: ok = i2c_master_write_u8(0x28, 0x23, 0x01);
  6299  0000' 3023               	movlw	35
  6300  0001' 0140               	movlb	0	; select bank0
  6301  0002' 0094'              	movwf	??_reset
  6302  0003' 0814'              	movf	??_reset,w
  6303  0004' 008E'              	movwf	i2c_master_write_u8@reg
  6304  0005' 018F'              	clrf	i2c_master_write_u8@data
  6305  0006' 0A8F'              	incf	i2c_master_write_u8@data,f
  6306  0007' 3028               	movlw	40
  6307  0008' 3180' 2000' 3180'  	fcall	_i2c_master_write_u8
  6308  000B' 0140               	movlb	0	; select bank0
  6309  000C' 080F'              	movf	?_i2c_master_write_u8+1,w
  6310  000D' 0098'              	movwf	reset@ok+1
  6311  000E' 080E'              	movf	?_i2c_master_write_u8,w
  6312  000F' 0097'              	movwf	reset@ok
  6313  0010'                    l2931:	
  6314                           
  6315                           ;stusb4500.c: 74: if (ok == 0) {
  6316  0010' 0817'              	movf	reset@ok,w
  6317  0011' 0418'              	iorwf	reset@ok+1,w
  6318  0012' 1D03               	btfss	3,2
  6319  0013' 2800'              	goto	u2121
  6320  0014' 2800'              	goto	u2120
  6321  0015'                    u2121:	
  6322  0015' 2800'              	goto	l2941
  6323  0016'                    u2120:	
  6324  0016'                    l2933:	
  6325                           
  6326                           ;stusb4500.c: 77: ok = i2c_master_read_u8(0x28, 0x2F, &res);
  6327  0016' 302F               	movlw	47
  6328  0017' 0094'              	movwf	??_reset
  6329  0018' 0814'              	movf	??_reset,w
  6330  0019' 008D'              	movwf	i2c_master_read_u8@reg
  6331  001A' 3000'              	movlw	(low (reset@res| 0))& (0+255)
  6332  001B' 0095'              	movwf	??_reset+1
  6333  001C' 0815'              	movf	??_reset+1,w
  6334  001D' 008E'              	movwf	i2c_master_read_u8@data
  6335  001E' 3028               	movlw	40
  6336  001F' 3180' 2000' 3180'  	fcall	_i2c_master_read_u8
  6337  0022' 0140               	movlb	0	; select bank0
  6338  0023' 080E'              	movf	?_i2c_master_read_u8+1,w
  6339  0024' 0098'              	movwf	reset@ok+1
  6340  0025' 080D'              	movf	?_i2c_master_read_u8,w
  6341  0026' 0097'              	movwf	reset@ok
  6342  0027'                    l2935:	
  6343                           
  6344                           ;stusb4500.c: 78: } while (ok == 0 && res != 0x25 && res != 0x21);
  6345  0027' 0817'              	movf	reset@ok,w
  6346  0028' 0418'              	iorwf	reset@ok+1,w
  6347  0029' 1D03               	btfss	3,2
  6348  002A' 2800'              	goto	u2131
  6349  002B' 2800'              	goto	u2130
  6350  002C'                    u2131:	
  6351  002C' 2800'              	goto	l2941
  6352  002D'                    u2130:	
  6353  002D'                    l2937:	
  6354  002D' 3025               	movlw	37
  6355  002E' 0616'              	xorwf	reset@res,w
  6356  002F' 1903               	btfsc	3,2
  6357  0030' 2800'              	goto	u2141
  6358  0031' 2800'              	goto	u2140
  6359  0032'                    u2141:	
  6360  0032' 2800'              	goto	l2941
  6361  0033'                    u2140:	
  6362  0033'                    l2939:	
  6363  0033' 3021               	movlw	33
  6364  0034' 0616'              	xorwf	reset@res,w
  6365  0035' 1D03               	btfss	3,2
  6366  0036' 2800'              	goto	u2151
  6367  0037' 2800'              	goto	u2150
  6368  0038'                    u2151:	
  6369  0038' 2800'              	goto	l2933
  6370  0039'                    u2150:	
  6371  0039'                    l2941:	
  6372                           
  6373                           ;stusb4500.c: 79: };stusb4500.c: 82: if (ok == 0) _delay((unsigned long)((27)*(32000000/
      +                          4000.0)));
  6374  0039' 0817'              	movf	reset@ok,w
  6375  003A' 0418'              	iorwf	reset@ok+1,w
  6376  003B' 1D03               	btfss	3,2
  6377  003C' 2800'              	goto	u2161
  6378  003D' 2800'              	goto	u2160
  6379  003E'                    u2161:	
  6380  003E' 2800'              	goto	l2945
  6381  003F'                    u2160:	
  6382  003F'                    l2943:	
  6383  003F' 3002               	movlw	2
  6384  0040' 0140               	movlb	0	; select bank0
  6385  0041' 0095'              	movwf	??_reset+1
  6386  0042' 3019               	movlw	25
  6387  0043' 0094'              	movwf	??_reset
  6388  0044' 3081               	movlw	129
  6389  0045'                    u4007:	
  6390  0045' 0B89               	decfsz	9,f
  6391  0046' 2800'              	goto	u4007
  6392  0047' 0B94'              	decfsz	??_reset,f
  6393  0048' 2800'              	goto	u4007
  6394  0049' 0B95'              	decfsz	??_reset+1,f
  6395  004A' 2800'              	goto	u4007
  6396  004B' 3200               	nop2
  6397  004C'                    l2945:	
  6398                           
  6399                           ;stusb4500.c: 85: if (ok == 0)
  6400  004C' 0140               	movlb	0	; select bank0
  6401  004D' 0817'              	movf	reset@ok,w
  6402  004E' 0418'              	iorwf	reset@ok+1,w
  6403  004F' 1D03               	btfss	3,2
  6404  0050' 2800'              	goto	u2171
  6405  0051' 2800'              	goto	u2170
  6406  0052'                    u2171:	
  6407  0052' 2800'              	goto	l2949
  6408  0053'                    u2170:	
  6409  0053'                    l2947:	
  6410                           
  6411                           ;stusb4500.c: 86: ok = i2c_master_write_u8(0x28, 0x23, 0x00);
  6412  0053' 3023               	movlw	35
  6413  0054' 0094'              	movwf	??_reset
  6414  0055' 0814'              	movf	??_reset,w
  6415  0056' 008E'              	movwf	i2c_master_write_u8@reg
  6416  0057' 018F'              	clrf	i2c_master_write_u8@data
  6417  0058' 3028               	movlw	40
  6418  0059' 3180' 2000' 3180'  	fcall	_i2c_master_write_u8
  6419  005C' 0140               	movlb	0	; select bank0
  6420  005D' 080F'              	movf	?_i2c_master_write_u8+1,w
  6421  005E' 0098'              	movwf	reset@ok+1
  6422  005F' 080E'              	movf	?_i2c_master_write_u8,w
  6423  0060' 0097'              	movwf	reset@ok
  6424  0061'                    l2949:	
  6425                           
  6426                           ;stusb4500.c: 88: return (ok == 0) ? 0 : -1;
  6427  0061' 0817'              	movf	reset@ok,w
  6428  0062' 0418'              	iorwf	reset@ok+1,w
  6429  0063' 1903               	btfsc	3,2
  6430  0064' 2800'              	goto	u2181
  6431  0065' 2800'              	goto	u2180
  6432  0066'                    u2181:	
  6433  0066' 2800'              	goto	l2953
  6434  0067'                    u2180:	
  6435  0067'                    l2951:	
  6436  0067' 30FF               	movlw	255
  6437  0068' 0092'              	movwf	?_reset
  6438  0069' 30FF               	movlw	255
  6439  006A' 0093'              	movwf	?_reset+1
  6440  006B' 2800'              	goto	l602
  6441  006C'                    l2953:	
  6442  006C' 0192'              	clrf	?_reset
  6443  006D' 0193'              	clrf	?_reset+1
  6444  006E'                    l602:	
  6445  006E' 0008               	return
  6446  006F'                    __end_of_reset:	
  6447                           
  6448                           	psect	text7
  6449  0000'                    __ptext7:	
  6450 ;; *************** function _i2c_master_write_u32 *****************
  6451 ;; Defined at:
  6452 ;;		line 83 in file "i2c_driver_stusb4500.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;  device          1    wreg     const unsigned char 
  6455 ;;  reg             1   14[BANK0 ] const unsigned char 
  6456 ;;  data            4   15[BANK0 ] const unsigned long 
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;  device          1   20[BANK0 ] const unsigned char 
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  2   14[BANK0 ] int 
  6461 ;; Registers used:
  6462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6468 ;;      Params:         0       5       0       0       0       0       0       0
  6469 ;;      Locals:         0       1       0       0       0       0       0       0
  6470 ;;      Temps:          0       1       0       0       0       0       0       0
  6471 ;;      Totals:         0       7       0       0       0       0       0       0
  6472 ;;Total ram usage:        7 bytes
  6473 ;; Hardware stack levels used:    1
  6474 ;; Hardware stack levels required when called:    5
  6475 ;; This function calls:
  6476 ;;		_i2c_master_write
  6477 ;; This function is called by:
  6478 ;;		_write_pdo
  6479 ;; This function uses a non-reentrant model
  6480 ;;
  6481                           
  6482                           
  6483                           ;psect for function _i2c_master_write_u32
  6484  0000'                    _i2c_master_write_u32:	
  6485                           
  6486                           ;incstack = 0
  6487                           ; Regs used in _i2c_master_write_u32: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6488                           ;i2c_master_write_u32@device stored from wreg
  6489  0000' 0140               	movlb	0	; select bank0
  6490  0001' 0094'              	movwf	i2c_master_write_u32@device
  6491  0002'                    l2957:	
  6492                           
  6493                           ;i2c_driver_stusb4500.c: 85: return i2c_master_write(device, reg, &data, 4);
  6494  0002' 080E'              	movf	i2c_master_write_u32@reg,w
  6495  0003' 0093'              	movwf	??_i2c_master_write_u32
  6496  0004' 0813'              	movf	??_i2c_master_write_u32,w
  6497  0005' 0084'              	movwf	i2c_master_write@reg
  6498  0006' 3000'              	movlw	low i2c_master_write_u32@data
  6499  0007' 0085'              	movwf	i2c_master_write@buf
  6500  0008' 3000'              	movlw	high i2c_master_write_u32@data
  6501  0009' 0086'              	movwf	i2c_master_write@buf+1
  6502  000A' 3004               	movlw	4
  6503  000B' 0087'              	movwf	i2c_master_write@len
  6504  000C' 3000               	movlw	0
  6505  000D' 0088'              	movwf	i2c_master_write@len+1
  6506  000E' 0814'              	movf	i2c_master_write_u32@device,w
  6507  000F' 3180' 2000' 3180'  	fcall	_i2c_master_write
  6508  0012' 0140               	movlb	0	; select bank0
  6509  0013' 0805'              	movf	?_i2c_master_write+1,w
  6510  0014' 008F'              	movwf	?_i2c_master_write_u32+1
  6511  0015' 0804'              	movf	?_i2c_master_write,w
  6512  0016' 008E'              	movwf	?_i2c_master_write_u32
  6513  0017'                    l702:	
  6514  0017' 0008               	return
  6515  0018'                    __end_of_i2c_master_write_u32:	
  6516                           
  6517                           	psect	text8
  6518  0000'                    __ptext8:	
  6519 ;; *************** function ___lwdiv *****************
  6520 ;; Defined at:
  6521 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;  divisor         2    0[BANK0 ] unsigned int 
  6524 ;;  dividend        2    2[BANK0 ] unsigned int 
  6525 ;; Auto vars:     Size  Location     Type
  6526 ;;  quotient        2    5[BANK0 ] unsigned int 
  6527 ;;  counter         1    7[BANK0 ] unsigned char 
  6528 ;; Return value:  Size  Location     Type
  6529 ;;                  2    0[BANK0 ] unsigned int 
  6530 ;; Registers used:
  6531 ;;		wreg, status,2, status,0
  6532 ;; Tracked objects:
  6533 ;;		On entry : 0/0
  6534 ;;		On exit  : 0/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6537 ;;      Params:         0       4       0       0       0       0       0       0
  6538 ;;      Locals:         0       3       0       0       0       0       0       0
  6539 ;;      Temps:          0       1       0       0       0       0       0       0
  6540 ;;      Totals:         0       8       0       0       0       0       0       0
  6541 ;;Total ram usage:        8 bytes
  6542 ;; Hardware stack levels used:    1
  6543 ;; Hardware stack levels required when called:    2
  6544 ;; This function calls:
  6545 ;;		Nothing
  6546 ;; This function is called by:
  6547 ;;		_write_pdo
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           
  6551                           
  6552                           ;psect for function ___lwdiv
  6553  0000'                    ___lwdiv:	
  6554  0000'                    l3019:	
  6555                           ;incstack = 0
  6556                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6557                           
  6558  0000' 0140               	movlb	0	; select bank0
  6559  0001' 0185'              	clrf	___lwdiv@quotient
  6560  0002' 0186'              	clrf	___lwdiv@quotient+1
  6561  0003'                    l3021:	
  6562  0003' 0800'              	movf	___lwdiv@divisor,w
  6563  0004' 0401'              	iorwf	___lwdiv@divisor+1,w
  6564  0005' 1903               	btfsc	3,2
  6565  0006' 2800'              	goto	u2331
  6566  0007' 2800'              	goto	u2330
  6567  0008'                    u2331:	
  6568  0008' 2800'              	goto	l3041
  6569  0009'                    u2330:	
  6570  0009'                    l3023:	
  6571  0009' 0187'              	clrf	___lwdiv@counter
  6572  000A' 0A87'              	incf	___lwdiv@counter,f
  6573  000B' 2800'              	goto	l3029
  6574  000C'                    l3025:	
  6575  000C' 3001               	movlw	1
  6576  000D'                    u2345:	
  6577  000D' 3580'              	lslf	___lwdiv@divisor,f
  6578  000E' 0D81'              	rlf	___lwdiv@divisor+1,f
  6579  000F' 0B89               	decfsz	9,f
  6580  0010' 2800'              	goto	u2345
  6581  0011'                    l3027:	
  6582  0011' 3001               	movlw	1
  6583  0012' 0084'              	movwf	??___lwdiv
  6584  0013' 0804'              	movf	??___lwdiv,w
  6585  0014' 0787'              	addwf	___lwdiv@counter,f
  6586  0015'                    l3029:	
  6587  0015' 1F81'              	btfss	___lwdiv@divisor+1,7
  6588  0016' 2800'              	goto	u2351
  6589  0017' 2800'              	goto	u2350
  6590  0018'                    u2351:	
  6591  0018' 2800'              	goto	l3025
  6592  0019'                    u2350:	
  6593  0019'                    l3031:	
  6594  0019' 3001               	movlw	1
  6595  001A'                    u2365:	
  6596  001A' 3585'              	lslf	___lwdiv@quotient,f
  6597  001B' 0D86'              	rlf	___lwdiv@quotient+1,f
  6598  001C' 0B89               	decfsz	9,f
  6599  001D' 2800'              	goto	u2365
  6600  001E' 0801'              	movf	___lwdiv@divisor+1,w
  6601  001F' 0203'              	subwf	___lwdiv@dividend+1,w
  6602  0020' 1D03               	skipz
  6603  0021' 2800'              	goto	u2375
  6604  0022' 0800'              	movf	___lwdiv@divisor,w
  6605  0023' 0202'              	subwf	___lwdiv@dividend,w
  6606  0024'                    u2375:	
  6607  0024' 1C03               	skipc
  6608  0025' 2800'              	goto	u2371
  6609  0026' 2800'              	goto	u2370
  6610  0027'                    u2371:	
  6611  0027' 2800'              	goto	l3037
  6612  0028'                    u2370:	
  6613  0028'                    l3033:	
  6614  0028' 0800'              	movf	___lwdiv@divisor,w
  6615  0029' 0282'              	subwf	___lwdiv@dividend,f
  6616  002A' 0801'              	movf	___lwdiv@divisor+1,w
  6617  002B' 3B83'              	subwfb	___lwdiv@dividend+1,f
  6618  002C'                    l3035:	
  6619  002C' 1405'              	bsf	___lwdiv@quotient,0
  6620  002D'                    l3037:	
  6621  002D' 3001               	movlw	1
  6622  002E'                    u2385:	
  6623  002E' 3681'              	lsrf	___lwdiv@divisor+1,f
  6624  002F' 0C80'              	rrf	___lwdiv@divisor,f
  6625  0030' 0B89               	decfsz	9,f
  6626  0031' 2800'              	goto	u2385
  6627  0032'                    l3039:	
  6628  0032' 3001               	movlw	1
  6629  0033' 0287'              	subwf	___lwdiv@counter,f
  6630  0034' 1D03               	btfss	3,2
  6631  0035' 2800'              	goto	u2391
  6632  0036' 2800'              	goto	u2390
  6633  0037'                    u2391:	
  6634  0037' 2800'              	goto	l3031
  6635  0038'                    u2390:	
  6636  0038'                    l3041:	
  6637  0038' 0806'              	movf	___lwdiv@quotient+1,w
  6638  0039' 0081'              	movwf	?___lwdiv+1
  6639  003A' 0805'              	movf	___lwdiv@quotient,w
  6640  003B' 0080'              	movwf	?___lwdiv
  6641  003C'                    l1173:	
  6642  003C' 0008               	return
  6643  003D'                    __end_of___lwdiv:	
  6644                           
  6645                           	psect	text9
  6646  0000'                    __ptext9:	
  6647 ;; *************** function ___lmul *****************
  6648 ;; Defined at:
  6649 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;  multiplier      4    0[BANK0 ] unsigned long 
  6652 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  6653 ;; Auto vars:     Size  Location     Type
  6654 ;;  product         4    8[BANK0 ] unsigned long 
  6655 ;; Return value:  Size  Location     Type
  6656 ;;                  4    0[BANK0 ] unsigned long 
  6657 ;; Registers used:
  6658 ;;		wreg, status,2, status,0
  6659 ;; Tracked objects:
  6660 ;;		On entry : 0/0
  6661 ;;		On exit  : 0/0
  6662 ;;		Unchanged: 0/0
  6663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6664 ;;      Params:         0       8       0       0       0       0       0       0
  6665 ;;      Locals:         0       4       0       0       0       0       0       0
  6666 ;;      Temps:          0       0       0       0       0       0       0       0
  6667 ;;      Totals:         0      12       0       0       0       0       0       0
  6668 ;;Total ram usage:       12 bytes
  6669 ;; Hardware stack levels used:    1
  6670 ;; Hardware stack levels required when called:    2
  6671 ;; This function calls:
  6672 ;;		Nothing
  6673 ;; This function is called by:
  6674 ;;		_negotiate_optimal_pdo
  6675 ;; This function uses a non-reentrant model
  6676 ;;
  6677                           
  6678                           
  6679                           ;psect for function ___lmul
  6680  0000'                    ___lmul:	
  6681  0000'                    l3083:	
  6682                           ;incstack = 0
  6683                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6684                           
  6685  0000' 3000               	movlw	0
  6686  0001' 0140               	movlb	0	; select bank0
  6687  0002' 008B'              	movwf	___lmul@product+3
  6688  0003' 3000               	movlw	0
  6689  0004' 008A'              	movwf	___lmul@product+2
  6690  0005' 3000               	movlw	0
  6691  0006' 0089'              	movwf	___lmul@product+1
  6692  0007' 3000               	movlw	0
  6693  0008' 0088'              	movwf	___lmul@product
  6694  0009'                    l3085:	
  6695  0009' 1C00'              	btfss	___lmul@multiplier,0
  6696  000A' 2800'              	goto	u2451
  6697  000B' 2800'              	goto	u2450
  6698  000C'                    u2451:	
  6699  000C' 2800'              	goto	l3089
  6700  000D'                    u2450:	
  6701  000D'                    l3087:	
  6702  000D' 0804'              	movf	___lmul@multiplicand,w
  6703  000E' 0788'              	addwf	___lmul@product,f
  6704  000F' 0805'              	movf	___lmul@multiplicand+1,w
  6705  0010' 3D89'              	addwfc	___lmul@product+1,f
  6706  0011' 0806'              	movf	___lmul@multiplicand+2,w
  6707  0012' 3D8A'              	addwfc	___lmul@product+2,f
  6708  0013' 0807'              	movf	___lmul@multiplicand+3,w
  6709  0014' 3D8B'              	addwfc	___lmul@product+3,f
  6710  0015'                    l3089:	
  6711  0015' 3001               	movlw	1
  6712  0016'                    u2465:	
  6713  0016' 3584'              	lslf	___lmul@multiplicand,f
  6714  0017' 0D85'              	rlf	___lmul@multiplicand+1,f
  6715  0018' 0D86'              	rlf	___lmul@multiplicand+2,f
  6716  0019' 0D87'              	rlf	___lmul@multiplicand+3,f
  6717  001A' 0B89               	decfsz	9,f
  6718  001B' 2800'              	goto	u2465
  6719  001C'                    l3091:	
  6720  001C' 3001               	movlw	1
  6721  001D'                    u2475:	
  6722  001D' 3683'              	lsrf	___lmul@multiplier+3,f
  6723  001E' 0C82'              	rrf	___lmul@multiplier+2,f
  6724  001F' 0C81'              	rrf	___lmul@multiplier+1,f
  6725  0020' 0C80'              	rrf	___lmul@multiplier,f
  6726  0021' 0B89               	decfsz	9,f
  6727  0022' 2800'              	goto	u2475
  6728  0023' 0803'              	movf	___lmul@multiplier+3,w
  6729  0024' 0402'              	iorwf	___lmul@multiplier+2,w
  6730  0025' 0401'              	iorwf	___lmul@multiplier+1,w
  6731  0026' 0400'              	iorwf	___lmul@multiplier,w
  6732  0027' 1D03               	skipz
  6733  0028' 2800'              	goto	u2481
  6734  0029' 2800'              	goto	u2480
  6735  002A'                    u2481:	
  6736  002A' 2800'              	goto	l3085
  6737  002B'                    u2480:	
  6738  002B'                    l3093:	
  6739  002B' 080B'              	movf	___lmul@product+3,w
  6740  002C' 0083'              	movwf	?___lmul+3
  6741  002D' 080A'              	movf	___lmul@product+2,w
  6742  002E' 0082'              	movwf	?___lmul+2
  6743  002F' 0809'              	movf	___lmul@product+1,w
  6744  0030' 0081'              	movwf	?___lmul+1
  6745  0031' 0808'              	movf	___lmul@product,w
  6746  0032' 0080'              	movwf	?___lmul
  6747  0033'                    l915:	
  6748  0033' 0008               	return
  6749  0034'                    __end_of___lmul:	
  6750                           
  6751                           	psect	text10
  6752  0000'                    __ptext10:	
  6753 ;; *************** function _i2c_master_read_u16 *****************
  6754 ;; Defined at:
  6755 ;;		line 115 in file "i2c_driver_stusb4500.c"
  6756 ;; Parameters:    Size  Location     Type
  6757 ;;  device          1    wreg     const unsigned char 
  6758 ;;  reg             1   13[BANK0 ] const unsigned char 
  6759 ;;  data            1   14[BANK0 ] PTR unsigned int 
  6760 ;;		 -> stusb_negotiate@header(2), 
  6761 ;; Auto vars:     Size  Location     Type
  6762 ;;  device          1   17[BANK0 ] const unsigned char 
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  2   13[BANK0 ] int 
  6765 ;; Registers used:
  6766 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6772 ;;      Params:         0       2       0       0       0       0       0       0
  6773 ;;      Locals:         0       1       0       0       0       0       0       0
  6774 ;;      Temps:          0       2       0       0       0       0       0       0
  6775 ;;      Totals:         0       5       0       0       0       0       0       0
  6776 ;;Total ram usage:        5 bytes
  6777 ;; Hardware stack levels used:    1
  6778 ;; Hardware stack levels required when called:    5
  6779 ;; This function calls:
  6780 ;;		_i2c_master_read
  6781 ;; This function is called by:
  6782 ;;		_stusb_negotiate
  6783 ;; This function uses a non-reentrant model
  6784 ;;
  6785                           
  6786                           
  6787                           ;psect for function _i2c_master_read_u16
  6788  0000'                    _i2c_master_read_u16:	
  6789                           
  6790                           ;incstack = 0
  6791                           ; Regs used in _i2c_master_read_u16: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6792                           ;i2c_master_read_u16@device stored from wreg
  6793  0000' 0140               	movlb	0	; select bank0
  6794  0001' 0091'              	movwf	i2c_master_read_u16@device
  6795  0002'                    l3273:	
  6796                           
  6797                           ;i2c_driver_stusb4500.c: 117: return i2c_master_read(device, reg, (uint8_t*)data, 2);
  6798  0002' 080D'              	movf	i2c_master_read_u16@reg,w
  6799  0003' 008F'              	movwf	??_i2c_master_read_u16
  6800  0004' 080F'              	movf	??_i2c_master_read_u16,w
  6801  0005' 0084'              	movwf	i2c_master_read@reg
  6802  0006' 080E'              	movf	i2c_master_read_u16@data,w
  6803  0007' 0090'              	movwf	??_i2c_master_read_u16+1
  6804  0008' 0810'              	movf	??_i2c_master_read_u16+1,w
  6805  0009' 0085'              	movwf	i2c_master_read@buf
  6806  000A' 3002               	movlw	2
  6807  000B' 0086'              	movwf	i2c_master_read@len
  6808  000C' 3000               	movlw	0
  6809  000D' 0087'              	movwf	i2c_master_read@len+1
  6810  000E' 0811'              	movf	i2c_master_read_u16@device,w
  6811  000F' 3180' 2000' 3180'  	fcall	_i2c_master_read
  6812  0012' 0140               	movlb	0	; select bank0
  6813  0013' 0805'              	movf	?_i2c_master_read+1,w
  6814  0014' 008E'              	movwf	?_i2c_master_read_u16+1
  6815  0015' 0804'              	movf	?_i2c_master_read,w
  6816  0016' 008D'              	movwf	?_i2c_master_read_u16
  6817  0017'                    l720:	
  6818  0017' 0008               	return
  6819  0018'                    __end_of_i2c_master_read_u16:	
  6820                           
  6821                           	psect	text11
  6822  0000'                    __ptext11:	
  6823 ;; *************** function _nvm_flash *****************
  6824 ;; Defined at:
  6825 ;;		line 309 in file "stusb4500_nvm.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;		None
  6828 ;; Auto vars:     Size  Location     Type
  6829 ;;		None
  6830 ;; Return value:  Size  Location     Type
  6831 ;;                  2   86[None  ] int 
  6832 ;; Registers used:
  6833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6834 ;; Tracked objects:
  6835 ;;		On entry : 0/0
  6836 ;;		On exit  : 0/0
  6837 ;;		Unchanged: 0/0
  6838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6839 ;;      Params:         0       0       0       0       0       0       0       0
  6840 ;;      Locals:         0       0       0       0       0       0       0       0
  6841 ;;      Temps:          0       0       0       0       0       0       0       0
  6842 ;;      Totals:         0       0       0       0       0       0       0       0
  6843 ;;Total ram usage:        0 bytes
  6844 ;; Hardware stack levels used:    1
  6845 ;; Hardware stack levels required when called:    7
  6846 ;; This function calls:
  6847 ;;		_enter_write_mode
  6848 ;;		_exit_rw_mode
  6849 ;;		_write_sector
  6850 ;; This function is called by:
  6851 ;;		_main
  6852 ;; This function uses a non-reentrant model
  6853 ;;
  6854                           
  6855                           
  6856                           ;psect for function _nvm_flash
  6857  0000'                    _nvm_flash:	
  6858  0000'                    l3705:	
  6859                           ;incstack = 0
  6860                           ; Regs used in _nvm_flash: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6861                           
  6862                           
  6863                           ;stusb4500_nvm.c: 310: if (enter_write_mode() != 0) return -1;
  6864  0000' 3180' 2000' 3180'  	fcall	_enter_write_mode
  6865  0003' 0140               	movlb	0	; select bank0
  6866  0004' 0812'              	movf	?_enter_write_mode,w
  6867  0005' 0413'              	iorwf	?_enter_write_mode+1,w
  6868  0006' 1903               	btfsc	3,2
  6869  0007' 2800'              	goto	u3291
  6870  0008' 2800'              	goto	u3290
  6871  0009'                    u3291:	
  6872  0009' 2800'              	goto	l3709
  6873  000A'                    u3290:	
  6874  000A' 2800'              	goto	l799
  6875  000B'                    l3709:	
  6876                           
  6877                           ;stusb4500_nvm.c: 311: if (write_sector(0, nvm_config[0]) != 0) return -1;
  6878  000B' 3000'              	movlw	low (_nvm_config| (0+32768))
  6879  000C' 0092'              	movwf	write_sector@sector_data
  6880  000D' 3000'              	movlw	high (_nvm_config| (0+32768))
  6881  000E' 0093'              	movwf	write_sector@sector_data+1
  6882  000F' 3000               	movlw	0
  6883  0010' 3180' 2000' 3180'  	fcall	_write_sector
  6884  0013' 0140               	movlb	0	; select bank0
  6885  0014' 0812'              	movf	?_write_sector,w
  6886  0015' 0413'              	iorwf	?_write_sector+1,w
  6887  0016' 1903               	btfsc	3,2
  6888  0017' 2800'              	goto	u3301
  6889  0018' 2800'              	goto	u3300
  6890  0019'                    u3301:	
  6891  0019' 2800'              	goto	l3713
  6892  001A'                    u3300:	
  6893  001A' 2800'              	goto	l799
  6894  001B'                    l3713:	
  6895                           
  6896                           ;stusb4500_nvm.c: 312: if (write_sector(1, nvm_config[1]) != 0) return -1;
  6897  001B' 3000'              	movlw	low ((_nvm_config| (0+32768)+8))
  6898  001C' 0092'              	movwf	write_sector@sector_data
  6899  001D' 3000'              	movlw	high ((_nvm_config| (0+32768)+8))
  6900  001E' 0093'              	movwf	write_sector@sector_data+1
  6901  001F' 3001               	movlw	1
  6902  0020' 3180' 2000' 3180'  	fcall	_write_sector
  6903  0023' 0140               	movlb	0	; select bank0
  6904  0024' 0812'              	movf	?_write_sector,w
  6905  0025' 0413'              	iorwf	?_write_sector+1,w
  6906  0026' 1903               	btfsc	3,2
  6907  0027' 2800'              	goto	u3311
  6908  0028' 2800'              	goto	u3310
  6909  0029'                    u3311:	
  6910  0029' 2800'              	goto	l3717
  6911  002A'                    u3310:	
  6912  002A' 2800'              	goto	l799
  6913  002B'                    l3717:	
  6914                           
  6915                           ;stusb4500_nvm.c: 313: if (write_sector(2, nvm_config[2]) != 0) return -1;
  6916  002B' 3000'              	movlw	low ((_nvm_config| (0+32768)+16))
  6917  002C' 0092'              	movwf	write_sector@sector_data
  6918  002D' 3000'              	movlw	high ((_nvm_config| (0+32768)+16))
  6919  002E' 0093'              	movwf	write_sector@sector_data+1
  6920  002F' 3002               	movlw	2
  6921  0030' 3180' 2000' 3180'  	fcall	_write_sector
  6922  0033' 0140               	movlb	0	; select bank0
  6923  0034' 0812'              	movf	?_write_sector,w
  6924  0035' 0413'              	iorwf	?_write_sector+1,w
  6925  0036' 1903               	btfsc	3,2
  6926  0037' 2800'              	goto	u3321
  6927  0038' 2800'              	goto	u3320
  6928  0039'                    u3321:	
  6929  0039' 2800'              	goto	l3721
  6930  003A'                    u3320:	
  6931  003A' 2800'              	goto	l799
  6932  003B'                    l3721:	
  6933                           
  6934                           ;stusb4500_nvm.c: 314: if (write_sector(3, nvm_config[3]) != 0) return -1;
  6935  003B' 3000'              	movlw	low ((_nvm_config| (0+32768)+24))
  6936  003C' 0092'              	movwf	write_sector@sector_data
  6937  003D' 3000'              	movlw	high ((_nvm_config| (0+32768)+24))
  6938  003E' 0093'              	movwf	write_sector@sector_data+1
  6939  003F' 3003               	movlw	3
  6940  0040' 3180' 2000' 3180'  	fcall	_write_sector
  6941  0043' 0140               	movlb	0	; select bank0
  6942  0044' 0812'              	movf	?_write_sector,w
  6943  0045' 0413'              	iorwf	?_write_sector+1,w
  6944  0046' 1903               	btfsc	3,2
  6945  0047' 2800'              	goto	u3331
  6946  0048' 2800'              	goto	u3330
  6947  0049'                    u3331:	
  6948  0049' 2800'              	goto	l3725
  6949  004A'                    u3330:	
  6950  004A' 2800'              	goto	l799
  6951  004B'                    l3725:	
  6952                           
  6953                           ;stusb4500_nvm.c: 315: if (write_sector(4, nvm_config[4]) != 0) return -1;
  6954  004B' 3000'              	movlw	low ((_nvm_config| (0+32768)+32))
  6955  004C' 0092'              	movwf	write_sector@sector_data
  6956  004D' 3000'              	movlw	high ((_nvm_config| (0+32768)+32))
  6957  004E' 0093'              	movwf	write_sector@sector_data+1
  6958  004F' 3004               	movlw	4
  6959  0050' 3180' 2000' 3180'  	fcall	_write_sector
  6960  0053' 0140               	movlb	0	; select bank0
  6961  0054' 0812'              	movf	?_write_sector,w
  6962  0055' 0413'              	iorwf	?_write_sector+1,w
  6963  0056' 1903               	btfsc	3,2
  6964  0057' 2800'              	goto	u3341
  6965  0058' 2800'              	goto	u3340
  6966  0059'                    u3341:	
  6967  0059' 2800'              	goto	l3729
  6968  005A'                    u3340:	
  6969  005A' 2800'              	goto	l799
  6970  005B'                    l3729:	
  6971                           
  6972                           ;stusb4500_nvm.c: 316: if (exit_rw_mode() != 0) return -1;
  6973  005B' 3180' 2000' 3180'  	fcall	_exit_rw_mode
  6974  005E'                    l799:	
  6975  005E' 0008               	return
  6976  005F'                    __end_of_nvm_flash:	
  6977                           
  6978                           	psect	text12
  6979  0000'                    __ptext12:	
  6980 ;; *************** function _write_sector *****************
  6981 ;; Defined at:
  6982 ;;		line 239 in file "stusb4500_nvm.c"
  6983 ;; Parameters:    Size  Location     Type
  6984 ;;  sector_num      1    wreg     const unsigned char 
  6985 ;;  sector_data     2   18[BANK0 ] PTR const unsigned char 
  6986 ;;		 -> nvm_config(40), 
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;  sector_num      1   22[BANK0 ] const unsigned char 
  6989 ;;  buffer          1   23[BANK0 ] unsigned char 
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  2   18[BANK0 ] int 
  6992 ;; Registers used:
  6993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6994 ;; Tracked objects:
  6995 ;;		On entry : 0/0
  6996 ;;		On exit  : 0/0
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6999 ;;      Params:         0       2       0       0       0       0       0       0
  7000 ;;      Locals:         0       2       0       0       0       0       0       0
  7001 ;;      Temps:          0       2       0       0       0       0       0       0
  7002 ;;      Totals:         0       6       0       0       0       0       0       0
  7003 ;;Total ram usage:        6 bytes
  7004 ;; Hardware stack levels used:    1
  7005 ;; Hardware stack levels required when called:    6
  7006 ;; This function calls:
  7007 ;;		_i2c_master_read_u8
  7008 ;;		_i2c_master_write
  7009 ;;		_i2c_master_write_u8
  7010 ;; This function is called by:
  7011 ;;		_nvm_flash
  7012 ;; This function uses a non-reentrant model
  7013 ;;
  7014                           
  7015                           
  7016                           ;psect for function _write_sector
  7017  0000'                    _write_sector:	
  7018                           
  7019                           ;incstack = 0
  7020                           ; Regs used in _write_sector: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7021                           ;write_sector@sector_num stored from wreg
  7022  0000' 0140               	movlb	0	; select bank0
  7023  0001' 0096'              	movwf	write_sector@sector_num
  7024  0002'                    l3461:	
  7025                           
  7026                           ;stusb4500_nvm.c: 240: if (!sector_data) return -1;
  7027  0002' 0812'              	movf	write_sector@sector_data,w
  7028  0003' 0413'              	iorwf	write_sector@sector_data+1,w
  7029  0004' 1D03               	btfss	3,2
  7030  0005' 2800'              	goto	u3091
  7031  0006' 2800'              	goto	u3090
  7032  0007'                    u3091:	
  7033  0007' 2800'              	goto	l3465
  7034  0008'                    u3090:	
  7035  0008'                    l3463:	
  7036  0008' 30FF               	movlw	255
  7037  0009' 0092'              	movwf	?_write_sector
  7038  000A' 30FF               	movlw	255
  7039  000B' 0093'              	movwf	?_write_sector+1
  7040  000C' 2800'              	goto	l777
  7041  000D'                    l3465:	
  7042                           
  7043                           ;stusb4500_nvm.c: 242: uint8_t buffer;;stusb4500_nvm.c: 245: if (i2c_master_write(0x28, 
      +                          0x53, sector_data, 8) != 0)
  7044  000D' 3053               	movlw	83
  7045  000E' 0094'              	movwf	??_write_sector
  7046  000F' 0814'              	movf	??_write_sector,w
  7047  0010' 0084'              	movwf	i2c_master_write@reg
  7048  0011' 0813'              	movf	write_sector@sector_data+1,w
  7049  0012' 0086'              	movwf	i2c_master_write@buf+1
  7050  0013' 0812'              	movf	write_sector@sector_data,w
  7051  0014' 0085'              	movwf	i2c_master_write@buf
  7052  0015' 3008               	movlw	8
  7053  0016' 0087'              	movwf	i2c_master_write@len
  7054  0017' 3000               	movlw	0
  7055  0018' 0088'              	movwf	i2c_master_write@len+1
  7056  0019' 3028               	movlw	40
  7057  001A' 3180' 2000' 3180'  	fcall	_i2c_master_write
  7058  001D' 0140               	movlb	0	; select bank0
  7059  001E' 0804'              	movf	?_i2c_master_write,w
  7060  001F' 0405'              	iorwf	?_i2c_master_write+1,w
  7061  0020' 1903               	btfsc	3,2
  7062  0021' 2800'              	goto	u3101
  7063  0022' 2800'              	goto	u3100
  7064  0023'                    u3101:	
  7065  0023' 2800'              	goto	l3471
  7066  0024'                    u3100:	
  7067  0024' 2800'              	goto	l3463
  7068  0025'                    l3471:	
  7069                           
  7070                           ;stusb4500_nvm.c: 249: buffer = 0x80 | 0x40;
  7071  0025' 30C0               	movlw	192
  7072  0026' 0094'              	movwf	??_write_sector
  7073  0027' 0814'              	movf	??_write_sector,w
  7074  0028' 0097'              	movwf	write_sector@buffer
  7075  0029'                    l3473:	
  7076                           
  7077                           ;stusb4500_nvm.c: 250: if (i2c_master_write_u8(0x28, 0x96, buffer) != 0)
  7078  0029' 3096               	movlw	150
  7079  002A' 0094'              	movwf	??_write_sector
  7080  002B' 0814'              	movf	??_write_sector,w
  7081  002C' 008E'              	movwf	i2c_master_write_u8@reg
  7082  002D' 0817'              	movf	write_sector@buffer,w
  7083  002E' 0095'              	movwf	??_write_sector+1
  7084  002F' 0815'              	movf	??_write_sector+1,w
  7085  0030' 008F'              	movwf	i2c_master_write_u8@data
  7086  0031' 3028               	movlw	40
  7087  0032' 3180' 2000' 3180'  	fcall	_i2c_master_write_u8
  7088  0035' 0140               	movlb	0	; select bank0
  7089  0036' 080E'              	movf	?_i2c_master_write_u8,w
  7090  0037' 040F'              	iorwf	?_i2c_master_write_u8+1,w
  7091  0038' 1903               	btfsc	3,2
  7092  0039' 2800'              	goto	u3111
  7093  003A' 2800'              	goto	u3110
  7094  003B'                    u3111:	
  7095  003B' 2800'              	goto	l779
  7096  003C'                    u3110:	
  7097  003C' 2800'              	goto	l3463
  7098  003D'                    l779:	
  7099                           
  7100                           ;stusb4500_nvm.c: 254: buffer = (0x01 & 0x07);
  7101  003D' 0197'              	clrf	write_sector@buffer
  7102  003E' 0A97'              	incf	write_sector@buffer,f
  7103  003F'                    l3479:	
  7104                           
  7105                           ;stusb4500_nvm.c: 255: if (i2c_master_write_u8(0x28, 0x97, buffer) != 0)
  7106  003F' 3097               	movlw	151
  7107  0040' 0094'              	movwf	??_write_sector
  7108  0041' 0814'              	movf	??_write_sector,w
  7109  0042' 008E'              	movwf	i2c_master_write_u8@reg
  7110  0043' 0817'              	movf	write_sector@buffer,w
  7111  0044' 0095'              	movwf	??_write_sector+1
  7112  0045' 0815'              	movf	??_write_sector+1,w
  7113  0046' 008F'              	movwf	i2c_master_write_u8@data
  7114  0047' 3028               	movlw	40
  7115  0048' 3180' 2000' 3180'  	fcall	_i2c_master_write_u8
  7116  004B' 0140               	movlb	0	; select bank0
  7117  004C' 080E'              	movf	?_i2c_master_write_u8,w
  7118  004D' 040F'              	iorwf	?_i2c_master_write_u8+1,w
  7119  004E' 1903               	btfsc	3,2
  7120  004F' 2800'              	goto	u3121
  7121  0050' 2800'              	goto	u3120
  7122  0051'                    u3121:	
  7123  0051' 2800'              	goto	l3485
  7124  0052'                    u3120:	
  7125  0052' 2800'              	goto	l3463
  7126  0053'                    l3485:	
  7127                           
  7128                           ;stusb4500_nvm.c: 259: buffer = 0x80 | 0x40 | 0x10;
  7129  0053' 30D0               	movlw	208
  7130  0054' 0094'              	movwf	??_write_sector
  7131  0055' 0814'              	movf	??_write_sector,w
  7132  0056' 0097'              	movwf	write_sector@buffer
  7133  0057'                    l3487:	
  7134                           
  7135                           ;stusb4500_nvm.c: 260: if (i2c_master_write_u8(0x28, 0x96, buffer) != 0)
  7136  0057' 3096               	movlw	150
  7137  0058' 0094'              	movwf	??_write_sector
  7138  0059' 0814'              	movf	??_write_sector,w
  7139  005A' 008E'              	movwf	i2c_master_write_u8@reg
  7140  005B' 0817'              	movf	write_sector@buffer,w
  7141  005C' 0095'              	movwf	??_write_sector+1
  7142  005D' 0815'              	movf	??_write_sector+1,w
  7143  005E' 008F'              	movwf	i2c_master_write_u8@data
  7144  005F' 3028               	movlw	40
  7145  0060' 3180' 2000' 3180'  	fcall	_i2c_master_write_u8
  7146  0063' 0140               	movlb	0	; select bank0
  7147  0064' 080E'              	movf	?_i2c_master_write_u8,w
  7148  0065' 040F'              	iorwf	?_i2c_master_write_u8+1,w
  7149  0066' 1903               	btfsc	3,2
  7150  0067' 2800'              	goto	u3131
  7151  0068' 2800'              	goto	u3130
  7152  0069'                    u3131:	
  7153  0069' 2800'              	goto	l3493
  7154  006A'                    u3130:	
  7155  006A' 2800'              	goto	l3463
  7156  006B'                    l3493:	
  7157                           
  7158                           ;stusb4500_nvm.c: 265: if (i2c_master_read_u8(0x28, 0x96, &buffer) != 0)
  7159  006B' 3096               	movlw	150
  7160  006C' 0094'              	movwf	??_write_sector
  7161  006D' 0814'              	movf	??_write_sector,w
  7162  006E' 008D'              	movwf	i2c_master_read_u8@reg
  7163  006F' 3000'              	movlw	(low (write_sector@buffer| 0))& (0+255)
  7164  0070' 0095'              	movwf	??_write_sector+1
  7165  0071' 0815'              	movf	??_write_sector+1,w
  7166  0072' 008E'              	movwf	i2c_master_read_u8@data
  7167  0073' 3028               	movlw	40
  7168  0074' 3180' 2000' 3180'  	fcall	_i2c_master_read_u8
  7169  0077' 0140               	movlb	0	; select bank0
  7170  0078' 080D'              	movf	?_i2c_master_read_u8,w
  7171  0079' 040E'              	iorwf	?_i2c_master_read_u8+1,w
  7172  007A' 1903               	btfsc	3,2
  7173  007B' 2800'              	goto	u3141
  7174  007C' 2800'              	goto	u3140
  7175  007D'                    u3141:	
  7176  007D' 2800'              	goto	l783
  7177  007E'                    u3140:	
  7178  007E' 2800'              	goto	l3463
  7179  007F'                    l783:	
  7180                           
  7181                           ;stusb4500_nvm.c: 267: } while (buffer & 0x10);
  7182  007F' 1A17'              	btfsc	write_sector@buffer,4
  7183  0080' 2800'              	goto	u3151
  7184  0081' 2800'              	goto	u3150
  7185  0082'                    u3151:	
  7186  0082' 2800'              	goto	l3493
  7187  0083'                    u3150:	
  7188  0083'                    l3499:	
  7189                           
  7190                           ;stusb4500_nvm.c: 270: buffer = (0x06 & 0x07);
  7191  0083' 3006               	movlw	6
  7192  0084' 0094'              	movwf	??_write_sector
  7193  0085' 0814'              	movf	??_write_sector,w
  7194  0086' 0097'              	movwf	write_sector@buffer
  7195  0087'                    l3501:	
  7196                           
  7197                           ;stusb4500_nvm.c: 271: if (i2c_master_write_u8(0x28, 0x97, buffer) != 0)
  7198  0087' 3097               	movlw	151
  7199  0088' 0094'              	movwf	??_write_sector
  7200  0089' 0814'              	movf	??_write_sector,w
  7201  008A' 008E'              	movwf	i2c_master_write_u8@reg
  7202  008B' 0817'              	movf	write_sector@buffer,w
  7203  008C' 0095'              	movwf	??_write_sector+1
  7204  008D' 0815'              	movf	??_write_sector+1,w
  7205  008E' 008F'              	movwf	i2c_master_write_u8@data
  7206  008F' 3028               	movlw	40
  7207  0090' 3180' 2000' 3180'  	fcall	_i2c_master_write_u8
  7208  0093' 0140               	movlb	0	; select bank0
  7209  0094' 080E'              	movf	?_i2c_master_write_u8,w
  7210  0095' 040F'              	iorwf	?_i2c_master_write_u8+1,w
  7211  0096' 1903               	btfsc	3,2
  7212  0097' 2800'              	goto	u3161
  7213  0098' 2800'              	goto	u3160
  7214  0099'                    u3161:	
  7215  0099' 2800'              	goto	l3507
  7216  009A'                    u3160:	
  7217  009A' 2800'              	goto	l3463
  7218  009B'                    l3507:	
  7219                           
  7220                           ;stusb4500_nvm.c: 275: buffer = (sector_num & 0x07) | 0x80 | 0x40 |;stusb4500_nvm.c: 276
      +                          : 0x10;
  7221  009B' 0816'              	movf	write_sector@sector_num,w
  7222  009C' 3907               	andlw	7
  7223  009D' 38D0               	iorlw	208
  7224  009E' 0094'              	movwf	??_write_sector
  7225  009F' 0814'              	movf	??_write_sector,w
  7226  00A0' 0097'              	movwf	write_sector@buffer
  7227  00A1'                    l3509:	
  7228                           
  7229                           ;stusb4500_nvm.c: 277: if (i2c_master_write_u8(0x28, 0x96, buffer) != 0)
  7230  00A1' 3096               	movlw	150
  7231  00A2' 0094'              	movwf	??_write_sector
  7232  00A3' 0814'              	movf	??_write_sector,w
  7233  00A4' 008E'              	movwf	i2c_master_write_u8@reg
  7234  00A5' 0817'              	movf	write_sector@buffer,w
  7235  00A6' 0095'              	movwf	??_write_sector+1
  7236  00A7' 0815'              	movf	??_write_sector+1,w
  7237  00A8' 008F'              	movwf	i2c_master_write_u8@data
  7238  00A9' 3028               	movlw	40
  7239  00AA' 3180' 2000' 3180'  	fcall	_i2c_master_write_u8
  7240  00AD' 0140               	movlb	0	; select bank0
  7241  00AE' 080E'              	movf	?_i2c_master_write_u8,w
  7242  00AF' 040F'              	iorwf	?_i2c_master_write_u8+1,w
  7243  00B0' 1903               	btfsc	3,2
  7244  00B1' 2800'              	goto	u3171
  7245  00B2' 2800'              	goto	u3170
  7246  00B3'                    u3171:	
  7247  00B3' 2800'              	goto	l3515
  7248  00B4'                    u3170:	
  7249  00B4' 2800'              	goto	l3463
  7250  00B5'                    l3515:	
  7251                           
  7252                           ;stusb4500_nvm.c: 282: if (i2c_master_read_u8(0x28, 0x96, &buffer) != 0)
  7253  00B5' 3096               	movlw	150
  7254  00B6' 0094'              	movwf	??_write_sector
  7255  00B7' 0814'              	movf	??_write_sector,w
  7256  00B8' 008D'              	movwf	i2c_master_read_u8@reg
  7257  00B9' 3000'              	movlw	(low (write_sector@buffer| 0))& (0+255)
  7258  00BA' 0095'              	movwf	??_write_sector+1
  7259  00BB' 0815'              	movf	??_write_sector+1,w
  7260  00BC' 008E'              	movwf	i2c_master_read_u8@data
  7261  00BD' 3028               	movlw	40
  7262  00BE' 3180' 2000' 3180'  	fcall	_i2c_master_read_u8
  7263  00C1' 0140               	movlb	0	; select bank0
  7264  00C2' 080D'              	movf	?_i2c_master_read_u8,w
  7265  00C3' 040E'              	iorwf	?_i2c_master_read_u8+1,w
  7266  00C4' 1903               	btfsc	3,2
  7267  00C5' 2800'              	goto	u3181
  7268  00C6' 2800'              	goto	u3180
  7269  00C7'                    u3181:	
  7270  00C7' 2800'              	goto	l788
  7271  00C8'                    u3180:	
  7272  00C8' 2800'              	goto	l3463
  7273  00C9'                    l788:	
  7274                           
  7275                           ;stusb4500_nvm.c: 284: } while (buffer & 0x10);
  7276  00C9' 1A17'              	btfsc	write_sector@buffer,4
  7277  00CA' 2800'              	goto	u3191
  7278  00CB' 2800'              	goto	u3190
  7279  00CC'                    u3191:	
  7280  00CC' 2800'              	goto	l3515
  7281  00CD'                    u3190:	
  7282  00CD'                    l3521:	
  7283                           
  7284                           ;stusb4500_nvm.c: 286: return 0;
  7285  00CD' 0192'              	clrf	?_write_sector
  7286  00CE' 0193'              	clrf	?_write_sector+1
  7287  00CF'                    l777:	
  7288  00CF' 0008               	return
  7289  00D0'                    __end_of_write_sector:	
  7290                           
  7291                           	psect	text13
  7292  0000'                    __ptext13:	
  7293 ;; *************** function _exit_rw_mode *****************
  7294 ;; Defined at:
  7295 ;;		line 289 in file "stusb4500_nvm.c"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;		None
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;  buffer          1    0        unsigned char 
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  2   18[BANK0 ] int 
  7302 ;; Registers used:
  7303 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7309 ;;      Params:         0       2       0       0       0       0       0       0
  7310 ;;      Locals:         0       1       0       0       0       0       0       0
  7311 ;;      Temps:          0       2       0       0       0       0       0       0
  7312 ;;      Totals:         0       5       0       0       0       0       0       0
  7313 ;;Total ram usage:        5 bytes
  7314 ;; Hardware stack levels used:    1
  7315 ;; Hardware stack levels required when called:    6
  7316 ;; This function calls:
  7317 ;;		_i2c_master_write_u8
  7318 ;; This function is called by:
  7319 ;;		_nvm_flash
  7320 ;;		_nvm_read
  7321 ;; This function uses a non-reentrant model
  7322 ;;
  7323                           
  7324                           
  7325                           ;psect for function _exit_rw_mode
  7326  0000'                    _exit_rw_mode:	
  7327  0000'                    l3525:	
  7328                           ;incstack = 0
  7329                           ; Regs used in _exit_rw_mode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7330                           
  7331  0000'                    l3527:	
  7332                           
  7333                           ;stusb4500_nvm.c: 294: if (i2c_master_write_u8(0x28, 0x96, buffer) != 0)
  7334  0000' 3096               	movlw	150
  7335  0001' 0140               	movlb	0	; select bank0
  7336  0002' 0094'              	movwf	??_exit_rw_mode
  7337  0003' 0814'              	movf	??_exit_rw_mode,w
  7338  0004' 008E'              	movwf	i2c_master_write_u8@reg
  7339  0005' 3040               	movlw	64
  7340  0006' 0095'              	movwf	??_exit_rw_mode+1
  7341  0007' 0815'              	movf	??_exit_rw_mode+1,w
  7342  0008' 008F'              	movwf	i2c_master_write_u8@data
  7343  0009' 3028               	movlw	40
  7344  000A' 3180' 2000' 3180'  	fcall	_i2c_master_write_u8
  7345  000D' 0140               	movlb	0	; select bank0
  7346  000E' 080E'              	movf	?_i2c_master_write_u8,w
  7347  000F' 040F'              	iorwf	?_i2c_master_write_u8+1,w
  7348  0010' 1903               	btfsc	3,2
  7349  0011' 2800'              	goto	u3201
  7350  0012' 2800'              	goto	u3200
  7351  0013'                    u3201:	
  7352  0013' 2800'              	goto	l3533
  7353  0014'                    u3200:	
  7354  0014'                    l3529:	
  7355                           
  7356                           ;stusb4500_nvm.c: 295: return -1;
  7357  0014' 30FF               	movlw	255
  7358  0015' 0092'              	movwf	?_exit_rw_mode
  7359  0016' 30FF               	movlw	255
  7360  0017' 0093'              	movwf	?_exit_rw_mode+1
  7361  0018' 2800'              	goto	l793
  7362  0019'                    l3533:	
  7363  0019'                    l3535:	
  7364                           
  7365                           ;stusb4500_nvm.c: 297: if (i2c_master_write_u8(0x28, 0x97, buffer) != 0)
  7366  0019' 3097               	movlw	151
  7367  001A' 0094'              	movwf	??_exit_rw_mode
  7368  001B' 0814'              	movf	??_exit_rw_mode,w
  7369  001C' 008E'              	movwf	i2c_master_write_u8@reg
  7370  001D' 018F'              	clrf	i2c_master_write_u8@data
  7371  001E' 3028               	movlw	40
  7372  001F' 3180' 2000' 3180'  	fcall	_i2c_master_write_u8
  7373  0022' 0140               	movlb	0	; select bank0
  7374  0023' 080E'              	movf	?_i2c_master_write_u8,w
  7375  0024' 040F'              	iorwf	?_i2c_master_write_u8+1,w
  7376  0025' 1903               	btfsc	3,2
  7377  0026' 2800'              	goto	u3211
  7378  0027' 2800'              	goto	u3210
  7379  0028'                    u3211:	
  7380  0028' 2800'              	goto	l3541
  7381  0029'                    u3210:	
  7382  0029' 2800'              	goto	l3529
  7383  002A'                    l3541:	
  7384  002A'                    l3543:	
  7385                           
  7386                           ;stusb4500_nvm.c: 302: if (;stusb4500_nvm.c: 303: i2c_master_write_u8(0x28, 0x95, buffer
      +                          ) != 0)
  7387  002A' 3095               	movlw	149
  7388  002B' 0094'              	movwf	??_exit_rw_mode
  7389  002C' 0814'              	movf	??_exit_rw_mode,w
  7390  002D' 008E'              	movwf	i2c_master_write_u8@reg
  7391  002E' 018F'              	clrf	i2c_master_write_u8@data
  7392  002F' 3028               	movlw	40
  7393  0030' 3180' 2000' 3180'  	fcall	_i2c_master_write_u8
  7394  0033' 0140               	movlb	0	; select bank0
  7395  0034' 080E'              	movf	?_i2c_master_write_u8,w
  7396  0035' 040F'              	iorwf	?_i2c_master_write_u8+1,w
  7397  0036' 1903               	btfsc	3,2
  7398  0037' 2800'              	goto	u3221
  7399  0038' 2800'              	goto	u3220
  7400  0039'                    u3221:	
  7401  0039' 2800'              	goto	l3549
  7402  003A'                    u3220:	
  7403  003A' 2800'              	goto	l3529
  7404  003B'                    l3549:	
  7405                           
  7406                           ;stusb4500_nvm.c: 306: return 0;
  7407  003B' 0192'              	clrf	?_exit_rw_mode
  7408  003C' 0193'              	clrf	?_exit_rw_mode+1
  7409  003D'                    l793:	
  7410  003D' 0008               	return
  7411  003E'                    __end_of_exit_rw_mode:	
  7412                           
  7413                           	psect	text14
  7414  0000'                    __ptext14:	
  7415 ;; *************** function _enter_write_mode *****************
  7416 ;; Defined at:
  7417 ;;		line 96 in file "stusb4500_nvm.c"
  7418 ;; Parameters:    Size  Location     Type
  7419 ;;		None
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;  buffer          1   22[BANK0 ] unsigned char 
  7422 ;; Return value:  Size  Location     Type
  7423 ;;                  2   18[BANK0 ] int 
  7424 ;; Registers used:
  7425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7426 ;; Tracked objects:
  7427 ;;		On entry : 0/0
  7428 ;;		On exit  : 0/0
  7429 ;;		Unchanged: 0/0
  7430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7431 ;;      Params:         0       2       0       0       0       0       0       0
  7432 ;;      Locals:         0       1       0       0       0       0       0       0
  7433 ;;      Temps:          0       2       0       0       0       0       0       0
  7434 ;;      Totals:         0       5       0       0       0       0       0       0
  7435 ;;Total ram usage:        5 bytes
  7436 ;; Hardware stack levels used:    1
  7437 ;; Hardware stack levels required when called:    6
  7438 ;; This function calls:
  7439 ;;		_i2c_master_read_u8
  7440 ;;		_i2c_master_write_u8
  7441 ;; This function is called by:
  7442 ;;		_nvm_flash
  7443 ;; This function uses a non-reentrant model
  7444 ;;
  7445                           
  7446                           
  7447                           ;psect for function _enter_write_mode
  7448  0000'                    _enter_write_mode:	
  7449  0000'                    l3277:	
  7450                           ;incstack = 0
  7451                           ; Regs used in _enter_write_mode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7452                           
  7453                           
  7454                           ;stusb4500_nvm.c: 97: uint8_t buffer;;stusb4500_nvm.c: 100: buffer = 0x47;
  7455  0000' 3047               	movlw	71
  7456  0001' 0140               	movlb	0	; select bank0
  7457  0002' 0094'              	movwf	??_enter_write_mode
  7458  0003' 0814'              	movf	??_enter_write_mode,w
  7459  0004' 0096'              	movwf	enter_write_mode@buffer
  7460  0005'                    l3279:	
  7461                           
  7462                           ;stusb4500_nvm.c: 101: if (;stusb4500_nvm.c: 102: i2c_master_write_u8(0x28, 0x95, buffer
      +                          ) != 0)
  7463  0005' 3095               	movlw	149
  7464  0006' 0094'              	movwf	??_enter_write_mode
  7465  0007' 0814'              	movf	??_enter_write_mode,w
  7466  0008' 008E'              	movwf	i2c_master_write_u8@reg
  7467  0009' 0816'              	movf	enter_write_mode@buffer,w
  7468  000A' 0095'              	movwf	??_enter_write_mode+1
  7469  000B' 0815'              	movf	??_enter_write_mode+1,w
  7470  000C' 008F'              	movwf	i2c_master_write_u8@data
  7471  000D' 3028               	movlw	40
  7472  000E' 3180' 2000' 3180'  	fcall	_i2c_master_write_u8
  7473  0011' 0140               	movlb	0	; select bank0
  7474  0012' 080E'              	movf	?_i2c_master_write_u8,w
  7475  0013' 040F'              	iorwf	?_i2c_master_write_u8+1,w
  7476  0014' 1903               	btfsc	3,2
  7477  0015' 2800'              	goto	u2821
  7478  0016' 2800'              	goto	u2820
  7479  0017'                    u2821:	
  7480  0017' 2800'              	goto	l3285
  7481  0018'                    u2820:	
  7482  0018'                    l3281:	
  7483                           
  7484                           ;stusb4500_nvm.c: 103: return -1;
  7485  0018' 30FF               	movlw	255
  7486  0019' 0092'              	movwf	?_enter_write_mode
  7487  001A' 30FF               	movlw	255
  7488  001B' 0093'              	movwf	?_enter_write_mode+1
  7489  001C' 2800'              	goto	l737
  7490  001D'                    l3285:	
  7491                           
  7492                           ;stusb4500_nvm.c: 106: buffer = 0x00;
  7493  001D' 0196'              	clrf	enter_write_mode@buffer
  7494  001E'                    l3287:	
  7495                           
  7496                           ;stusb4500_nvm.c: 107: if (i2c_master_write_u8(0x28, 0x53, buffer) != 0) return -1;
  7497  001E' 3053               	movlw	83
  7498  001F' 0094'              	movwf	??_enter_write_mode
  7499  0020' 0814'              	movf	??_enter_write_mode,w
  7500  0021' 008E'              	movwf	i2c_master_write_u8@reg
  7501  0022' 0816'              	movf	enter_write_mode@buffer,w
  7502  0023' 0095'              	movwf	??_enter_write_mode+1
  7503  0024' 0815'              	movf	??_enter_write_mode+1,w
  7504  0025' 008F'              	movwf	i2c_master_write_u8@data
  7505  0026' 3028               	movlw	40
  7506  0027' 3180' 2000' 3180'  	fcall	_i2c_master_write_u8
  7507  002A' 0140               	movlb	0	; select bank0
  7508  002B' 080E'              	movf	?_i2c_master_write_u8,w
  7509  002C' 040F'              	iorwf	?_i2c_master_write_u8+1,w
  7510  002D' 1903               	btfsc	3,2
  7511  002E' 2800'              	goto	u2831
  7512  002F' 2800'              	goto	u2830
  7513  0030'                    u2831:	
  7514  0030' 2800'              	goto	l3293
  7515  0031'                    u2830:	
  7516  0031' 2800'              	goto	l3281
  7517  0032'                    l3293:	
  7518                           
  7519                           ;stusb4500_nvm.c: 111: buffer = 0x00;
  7520  0032' 0196'              	clrf	enter_write_mode@buffer
  7521  0033'                    l3295:	
  7522                           
  7523                           ;stusb4500_nvm.c: 112: if (i2c_master_write_u8(0x28, 0x96, buffer) != 0)
  7524  0033' 3096               	movlw	150
  7525  0034' 0094'              	movwf	??_enter_write_mode
  7526  0035' 0814'              	movf	??_enter_write_mode,w
  7527  0036' 008E'              	movwf	i2c_master_write_u8@reg
  7528  0037' 0816'              	movf	enter_write_mode@buffer,w
  7529  0038' 0095'              	movwf	??_enter_write_mode+1
  7530  0039' 0815'              	movf	??_enter_write_mode+1,w
  7531  003A' 008F'              	movwf	i2c_master_write_u8@data
  7532  003B' 3028               	movlw	40
  7533  003C' 3180' 2000' 3180'  	fcall	_i2c_master_write_u8
  7534  003F' 0140               	movlb	0	; select bank0
  7535  0040' 080E'              	movf	?_i2c_master_write_u8,w
  7536  0041' 040F'              	iorwf	?_i2c_master_write_u8+1,w
  7537  0042' 1903               	btfsc	3,2
  7538  0043' 2800'              	goto	u2841
  7539  0044' 2800'              	goto	u2840
  7540  0045'                    u2841:	
  7541  0045' 2800'              	goto	l3301
  7542  0046'                    u2840:	
  7543  0046' 2800'              	goto	l3281
  7544  0047'                    l3301:	
  7545                           
  7546                           ;stusb4500_nvm.c: 116: buffer = 0x80 | 0x40;
  7547  0047' 30C0               	movlw	192
  7548  0048' 0094'              	movwf	??_enter_write_mode
  7549  0049' 0814'              	movf	??_enter_write_mode,w
  7550  004A' 0096'              	movwf	enter_write_mode@buffer
  7551  004B'                    l3303:	
  7552                           
  7553                           ;stusb4500_nvm.c: 117: if (i2c_master_write_u8(0x28, 0x96, buffer) != 0)
  7554  004B' 3096               	movlw	150
  7555  004C' 0094'              	movwf	??_enter_write_mode
  7556  004D' 0814'              	movf	??_enter_write_mode,w
  7557  004E' 008E'              	movwf	i2c_master_write_u8@reg
  7558  004F' 0816'              	movf	enter_write_mode@buffer,w
  7559  0050' 0095'              	movwf	??_enter_write_mode+1
  7560  0051' 0815'              	movf	??_enter_write_mode+1,w
  7561  0052' 008F'              	movwf	i2c_master_write_u8@data
  7562  0053' 3028               	movlw	40
  7563  0054' 3180' 2000' 3180'  	fcall	_i2c_master_write_u8
  7564  0057' 0140               	movlb	0	; select bank0
  7565  0058' 080E'              	movf	?_i2c_master_write_u8,w
  7566  0059' 040F'              	iorwf	?_i2c_master_write_u8+1,w
  7567  005A' 1903               	btfsc	3,2
  7568  005B' 2800'              	goto	u2851
  7569  005C' 2800'              	goto	u2850
  7570  005D'                    u2851:	
  7571  005D' 2800'              	goto	l3309
  7572  005E'                    u2850:	
  7573  005E' 2800'              	goto	l3281
  7574  005F'                    l3309:	
  7575                           
  7576                           ;stusb4500_nvm.c: 123: buffer = (((0x01 | 0x02 | 0x04 | 0x08 | 0x10) << 3) &;stusb4500_n
      +                          vm.c: 124: 0xF8) |;stusb4500_nvm.c: 125: (0x02 & 0x07);
  7577  005F' 30FA               	movlw	250
  7578  0060' 0094'              	movwf	??_enter_write_mode
  7579  0061' 0814'              	movf	??_enter_write_mode,w
  7580  0062' 0096'              	movwf	enter_write_mode@buffer
  7581  0063'                    l3311:	
  7582                           
  7583                           ;stusb4500_nvm.c: 126: if (i2c_master_write_u8(0x28, 0x97, buffer) != 0)
  7584  0063' 3097               	movlw	151
  7585  0064' 0094'              	movwf	??_enter_write_mode
  7586  0065' 0814'              	movf	??_enter_write_mode,w
  7587  0066' 008E'              	movwf	i2c_master_write_u8@reg
  7588  0067' 0816'              	movf	enter_write_mode@buffer,w
  7589  0068' 0095'              	movwf	??_enter_write_mode+1
  7590  0069' 0815'              	movf	??_enter_write_mode+1,w
  7591  006A' 008F'              	movwf	i2c_master_write_u8@data
  7592  006B' 3028               	movlw	40
  7593  006C' 3180' 2000' 3180'  	fcall	_i2c_master_write_u8
  7594  006F' 0140               	movlb	0	; select bank0
  7595  0070' 080E'              	movf	?_i2c_master_write_u8,w
  7596  0071' 040F'              	iorwf	?_i2c_master_write_u8+1,w
  7597  0072' 1903               	btfsc	3,2
  7598  0073' 2800'              	goto	u2861
  7599  0074' 2800'              	goto	u2860
  7600  0075'                    u2861:	
  7601  0075' 2800'              	goto	l3317
  7602  0076'                    u2860:	
  7603  0076' 2800'              	goto	l3281
  7604  0077'                    l3317:	
  7605                           
  7606                           ;stusb4500_nvm.c: 130: buffer = 0x80 | 0x40 | 0x10;
  7607  0077' 30D0               	movlw	208
  7608  0078' 0094'              	movwf	??_enter_write_mode
  7609  0079' 0814'              	movf	??_enter_write_mode,w
  7610  007A' 0096'              	movwf	enter_write_mode@buffer
  7611  007B'                    l3319:	
  7612                           
  7613                           ;stusb4500_nvm.c: 131: if (i2c_master_write_u8(0x28, 0x96, buffer) != 0)
  7614  007B' 3096               	movlw	150
  7615  007C' 0094'              	movwf	??_enter_write_mode
  7616  007D' 0814'              	movf	??_enter_write_mode,w
  7617  007E' 008E'              	movwf	i2c_master_write_u8@reg
  7618  007F' 0816'              	movf	enter_write_mode@buffer,w
  7619  0080' 0095'              	movwf	??_enter_write_mode+1
  7620  0081' 0815'              	movf	??_enter_write_mode+1,w
  7621  0082' 008F'              	movwf	i2c_master_write_u8@data
  7622  0083' 3028               	movlw	40
  7623  0084' 3180' 2000' 3180'  	fcall	_i2c_master_write_u8
  7624  0087' 0140               	movlb	0	; select bank0
  7625  0088' 080E'              	movf	?_i2c_master_write_u8,w
  7626  0089' 040F'              	iorwf	?_i2c_master_write_u8+1,w
  7627  008A' 1903               	btfsc	3,2
  7628  008B' 2800'              	goto	u2871
  7629  008C' 2800'              	goto	u2870
  7630  008D'                    u2871:	
  7631  008D' 2800'              	goto	l3325
  7632  008E'                    u2870:	
  7633  008E' 2800'              	goto	l3281
  7634  008F'                    l3325:	
  7635                           
  7636                           ;stusb4500_nvm.c: 136: if (i2c_master_read_u8(0x28, 0x96, &buffer) != 0)
  7637  008F' 3096               	movlw	150
  7638  0090' 0094'              	movwf	??_enter_write_mode
  7639  0091' 0814'              	movf	??_enter_write_mode,w
  7640  0092' 008D'              	movwf	i2c_master_read_u8@reg
  7641  0093' 3000'              	movlw	(low (enter_write_mode@buffer| 0))& (0+255)
  7642  0094' 0095'              	movwf	??_enter_write_mode+1
  7643  0095' 0815'              	movf	??_enter_write_mode+1,w
  7644  0096' 008E'              	movwf	i2c_master_read_u8@data
  7645  0097' 3028               	movlw	40
  7646  0098' 3180' 2000' 3180'  	fcall	_i2c_master_read_u8
  7647  009B' 0140               	movlb	0	; select bank0
  7648  009C' 080D'              	movf	?_i2c_master_read_u8,w
  7649  009D' 040E'              	iorwf	?_i2c_master_read_u8+1,w
  7650  009E' 1903               	btfsc	3,2
  7651  009F' 2800'              	goto	u2881
  7652  00A0' 2800'              	goto	u2880
  7653  00A1'                    u2881:	
  7654  00A1' 2800'              	goto	l744
  7655  00A2'                    u2880:	
  7656  00A2' 2800'              	goto	l3281
  7657  00A3'                    l744:	
  7658                           
  7659                           ;stusb4500_nvm.c: 138: } while (buffer & 0x10);
  7660  00A3' 1A16'              	btfsc	enter_write_mode@buffer,4
  7661  00A4' 2800'              	goto	u2891
  7662  00A5' 2800'              	goto	u2890
  7663  00A6'                    u2891:	
  7664  00A6' 2800'              	goto	l3325
  7665  00A7'                    u2890:	
  7666  00A7'                    l3331:	
  7667                           
  7668                           ;stusb4500_nvm.c: 141: buffer = 0x07 & 0x07;
  7669  00A7' 3007               	movlw	7
  7670  00A8' 0094'              	movwf	??_enter_write_mode
  7671  00A9' 0814'              	movf	??_enter_write_mode,w
  7672  00AA' 0096'              	movwf	enter_write_mode@buffer
  7673  00AB'                    l3333:	
  7674                           
  7675                           ;stusb4500_nvm.c: 142: if (i2c_master_write_u8(0x28, 0x97, buffer) != 0)
  7676  00AB' 3097               	movlw	151
  7677  00AC' 0094'              	movwf	??_enter_write_mode
  7678  00AD' 0814'              	movf	??_enter_write_mode,w
  7679  00AE' 008E'              	movwf	i2c_master_write_u8@reg
  7680  00AF' 0816'              	movf	enter_write_mode@buffer,w
  7681  00B0' 0095'              	movwf	??_enter_write_mode+1
  7682  00B1' 0815'              	movf	??_enter_write_mode+1,w
  7683  00B2' 008F'              	movwf	i2c_master_write_u8@data
  7684  00B3' 3028               	movlw	40
  7685  00B4' 3180' 2000' 3180'  	fcall	_i2c_master_write_u8
  7686  00B7' 0140               	movlb	0	; select bank0
  7687  00B8' 080E'              	movf	?_i2c_master_write_u8,w
  7688  00B9' 040F'              	iorwf	?_i2c_master_write_u8+1,w
  7689  00BA' 1903               	btfsc	3,2
  7690  00BB' 2800'              	goto	u2901
  7691  00BC' 2800'              	goto	u2900
  7692  00BD'                    u2901:	
  7693  00BD' 2800'              	goto	l3339
  7694  00BE'                    u2900:	
  7695  00BE' 2800'              	goto	l3281
  7696  00BF'                    l3339:	
  7697                           
  7698                           ;stusb4500_nvm.c: 146: buffer = 0x80 | 0x40 | 0x10;
  7699  00BF' 30D0               	movlw	208
  7700  00C0' 0094'              	movwf	??_enter_write_mode
  7701  00C1' 0814'              	movf	??_enter_write_mode,w
  7702  00C2' 0096'              	movwf	enter_write_mode@buffer
  7703  00C3'                    l3341:	
  7704                           
  7705                           ;stusb4500_nvm.c: 147: if (i2c_master_write_u8(0x28, 0x96, buffer) != 0)
  7706  00C3' 3096               	movlw	150
  7707  00C4' 0094'              	movwf	??_enter_write_mode
  7708  00C5' 0814'              	movf	??_enter_write_mode,w
  7709  00C6' 008E'              	movwf	i2c_master_write_u8@reg
  7710  00C7' 0816'              	movf	enter_write_mode@buffer,w
  7711  00C8' 0095'              	movwf	??_enter_write_mode+1
  7712  00C9' 0815'              	movf	??_enter_write_mode+1,w
  7713  00CA' 008F'              	movwf	i2c_master_write_u8@data
  7714  00CB' 3028               	movlw	40
  7715  00CC' 3180' 2000' 3180'  	fcall	_i2c_master_write_u8
  7716  00CF' 0140               	movlb	0	; select bank0
  7717  00D0' 080E'              	movf	?_i2c_master_write_u8,w
  7718  00D1' 040F'              	iorwf	?_i2c_master_write_u8+1,w
  7719  00D2' 1903               	btfsc	3,2
  7720  00D3' 2800'              	goto	u2911
  7721  00D4' 2800'              	goto	u2910
  7722  00D5'                    u2911:	
  7723  00D5' 2800'              	goto	l3347
  7724  00D6'                    u2910:	
  7725  00D6' 2800'              	goto	l3281
  7726  00D7'                    l3347:	
  7727                           
  7728                           ;stusb4500_nvm.c: 152: if (i2c_master_read_u8(0x28, 0x96, &buffer) != 0)
  7729  00D7' 3096               	movlw	150
  7730  00D8' 0094'              	movwf	??_enter_write_mode
  7731  00D9' 0814'              	movf	??_enter_write_mode,w
  7732  00DA' 008D'              	movwf	i2c_master_read_u8@reg
  7733  00DB' 3000'              	movlw	(low (enter_write_mode@buffer| 0))& (0+255)
  7734  00DC' 0095'              	movwf	??_enter_write_mode+1
  7735  00DD' 0815'              	movf	??_enter_write_mode+1,w
  7736  00DE' 008E'              	movwf	i2c_master_read_u8@data
  7737  00DF' 3028               	movlw	40
  7738  00E0' 3180' 2000' 3180'  	fcall	_i2c_master_read_u8
  7739  00E3' 0140               	movlb	0	; select bank0
  7740  00E4' 080D'              	movf	?_i2c_master_read_u8,w
  7741  00E5' 040E'              	iorwf	?_i2c_master_read_u8+1,w
  7742  00E6' 1903               	btfsc	3,2
  7743  00E7' 2800'              	goto	u2921
  7744  00E8' 2800'              	goto	u2920
  7745  00E9'                    u2921:	
  7746  00E9' 2800'              	goto	l749
  7747  00EA'                    u2920:	
  7748  00EA' 2800'              	goto	l3281
  7749  00EB'                    l749:	
  7750                           
  7751                           ;stusb4500_nvm.c: 154: } while (buffer & 0x10);
  7752  00EB' 1A16'              	btfsc	enter_write_mode@buffer,4
  7753  00EC' 2800'              	goto	u2931
  7754  00ED' 2800'              	goto	u2930
  7755  00EE'                    u2931:	
  7756  00EE' 2800'              	goto	l3347
  7757  00EF'                    u2930:	
  7758  00EF'                    l3353:	
  7759                           
  7760                           ;stusb4500_nvm.c: 157: buffer = 0x05 & 0x07;
  7761  00EF' 3005               	movlw	5
  7762  00F0' 0094'              	movwf	??_enter_write_mode
  7763  00F1' 0814'              	movf	??_enter_write_mode,w
  7764  00F2' 0096'              	movwf	enter_write_mode@buffer
  7765  00F3'                    l3355:	
  7766                           
  7767                           ;stusb4500_nvm.c: 158: if (i2c_master_write_u8(0x28, 0x97, buffer) != 0)
  7768  00F3' 3097               	movlw	151
  7769  00F4' 0094'              	movwf	??_enter_write_mode
  7770  00F5' 0814'              	movf	??_enter_write_mode,w
  7771  00F6' 008E'              	movwf	i2c_master_write_u8@reg
  7772  00F7' 0816'              	movf	enter_write_mode@buffer,w
  7773  00F8' 0095'              	movwf	??_enter_write_mode+1
  7774  00F9' 0815'              	movf	??_enter_write_mode+1,w
  7775  00FA' 008F'              	movwf	i2c_master_write_u8@data
  7776  00FB' 3028               	movlw	40
  7777  00FC' 3180' 2000' 3180'  	fcall	_i2c_master_write_u8
  7778  00FF' 0140               	movlb	0	; select bank0
  7779  0100' 080E'              	movf	?_i2c_master_write_u8,w
  7780  0101' 040F'              	iorwf	?_i2c_master_write_u8+1,w
  7781  0102' 1903               	btfsc	3,2
  7782  0103' 2800'              	goto	u2941
  7783  0104' 2800'              	goto	u2940
  7784  0105'                    u2941:	
  7785  0105' 2800'              	goto	l3361
  7786  0106'                    u2940:	
  7787  0106' 2800'              	goto	l3281
  7788  0107'                    l3361:	
  7789                           
  7790                           ;stusb4500_nvm.c: 162: buffer = 0x80 | 0x40 | 0x10;
  7791  0107' 30D0               	movlw	208
  7792  0108' 0094'              	movwf	??_enter_write_mode
  7793  0109' 0814'              	movf	??_enter_write_mode,w
  7794  010A' 0096'              	movwf	enter_write_mode@buffer
  7795  010B'                    l3363:	
  7796                           
  7797                           ;stusb4500_nvm.c: 163: if (i2c_master_write_u8(0x28, 0x96, buffer) != 0)
  7798  010B' 3096               	movlw	150
  7799  010C' 0094'              	movwf	??_enter_write_mode
  7800  010D' 0814'              	movf	??_enter_write_mode,w
  7801  010E' 008E'              	movwf	i2c_master_write_u8@reg
  7802  010F' 0816'              	movf	enter_write_mode@buffer,w
  7803  0110' 0095'              	movwf	??_enter_write_mode+1
  7804  0111' 0815'              	movf	??_enter_write_mode+1,w
  7805  0112' 008F'              	movwf	i2c_master_write_u8@data
  7806  0113' 3028               	movlw	40
  7807  0114' 3180' 2000' 3180'  	fcall	_i2c_master_write_u8
  7808  0117' 0140               	movlb	0	; select bank0
  7809  0118' 080E'              	movf	?_i2c_master_write_u8,w
  7810  0119' 040F'              	iorwf	?_i2c_master_write_u8+1,w
  7811  011A' 1903               	btfsc	3,2
  7812  011B' 2800'              	goto	u2951
  7813  011C' 2800'              	goto	u2950
  7814  011D'                    u2951:	
  7815  011D' 2800'              	goto	l3369
  7816  011E'                    u2950:	
  7817  011E' 2800'              	goto	l3281
  7818  011F'                    l3369:	
  7819                           
  7820                           ;stusb4500_nvm.c: 168: if (i2c_master_read_u8(0x28, 0x96, &buffer) != 0)
  7821  011F' 3096               	movlw	150
  7822  0120' 0094'              	movwf	??_enter_write_mode
  7823  0121' 0814'              	movf	??_enter_write_mode,w
  7824  0122' 008D'              	movwf	i2c_master_read_u8@reg
  7825  0123' 3000'              	movlw	(low (enter_write_mode@buffer| 0))& (0+255)
  7826  0124' 0095'              	movwf	??_enter_write_mode+1
  7827  0125' 0815'              	movf	??_enter_write_mode+1,w
  7828  0126' 008E'              	movwf	i2c_master_read_u8@data
  7829  0127' 3028               	movlw	40
  7830  0128' 3180' 2000' 3180'  	fcall	_i2c_master_read_u8
  7831  012B' 0140               	movlb	0	; select bank0
  7832  012C' 080D'              	movf	?_i2c_master_read_u8,w
  7833  012D' 040E'              	iorwf	?_i2c_master_read_u8+1,w
  7834  012E' 1903               	btfsc	3,2
  7835  012F' 2800'              	goto	u2961
  7836  0130' 2800'              	goto	u2960
  7837  0131'                    u2961:	
  7838  0131' 2800'              	goto	l754
  7839  0132'                    u2960:	
  7840  0132' 2800'              	goto	l3281
  7841  0133'                    l754:	
  7842                           
  7843                           ;stusb4500_nvm.c: 170: } while (buffer & 0x10);
  7844  0133' 1A16'              	btfsc	enter_write_mode@buffer,4
  7845  0134' 2800'              	goto	u2971
  7846  0135' 2800'              	goto	u2970
  7847  0136'                    u2971:	
  7848  0136' 2800'              	goto	l3369
  7849  0137'                    u2970:	
  7850  0137'                    l3375:	
  7851                           
  7852                           ;stusb4500_nvm.c: 173: return 0;
  7853  0137' 0192'              	clrf	?_enter_write_mode
  7854  0138' 0193'              	clrf	?_enter_write_mode+1
  7855  0139'                    l737:	
  7856  0139' 0008               	return
  7857  013A'                    __end_of_enter_write_mode:	
  7858                           
  7859                           	psect	text15
  7860  0000'                    __ptext15:	
  7861 ;; *************** function _i2c_master_write_u8 *****************
  7862 ;; Defined at:
  7863 ;;		line 73 in file "i2c_driver_stusb4500.c"
  7864 ;; Parameters:    Size  Location     Type
  7865 ;;  device          1    wreg     const unsigned char 
  7866 ;;  reg             1   14[BANK0 ] const unsigned char 
  7867 ;;  data            1   15[BANK0 ] const unsigned char 
  7868 ;; Auto vars:     Size  Location     Type
  7869 ;;  device          1   17[BANK0 ] const unsigned char 
  7870 ;; Return value:  Size  Location     Type
  7871 ;;                  2   14[BANK0 ] int 
  7872 ;; Registers used:
  7873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7874 ;; Tracked objects:
  7875 ;;		On entry : 0/0
  7876 ;;		On exit  : 0/0
  7877 ;;		Unchanged: 0/0
  7878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7879 ;;      Params:         0       2       0       0       0       0       0       0
  7880 ;;      Locals:         0       1       0       0       0       0       0       0
  7881 ;;      Temps:          0       1       0       0       0       0       0       0
  7882 ;;      Totals:         0       4       0       0       0       0       0       0
  7883 ;;Total ram usage:        4 bytes
  7884 ;; Hardware stack levels used:    1
  7885 ;; Hardware stack levels required when called:    5
  7886 ;; This function calls:
  7887 ;;		_i2c_master_write
  7888 ;; This function is called by:
  7889 ;;		_reset
  7890 ;;		_enter_write_mode
  7891 ;;		_write_sector
  7892 ;;		_exit_rw_mode
  7893 ;;		_send_pd_message
  7894 ;;		_enter_read_mode
  7895 ;;		_read_sector
  7896 ;; This function uses a non-reentrant model
  7897 ;;
  7898                           
  7899                           
  7900                           ;psect for function _i2c_master_write_u8
  7901  0000'                    _i2c_master_write_u8:	
  7902                           
  7903                           ;incstack = 0
  7904                           ; Regs used in _i2c_master_write_u8: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7905                           ;i2c_master_write_u8@device stored from wreg
  7906  0000' 0140               	movlb	0	; select bank0
  7907  0001' 0091'              	movwf	i2c_master_write_u8@device
  7908  0002'                    l2887:	
  7909                           
  7910                           ;i2c_driver_stusb4500.c: 75: return i2c_master_write(device, reg, &data, 1);
  7911  0002' 080E'              	movf	i2c_master_write_u8@reg,w
  7912  0003' 0090'              	movwf	??_i2c_master_write_u8
  7913  0004' 0810'              	movf	??_i2c_master_write_u8,w
  7914  0005' 0084'              	movwf	i2c_master_write@reg
  7915  0006' 3000'              	movlw	low i2c_master_write_u8@data
  7916  0007' 0085'              	movwf	i2c_master_write@buf
  7917  0008' 3000'              	movlw	high i2c_master_write_u8@data
  7918  0009' 0086'              	movwf	i2c_master_write@buf+1
  7919  000A' 3001               	movlw	1
  7920  000B' 0087'              	movwf	i2c_master_write@len
  7921  000C' 3000               	movlw	0
  7922  000D' 0088'              	movwf	i2c_master_write@len+1
  7923  000E' 0811'              	movf	i2c_master_write_u8@device,w
  7924  000F' 3180' 2000' 3180'  	fcall	_i2c_master_write
  7925  0012' 0140               	movlb	0	; select bank0
  7926  0013' 0805'              	movf	?_i2c_master_write+1,w
  7927  0014' 008F'              	movwf	?_i2c_master_write_u8+1
  7928  0015' 0804'              	movf	?_i2c_master_write,w
  7929  0016' 008E'              	movwf	?_i2c_master_write_u8
  7930  0017'                    l696:	
  7931  0017' 0008               	return
  7932  0018'                    __end_of_i2c_master_write_u8:	
  7933                           
  7934                           	psect	text16
  7935  0000'                    __ptext16:	
  7936 ;; *************** function _i2c_master_write *****************
  7937 ;; Defined at:
  7938 ;;		line 54 in file "i2c_driver_stusb4500.c"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;  device          1    wreg     const unsigned char 
  7941 ;;  reg             1    4[BANK0 ] const unsigned char 
  7942 ;;  buf             2    5[BANK0 ] PTR const void 
  7943 ;;		 -> nvm_config(40), i2c_master_write_u32@data(4), i2c_master_write_u16@data(2), i2c_master_write_u8@data(1), 
  7944 ;;  len             2    7[BANK0 ] unsigned int 
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;  device          1    9[BANK0 ] const unsigned char 
  7947 ;;  ok              2   12[BANK0 ] int 
  7948 ;;  data            2   10[BANK0 ] PTR unsigned char 
  7949 ;;		 -> nvm_config(40), i2c_master_write_u32@data(4), i2c_master_write_u16@data(2), i2c_master_write_u8@data(1), 
  7950 ;; Return value:  Size  Location     Type
  7951 ;;                  2    4[BANK0 ] int 
  7952 ;; Registers used:
  7953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7954 ;; Tracked objects:
  7955 ;;		On entry : 0/0
  7956 ;;		On exit  : 0/0
  7957 ;;		Unchanged: 0/0
  7958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7959 ;;      Params:         0       5       0       0       0       0       0       0
  7960 ;;      Locals:         0       5       0       0       0       0       0       0
  7961 ;;      Temps:          0       0       0       0       0       0       0       0
  7962 ;;      Totals:         0      10       0       0       0       0       0       0
  7963 ;;Total ram usage:       10 bytes
  7964 ;; Hardware stack levels used:    1
  7965 ;; Hardware stack levels required when called:    4
  7966 ;; This function calls:
  7967 ;;		_i2c_master_send_byte
  7968 ;;		_i2c_master_start
  7969 ;;		_i2c_master_stop
  7970 ;;		_i2c_master_wait
  7971 ;; This function is called by:
  7972 ;;		_i2c_master_write_u8
  7973 ;;		_i2c_master_write_u32
  7974 ;;		_write_sector
  7975 ;;		_i2c_master_write_u16
  7976 ;; This function uses a non-reentrant model
  7977 ;;
  7978                           
  7979                           
  7980                           ;psect for function _i2c_master_write
  7981  0000'                    _i2c_master_write:	
  7982                           
  7983                           ;incstack = 0
  7984                           ; Regs used in _i2c_master_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7985                           ;i2c_master_write@device stored from wreg
  7986  0000' 0140               	movlb	0	; select bank0
  7987  0001' 0089'              	movwf	i2c_master_write@device
  7988  0002'                    l2843:	
  7989                           
  7990                           ;i2c_driver_stusb4500.c: 56: uint8_t* data = (uint8_t*)buf;
  7991  0002' 0806'              	movf	i2c_master_write@buf+1,w
  7992  0003' 008B'              	movwf	i2c_master_write@data+1
  7993  0004' 0805'              	movf	i2c_master_write@buf,w
  7994  0005' 008A'              	movwf	i2c_master_write@data
  7995  0006'                    l2845:	
  7996                           
  7997                           ;i2c_driver_stusb4500.c: 57: if (!data) return -1;
  7998  0006' 080A'              	movf	i2c_master_write@data,w
  7999  0007' 040B'              	iorwf	i2c_master_write@data+1,w
  8000  0008' 1D03               	btfss	3,2
  8001  0009' 2800'              	goto	u2051
  8002  000A' 2800'              	goto	u2050
  8003  000B'                    u2051:	
  8004  000B' 2800'              	goto	l2851
  8005  000C'                    u2050:	
  8006  000C'                    l2847:	
  8007  000C' 30FF               	movlw	255
  8008  000D' 0084'              	movwf	?_i2c_master_write
  8009  000E' 30FF               	movlw	255
  8010  000F' 0085'              	movwf	?_i2c_master_write+1
  8011  0010' 2800'              	goto	l686
  8012  0011'                    l2851:	
  8013  0011'                    l2853:	
  8014                           
  8015                           ;i2c_driver_stusb4500.c: 61: i2c_master_wait();
  8016  0011' 3180' 2000' 3180'  	fcall	_i2c_master_wait
  8017  0014'                    l2855:	
  8018                           
  8019                           ;i2c_driver_stusb4500.c: 62: i2c_master_start();
  8020  0014' 3180' 2000' 3180'  	fcall	_i2c_master_start
  8021  0017'                    l2857:	
  8022  0017'                    l2859:	
  8023                           ;i2c_driver_stusb4500.c: 63: if (ok == 0) ok = i2c_master_send_byte((device << 1) | 0);
  8024                           
  8025  0017' 0140               	movlb	0	; select bank0
  8026  0018' 3509'              	lslf	i2c_master_write@device,w
  8027  0019' 3180' 2000' 3180'  	fcall	_i2c_master_send_byte
  8028  001C' 0140               	movlb	0	; select bank0
  8029  001D' 0801'              	movf	?_i2c_master_send_byte+1,w
  8030  001E' 008D'              	movwf	i2c_master_write@ok+1
  8031  001F' 0800'              	movf	?_i2c_master_send_byte,w
  8032  0020' 008C'              	movwf	i2c_master_write@ok
  8033  0021'                    l2861:	
  8034                           
  8035                           ;i2c_driver_stusb4500.c: 64: if (ok == 0) ok = i2c_master_send_byte(reg);
  8036  0021' 080C'              	movf	i2c_master_write@ok,w
  8037  0022' 040D'              	iorwf	i2c_master_write@ok+1,w
  8038  0023' 1D03               	btfss	3,2
  8039  0024' 2800'              	goto	u2061
  8040  0025' 2800'              	goto	u2060
  8041  0026'                    u2061:	
  8042  0026' 2800'              	goto	l2869
  8043  0027'                    u2060:	
  8044  0027'                    l2863:	
  8045  0027' 0804'              	movf	i2c_master_write@reg,w
  8046  0028' 3180' 2000' 3180'  	fcall	_i2c_master_send_byte
  8047  002B' 0140               	movlb	0	; select bank0
  8048  002C' 0801'              	movf	?_i2c_master_send_byte+1,w
  8049  002D' 008D'              	movwf	i2c_master_write@ok+1
  8050  002E' 0800'              	movf	?_i2c_master_send_byte,w
  8051  002F' 008C'              	movwf	i2c_master_write@ok
  8052  0030' 2800'              	goto	l2869
  8053  0031'                    l2865:	
  8054                           
  8055                           ;i2c_driver_stusb4500.c: 66: ok = i2c_master_send_byte(*data++);
  8056  0031' 080A'              	movf	i2c_master_write@data,w
  8057  0032' 0084               	movwf	4
  8058  0033' 080B'              	movf	i2c_master_write@data+1,w
  8059  0034' 0085               	movwf	5
  8060  0035' 0800               	movf	0,w	;code access
  8061  0036' 3180' 2000' 3180'  	fcall	_i2c_master_send_byte
  8062  0039' 0140               	movlb	0	; select bank0
  8063  003A' 0801'              	movf	?_i2c_master_send_byte+1,w
  8064  003B' 008D'              	movwf	i2c_master_write@ok+1
  8065  003C' 0800'              	movf	?_i2c_master_send_byte,w
  8066  003D' 008C'              	movwf	i2c_master_write@ok
  8067  003E'                    l2867:	
  8068  003E' 3001               	movlw	1
  8069  003F' 078A'              	addwf	i2c_master_write@data,f
  8070  0040' 3000               	movlw	0
  8071  0041' 3D8B'              	addwfc	i2c_master_write@data+1,f
  8072  0042'                    l2869:	
  8073  0042' 080C'              	movf	i2c_master_write@ok,w
  8074  0043' 040D'              	iorwf	i2c_master_write@ok+1,w
  8075  0044' 1D03               	btfss	3,2
  8076  0045' 2800'              	goto	u2071
  8077  0046' 2800'              	goto	u2070
  8078  0047'                    u2071:	
  8079  0047' 2800'              	goto	l2873
  8080  0048'                    u2070:	
  8081  0048'                    l2871:	
  8082  0048' 3001               	movlw	1
  8083  0049' 0287'              	subwf	i2c_master_write@len,f
  8084  004A' 3000               	movlw	0
  8085  004B' 3B88'              	subwfb	i2c_master_write@len+1,f
  8086  004C' 0A07'              	incf	i2c_master_write@len,w
  8087  004D' 1D03               	skipz
  8088  004E' 2800'              	goto	u2081
  8089  004F' 0A08'              	incf	i2c_master_write@len+1,w
  8090  0050' 1D03               	btfss	3,2
  8091  0051' 2800'              	goto	u2081
  8092  0052' 2800'              	goto	u2080
  8093  0053'                    u2081:	
  8094  0053' 2800'              	goto	l2865
  8095  0054'                    u2080:	
  8096  0054'                    l2873:	
  8097                           
  8098                           ;i2c_driver_stusb4500.c: 67: };i2c_driver_stusb4500.c: 68: i2c_master_stop();
  8099  0054' 3180' 2000' 3180'  	fcall	_i2c_master_stop
  8100  0057'                    l2875:	
  8101                           
  8102                           ;i2c_driver_stusb4500.c: 70: return ok;
  8103  0057' 0140               	movlb	0	; select bank0
  8104  0058' 080D'              	movf	i2c_master_write@ok+1,w
  8105  0059' 0085'              	movwf	?_i2c_master_write+1
  8106  005A' 080C'              	movf	i2c_master_write@ok,w
  8107  005B' 0084'              	movwf	?_i2c_master_write
  8108  005C'                    l686:	
  8109  005C' 0008               	return
  8110  005D'                    __end_of_i2c_master_write:	
  8111                           
  8112                           	psect	text17
  8113  0000'                    __ptext17:	
  8114 ;; *************** function _i2c_master_read_u8 *****************
  8115 ;; Defined at:
  8116 ;;		line 111 in file "i2c_driver_stusb4500.c"
  8117 ;; Parameters:    Size  Location     Type
  8118 ;;  device          1    wreg     const unsigned char 
  8119 ;;  reg             1   13[BANK0 ] const unsigned char 
  8120 ;;  data            1   14[BANK0 ] PTR unsigned char 
  8121 ;;		 -> write_sector@buffer(1), read_sector@buffer(1), enter_write_mode@buffer(1), stusb_negotiate@buffer(40), 
  8122 ;;		 -> reset@res(1), 
  8123 ;; Auto vars:     Size  Location     Type
  8124 ;;  device          1   17[BANK0 ] const unsigned char 
  8125 ;; Return value:  Size  Location     Type
  8126 ;;                  2   13[BANK0 ] int 
  8127 ;; Registers used:
  8128 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8129 ;; Tracked objects:
  8130 ;;		On entry : 0/0
  8131 ;;		On exit  : 0/0
  8132 ;;		Unchanged: 0/0
  8133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8134 ;;      Params:         0       2       0       0       0       0       0       0
  8135 ;;      Locals:         0       1       0       0       0       0       0       0
  8136 ;;      Temps:          0       2       0       0       0       0       0       0
  8137 ;;      Totals:         0       5       0       0       0       0       0       0
  8138 ;;Total ram usage:        5 bytes
  8139 ;; Hardware stack levels used:    1
  8140 ;; Hardware stack levels required when called:    5
  8141 ;; This function calls:
  8142 ;;		_i2c_master_read
  8143 ;; This function is called by:
  8144 ;;		_reset
  8145 ;;		_stusb_negotiate
  8146 ;;		_enter_write_mode
  8147 ;;		_write_sector
  8148 ;;		_read_sector
  8149 ;; This function uses a non-reentrant model
  8150 ;;
  8151                           
  8152                           
  8153                           ;psect for function _i2c_master_read_u8
  8154  0000'                    _i2c_master_read_u8:	
  8155                           
  8156                           ;incstack = 0
  8157                           ; Regs used in _i2c_master_read_u8: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8158                           ;i2c_master_read_u8@device stored from wreg
  8159  0000' 0140               	movlb	0	; select bank0
  8160  0001' 0091'              	movwf	i2c_master_read_u8@device
  8161  0002'                    l2891:	
  8162                           
  8163                           ;i2c_driver_stusb4500.c: 112: return i2c_master_read(device, reg, data, 1);
  8164  0002' 080D'              	movf	i2c_master_read_u8@reg,w
  8165  0003' 008F'              	movwf	??_i2c_master_read_u8
  8166  0004' 080F'              	movf	??_i2c_master_read_u8,w
  8167  0005' 0084'              	movwf	i2c_master_read@reg
  8168  0006' 080E'              	movf	i2c_master_read_u8@data,w
  8169  0007' 0090'              	movwf	??_i2c_master_read_u8+1
  8170  0008' 0810'              	movf	??_i2c_master_read_u8+1,w
  8171  0009' 0085'              	movwf	i2c_master_read@buf
  8172  000A' 3001               	movlw	1
  8173  000B' 0086'              	movwf	i2c_master_read@len
  8174  000C' 3000               	movlw	0
  8175  000D' 0087'              	movwf	i2c_master_read@len+1
  8176  000E' 0811'              	movf	i2c_master_read_u8@device,w
  8177  000F' 3180' 2000' 3180'  	fcall	_i2c_master_read
  8178  0012' 0140               	movlb	0	; select bank0
  8179  0013' 0805'              	movf	?_i2c_master_read+1,w
  8180  0014' 008E'              	movwf	?_i2c_master_read_u8+1
  8181  0015' 0804'              	movf	?_i2c_master_read,w
  8182  0016' 008D'              	movwf	?_i2c_master_read_u8
  8183  0017'                    l717:	
  8184  0017' 0008               	return
  8185  0018'                    __end_of_i2c_master_read_u8:	
  8186                           
  8187                           	psect	text18
  8188  0000'                    __ptext18:	
  8189 ;; *************** function _i2c_master_read *****************
  8190 ;; Defined at:
  8191 ;;		line 88 in file "i2c_driver_stusb4500.c"
  8192 ;; Parameters:    Size  Location     Type
  8193 ;;  device          1    wreg     const unsigned char 
  8194 ;;  reg             1    4[BANK0 ] const unsigned char 
  8195 ;;  buf             1    5[BANK0 ] PTR void 
  8196 ;;		 -> nvm_read@sectors(40), write_sector@buffer(1), read_sector@buffer(1), enter_write_mode@buffer(1), 
  8197 ;;		 -> stusb_negotiate@header(2), stusb_negotiate@buffer(40), reset@res(1), 
  8198 ;;  len             2    6[BANK0 ] unsigned int 
  8199 ;; Auto vars:     Size  Location     Type
  8200 ;;  device          1    9[BANK0 ] const unsigned char 
  8201 ;;  ok              2   11[BANK0 ] int 
  8202 ;;  data            1   10[BANK0 ] PTR unsigned char 
  8203 ;;		 -> nvm_read@sectors(40), write_sector@buffer(1), read_sector@buffer(1), enter_write_mode@buffer(1), 
  8204 ;;		 -> stusb_negotiate@header(2), stusb_negotiate@buffer(40), reset@res(1), 
  8205 ;; Return value:  Size  Location     Type
  8206 ;;                  2    4[BANK0 ] int 
  8207 ;; Registers used:
  8208 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8209 ;; Tracked objects:
  8210 ;;		On entry : 0/0
  8211 ;;		On exit  : 0/0
  8212 ;;		Unchanged: 0/0
  8213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8214 ;;      Params:         0       4       0       0       0       0       0       0
  8215 ;;      Locals:         0       4       0       0       0       0       0       0
  8216 ;;      Temps:          0       1       0       0       0       0       0       0
  8217 ;;      Totals:         0       9       0       0       0       0       0       0
  8218 ;;Total ram usage:        9 bytes
  8219 ;; Hardware stack levels used:    1
  8220 ;; Hardware stack levels required when called:    4
  8221 ;; This function calls:
  8222 ;;		_i2c_master_receive_byte
  8223 ;;		_i2c_master_repeat_start
  8224 ;;		_i2c_master_send_byte
  8225 ;;		_i2c_master_start
  8226 ;;		_i2c_master_stop
  8227 ;;		_i2c_master_wait
  8228 ;; This function is called by:
  8229 ;;		_stusb_negotiate
  8230 ;;		_i2c_master_read_u8
  8231 ;;		_i2c_master_read_u16
  8232 ;;		_i2c_master_read_u32
  8233 ;;		_read_sector
  8234 ;; This function uses a non-reentrant model
  8235 ;;
  8236                           
  8237                           
  8238                           ;psect for function _i2c_master_read
  8239  0000'                    _i2c_master_read:	
  8240                           
  8241                           ;incstack = 0
  8242                           ; Regs used in _i2c_master_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8243                           ;i2c_master_read@device stored from wreg
  8244  0000' 0140               	movlb	0	; select bank0
  8245  0001' 0089'              	movwf	i2c_master_read@device
  8246  0002'                    l2797:	
  8247                           
  8248                           ;i2c_driver_stusb4500.c: 90: uint8_t* data = (uint8_t*)buf;
  8249  0002' 0805'              	movf	i2c_master_read@buf,w
  8250  0003' 0088'              	movwf	??_i2c_master_read
  8251  0004' 0808'              	movf	??_i2c_master_read,w
  8252  0005' 008A'              	movwf	i2c_master_read@data
  8253  0006'                    l2799:	
  8254                           
  8255                           ;i2c_driver_stusb4500.c: 91: if (!data) return -1;
  8256  0006' 080A'              	movf	i2c_master_read@data,w
  8257  0007' 1D03               	btfss	3,2
  8258  0008' 2800'              	goto	u1971
  8259  0009' 2800'              	goto	u1970
  8260  000A'                    u1971:	
  8261  000A' 2800'              	goto	l2805
  8262  000B'                    u1970:	
  8263  000B'                    l2801:	
  8264  000B' 30FF               	movlw	255
  8265  000C' 0084'              	movwf	?_i2c_master_read
  8266  000D' 30FF               	movlw	255
  8267  000E' 0085'              	movwf	?_i2c_master_read+1
  8268  000F' 2800'              	goto	l706
  8269  0010'                    l2805:	
  8270  0010'                    l2807:	
  8271                           
  8272                           ;i2c_driver_stusb4500.c: 95: i2c_master_wait();
  8273  0010' 3180' 2000' 3180'  	fcall	_i2c_master_wait
  8274  0013'                    l2809:	
  8275                           
  8276                           ;i2c_driver_stusb4500.c: 96: i2c_master_start();
  8277  0013' 3180' 2000' 3180'  	fcall	_i2c_master_start
  8278  0016'                    l2811:	
  8279  0016'                    l2813:	
  8280                           ;i2c_driver_stusb4500.c: 97: if (ok == 0) ok = i2c_master_send_byte((device << 1) | 0);
  8281                           
  8282  0016' 0140               	movlb	0	; select bank0
  8283  0017' 3509'              	lslf	i2c_master_read@device,w
  8284  0018' 3180' 2000' 3180'  	fcall	_i2c_master_send_byte
  8285  001B' 0140               	movlb	0	; select bank0
  8286  001C' 0801'              	movf	?_i2c_master_send_byte+1,w
  8287  001D' 008C'              	movwf	i2c_master_read@ok+1
  8288  001E' 0800'              	movf	?_i2c_master_send_byte,w
  8289  001F' 008B'              	movwf	i2c_master_read@ok
  8290  0020'                    l2815:	
  8291                           
  8292                           ;i2c_driver_stusb4500.c: 98: if (ok == 0) ok = i2c_master_send_byte(reg);
  8293  0020' 080B'              	movf	i2c_master_read@ok,w
  8294  0021' 040C'              	iorwf	i2c_master_read@ok+1,w
  8295  0022' 1D03               	btfss	3,2
  8296  0023' 2800'              	goto	u1981
  8297  0024' 2800'              	goto	u1980
  8298  0025'                    u1981:	
  8299  0025' 2800'              	goto	l2819
  8300  0026'                    u1980:	
  8301  0026'                    l2817:	
  8302  0026' 0804'              	movf	i2c_master_read@reg,w
  8303  0027' 3180' 2000' 3180'  	fcall	_i2c_master_send_byte
  8304  002A' 0140               	movlb	0	; select bank0
  8305  002B' 0801'              	movf	?_i2c_master_send_byte+1,w
  8306  002C' 008C'              	movwf	i2c_master_read@ok+1
  8307  002D' 0800'              	movf	?_i2c_master_send_byte,w
  8308  002E' 008B'              	movwf	i2c_master_read@ok
  8309  002F'                    l2819:	
  8310                           
  8311                           ;i2c_driver_stusb4500.c: 99: if (ok == 0) i2c_master_repeat_start();
  8312  002F' 080B'              	movf	i2c_master_read@ok,w
  8313  0030' 040C'              	iorwf	i2c_master_read@ok+1,w
  8314  0031' 1D03               	btfss	3,2
  8315  0032' 2800'              	goto	u1991
  8316  0033' 2800'              	goto	u1990
  8317  0034'                    u1991:	
  8318  0034' 2800'              	goto	l2823
  8319  0035'                    u1990:	
  8320  0035'                    l2821:	
  8321  0035' 3180' 2000' 3180'  	fcall	_i2c_master_repeat_start
  8322  0038'                    l2823:	
  8323                           
  8324                           ;i2c_driver_stusb4500.c: 100: if (ok == 0) ok = i2c_master_send_byte((device << 1) | 1);
  8325  0038' 0140               	movlb	0	; select bank0
  8326  0039' 080B'              	movf	i2c_master_read@ok,w
  8327  003A' 040C'              	iorwf	i2c_master_read@ok+1,w
  8328  003B' 1D03               	btfss	3,2
  8329  003C' 2800'              	goto	u2001
  8330  003D' 2800'              	goto	u2000
  8331  003E'                    u2001:	
  8332  003E' 2800'              	goto	l2827
  8333  003F'                    u2000:	
  8334  003F'                    l2825:	
  8335  003F' 1403               	setc
  8336  0040' 0D09'              	rlf	i2c_master_read@device,w
  8337  0041' 3180' 2000' 3180'  	fcall	_i2c_master_send_byte
  8338  0044' 0140               	movlb	0	; select bank0
  8339  0045' 0801'              	movf	?_i2c_master_send_byte+1,w
  8340  0046' 008C'              	movwf	i2c_master_read@ok+1
  8341  0047' 0800'              	movf	?_i2c_master_send_byte,w
  8342  0048' 008B'              	movwf	i2c_master_read@ok
  8343  0049'                    l2827:	
  8344                           
  8345                           ;i2c_driver_stusb4500.c: 101: if (ok == 0) {
  8346  0049' 080B'              	movf	i2c_master_read@ok,w
  8347  004A' 040C'              	iorwf	i2c_master_read@ok+1,w
  8348  004B' 1D03               	btfss	3,2
  8349  004C' 2800'              	goto	u2011
  8350  004D' 2800'              	goto	u2010
  8351  004E'                    u2011:	
  8352  004E' 2800'              	goto	l2837
  8353  004F'                    u2010:	
  8354  004F' 2800'              	goto	l2835
  8355  0050'                    l2831:	
  8356                           
  8357                           ;i2c_driver_stusb4500.c: 103: *data++ = i2c_master_receive_byte(len ? 0 : 1);
  8358  0050' 0806'              	movf	i2c_master_read@len,w
  8359  0051' 0407'              	iorwf	i2c_master_read@len+1,w
  8360  0052' 1903               	btfsc	3,2
  8361  0053' 2800'              	goto	u2021
  8362  0054' 2800'              	goto	u2020
  8363  0055'                    u2021:	
  8364  0055' 3001               	movlw	1
  8365  0056' 2800'              	goto	u2030
  8366  0057'                    u2020:	
  8367  0057' 3000               	movlw	0
  8368  0058'                    u2030:	
  8369  0058' 3180' 2000' 3180'  	fcall	_i2c_master_receive_byte
  8370  005B' 0140               	movlb	0	; select bank0
  8371  005C' 0088'              	movwf	??_i2c_master_read
  8372  005D' 080A'              	movf	i2c_master_read@data,w
  8373  005E' 0086               	movwf	6
  8374  005F' 0187               	clrf	7
  8375  0060' 0808'              	movf	??_i2c_master_read,w
  8376  0061' 0081               	movwf	1
  8377  0062'                    l2833:	
  8378  0062' 3001               	movlw	1
  8379  0063' 0088'              	movwf	??_i2c_master_read
  8380  0064' 0808'              	movf	??_i2c_master_read,w
  8381  0065' 078A'              	addwf	i2c_master_read@data,f
  8382  0066'                    l2835:	
  8383  0066' 3001               	movlw	1
  8384  0067' 0286'              	subwf	i2c_master_read@len,f
  8385  0068' 3000               	movlw	0
  8386  0069' 3B87'              	subwfb	i2c_master_read@len+1,f
  8387  006A' 0A06'              	incf	i2c_master_read@len,w
  8388  006B' 1D03               	skipz
  8389  006C' 2800'              	goto	u2041
  8390  006D' 0A07'              	incf	i2c_master_read@len+1,w
  8391  006E' 1D03               	btfss	3,2
  8392  006F' 2800'              	goto	u2041
  8393  0070' 2800'              	goto	u2040
  8394  0071'                    u2041:	
  8395  0071' 2800'              	goto	l2831
  8396  0072'                    u2040:	
  8397  0072'                    l2837:	
  8398                           
  8399                           ;i2c_driver_stusb4500.c: 104: };i2c_driver_stusb4500.c: 105: };i2c_driver_stusb4500.c: 1
      +                          06: i2c_master_stop();
  8400  0072' 3180' 2000' 3180'  	fcall	_i2c_master_stop
  8401  0075'                    l2839:	
  8402                           
  8403                           ;i2c_driver_stusb4500.c: 108: return ok;
  8404  0075' 0140               	movlb	0	; select bank0
  8405  0076' 080C'              	movf	i2c_master_read@ok+1,w
  8406  0077' 0085'              	movwf	?_i2c_master_read+1
  8407  0078' 080B'              	movf	i2c_master_read@ok,w
  8408  0079' 0084'              	movwf	?_i2c_master_read
  8409  007A'                    l706:	
  8410  007A' 0008               	return
  8411  007B'                    __end_of_i2c_master_read:	
  8412                           
  8413                           	psect	text19
  8414  0000'                    __ptext19:	
  8415 ;; *************** function _i2c_master_stop *****************
  8416 ;; Defined at:
  8417 ;;		line 22 in file "i2c_driver_stusb4500.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;		None
  8420 ;; Auto vars:     Size  Location     Type
  8421 ;;		None
  8422 ;; Return value:  Size  Location     Type
  8423 ;;                  1    wreg      void 
  8424 ;; Registers used:
  8425 ;;		wreg, status,2, status,0, pclath, cstack
  8426 ;; Tracked objects:
  8427 ;;		On entry : 0/0
  8428 ;;		On exit  : 0/0
  8429 ;;		Unchanged: 0/0
  8430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8431 ;;      Params:         0       0       0       0       0       0       0       0
  8432 ;;      Locals:         0       0       0       0       0       0       0       0
  8433 ;;      Temps:          0       0       0       0       0       0       0       0
  8434 ;;      Totals:         0       0       0       0       0       0       0       0
  8435 ;;Total ram usage:        0 bytes
  8436 ;; Hardware stack levels used:    1
  8437 ;; Hardware stack levels required when called:    3
  8438 ;; This function calls:
  8439 ;;		_i2c_master_wait
  8440 ;; This function is called by:
  8441 ;;		_i2c_master_write
  8442 ;;		_i2c_master_read
  8443 ;; This function uses a non-reentrant model
  8444 ;;
  8445                           
  8446                           
  8447                           ;psect for function _i2c_master_stop
  8448  0000'                    _i2c_master_stop:	
  8449  0000'                    l2763:	
  8450                           ;incstack = 0
  8451                           ; Regs used in _i2c_master_stop: [wreg+status,2+status,0+pclath+cstack]
  8452                           
  8453                           
  8454                           ;i2c_driver_stusb4500.c: 23: SSP1CON2bits.PEN = 1;
  8455  0000' 0143               	movlb	3	; select bank3
  8456  0001' 1511               	bsf	17,2	;volatile
  8457  0002'                    l2765:	
  8458                           
  8459                           ;i2c_driver_stusb4500.c: 24: i2c_master_wait();
  8460  0002' 3180' 2000' 3180'  	fcall	_i2c_master_wait
  8461  0005'                    l669:	
  8462  0005' 0008               	return
  8463  0006'                    __end_of_i2c_master_stop:	
  8464                           
  8465                           	psect	text20
  8466  0000'                    __ptext20:	
  8467 ;; *************** function _i2c_master_start *****************
  8468 ;; Defined at:
  8469 ;;		line 12 in file "i2c_driver_stusb4500.c"
  8470 ;; Parameters:    Size  Location     Type
  8471 ;;		None
  8472 ;; Auto vars:     Size  Location     Type
  8473 ;;		None
  8474 ;; Return value:  Size  Location     Type
  8475 ;;                  1    wreg      void 
  8476 ;; Registers used:
  8477 ;;		wreg, status,2, status,0, pclath, cstack
  8478 ;; Tracked objects:
  8479 ;;		On entry : 0/0
  8480 ;;		On exit  : 0/0
  8481 ;;		Unchanged: 0/0
  8482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8483 ;;      Params:         0       0       0       0       0       0       0       0
  8484 ;;      Locals:         0       0       0       0       0       0       0       0
  8485 ;;      Temps:          0       0       0       0       0       0       0       0
  8486 ;;      Totals:         0       0       0       0       0       0       0       0
  8487 ;;Total ram usage:        0 bytes
  8488 ;; Hardware stack levels used:    1
  8489 ;; Hardware stack levels required when called:    3
  8490 ;; This function calls:
  8491 ;;		_i2c_master_wait
  8492 ;; This function is called by:
  8493 ;;		_i2c_master_write
  8494 ;;		_i2c_master_read
  8495 ;; This function uses a non-reentrant model
  8496 ;;
  8497                           
  8498                           
  8499                           ;psect for function _i2c_master_start
  8500  0000'                    _i2c_master_start:	
  8501  0000'                    l2755:	
  8502                           ;incstack = 0
  8503                           ; Regs used in _i2c_master_start: [wreg+status,2+status,0+pclath+cstack]
  8504                           
  8505                           
  8506                           ;i2c_driver_stusb4500.c: 13: SSP1CON2bits.SEN = 1;
  8507  0000' 0143               	movlb	3	; select bank3
  8508  0001' 1411               	bsf	17,0	;volatile
  8509  0002'                    l2757:	
  8510                           
  8511                           ;i2c_driver_stusb4500.c: 14: i2c_master_wait();
  8512  0002' 3180' 2000' 3180'  	fcall	_i2c_master_wait
  8513  0005'                    l663:	
  8514  0005' 0008               	return
  8515  0006'                    __end_of_i2c_master_start:	
  8516                           
  8517                           	psect	text21
  8518  0000'                    __ptext21:	
  8519 ;; *************** function _i2c_master_send_byte *****************
  8520 ;; Defined at:
  8521 ;;		line 27 in file "i2c_driver_stusb4500.c"
  8522 ;; Parameters:    Size  Location     Type
  8523 ;;  data            1    wreg     const unsigned char 
  8524 ;; Auto vars:     Size  Location     Type
  8525 ;;  data            1    3[BANK0 ] const unsigned char 
  8526 ;; Return value:  Size  Location     Type
  8527 ;;                  2    0[BANK0 ] int 
  8528 ;; Registers used:
  8529 ;;		wreg, status,2, status,0, pclath, cstack
  8530 ;; Tracked objects:
  8531 ;;		On entry : 0/0
  8532 ;;		On exit  : 0/0
  8533 ;;		Unchanged: 0/0
  8534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8535 ;;      Params:         0       3       0       0       0       0       0       0
  8536 ;;      Locals:         0       1       0       0       0       0       0       0
  8537 ;;      Temps:          0       0       0       0       0       0       0       0
  8538 ;;      Totals:         0       4       0       0       0       0       0       0
  8539 ;;Total ram usage:        4 bytes
  8540 ;; Hardware stack levels used:    1
  8541 ;; Hardware stack levels required when called:    3
  8542 ;; This function calls:
  8543 ;;		_i2c_master_wait
  8544 ;; This function is called by:
  8545 ;;		_i2c_master_write
  8546 ;;		_i2c_master_read
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           
  8551                           ;psect for function _i2c_master_send_byte
  8552  0000'                    _i2c_master_send_byte:	
  8553                           
  8554                           ;incstack = 0
  8555                           ; Regs used in _i2c_master_send_byte: [wreg+status,2+status,0+pclath+cstack]
  8556                           ;i2c_master_send_byte@data stored from wreg
  8557  0000' 0140               	movlb	0	; select bank0
  8558  0001' 0083'              	movwf	i2c_master_send_byte@data
  8559  0002'                    l2767:	
  8560                           
  8561                           ;i2c_driver_stusb4500.c: 28: SSP1BUF = data;
  8562  0002' 0803'              	movf	i2c_master_send_byte@data,w
  8563  0003' 0143               	movlb	3	; select bank3
  8564  0004' 008C               	movwf	12	;volatile
  8565  0005'                    l2769:	
  8566                           
  8567                           ;i2c_driver_stusb4500.c: 29: i2c_master_wait();
  8568  0005' 3180' 2000' 3180'  	fcall	_i2c_master_wait
  8569  0008'                    l2771:	
  8570                           
  8571                           ;i2c_driver_stusb4500.c: 31: return SSP1CON2bits.ACKSTAT ? -1 : 0;
  8572  0008' 0143               	movlb	3	; select bank3
  8573  0009' 1B11               	btfsc	17,6	;volatile
  8574  000A' 2800'              	goto	u1961
  8575  000B' 2800'              	goto	u1960
  8576  000C'                    u1961:	
  8577  000C' 2800'              	goto	l2775
  8578  000D'                    u1960:	
  8579  000D'                    l2773:	
  8580  000D' 0140               	movlb	0	; select bank0
  8581  000E' 0180'              	clrf	?_i2c_master_send_byte
  8582  000F' 0181'              	clrf	?_i2c_master_send_byte+1
  8583  0010' 2800'              	goto	l676
  8584  0011'                    l2775:	
  8585  0011' 30FF               	movlw	255
  8586  0012' 0140               	movlb	0	; select bank0
  8587  0013' 0080'              	movwf	?_i2c_master_send_byte
  8588  0014' 30FF               	movlw	255
  8589  0015' 0081'              	movwf	?_i2c_master_send_byte+1
  8590  0016'                    l676:	
  8591  0016' 0008               	return
  8592  0017'                    __end_of_i2c_master_send_byte:	
  8593                           
  8594                           	psect	text22
  8595  0000'                    __ptext22:	
  8596 ;; *************** function _i2c_master_repeat_start *****************
  8597 ;; Defined at:
  8598 ;;		line 17 in file "i2c_driver_stusb4500.c"
  8599 ;; Parameters:    Size  Location     Type
  8600 ;;		None
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;		None
  8603 ;; Return value:  Size  Location     Type
  8604 ;;                  1    wreg      void 
  8605 ;; Registers used:
  8606 ;;		wreg, status,2, status,0, pclath, cstack
  8607 ;; Tracked objects:
  8608 ;;		On entry : 0/0
  8609 ;;		On exit  : 0/0
  8610 ;;		Unchanged: 0/0
  8611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8612 ;;      Params:         0       0       0       0       0       0       0       0
  8613 ;;      Locals:         0       0       0       0       0       0       0       0
  8614 ;;      Temps:          0       0       0       0       0       0       0       0
  8615 ;;      Totals:         0       0       0       0       0       0       0       0
  8616 ;;Total ram usage:        0 bytes
  8617 ;; Hardware stack levels used:    1
  8618 ;; Hardware stack levels required when called:    3
  8619 ;; This function calls:
  8620 ;;		_i2c_master_wait
  8621 ;; This function is called by:
  8622 ;;		_i2c_master_read
  8623 ;; This function uses a non-reentrant model
  8624 ;;
  8625                           
  8626                           
  8627                           ;psect for function _i2c_master_repeat_start
  8628  0000'                    _i2c_master_repeat_start:	
  8629  0000'                    l2759:	
  8630                           ;incstack = 0
  8631                           ; Regs used in _i2c_master_repeat_start: [wreg+status,2+status,0+pclath+cstack]
  8632                           
  8633                           
  8634                           ;i2c_driver_stusb4500.c: 18: SSP1CON2bits.RSEN = 1;
  8635  0000' 0143               	movlb	3	; select bank3
  8636  0001' 1491               	bsf	17,1	;volatile
  8637  0002'                    l2761:	
  8638                           
  8639                           ;i2c_driver_stusb4500.c: 19: i2c_master_wait();
  8640  0002' 3180' 2000' 3180'  	fcall	_i2c_master_wait
  8641  0005'                    l666:	
  8642  0005' 0008               	return
  8643  0006'                    __end_of_i2c_master_repeat_start:	
  8644                           
  8645                           	psect	text23
  8646  0000'                    __ptext23:	
  8647 ;; *************** function _i2c_master_receive_byte *****************
  8648 ;; Defined at:
  8649 ;;		line 34 in file "i2c_driver_stusb4500.c"
  8650 ;; Parameters:    Size  Location     Type
  8651 ;;  ack             1    wreg     const unsigned char 
  8652 ;; Auto vars:     Size  Location     Type
  8653 ;;  ack             1    1[BANK0 ] const unsigned char 
  8654 ;;  data            1    2[BANK0 ] unsigned char 
  8655 ;; Return value:  Size  Location     Type
  8656 ;;                  1    wreg      unsigned char 
  8657 ;; Registers used:
  8658 ;;		wreg, status,2, status,0, pclath, cstack
  8659 ;; Tracked objects:
  8660 ;;		On entry : 0/0
  8661 ;;		On exit  : 0/0
  8662 ;;		Unchanged: 0/0
  8663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8664 ;;      Params:         0       0       0       0       0       0       0       0
  8665 ;;      Locals:         0       2       0       0       0       0       0       0
  8666 ;;      Temps:          0       1       0       0       0       0       0       0
  8667 ;;      Totals:         0       3       0       0       0       0       0       0
  8668 ;;Total ram usage:        3 bytes
  8669 ;; Hardware stack levels used:    1
  8670 ;; Hardware stack levels required when called:    3
  8671 ;; This function calls:
  8672 ;;		_i2c_master_wait
  8673 ;; This function is called by:
  8674 ;;		_i2c_master_read
  8675 ;; This function uses a non-reentrant model
  8676 ;;
  8677                           
  8678                           
  8679                           ;psect for function _i2c_master_receive_byte
  8680  0000'                    _i2c_master_receive_byte:	
  8681                           
  8682                           ;incstack = 0
  8683                           ; Regs used in _i2c_master_receive_byte: [wreg+status,2+status,0+pclath+cstack]
  8684                           ;i2c_master_receive_byte@ack stored from wreg
  8685  0000' 0140               	movlb	0	; select bank0
  8686  0001' 0081'              	movwf	i2c_master_receive_byte@ack
  8687  0002'                    l2779:	
  8688                           
  8689                           ;i2c_driver_stusb4500.c: 35: SSP1CON2bits.RCEN = 1;
  8690  0002' 0143               	movlb	3	; select bank3
  8691  0003' 1591               	bsf	17,3	;volatile
  8692  0004'                    l2781:	
  8693                           
  8694                           ;i2c_driver_stusb4500.c: 36: i2c_master_wait();
  8695  0004' 3180' 2000' 3180'  	fcall	_i2c_master_wait
  8696  0007'                    l2783:	
  8697                           
  8698                           ;i2c_driver_stusb4500.c: 37: uint8_t data = SSP1BUF;
  8699  0007' 0143               	movlb	3	; select bank3
  8700  0008' 080C               	movf	12,w	;volatile
  8701  0009' 0140               	movlb	0	; select bank0
  8702  000A' 0080'              	movwf	??_i2c_master_receive_byte
  8703  000B' 0800'              	movf	??_i2c_master_receive_byte,w
  8704  000C' 0082'              	movwf	i2c_master_receive_byte@data
  8705  000D'                    l2785:	
  8706                           
  8707                           ;i2c_driver_stusb4500.c: 38: i2c_master_wait();
  8708  000D' 3180' 2000' 3180'  	fcall	_i2c_master_wait
  8709  0010'                    l2787:	
  8710                           
  8711                           ;i2c_driver_stusb4500.c: 39: SSP1CON2bits.ACKDT = ack;
  8712  0010' 0140               	movlb	0	; select bank0
  8713  0011' 0C01'              	rrf	i2c_master_receive_byte@ack,w
  8714  0012' 0143               	movlb	3	; select bank3
  8715  0013' 1C03               	skipc
  8716  0014' 1291               	bcf	17,5	;volatile
  8717  0015' 1803               	skipnc
  8718  0016' 1691               	bsf	17,5	;volatile
  8719  0017'                    l2789:	
  8720                           
  8721                           ;i2c_driver_stusb4500.c: 40: SSP1CON2bits.ACKEN = 1;
  8722  0017' 1611               	bsf	17,4	;volatile
  8723  0018'                    l2791:	
  8724                           
  8725                           ;i2c_driver_stusb4500.c: 41: i2c_master_wait();
  8726  0018' 3180' 2000' 3180'  	fcall	_i2c_master_wait
  8727  001B'                    l2793:	
  8728                           
  8729                           ;i2c_driver_stusb4500.c: 43: return data;
  8730  001B' 0140               	movlb	0	; select bank0
  8731  001C' 0802'              	movf	i2c_master_receive_byte@data,w
  8732  001D'                    l679:	
  8733  001D' 0008               	return
  8734  001E'                    __end_of_i2c_master_receive_byte:	
  8735                           
  8736                           	psect	text24
  8737  0000'                    __ptext24:	
  8738 ;; *************** function _i2c_master_wait *****************
  8739 ;; Defined at:
  8740 ;;		line 7 in file "i2c_driver_stusb4500.c"
  8741 ;; Parameters:    Size  Location     Type
  8742 ;;		None
  8743 ;; Auto vars:     Size  Location     Type
  8744 ;;		None
  8745 ;; Return value:  Size  Location     Type
  8746 ;;                  1    wreg      void 
  8747 ;; Registers used:
  8748 ;;		wreg, status,2
  8749 ;; Tracked objects:
  8750 ;;		On entry : 0/0
  8751 ;;		On exit  : 0/0
  8752 ;;		Unchanged: 0/0
  8753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8754 ;;      Params:         0       0       0       0       0       0       0       0
  8755 ;;      Locals:         0       0       0       0       0       0       0       0
  8756 ;;      Temps:          0       0       0       0       0       0       0       0
  8757 ;;      Totals:         0       0       0       0       0       0       0       0
  8758 ;;Total ram usage:        0 bytes
  8759 ;; Hardware stack levels used:    1
  8760 ;; Hardware stack levels required when called:    2
  8761 ;; This function calls:
  8762 ;;		Nothing
  8763 ;; This function is called by:
  8764 ;;		_i2c_master_start
  8765 ;;		_i2c_master_repeat_start
  8766 ;;		_i2c_master_stop
  8767 ;;		_i2c_master_send_byte
  8768 ;;		_i2c_master_receive_byte
  8769 ;;		_i2c_master_write
  8770 ;;		_i2c_master_read
  8771 ;; This function uses a non-reentrant model
  8772 ;;
  8773                           
  8774                           
  8775                           ;psect for function _i2c_master_wait
  8776  0000'                    _i2c_master_wait:	
  8777  0000'                    l2751:	
  8778                           ;incstack = 0
  8779                           ; Regs used in _i2c_master_wait: [wreg+status,2]
  8780                           
  8781  0000'                    l657:	
  8782                           ;i2c_driver_stusb4500.c: 9: ;
  8783                           
  8784  0000' 0143               	movlb	3	; select bank3
  8785  0001' 190F               	btfsc	15,2	;volatile
  8786  0002' 2800'              	goto	u1941
  8787  0003' 2800'              	goto	u1940
  8788  0004'                    u1941:	
  8789  0004' 2800'              	goto	l657
  8790  0005'                    u1940:	
  8791  0005'                    l2753:	
  8792  0005' 0811               	movf	17,w	;volatile
  8793  0006' 391F               	andlw	31
  8794  0007' 1D03               	btfss	3,2
  8795  0008' 2800'              	goto	u1951
  8796  0009' 2800'              	goto	u1950
  8797  000A'                    u1951:	
  8798  000A' 2800'              	goto	l657
  8799  000B'                    u1950:	
  8800  000B'                    l660:	
  8801  000B' 0008               	return
  8802  000C'                    __end_of_i2c_master_wait:	
  8803                           
  8804                           	psect	text25
  8805  0000'                    __ptext25:	
  8806 ;; *************** function _led_modes *****************
  8807 ;; Defined at:
  8808 ;;		line 156 in file "LED_INTERFACE.c"
  8809 ;; Parameters:    Size  Location     Type
  8810 ;;		None
  8811 ;; Auto vars:     Size  Location     Type
  8812 ;;		None
  8813 ;; Return value:  Size  Location     Type
  8814 ;;                  1    wreg      void 
  8815 ;; Registers used:
  8816 ;;		wreg, status,2, status,0, pclath, cstack
  8817 ;; Tracked objects:
  8818 ;;		On entry : 0/0
  8819 ;;		On exit  : 0/0
  8820 ;;		Unchanged: 0/0
  8821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8822 ;;      Params:         0       0       0       0       0       0       0       0
  8823 ;;      Locals:         0       0       0       0       0       0       0       0
  8824 ;;      Temps:          0       0       0       0       0       0       0       0
  8825 ;;      Totals:         0       0       0       0       0       0       0       0
  8826 ;;Total ram usage:        0 bytes
  8827 ;; Hardware stack levels used:    1
  8828 ;; Hardware stack levels required when called:    5
  8829 ;; This function calls:
  8830 ;;		_RGB_fade
  8831 ;;		_battery_fade
  8832 ;;		_flash_led
  8833 ;; This function is called by:
  8834 ;;		_main
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           
  8839                           ;psect for function _led_modes
  8840  0000'                    _led_modes:	
  8841  0000'                    l3759:	
  8842                           ;incstack = 0
  8843                           ; Regs used in _led_modes: [wreg+status,2+status,0+pclath+cstack]
  8844                           
  8845                           
  8846                           ;LED_INTERFACE.c: 158: if(mode == 0) {
  8847  0000' 0140               	movlb	0	; select bank0
  8848  0001' 0800'              	movf	_mode,w
  8849  0002' 1D03               	btfss	3,2
  8850  0003' 2800'              	goto	u3401
  8851  0004' 2800'              	goto	u3400
  8852  0005'                    u3401:	
  8853  0005' 2800'              	goto	l3763
  8854  0006'                    u3400:	
  8855  0006'                    l3761:	
  8856                           
  8857                           ;LED_INTERFACE.c: 159: PWM3DCH = 0;
  8858  0006' 0146               	movlb	6	; select bank6
  8859  0007' 0195               	clrf	21	;volatile
  8860                           
  8861                           ;LED_INTERFACE.c: 160: PWM4DCH = 0;
  8862  0008' 0199               	clrf	25	;volatile
  8863                           
  8864                           ;LED_INTERFACE.c: 161: PWM5DCH = 0;
  8865  0009' 019D               	clrf	29	;volatile
  8866                           
  8867                           ;LED_INTERFACE.c: 162: }
  8868  000A' 2800'              	goto	l543
  8869  000B'                    l3763:	
  8870                           
  8871                           ;LED_INTERFACE.c: 163: else if(mode == 1) {
  8872  000B' 0300'              	decf	_mode,w
  8873  000C' 1D03               	btfss	3,2
  8874  000D' 2800'              	goto	u3411
  8875  000E' 2800'              	goto	u3410
  8876  000F'                    u3411:	
  8877  000F' 2800'              	goto	l3767
  8878  0010'                    u3410:	
  8879  0010'                    l3765:	
  8880                           
  8881                           ;LED_INTERFACE.c: 164: RGB_fade();
  8882  0010' 3180' 2000' 3180'  	fcall	_RGB_fade
  8883                           
  8884                           ;LED_INTERFACE.c: 165: }
  8885  0013' 2800'              	goto	l543
  8886  0014'                    l3767:	
  8887                           
  8888                           ;LED_INTERFACE.c: 166: else if(mode == 2) {
  8889  0014' 3002               	movlw	2
  8890  0015' 0600'              	xorwf	_mode,w
  8891  0016' 1D03               	btfss	3,2
  8892  0017' 2800'              	goto	u3421
  8893  0018' 2800'              	goto	u3420
  8894  0019'                    u3421:	
  8895  0019' 2800'              	goto	l3771
  8896  001A'                    u3420:	
  8897  001A'                    l3769:	
  8898                           
  8899                           ;LED_INTERFACE.c: 167: battery_fade();
  8900  001A' 3180' 2000' 3180'  	fcall	_battery_fade
  8901                           
  8902                           ;LED_INTERFACE.c: 168: }
  8903  001D' 2800'              	goto	l543
  8904  001E'                    l3771:	
  8905                           
  8906                           ;LED_INTERFACE.c: 169: else if(mode == 3) {
  8907  001E' 3003               	movlw	3
  8908  001F' 0600'              	xorwf	_mode,w
  8909  0020' 1D03               	btfss	3,2
  8910  0021' 2800'              	goto	u3431
  8911  0022' 2800'              	goto	u3430
  8912  0023'                    u3431:	
  8913  0023' 2800'              	goto	l3775
  8914  0024'                    u3430:	
  8915  0024'                    l3773:	
  8916                           
  8917                           ;LED_INTERFACE.c: 170: flash_led();
  8918  0024' 3180' 2000' 3180'  	fcall	_flash_led
  8919                           
  8920                           ;LED_INTERFACE.c: 171: }
  8921  0027' 2800'              	goto	l543
  8922  0028'                    l3775:	
  8923                           
  8924                           ;LED_INTERFACE.c: 172: else {;LED_INTERFACE.c: 173: mode = 0;
  8925  0028' 0180'              	clrf	_mode
  8926  0029'                    l543:	
  8927  0029' 0008               	return
  8928  002A'                    __end_of_led_modes:	
  8929                           
  8930                           	psect	text26
  8931  0000'                    __ptext26:	
  8932 ;; *************** function _flash_led *****************
  8933 ;; Defined at:
  8934 ;;		line 137 in file "LED_INTERFACE.c"
  8935 ;; Parameters:    Size  Location     Type
  8936 ;;		None
  8937 ;; Auto vars:     Size  Location     Type
  8938 ;;		None
  8939 ;; Return value:  Size  Location     Type
  8940 ;;                  1    wreg      void 
  8941 ;; Registers used:
  8942 ;;		wreg, status,2, status,0, pclath, cstack
  8943 ;; Tracked objects:
  8944 ;;		On entry : 0/0
  8945 ;;		On exit  : 0/0
  8946 ;;		Unchanged: 0/0
  8947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8948 ;;      Params:         0       0       0       0       0       0       0       0
  8949 ;;      Locals:         0       0       0       0       0       0       0       0
  8950 ;;      Temps:          0       1       0       0       0       0       0       0
  8951 ;;      Totals:         0       1       0       0       0       0       0       0
  8952 ;;Total ram usage:        1 bytes
  8953 ;; Hardware stack levels used:    1
  8954 ;; Hardware stack levels required when called:    3
  8955 ;; This function calls:
  8956 ;;		_get_time
  8957 ;;		_timer_diff
  8958 ;; This function is called by:
  8959 ;;		_led_modes
  8960 ;; This function uses a non-reentrant model
  8961 ;;
  8962                           
  8963                           
  8964                           ;psect for function _flash_led
  8965  0000'                    _flash_led:	
  8966  0000'                    l3219:	
  8967                           ;incstack = 0
  8968                           ; Regs used in _flash_led: [wreg+status,2+status,0+pclath+cstack]
  8969                           
  8970                           
  8971                           ;LED_INTERFACE.c: 138: if(timer_diff(flash_time) >= 50) {
  8972  0000' 0142               	movlb	2	; select bank2
  8973  0001' 0800'              	movf	(_flash_time+3)^(0+256),w
  8974  0002' 0140               	movlb	0	; select bank0
  8975  0003' 0083'              	movwf	timer_diff@t+3
  8976  0004' 0142               	movlb	2	; select bank2
  8977  0005' 0800'              	movf	(_flash_time+2)^(0+256),w
  8978  0006' 0140               	movlb	0	; select bank0
  8979  0007' 0082'              	movwf	timer_diff@t+2
  8980  0008' 0142               	movlb	2	; select bank2
  8981  0009' 0800'              	movf	(_flash_time+1)^(0+256),w
  8982  000A' 0140               	movlb	0	; select bank0
  8983  000B' 0081'              	movwf	timer_diff@t+1
  8984  000C' 0142               	movlb	2	; select bank2
  8985  000D' 0800'              	movf	_flash_time^(0+256),w
  8986  000E' 0140               	movlb	0	; select bank0
  8987  000F' 0080'              	movwf	timer_diff@t
  8988  0010' 3180' 2000' 3180'  	fcall	_timer_diff
  8989  0013' 0140               	movlb	0	; select bank0
  8990  0014' 0803'              	movf	?_timer_diff+3,w
  8991  0015' 1D03               	btfss	3,2
  8992  0016' 2800'              	goto	u2690
  8993  0017' 0802'              	movf	?_timer_diff+2,w
  8994  0018' 1D03               	btfss	3,2
  8995  0019' 2800'              	goto	u2690
  8996  001A' 0801'              	movf	?_timer_diff+1,w
  8997  001B' 1D03               	btfss	3,2
  8998  001C' 2800'              	goto	u2690
  8999  001D' 3032               	movlw	50
  9000  001E' 0200'              	subwf	?_timer_diff,w
  9001  001F' 1C03               	btfss	3,0
  9002  0020' 2800'              	goto	u2691
  9003  0021' 2800'              	goto	u2690
  9004  0022'                    u2691:	
  9005  0022' 2800'              	goto	l3225
  9006  0023'                    u2690:	
  9007  0023'                    l3221:	
  9008                           
  9009                           ;LED_INTERFACE.c: 139: flash_state = !flash_state;
  9010  0023' 0800'              	movf	_flash_state,w
  9011  0024' 1903               	btfsc	3,2
  9012  0025' 2800'              	goto	u2701
  9013  0026' 2800'              	goto	u2700
  9014  0027'                    u2701:	
  9015  0027' 3001               	movlw	1
  9016  0028' 2800'              	goto	u2710
  9017  0029'                    u2700:	
  9018  0029' 3000               	movlw	0
  9019  002A'                    u2710:	
  9020  002A' 0088'              	movwf	??_flash_led
  9021  002B' 0808'              	movf	??_flash_led,w
  9022  002C' 0080'              	movwf	_flash_state
  9023  002D'                    l3223:	
  9024                           
  9025                           ;LED_INTERFACE.c: 140: flash_time = get_time();
  9026  002D' 3180' 2000' 3180'  	fcall	_get_time
  9027  0030' 0140               	movlb	0	; select bank0
  9028  0031' 0803'              	movf	?_get_time+3,w
  9029  0032' 0142               	movlb	2	; select bank2
  9030  0033' 0080'              	movwf	(_flash_time+3)^(0+256)
  9031  0034' 0140               	movlb	0	; select bank0
  9032  0035' 0802'              	movf	?_get_time+2,w
  9033  0036' 0142               	movlb	2	; select bank2
  9034  0037' 0080'              	movwf	(_flash_time+2)^(0+256)
  9035  0038' 0140               	movlb	0	; select bank0
  9036  0039' 0801'              	movf	?_get_time+1,w
  9037  003A' 0142               	movlb	2	; select bank2
  9038  003B' 0080'              	movwf	(_flash_time+1)^(0+256)
  9039  003C' 0140               	movlb	0	; select bank0
  9040  003D' 0800'              	movf	?_get_time,w
  9041  003E' 0142               	movlb	2	; select bank2
  9042  003F' 0080'              	movwf	_flash_time^(0+256)
  9043  0040'                    l3225:	
  9044                           
  9045                           ;LED_INTERFACE.c: 141: };LED_INTERFACE.c: 142: if(flash_state) {
  9046  0040' 0140               	movlb	0	; select bank0
  9047  0041' 0800'              	movf	_flash_state,w
  9048  0042' 1903               	btfsc	3,2
  9049  0043' 2800'              	goto	u2721
  9050  0044' 2800'              	goto	u2720
  9051  0045'                    u2721:	
  9052  0045' 2800'              	goto	l3231
  9053  0046'                    u2720:	
  9054  0046'                    l3227:	
  9055                           
  9056                           ;LED_INTERFACE.c: 143: PWM3DCH = 0;
  9057  0046' 0146               	movlb	6	; select bank6
  9058  0047' 0195               	clrf	21	;volatile
  9059                           
  9060                           ;LED_INTERFACE.c: 144: PWM4DCH = 0;
  9061  0048' 0199               	clrf	25	;volatile
  9062  0049'                    l3229:	
  9063                           
  9064                           ;LED_INTERFACE.c: 145: PWM5DCH = 255;
  9065  0049' 30FF               	movlw	255
  9066  004A' 009D               	movwf	29	;volatile
  9067                           
  9068                           ;LED_INTERFACE.c: 146: }
  9069  004B' 2800'              	goto	l530
  9070  004C'                    l3231:	
  9071                           
  9072                           ;LED_INTERFACE.c: 147: else {;LED_INTERFACE.c: 148: PWM3DCH = 0;
  9073  004C' 0146               	movlb	6	; select bank6
  9074  004D' 0195               	clrf	21	;volatile
  9075                           
  9076                           ;LED_INTERFACE.c: 149: PWM4DCH = 0;
  9077  004E' 0199               	clrf	25	;volatile
  9078                           
  9079                           ;LED_INTERFACE.c: 150: PWM5DCH = 0;
  9080  004F' 019D               	clrf	29	;volatile
  9081  0050'                    l530:	
  9082  0050' 0008               	return
  9083  0051'                    __end_of_flash_led:	
  9084                           
  9085                           	psect	text27
  9086  0000'                    __ptext27:	
  9087 ;; *************** function _battery_fade *****************
  9088 ;; Defined at:
  9089 ;;		line 53 in file "LED_INTERFACE.c"
  9090 ;; Parameters:    Size  Location     Type
  9091 ;;		None
  9092 ;; Auto vars:     Size  Location     Type
  9093 ;;  v               1   31[BANK0 ] unsigned char 
  9094 ;;  battery_max     1    0        unsigned char 
  9095 ;;  battery_min     1    0        unsigned char 
  9096 ;; Return value:  Size  Location     Type
  9097 ;;                  1    wreg      void 
  9098 ;; Registers used:
  9099 ;;		wreg, status,2, status,0, pclath, cstack
  9100 ;; Tracked objects:
  9101 ;;		On entry : 0/0
  9102 ;;		On exit  : 0/0
  9103 ;;		Unchanged: 0/0
  9104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9105 ;;      Params:         0       0       0       0       0       0       0       0
  9106 ;;      Locals:         0       3       0       0       0       0       0       0
  9107 ;;      Temps:          0       6       0       0       0       0       0       0
  9108 ;;      Totals:         0       9       0       0       0       0       0       0
  9109 ;;Total ram usage:        9 bytes
  9110 ;; Hardware stack levels used:    1
  9111 ;; Hardware stack levels required when called:    4
  9112 ;; This function calls:
  9113 ;;		_Map
  9114 ;; This function is called by:
  9115 ;;		_led_modes
  9116 ;; This function uses a non-reentrant model
  9117 ;;
  9118                           
  9119                           
  9120                           ;psect for function _battery_fade
  9121  0000'                    _battery_fade:	
  9122  0000'                    l3185:	
  9123                           ;incstack = 0
  9124                           ; Regs used in _battery_fade: [wreg+status,2+status,0+pclath+cstack]
  9125                           
  9126                           
  9127                           ;LED_INTERFACE.c: 56: char v = BATTERY_VOLTAGE;
  9128  0000' 0140               	movlb	0	; select bank0
  9129  0001' 080D'              	movf	_BATTERY_VOLTAGE,w
  9130  0002' 0097'              	movwf	??_battery_fade
  9131  0003' 0817'              	movf	??_battery_fade,w
  9132  0004' 009F'              	movwf	battery_fade@v
  9133  0005'                    l3187:	
  9134  0005'                    l3189:	
  9135  0005'                    l3191:	
  9136                           
  9137                           ;LED_INTERFACE.c: 62: if (v > battery_max) {
  9138  0005' 3063               	movlw	99
  9139  0006' 021F'              	subwf	battery_fade@v,w
  9140  0007' 1C03               	skipc
  9141  0008' 2800'              	goto	u2661
  9142  0009' 2800'              	goto	u2660
  9143  000A'                    u2661:	
  9144  000A' 2800'              	goto	l3197
  9145  000B'                    u2660:	
  9146  000B'                    l3193:	
  9147                           
  9148                           ;LED_INTERFACE.c: 63: v = battery_max;
  9149  000B' 3062               	movlw	98
  9150  000C' 0097'              	movwf	??_battery_fade
  9151  000D' 0817'              	movf	??_battery_fade,w
  9152  000E' 009F'              	movwf	battery_fade@v
  9153  000F'                    l3197:	
  9154                           
  9155                           ;LED_INTERFACE.c: 67: };LED_INTERFACE.c: 69: v = Map(v, battery_min, battery_max, 0, 127
      +                          );
  9156  000F' 081F'              	movf	battery_fade@v,w
  9157  0010' 0097'              	movwf	??_battery_fade
  9158  0011' 0198'              	clrf	??_battery_fade+1
  9159  0012' 0817'              	movf	??_battery_fade,w
  9160  0013' 008F'              	movwf	Map@x
  9161  0014' 0818'              	movf	??_battery_fade+1,w
  9162  0015' 0090'              	movwf	Map@x+1
  9163  0016' 0191'              	clrf	Map@inMin
  9164  0017' 3062               	movlw	98
  9165  0018' 0099'              	movwf	??_battery_fade+2
  9166  0019' 0819'              	movf	??_battery_fade+2,w
  9167  001A' 0092'              	movwf	Map@inMax
  9168  001B' 0193'              	clrf	Map@outMin
  9169  001C' 307F               	movlw	127
  9170  001D' 009A'              	movwf	??_battery_fade+3
  9171  001E' 081A'              	movf	??_battery_fade+3,w
  9172  001F' 0094'              	movwf	Map@outMax
  9173  0020' 3180' 2000' 3180'  	fcall	_Map
  9174  0023' 0140               	movlb	0	; select bank0
  9175  0024' 009B'              	movwf	??_battery_fade+4
  9176  0025' 081B'              	movf	??_battery_fade+4,w
  9177  0026' 009F'              	movwf	battery_fade@v
  9178  0027'                    l3199:	
  9179                           
  9180                           ;LED_INTERFACE.c: 72: if (v <= 63) {
  9181  0027' 3040               	movlw	64
  9182  0028' 021F'              	subwf	battery_fade@v,w
  9183  0029' 1803               	skipnc
  9184  002A' 2800'              	goto	u2671
  9185  002B' 2800'              	goto	u2670
  9186  002C'                    u2671:	
  9187  002C' 2800'              	goto	l3209
  9188  002D'                    u2670:	
  9189  002D'                    l3201:	
  9190                           
  9191                           ;LED_INTERFACE.c: 73: v = Map(v, 0, 63, 0, 255);
  9192  002D' 081F'              	movf	battery_fade@v,w
  9193  002E' 0097'              	movwf	??_battery_fade
  9194  002F' 0198'              	clrf	??_battery_fade+1
  9195  0030' 0817'              	movf	??_battery_fade,w
  9196  0031' 008F'              	movwf	Map@x
  9197  0032' 0818'              	movf	??_battery_fade+1,w
  9198  0033' 0090'              	movwf	Map@x+1
  9199  0034' 0191'              	clrf	Map@inMin
  9200  0035' 303F               	movlw	63
  9201  0036' 0099'              	movwf	??_battery_fade+2
  9202  0037' 0819'              	movf	??_battery_fade+2,w
  9203  0038' 0092'              	movwf	Map@inMax
  9204  0039' 0193'              	clrf	Map@outMin
  9205  003A' 30FF               	movlw	255
  9206  003B' 009A'              	movwf	??_battery_fade+3
  9207  003C' 081A'              	movf	??_battery_fade+3,w
  9208  003D' 0094'              	movwf	Map@outMax
  9209  003E' 3180' 2000' 3180'  	fcall	_Map
  9210  0041' 0140               	movlb	0	; select bank0
  9211  0042' 009B'              	movwf	??_battery_fade+4
  9212  0043' 081B'              	movf	??_battery_fade+4,w
  9213  0044' 009F'              	movwf	battery_fade@v
  9214  0045'                    l3203:	
  9215                           
  9216                           ;LED_INTERFACE.c: 74: PWM3DCH = 0;
  9217  0045' 0146               	movlb	6	; select bank6
  9218  0046' 0195               	clrf	21	;volatile
  9219  0047'                    l3205:	
  9220                           
  9221                           ;LED_INTERFACE.c: 75: PWM4DCH = v;
  9222  0047' 0140               	movlb	0	; select bank0
  9223  0048' 081F'              	movf	battery_fade@v,w
  9224  0049' 0146               	movlb	6	; select bank6
  9225  004A' 0099               	movwf	25	;volatile
  9226  004B'                    l3207:	
  9227                           
  9228                           ;LED_INTERFACE.c: 76: PWM5DCH = 255;
  9229  004B' 30FF               	movlw	255
  9230  004C' 009D               	movwf	29	;volatile
  9231                           
  9232                           ;LED_INTERFACE.c: 77: }
  9233  004D' 2800'              	goto	l501
  9234  004E'                    l3209:	
  9235                           
  9236                           ;LED_INTERFACE.c: 79: else if (v >= 63) {
  9237  004E' 303F               	movlw	63
  9238  004F' 021F'              	subwf	battery_fade@v,w
  9239  0050' 1C03               	skipc
  9240  0051' 2800'              	goto	u2681
  9241  0052' 2800'              	goto	u2680
  9242  0053'                    u2681:	
  9243  0053' 2800'              	goto	l501
  9244  0054'                    u2680:	
  9245  0054'                    l3211:	
  9246                           
  9247                           ;LED_INTERFACE.c: 80: v = Map(v, 63, 127, 0, 255);
  9248  0054' 081F'              	movf	battery_fade@v,w
  9249  0055' 0097'              	movwf	??_battery_fade
  9250  0056' 0198'              	clrf	??_battery_fade+1
  9251  0057' 0817'              	movf	??_battery_fade,w
  9252  0058' 008F'              	movwf	Map@x
  9253  0059' 0818'              	movf	??_battery_fade+1,w
  9254  005A' 0090'              	movwf	Map@x+1
  9255  005B' 303F               	movlw	63
  9256  005C' 0099'              	movwf	??_battery_fade+2
  9257  005D' 0819'              	movf	??_battery_fade+2,w
  9258  005E' 0091'              	movwf	Map@inMin
  9259  005F' 307F               	movlw	127
  9260  0060' 009A'              	movwf	??_battery_fade+3
  9261  0061' 081A'              	movf	??_battery_fade+3,w
  9262  0062' 0092'              	movwf	Map@inMax
  9263  0063' 0193'              	clrf	Map@outMin
  9264  0064' 30FF               	movlw	255
  9265  0065' 009B'              	movwf	??_battery_fade+4
  9266  0066' 081B'              	movf	??_battery_fade+4,w
  9267  0067' 0094'              	movwf	Map@outMax
  9268  0068' 3180' 2000' 3180'  	fcall	_Map
  9269  006B' 0140               	movlb	0	; select bank0
  9270  006C' 009C'              	movwf	??_battery_fade+5
  9271  006D' 081C'              	movf	??_battery_fade+5,w
  9272  006E' 009F'              	movwf	battery_fade@v
  9273  006F'                    l3213:	
  9274                           
  9275                           ;LED_INTERFACE.c: 81: PWM3DCH = 0;
  9276  006F' 0146               	movlb	6	; select bank6
  9277  0070' 0195               	clrf	21	;volatile
  9278  0071'                    l3215:	
  9279                           
  9280                           ;LED_INTERFACE.c: 82: PWM4DCH = 255;
  9281  0071' 30FF               	movlw	255
  9282  0072' 0099               	movwf	25	;volatile
  9283  0073'                    l3217:	
  9284                           
  9285                           ;LED_INTERFACE.c: 83: PWM5DCH = 255 - v;
  9286  0073' 0140               	movlb	0	; select bank0
  9287  0074' 091F'              	comf	battery_fade@v,w
  9288  0075' 0146               	movlb	6	; select bank6
  9289  0076' 009D               	movwf	29	;volatile
  9290  0077'                    l501:	
  9291  0077' 0008               	return
  9292  0078'                    __end_of_battery_fade:	
  9293                           
  9294                           	psect	text28
  9295  0000'                    __ptext28:	
  9296 ;; *************** function _Map *****************
  9297 ;; Defined at:
  9298 ;;		line 48 in file "LED_INTERFACE.c"
  9299 ;; Parameters:    Size  Location     Type
  9300 ;;  x               2   15[BANK0 ] int 
  9301 ;;  inMin           1   17[BANK0 ] unsigned char 
  9302 ;;  inMax           1   18[BANK0 ] unsigned char 
  9303 ;;  outMin          1   19[BANK0 ] unsigned char 
  9304 ;;  outMax          1   20[BANK0 ] unsigned char 
  9305 ;; Auto vars:     Size  Location     Type
  9306 ;;		None
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  1    wreg      unsigned char 
  9309 ;; Registers used:
  9310 ;;		wreg, status,2, status,0, pclath, cstack
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9316 ;;      Params:         0       6       0       0       0       0       0       0
  9317 ;;      Locals:         0       0       0       0       0       0       0       0
  9318 ;;      Temps:          0       2       0       0       0       0       0       0
  9319 ;;      Totals:         0       8       0       0       0       0       0       0
  9320 ;;Total ram usage:        8 bytes
  9321 ;; Hardware stack levels used:    1
  9322 ;; Hardware stack levels required when called:    3
  9323 ;; This function calls:
  9324 ;;		___awdiv
  9325 ;;		___wmul
  9326 ;; This function is called by:
  9327 ;;		_battery_fade
  9328 ;; This function uses a non-reentrant model
  9329 ;;
  9330                           
  9331                           
  9332                           ;psect for function _Map
  9333  0000'                    _Map:	
  9334  0000'                    l3059:	
  9335                           ;incstack = 0
  9336                           ; Regs used in _Map: [wreg+status,2+status,0+pclath+cstack]
  9337                           
  9338                           
  9339                           ;LED_INTERFACE.c: 50: return (((x - inMin) * (outMax - outMin)) / (inMax - inMin)) +outM
      +                          in;
  9340  0000' 0140               	movlb	0	; select bank0
  9341  0001' 0811'              	movf	Map@inMin,w
  9342  0002' 0212'              	subwf	Map@inMax,w
  9343  0003' 0086'              	movwf	___awdiv@divisor
  9344  0004' 0187'              	clrf	___awdiv@divisor+1
  9345  0005' 1C03               	skipc
  9346  0006' 0387'              	decf	___awdiv@divisor+1,f
  9347  0007' 0811'              	movf	Map@inMin,w
  9348  0008' 0095'              	movwf	??_Map
  9349  0009' 0196'              	clrf	??_Map+1
  9350  000A' 0815'              	movf	??_Map,w
  9351  000B' 020F'              	subwf	Map@x,w
  9352  000C' 0080'              	movwf	___wmul@multiplier
  9353  000D' 0816'              	movf	??_Map+1,w
  9354  000E' 3B10'              	subwfb	Map@x+1,w
  9355  000F' 0081'              	movwf	___wmul@multiplier+1
  9356  0010' 0813'              	movf	Map@outMin,w
  9357  0011' 0214'              	subwf	Map@outMax,w
  9358  0012' 0082'              	movwf	___wmul@multiplicand
  9359  0013' 0183'              	clrf	___wmul@multiplicand+1
  9360  0014' 1C03               	skipc
  9361  0015' 0383'              	decf	___wmul@multiplicand+1,f
  9362  0016' 3180' 2000' 3180'  	fcall	___wmul
  9363  0019' 0140               	movlb	0	; select bank0
  9364  001A' 0801'              	movf	?___wmul+1,w
  9365  001B' 0089'              	movwf	___awdiv@dividend+1
  9366  001C' 0800'              	movf	?___wmul,w
  9367  001D' 0088'              	movwf	___awdiv@dividend
  9368  001E' 3180' 2000' 3180'  	fcall	___awdiv
  9369  0021' 0140               	movlb	0	; select bank0
  9370  0022' 0806'              	movf	?___awdiv,w
  9371  0023' 0713'              	addwf	Map@outMin,w
  9372  0024'                    l493:	
  9373  0024' 0008               	return
  9374  0025'                    __end_of_Map:	
  9375                           
  9376                           	psect	text29
  9377  0000'                    __ptext29:	
  9378 ;; *************** function ___wmul *****************
  9379 ;; Defined at:
  9380 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  9381 ;; Parameters:    Size  Location     Type
  9382 ;;  multiplier      2    0[BANK0 ] unsigned int 
  9383 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;  product         2    4[BANK0 ] unsigned int 
  9386 ;; Return value:  Size  Location     Type
  9387 ;;                  2    0[BANK0 ] unsigned int 
  9388 ;; Registers used:
  9389 ;;		wreg, status,2, status,0
  9390 ;; Tracked objects:
  9391 ;;		On entry : 0/0
  9392 ;;		On exit  : 0/0
  9393 ;;		Unchanged: 0/0
  9394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9395 ;;      Params:         0       4       0       0       0       0       0       0
  9396 ;;      Locals:         0       2       0       0       0       0       0       0
  9397 ;;      Temps:          0       0       0       0       0       0       0       0
  9398 ;;      Totals:         0       6       0       0       0       0       0       0
  9399 ;;Total ram usage:        6 bytes
  9400 ;; Hardware stack levels used:    1
  9401 ;; Hardware stack levels required when called:    2
  9402 ;; This function calls:
  9403 ;;		Nothing
  9404 ;; This function is called by:
  9405 ;;		_Map
  9406 ;;		_negotiate_optimal_pdo
  9407 ;; This function uses a non-reentrant model
  9408 ;;
  9409                           
  9410                           
  9411                           ;psect for function ___wmul
  9412  0000'                    ___wmul:	
  9413  0000'                    l2961:	
  9414                           ;incstack = 0
  9415                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  9416                           
  9417  0000' 0140               	movlb	0	; select bank0
  9418  0001' 0184'              	clrf	___wmul@product
  9419  0002' 0185'              	clrf	___wmul@product+1
  9420  0003'                    l2963:	
  9421  0003' 1C00'              	btfss	___wmul@multiplier,0
  9422  0004' 2800'              	goto	u2191
  9423  0005' 2800'              	goto	u2190
  9424  0006'                    u2191:	
  9425  0006' 2800'              	goto	l901
  9426  0007'                    u2190:	
  9427  0007'                    l2965:	
  9428  0007' 0802'              	movf	___wmul@multiplicand,w
  9429  0008' 0784'              	addwf	___wmul@product,f
  9430  0009' 0803'              	movf	___wmul@multiplicand+1,w
  9431  000A' 3D85'              	addwfc	___wmul@product+1,f
  9432  000B'                    l901:	
  9433  000B' 3001               	movlw	1
  9434  000C'                    u2205:	
  9435  000C' 3582'              	lslf	___wmul@multiplicand,f
  9436  000D' 0D83'              	rlf	___wmul@multiplicand+1,f
  9437  000E' 0B89               	decfsz	9,f
  9438  000F' 2800'              	goto	u2205
  9439  0010'                    l2967:	
  9440  0010' 3001               	movlw	1
  9441  0011'                    u2215:	
  9442  0011' 3681'              	lsrf	___wmul@multiplier+1,f
  9443  0012' 0C80'              	rrf	___wmul@multiplier,f
  9444  0013' 0B89               	decfsz	9,f
  9445  0014' 2800'              	goto	u2215
  9446  0015'                    l2969:	
  9447  0015' 0800'              	movf	___wmul@multiplier,w
  9448  0016' 0401'              	iorwf	___wmul@multiplier+1,w
  9449  0017' 1D03               	btfss	3,2
  9450  0018' 2800'              	goto	u2221
  9451  0019' 2800'              	goto	u2220
  9452  001A'                    u2221:	
  9453  001A' 2800'              	goto	l2963
  9454  001B'                    u2220:	
  9455  001B'                    l2971:	
  9456  001B' 0805'              	movf	___wmul@product+1,w
  9457  001C' 0081'              	movwf	?___wmul+1
  9458  001D' 0804'              	movf	___wmul@product,w
  9459  001E' 0080'              	movwf	?___wmul
  9460  001F'                    l903:	
  9461  001F' 0008               	return
  9462  0020'                    __end_of___wmul:	
  9463                           
  9464                           	psect	text30
  9465  0000'                    __ptext30:	
  9466 ;; *************** function ___awdiv *****************
  9467 ;; Defined at:
  9468 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  9469 ;; Parameters:    Size  Location     Type
  9470 ;;  divisor         2    6[BANK0 ] int 
  9471 ;;  dividend        2    8[BANK0 ] int 
  9472 ;; Auto vars:     Size  Location     Type
  9473 ;;  quotient        2   13[BANK0 ] int 
  9474 ;;  sign            1   12[BANK0 ] unsigned char 
  9475 ;;  counter         1   11[BANK0 ] unsigned char 
  9476 ;; Return value:  Size  Location     Type
  9477 ;;                  2    6[BANK0 ] int 
  9478 ;; Registers used:
  9479 ;;		wreg, status,2, status,0
  9480 ;; Tracked objects:
  9481 ;;		On entry : 0/0
  9482 ;;		On exit  : 0/0
  9483 ;;		Unchanged: 0/0
  9484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9485 ;;      Params:         0       4       0       0       0       0       0       0
  9486 ;;      Locals:         0       4       0       0       0       0       0       0
  9487 ;;      Temps:          0       1       0       0       0       0       0       0
  9488 ;;      Totals:         0       9       0       0       0       0       0       0
  9489 ;;Total ram usage:        9 bytes
  9490 ;; Hardware stack levels used:    1
  9491 ;; Hardware stack levels required when called:    2
  9492 ;; This function calls:
  9493 ;;		Nothing
  9494 ;; This function is called by:
  9495 ;;		_Map
  9496 ;; This function uses a non-reentrant model
  9497 ;;
  9498                           
  9499                           
  9500                           ;psect for function ___awdiv
  9501  0000'                    ___awdiv:	
  9502  0000'                    l2975:	
  9503                           ;incstack = 0
  9504                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9505                           
  9506  0000' 0140               	movlb	0	; select bank0
  9507  0001' 018C'              	clrf	___awdiv@sign
  9508  0002'                    l2977:	
  9509  0002' 1F87'              	btfss	___awdiv@divisor+1,7
  9510  0003' 2800'              	goto	u2231
  9511  0004' 2800'              	goto	u2230
  9512  0005'                    u2231:	
  9513  0005' 2800'              	goto	l2983
  9514  0006'                    u2230:	
  9515  0006'                    l2979:	
  9516  0006' 0986'              	comf	___awdiv@divisor,f
  9517  0007' 0987'              	comf	___awdiv@divisor+1,f
  9518  0008' 0A86'              	incf	___awdiv@divisor,f
  9519  0009' 1903               	skipnz
  9520  000A' 0A87'              	incf	___awdiv@divisor+1,f
  9521  000B'                    l2981:	
  9522  000B' 018C'              	clrf	___awdiv@sign
  9523  000C' 0A8C'              	incf	___awdiv@sign,f
  9524  000D'                    l2983:	
  9525  000D' 1F89'              	btfss	___awdiv@dividend+1,7
  9526  000E' 2800'              	goto	u2241
  9527  000F' 2800'              	goto	u2240
  9528  0010'                    u2241:	
  9529  0010' 2800'              	goto	l2989
  9530  0011'                    u2240:	
  9531  0011'                    l2985:	
  9532  0011' 0988'              	comf	___awdiv@dividend,f
  9533  0012' 0989'              	comf	___awdiv@dividend+1,f
  9534  0013' 0A88'              	incf	___awdiv@dividend,f
  9535  0014' 1903               	skipnz
  9536  0015' 0A89'              	incf	___awdiv@dividend+1,f
  9537  0016'                    l2987:	
  9538  0016' 3001               	movlw	1
  9539  0017' 008A'              	movwf	??___awdiv
  9540  0018' 080A'              	movf	??___awdiv,w
  9541  0019' 068C'              	xorwf	___awdiv@sign,f
  9542  001A'                    l2989:	
  9543  001A' 018D'              	clrf	___awdiv@quotient
  9544  001B' 018E'              	clrf	___awdiv@quotient+1
  9545  001C'                    l2991:	
  9546  001C' 0806'              	movf	___awdiv@divisor,w
  9547  001D' 0407'              	iorwf	___awdiv@divisor+1,w
  9548  001E' 1903               	btfsc	3,2
  9549  001F' 2800'              	goto	u2251
  9550  0020' 2800'              	goto	u2250
  9551  0021'                    u2251:	
  9552  0021' 2800'              	goto	l3011
  9553  0022'                    u2250:	
  9554  0022'                    l2993:	
  9555  0022' 018B'              	clrf	___awdiv@counter
  9556  0023' 0A8B'              	incf	___awdiv@counter,f
  9557  0024' 2800'              	goto	l2999
  9558  0025'                    l2995:	
  9559  0025' 3001               	movlw	1
  9560  0026'                    u2265:	
  9561  0026' 3586'              	lslf	___awdiv@divisor,f
  9562  0027' 0D87'              	rlf	___awdiv@divisor+1,f
  9563  0028' 0B89               	decfsz	9,f
  9564  0029' 2800'              	goto	u2265
  9565  002A'                    l2997:	
  9566  002A' 3001               	movlw	1
  9567  002B' 008A'              	movwf	??___awdiv
  9568  002C' 080A'              	movf	??___awdiv,w
  9569  002D' 078B'              	addwf	___awdiv@counter,f
  9570  002E'                    l2999:	
  9571  002E' 1F87'              	btfss	___awdiv@divisor+1,7
  9572  002F' 2800'              	goto	u2271
  9573  0030' 2800'              	goto	u2270
  9574  0031'                    u2271:	
  9575  0031' 2800'              	goto	l2995
  9576  0032'                    u2270:	
  9577  0032'                    l3001:	
  9578  0032' 3001               	movlw	1
  9579  0033'                    u2285:	
  9580  0033' 358D'              	lslf	___awdiv@quotient,f
  9581  0034' 0D8E'              	rlf	___awdiv@quotient+1,f
  9582  0035' 0B89               	decfsz	9,f
  9583  0036' 2800'              	goto	u2285
  9584  0037' 0807'              	movf	___awdiv@divisor+1,w
  9585  0038' 0209'              	subwf	___awdiv@dividend+1,w
  9586  0039' 1D03               	skipz
  9587  003A' 2800'              	goto	u2295
  9588  003B' 0806'              	movf	___awdiv@divisor,w
  9589  003C' 0208'              	subwf	___awdiv@dividend,w
  9590  003D'                    u2295:	
  9591  003D' 1C03               	skipc
  9592  003E' 2800'              	goto	u2291
  9593  003F' 2800'              	goto	u2290
  9594  0040'                    u2291:	
  9595  0040' 2800'              	goto	l3007
  9596  0041'                    u2290:	
  9597  0041'                    l3003:	
  9598  0041' 0806'              	movf	___awdiv@divisor,w
  9599  0042' 0288'              	subwf	___awdiv@dividend,f
  9600  0043' 0807'              	movf	___awdiv@divisor+1,w
  9601  0044' 3B89'              	subwfb	___awdiv@dividend+1,f
  9602  0045'                    l3005:	
  9603  0045' 140D'              	bsf	___awdiv@quotient,0
  9604  0046'                    l3007:	
  9605  0046' 3001               	movlw	1
  9606  0047'                    u2305:	
  9607  0047' 3687'              	lsrf	___awdiv@divisor+1,f
  9608  0048' 0C86'              	rrf	___awdiv@divisor,f
  9609  0049' 0B89               	decfsz	9,f
  9610  004A' 2800'              	goto	u2305
  9611  004B'                    l3009:	
  9612  004B' 3001               	movlw	1
  9613  004C' 028B'              	subwf	___awdiv@counter,f
  9614  004D' 1D03               	btfss	3,2
  9615  004E' 2800'              	goto	u2311
  9616  004F' 2800'              	goto	u2310
  9617  0050'                    u2311:	
  9618  0050' 2800'              	goto	l3001
  9619  0051'                    u2310:	
  9620  0051'                    l3011:	
  9621  0051' 080C'              	movf	___awdiv@sign,w
  9622  0052' 1903               	btfsc	3,2
  9623  0053' 2800'              	goto	u2321
  9624  0054' 2800'              	goto	u2320
  9625  0055'                    u2321:	
  9626  0055' 2800'              	goto	l3015
  9627  0056'                    u2320:	
  9628  0056'                    l3013:	
  9629  0056' 098D'              	comf	___awdiv@quotient,f
  9630  0057' 098E'              	comf	___awdiv@quotient+1,f
  9631  0058' 0A8D'              	incf	___awdiv@quotient,f
  9632  0059' 1903               	skipnz
  9633  005A' 0A8E'              	incf	___awdiv@quotient+1,f
  9634  005B'                    l3015:	
  9635  005B' 080E'              	movf	___awdiv@quotient+1,w
  9636  005C' 0087'              	movwf	?___awdiv+1
  9637  005D' 080D'              	movf	___awdiv@quotient,w
  9638  005E' 0086'              	movwf	?___awdiv
  9639  005F'                    l1054:	
  9640  005F' 0008               	return
  9641  0060'                    __end_of___awdiv:	
  9642                           
  9643                           	psect	text31
  9644  0000'                    __ptext31:	
  9645 ;; *************** function _RGB_fade *****************
  9646 ;; Defined at:
  9647 ;;		line 18 in file "LED_INTERFACE.c"
  9648 ;; Parameters:    Size  Location     Type
  9649 ;;		None
  9650 ;; Auto vars:     Size  Location     Type
  9651 ;;		None
  9652 ;; Return value:  Size  Location     Type
  9653 ;;                  1    wreg      void 
  9654 ;; Registers used:
  9655 ;;		wreg, status,2, status,0, pclath, cstack
  9656 ;; Tracked objects:
  9657 ;;		On entry : 0/0
  9658 ;;		On exit  : 0/0
  9659 ;;		Unchanged: 0/0
  9660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9661 ;;      Params:         0       0       0       0       0       0       0       0
  9662 ;;      Locals:         0       0       0       0       0       0       0       0
  9663 ;;      Temps:          0       1       0       0       0       0       0       0
  9664 ;;      Totals:         0       1       0       0       0       0       0       0
  9665 ;;Total ram usage:        1 bytes
  9666 ;; Hardware stack levels used:    1
  9667 ;; Hardware stack levels required when called:    3
  9668 ;; This function calls:
  9669 ;;		_get_time
  9670 ;;		_timer_diff
  9671 ;; This function is called by:
  9672 ;;		_led_modes
  9673 ;; This function uses a non-reentrant model
  9674 ;;
  9675                           
  9676                           
  9677                           ;psect for function _RGB_fade
  9678  0000'                    _RGB_fade:	
  9679  0000'                    l3151:	
  9680                           ;incstack = 0
  9681                           ; Regs used in _RGB_fade: [wreg+status,2+status,0+pclath+cstack]
  9682                           
  9683                           
  9684                           ;LED_INTERFACE.c: 20: if(timer_diff(rgb_delay) >= 2) {
  9685  0000' 0142               	movlb	2	; select bank2
  9686  0001' 0800'              	movf	(_rgb_delay+3)^(0+256),w
  9687  0002' 0140               	movlb	0	; select bank0
  9688  0003' 0083'              	movwf	timer_diff@t+3
  9689  0004' 0142               	movlb	2	; select bank2
  9690  0005' 0800'              	movf	(_rgb_delay+2)^(0+256),w
  9691  0006' 0140               	movlb	0	; select bank0
  9692  0007' 0082'              	movwf	timer_diff@t+2
  9693  0008' 0142               	movlb	2	; select bank2
  9694  0009' 0800'              	movf	(_rgb_delay+1)^(0+256),w
  9695  000A' 0140               	movlb	0	; select bank0
  9696  000B' 0081'              	movwf	timer_diff@t+1
  9697  000C' 0142               	movlb	2	; select bank2
  9698  000D' 0800'              	movf	_rgb_delay^(0+256),w
  9699  000E' 0140               	movlb	0	; select bank0
  9700  000F' 0080'              	movwf	timer_diff@t
  9701  0010' 3180' 2000' 3180'  	fcall	_timer_diff
  9702  0013' 0140               	movlb	0	; select bank0
  9703  0014' 0803'              	movf	?_timer_diff+3,w
  9704  0015' 1D03               	btfss	3,2
  9705  0016' 2800'              	goto	u2600
  9706  0017' 0802'              	movf	?_timer_diff+2,w
  9707  0018' 1D03               	btfss	3,2
  9708  0019' 2800'              	goto	u2600
  9709  001A' 0801'              	movf	?_timer_diff+1,w
  9710  001B' 1D03               	btfss	3,2
  9711  001C' 2800'              	goto	u2600
  9712  001D' 3002               	movlw	2
  9713  001E' 0200'              	subwf	?_timer_diff,w
  9714  001F' 1C03               	btfss	3,0
  9715  0020' 2800'              	goto	u2601
  9716  0021' 2800'              	goto	u2600
  9717  0022'                    u2601:	
  9718  0022' 2800'              	goto	l490
  9719  0023'                    u2600:	
  9720  0023'                    l3153:	
  9721                           
  9722                           ;LED_INTERFACE.c: 21: rgb_delay = get_time();
  9723  0023' 3180' 2000' 3180'  	fcall	_get_time
  9724  0026' 0140               	movlb	0	; select bank0
  9725  0027' 0803'              	movf	?_get_time+3,w
  9726  0028' 0142               	movlb	2	; select bank2
  9727  0029' 0080'              	movwf	(_rgb_delay+3)^(0+256)
  9728  002A' 0140               	movlb	0	; select bank0
  9729  002B' 0802'              	movf	?_get_time+2,w
  9730  002C' 0142               	movlb	2	; select bank2
  9731  002D' 0080'              	movwf	(_rgb_delay+2)^(0+256)
  9732  002E' 0140               	movlb	0	; select bank0
  9733  002F' 0801'              	movf	?_get_time+1,w
  9734  0030' 0142               	movlb	2	; select bank2
  9735  0031' 0080'              	movwf	(_rgb_delay+1)^(0+256)
  9736  0032' 0140               	movlb	0	; select bank0
  9737  0033' 0800'              	movf	?_get_time,w
  9738  0034' 0142               	movlb	2	; select bank2
  9739  0035' 0080'              	movwf	_rgb_delay^(0+256)
  9740  0036'                    l3155:	
  9741                           
  9742                           ;LED_INTERFACE.c: 22: if (i >= 255) {
  9743  0036' 0140               	movlb	0	; select bank0
  9744  0037' 0A04'              	incf	_i,w
  9745  0038' 1D03               	btfss	3,2
  9746  0039' 2800'              	goto	u2611
  9747  003A' 2800'              	goto	u2610
  9748  003B'                    u2611:	
  9749  003B' 2800'              	goto	l3165
  9750  003C'                    u2610:	
  9751  003C'                    l3157:	
  9752                           
  9753                           ;LED_INTERFACE.c: 23: i = 0;
  9754  003C' 0184'              	clrf	_i
  9755  003D'                    l3159:	
  9756                           
  9757                           ;LED_INTERFACE.c: 24: color++;
  9758  003D' 3001               	movlw	1
  9759  003E' 0088'              	movwf	??_RGB_fade
  9760  003F' 0808'              	movf	??_RGB_fade,w
  9761  0040' 0782'              	addwf	_color,f
  9762  0041'                    l3161:	
  9763                           
  9764                           ;LED_INTERFACE.c: 25: if (color > 2) {
  9765  0041' 3003               	movlw	3
  9766  0042' 0202'              	subwf	_color,w
  9767  0043' 1C03               	skipc
  9768  0044' 2800'              	goto	u2621
  9769  0045' 2800'              	goto	u2620
  9770  0046'                    u2621:	
  9771  0046' 2800'              	goto	l3165
  9772  0047'                    u2620:	
  9773  0047'                    l3163:	
  9774                           
  9775                           ;LED_INTERFACE.c: 26: color = 0;
  9776  0047' 0182'              	clrf	_color
  9777  0048'                    l3165:	
  9778                           
  9779                           ;LED_INTERFACE.c: 27: };LED_INTERFACE.c: 28: };LED_INTERFACE.c: 29: i++;
  9780  0048' 3001               	movlw	1
  9781  0049' 0088'              	movwf	??_RGB_fade
  9782  004A' 0808'              	movf	??_RGB_fade,w
  9783  004B' 0784'              	addwf	_i,f
  9784  004C'                    l3167:	
  9785                           
  9786                           ;LED_INTERFACE.c: 30: if (color == 0) {
  9787  004C' 0802'              	movf	_color,w
  9788  004D' 1D03               	btfss	3,2
  9789  004E' 2800'              	goto	u2631
  9790  004F' 2800'              	goto	u2630
  9791  0050'                    u2631:	
  9792  0050' 2800'              	goto	l3173
  9793  0051'                    u2630:	
  9794  0051'                    l3169:	
  9795                           
  9796                           ;LED_INTERFACE.c: 31: PWM3DCH = 255 - i;
  9797  0051' 0904'              	comf	_i,w
  9798  0052' 0146               	movlb	6	; select bank6
  9799  0053' 0095               	movwf	21	;volatile
  9800  0054'                    l3171:	
  9801                           
  9802                           ;LED_INTERFACE.c: 32: PWM4DCH = i;
  9803  0054' 0140               	movlb	0	; select bank0
  9804  0055' 0804'              	movf	_i,w
  9805  0056' 0146               	movlb	6	; select bank6
  9806  0057' 0099               	movwf	25	;volatile
  9807                           
  9808                           ;LED_INTERFACE.c: 33: PWM5DCH = 0;
  9809  0058' 019D               	clrf	29	;volatile
  9810  0059'                    l3173:	
  9811                           
  9812                           ;LED_INTERFACE.c: 34: };LED_INTERFACE.c: 35: if (color == 1) {
  9813  0059' 0140               	movlb	0	; select bank0
  9814  005A' 0302'              	decf	_color,w
  9815  005B' 1D03               	btfss	3,2
  9816  005C' 2800'              	goto	u2641
  9817  005D' 2800'              	goto	u2640
  9818  005E'                    u2641:	
  9819  005E' 2800'              	goto	l3179
  9820  005F'                    u2640:	
  9821  005F'                    l3175:	
  9822                           
  9823                           ;LED_INTERFACE.c: 36: PWM3DCH = 0;
  9824  005F' 0146               	movlb	6	; select bank6
  9825  0060' 0195               	clrf	21	;volatile
  9826  0061'                    l3177:	
  9827                           
  9828                           ;LED_INTERFACE.c: 37: PWM4DCH = 255 - i;
  9829  0061' 0140               	movlb	0	; select bank0
  9830  0062' 0904'              	comf	_i,w
  9831  0063' 0146               	movlb	6	; select bank6
  9832  0064' 0099               	movwf	25	;volatile
  9833                           
  9834                           ;LED_INTERFACE.c: 38: PWM5DCH = i;
  9835  0065' 0140               	movlb	0	; select bank0
  9836  0066' 0804'              	movf	_i,w
  9837  0067' 0146               	movlb	6	; select bank6
  9838  0068' 009D               	movwf	29	;volatile
  9839  0069'                    l3179:	
  9840                           
  9841                           ;LED_INTERFACE.c: 39: };LED_INTERFACE.c: 40: if (color == 2) {
  9842  0069' 3002               	movlw	2
  9843  006A' 0140               	movlb	0	; select bank0
  9844  006B' 0602'              	xorwf	_color,w
  9845  006C' 1D03               	btfss	3,2
  9846  006D' 2800'              	goto	u2651
  9847  006E' 2800'              	goto	u2650
  9848  006F'                    u2651:	
  9849  006F' 2800'              	goto	l490
  9850  0070'                    u2650:	
  9851  0070'                    l3181:	
  9852                           
  9853                           ;LED_INTERFACE.c: 41: PWM3DCH = i;
  9854  0070' 0804'              	movf	_i,w
  9855  0071' 0146               	movlb	6	; select bank6
  9856  0072' 0095               	movwf	21	;volatile
  9857  0073'                    l3183:	
  9858                           
  9859                           ;LED_INTERFACE.c: 42: PWM4DCH = 0;
  9860  0073' 0199               	clrf	25	;volatile
  9861                           
  9862                           ;LED_INTERFACE.c: 43: PWM5DCH = 255 - i;
  9863  0074' 0140               	movlb	0	; select bank0
  9864  0075' 0904'              	comf	_i,w
  9865  0076' 0146               	movlb	6	; select bank6
  9866  0077' 009D               	movwf	29	;volatile
  9867  0078'                    l490:	
  9868  0078' 0008               	return
  9869  0079'                    __end_of_RGB_fade:	
  9870                           
  9871                           	psect	text32
  9872  0000'                    __ptext32:	
  9873 ;; *************** function _chrg_led *****************
  9874 ;; Defined at:
  9875 ;;		line 90 in file "LED_INTERFACE.c"
  9876 ;; Parameters:    Size  Location     Type
  9877 ;;		None
  9878 ;; Auto vars:     Size  Location     Type
  9879 ;;		None
  9880 ;; Return value:  Size  Location     Type
  9881 ;;                  1    wreg      void 
  9882 ;; Registers used:
  9883 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9884 ;; Tracked objects:
  9885 ;;		On entry : 0/0
  9886 ;;		On exit  : 0/0
  9887 ;;		Unchanged: 0/0
  9888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9889 ;;      Params:         0       0       0       0       0       0       0       0
  9890 ;;      Locals:         0       0       0       0       0       0       0       0
  9891 ;;      Temps:          0       1       0       0       0       0       0       0
  9892 ;;      Totals:         0       1       0       0       0       0       0       0
  9893 ;;Total ram usage:        1 bytes
  9894 ;; Hardware stack levels used:    1
  9895 ;; Hardware stack levels required when called:    3
  9896 ;; This function calls:
  9897 ;;		_get_time
  9898 ;;		_timer_diff
  9899 ;; This function is called by:
  9900 ;;		_main
  9901 ;; This function uses a non-reentrant model
  9902 ;;
  9903                           
  9904                           
  9905                           ;psect for function _chrg_led
  9906  0000'                    _chrg_led:	
  9907  0000'                    l3777:	
  9908                           ;incstack = 0
  9909                           ; Regs used in _chrg_led: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9910                           
  9911                           
  9912                           ;LED_INTERFACE.c: 92: if(timer_diff(chrg_delay) >= 2) {
  9913  0000' 0142               	movlb	2	; select bank2
  9914  0001' 0800'              	movf	(_chrg_delay+3)^(0+256),w
  9915  0002' 0140               	movlb	0	; select bank0
  9916  0003' 0083'              	movwf	timer_diff@t+3
  9917  0004' 0142               	movlb	2	; select bank2
  9918  0005' 0800'              	movf	(_chrg_delay+2)^(0+256),w
  9919  0006' 0140               	movlb	0	; select bank0
  9920  0007' 0082'              	movwf	timer_diff@t+2
  9921  0008' 0142               	movlb	2	; select bank2
  9922  0009' 0800'              	movf	(_chrg_delay+1)^(0+256),w
  9923  000A' 0140               	movlb	0	; select bank0
  9924  000B' 0081'              	movwf	timer_diff@t+1
  9925  000C' 0142               	movlb	2	; select bank2
  9926  000D' 0800'              	movf	_chrg_delay^(0+256),w
  9927  000E' 0140               	movlb	0	; select bank0
  9928  000F' 0080'              	movwf	timer_diff@t
  9929  0010' 3180' 2000' 3180'  	fcall	_timer_diff
  9930  0013' 0140               	movlb	0	; select bank0
  9931  0014' 0803'              	movf	?_timer_diff+3,w
  9932  0015' 1D03               	btfss	3,2
  9933  0016' 2800'              	goto	u3440
  9934  0017' 0802'              	movf	?_timer_diff+2,w
  9935  0018' 1D03               	btfss	3,2
  9936  0019' 2800'              	goto	u3440
  9937  001A' 0801'              	movf	?_timer_diff+1,w
  9938  001B' 1D03               	btfss	3,2
  9939  001C' 2800'              	goto	u3440
  9940  001D' 3002               	movlw	2
  9941  001E' 0200'              	subwf	?_timer_diff,w
  9942  001F' 1C03               	btfss	3,0
  9943  0020' 2800'              	goto	u3441
  9944  0021' 2800'              	goto	u3440
  9945  0022'                    u3441:	
  9946  0022' 2800'              	goto	l520
  9947  0023'                    u3440:	
  9948  0023'                    l3779:	
  9949                           
  9950                           ;LED_INTERFACE.c: 93: chrg_delay = get_time();
  9951  0023' 3180' 2000' 3180'  	fcall	_get_time
  9952  0026' 0140               	movlb	0	; select bank0
  9953  0027' 0803'              	movf	?_get_time+3,w
  9954  0028' 0142               	movlb	2	; select bank2
  9955  0029' 0080'              	movwf	(_chrg_delay+3)^(0+256)
  9956  002A' 0140               	movlb	0	; select bank0
  9957  002B' 0802'              	movf	?_get_time+2,w
  9958  002C' 0142               	movlb	2	; select bank2
  9959  002D' 0080'              	movwf	(_chrg_delay+2)^(0+256)
  9960  002E' 0140               	movlb	0	; select bank0
  9961  002F' 0801'              	movf	?_get_time+1,w
  9962  0030' 0142               	movlb	2	; select bank2
  9963  0031' 0080'              	movwf	(_chrg_delay+1)^(0+256)
  9964  0032' 0140               	movlb	0	; select bank0
  9965  0033' 0800'              	movf	?_get_time,w
  9966  0034' 0142               	movlb	2	; select bank2
  9967  0035' 0080'              	movwf	_chrg_delay^(0+256)
  9968  0036'                    l3781:	
  9969                           
  9970                           ;LED_INTERFACE.c: 94: if(c >= 255) {
  9971  0036' 0140               	movlb	0	; select bank0
  9972  0037' 0A03'              	incf	_c,w
  9973  0038' 1D03               	btfss	3,2
  9974  0039' 2800'              	goto	u3451
  9975  003A' 2800'              	goto	u3450
  9976  003B'                    u3451:	
  9977  003B' 2800'              	goto	l3785
  9978  003C'                    u3450:	
  9979  003C'                    l3783:	
  9980                           
  9981                           ;LED_INTERFACE.c: 95: dir = 0;
  9982  003C' 0181'              	clrf	_dir
  9983  003D'                    l3785:	
  9984                           
  9985                           ;LED_INTERFACE.c: 96: };LED_INTERFACE.c: 97: if(c <= 1) {
  9986  003D' 3002               	movlw	2
  9987  003E' 0203'              	subwf	_c,w
  9988  003F' 1803               	skipnc
  9989  0040' 2800'              	goto	u3461
  9990  0041' 2800'              	goto	u3460
  9991  0042'                    u3461:	
  9992  0042' 2800'              	goto	l3789
  9993  0043'                    u3460:	
  9994  0043'                    l3787:	
  9995                           
  9996                           ;LED_INTERFACE.c: 98: dir = 1;
  9997  0043' 0181'              	clrf	_dir
  9998  0044' 0A81'              	incf	_dir,f
  9999  0045'                    l3789:	
 10000                           
 10001                           ;LED_INTERFACE.c: 99: };LED_INTERFACE.c: 100: if(dir == 1) {
 10002  0045' 0301'              	decf	_dir,w
 10003  0046' 1D03               	btfss	3,2
 10004  0047' 2800'              	goto	u3471
 10005  0048' 2800'              	goto	u3470
 10006  0049'                    u3471:	
 10007  0049' 2800'              	goto	l3793
 10008  004A'                    u3470:	
 10009  004A'                    l3791:	
 10010                           
 10011                           ;LED_INTERFACE.c: 101: c++;
 10012  004A' 3001               	movlw	1
 10013  004B' 0088'              	movwf	??_chrg_led
 10014  004C' 0808'              	movf	??_chrg_led,w
 10015  004D' 0783'              	addwf	_c,f
 10016                           
 10017                           ;LED_INTERFACE.c: 102: }
 10018  004E' 2800'              	goto	l3815
 10019  004F'                    l3793:	
 10020                           
 10021                           ;LED_INTERFACE.c: 103: else if(dir == 0) {
 10022  004F' 0801'              	movf	_dir,w
 10023  0050' 1D03               	btfss	3,2
 10024  0051' 2800'              	goto	u3481
 10025  0052' 2800'              	goto	u3480
 10026  0053'                    u3481:	
 10027  0053' 2800'              	goto	l3815
 10028  0054'                    u3480:	
 10029  0054'                    l3795:	
 10030                           
 10031                           ;LED_INTERFACE.c: 104: c--;
 10032  0054' 3001               	movlw	1
 10033  0055' 0283'              	subwf	_c,f
 10034  0056' 2800'              	goto	l3815
 10035  0057'                    l3797:	
 10036                           
 10037                           ;LED_INTERFACE.c: 110: PWM3DCH = 0;
 10038  0057' 0146               	movlb	6	; select bank6
 10039  0058' 0195               	clrf	21	;volatile
 10040                           
 10041                           ;LED_INTERFACE.c: 111: PWM4DCH = 0;
 10042  0059' 0199               	clrf	25	;volatile
 10043  005A'                    l3799:	
 10044                           
 10045                           ;LED_INTERFACE.c: 112: PWM5DCH = c;
 10046  005A' 0140               	movlb	0	; select bank0
 10047  005B' 0803'              	movf	_c,w
 10048  005C' 0146               	movlb	6	; select bank6
 10049  005D' 009D               	movwf	29	;volatile
 10050                           
 10051                           ;LED_INTERFACE.c: 113: break;
 10052  005E' 2800'              	goto	l520
 10053  005F'                    l3801:	
 10054                           
 10055                           ;LED_INTERFACE.c: 116: PWM3DCH = 0;
 10056  005F' 0146               	movlb	6	; select bank6
 10057  0060' 0195               	clrf	21	;volatile
 10058  0061'                    l3803:	
 10059                           
 10060                           ;LED_INTERFACE.c: 117: PWM4DCH = c;
 10061  0061' 0140               	movlb	0	; select bank0
 10062  0062' 0803'              	movf	_c,w
 10063  0063' 0146               	movlb	6	; select bank6
 10064  0064' 0099               	movwf	25	;volatile
 10065  0065' 2800'              	goto	l3799
 10066  0066'                    l3807:	
 10067                           
 10068                           ;LED_INTERFACE.c: 122: PWM3DCH = 0;
 10069  0066' 0146               	movlb	6	; select bank6
 10070  0067' 0195               	clrf	21	;volatile
 10071  0068'                    l3809:	
 10072                           
 10073                           ;LED_INTERFACE.c: 123: PWM4DCH = c;
 10074  0068' 0140               	movlb	0	; select bank0
 10075  0069' 0803'              	movf	_c,w
 10076  006A' 0146               	movlb	6	; select bank6
 10077  006B' 0099               	movwf	25	;volatile
 10078  006C'                    l3811:	
 10079                           
 10080                           ;LED_INTERFACE.c: 124: PWM5DCH = 0;
 10081  006C' 019D               	clrf	29	;volatile
 10082                           
 10083                           ;LED_INTERFACE.c: 125: break;
 10084  006D' 2800'              	goto	l520
 10085  006E'                    l3813:	
 10086                           
 10087                           ;LED_INTERFACE.c: 127: PWM3DCH = 0;
 10088  006E' 0146               	movlb	6	; select bank6
 10089  006F' 0195               	clrf	21	;volatile
 10090                           
 10091                           ;LED_INTERFACE.c: 128: PWM4DCH = 0;
 10092  0070' 0199               	clrf	25	;volatile
 10093                           
 10094                           ;LED_INTERFACE.c: 129: PWM5DCH = 0;
 10095  0071' 019D               	clrf	29	;volatile
 10096                           
 10097                           ;LED_INTERFACE.c: 130: }
 10098  0072' 2800'              	goto	l520
 10099  0073'                    l3815:	
 10100  0073' 0A0E'              	incf	_VBUS_CHRG_STATE,w
 10101  0074' 0086               	movwf	6
 10102  0075' 0187               	clrf	7
 10103  0076' 0801               	movf	1,w
 10104                           
 10105                           ; Switch size 1, requested type "simple"
 10106                           ; Number of cases is 3, Range of values is 1 to 3
 10107                           ; switch strategies available:
 10108                           ; Name         Instructions Cycles
 10109                           ; simple_byte           10     6 (average)
 10110                           ; direct_byte           15     9 (fixed)
 10111                           ; jumptable            263     9 (fixed)
 10112                           ;	Chosen strategy is simple_byte
 10113  0077' 3A01               	xorlw	1	; case 1
 10114  0078' 1903               	skipnz
 10115  0079' 2800'              	goto	l3797
 10116  007A' 3A03               	xorlw	3	; case 2
 10117  007B' 1903               	skipnz
 10118  007C' 2800'              	goto	l3801
 10119  007D' 3A01               	xorlw	1	; case 3
 10120  007E' 1903               	skipnz
 10121  007F' 2800'              	goto	l3807
 10122  0080' 2800'              	goto	l3813
 10123  0081'                    l520:	
 10124  0081' 0008               	return
 10125  0082'                    __end_of_chrg_led:	
 10126                           
 10127                           	psect	text33
 10128  0000'                    __ptext33:	
 10129 ;; *************** function _PWM_power_down *****************
 10130 ;; Defined at:
 10131 ;;		line 59 in file "PWM.c"
 10132 ;; Parameters:    Size  Location     Type
 10133 ;;		None
 10134 ;; Auto vars:     Size  Location     Type
 10135 ;;		None
 10136 ;; Return value:  Size  Location     Type
 10137 ;;                  1    wreg      void 
 10138 ;; Registers used:
 10139 ;;		status,2
 10140 ;; Tracked objects:
 10141 ;;		On entry : 0/0
 10142 ;;		On exit  : 0/0
 10143 ;;		Unchanged: 0/0
 10144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10145 ;;      Params:         0       0       0       0       0       0       0       0
 10146 ;;      Locals:         0       0       0       0       0       0       0       0
 10147 ;;      Temps:          0       0       0       0       0       0       0       0
 10148 ;;      Totals:         0       0       0       0       0       0       0       0
 10149 ;;Total ram usage:        0 bytes
 10150 ;; Hardware stack levels used:    1
 10151 ;; Hardware stack levels required when called:    2
 10152 ;; This function calls:
 10153 ;;		Nothing
 10154 ;; This function is called by:
 10155 ;;		_main
 10156 ;; This function uses a non-reentrant model
 10157 ;;
 10158                           
 10159                           
 10160                           ;psect for function _PWM_power_down
 10161  0000'                    _PWM_power_down:	
 10162  0000'                    l3855:	
 10163                           ;incstack = 0
 10164                           ; Regs used in _PWM_power_down: [status,2]
 10165                           
 10166                           
 10167                           ;PWM.c: 61: PWM3DCH = 0;
 10168  0000' 0146               	movlb	6	; select bank6
 10169  0001' 0195               	clrf	21	;volatile
 10170                           
 10171                           ;PWM.c: 62: PWM4DCH = 0;
 10172  0002' 0199               	clrf	25	;volatile
 10173                           
 10174                           ;PWM.c: 63: PWM5DCH = 0;
 10175  0003' 019D               	clrf	29	;volatile
 10176  0004'                    l3857:	
 10177                           
 10178                           ;PWM.c: 64: PWM3CONbits.EN = 0;
 10179  0004' 1396               	bcf	22,7	;volatile
 10180  0005'                    l3859:	
 10181                           
 10182                           ;PWM.c: 65: PWM4CONbits.EN = 0;
 10183  0005' 139A               	bcf	26,7	;volatile
 10184  0006'                    l3861:	
 10185                           
 10186                           ;PWM.c: 66: PWM5CONbits.EN = 0;
 10187  0006' 139E               	bcf	30,7	;volatile
 10188  0007'                    l3863:	
 10189                           
 10190                           ;PWM.c: 67: RC2 = 0;
 10191  0007' 0140               	movlb	0	; select bank0
 10192  0008' 110E               	bcf	14,2	;volatile
 10193  0009'                    l3865:	
 10194                           
 10195                           ;PWM.c: 68: RC3 = 0;
 10196  0009' 118E               	bcf	14,3	;volatile
 10197  000A'                    l3867:	
 10198                           
 10199                           ;PWM.c: 69: RC4 = 0;
 10200  000A' 120E               	bcf	14,4	;volatile
 10201  000B'                    l235:	
 10202  000B' 0008               	return
 10203  000C'                    __end_of_PWM_power_down:	
 10204                           
 10205                           	psect	text34
 10206  0000'                    __ptext34:	
 10207 ;; *************** function _PWM_INIT *****************
 10208 ;; Defined at:
 10209 ;;		line 11 in file "PWM.c"
 10210 ;; Parameters:    Size  Location     Type
 10211 ;;		None
 10212 ;; Auto vars:     Size  Location     Type
 10213 ;;		None
 10214 ;; Return value:  Size  Location     Type
 10215 ;;                  1    wreg      void 
 10216 ;; Registers used:
 10217 ;;		wreg, status,2, status,0, pclath, cstack
 10218 ;; Tracked objects:
 10219 ;;		On entry : 0/0
 10220 ;;		On exit  : 0/0
 10221 ;;		Unchanged: 0/0
 10222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10223 ;;      Params:         0       0       0       0       0       0       0       0
 10224 ;;      Locals:         0       0       0       0       0       0       0       0
 10225 ;;      Temps:          0       0       0       0       0       0       0       0
 10226 ;;      Totals:         0       0       0       0       0       0       0       0
 10227 ;;Total ram usage:        0 bytes
 10228 ;; Hardware stack levels used:    1
 10229 ;; Hardware stack levels required when called:    3
 10230 ;; This function calls:
 10231 ;;		_PPS_lock
 10232 ;;		_PPS_unlock
 10233 ;; This function is called by:
 10234 ;;		_main
 10235 ;; This function uses a non-reentrant model
 10236 ;;
 10237                           
 10238                           
 10239                           ;psect for function _PWM_INIT
 10240  0000'                    _PWM_INIT:	
 10241  0000'                    l3641:	
 10242                           ;incstack = 0
 10243                           ; Regs used in _PWM_INIT: [wreg+status,2+status,0+pclath+cstack]
 10244                           
 10245                           
 10246                           ;PWM.c: 13: PPS_unlock();
 10247  0000' 3180' 2000' 3180'  	fcall	_PPS_unlock
 10248  0003'                    l3643:	
 10249                           
 10250                           ;PWM.c: 14: RC2PPS = 0x0B;
 10251  0003' 300B               	movlw	11
 10252  0004' 017E               	movlb	62	; select bank62
 10253  0005' 00A2               	movwf	34	;volatile
 10254  0006'                    l3645:	
 10255                           
 10256                           ;PWM.c: 15: RC3PPS = 0x0C;
 10257  0006' 300C               	movlw	12
 10258  0007' 00A3               	movwf	35	;volatile
 10259  0008'                    l3647:	
 10260                           
 10261                           ;PWM.c: 16: RC4PPS = 0x0D;
 10262  0008' 300D               	movlw	13
 10263  0009' 00A4               	movwf	36	;volatile
 10264  000A'                    l3649:	
 10265                           
 10266                           ;PWM.c: 17: PPS_lock();
 10267  000A' 3180' 2000' 3180'  	fcall	_PPS_lock
 10268  000D'                    l3651:	
 10269                           
 10270                           ;PWM.c: 19: PWM3CON = 0;
 10271  000D' 0146               	movlb	6	; select bank6
 10272  000E' 0196               	clrf	22	;volatile
 10273  000F'                    l3653:	
 10274                           
 10275                           ;PWM.c: 20: PR2 = 255;
 10276  000F' 30FF               	movlw	255
 10277  0010' 0145               	movlb	5	; select bank5
 10278  0011' 008D               	movwf	13	;volatile
 10279                           
 10280                           ;PWM.c: 21: PWM3DCH = 0;
 10281  0012' 0146               	movlb	6	; select bank6
 10282  0013' 0195               	clrf	21	;volatile
 10283  0014'                    l3655:	
 10284                           
 10285                           ;PWM.c: 22: PWM3DCL = 0b00111111;
 10286  0014' 303F               	movlw	63
 10287  0015' 0094               	movwf	20	;volatile
 10288  0016'                    l3657:	
 10289                           
 10290                           ;PWM.c: 23: PWM3CON = 0b10000000;
 10291  0016' 3080               	movlw	128
 10292  0017' 0096               	movwf	22	;volatile
 10293  0018'                    l3659:	
 10294                           
 10295                           ;PWM.c: 24: TRISCbits.TRISC2 = 0;
 10296  0018' 0140               	movlb	0	; select bank0
 10297  0019' 1114               	bcf	20,2	;volatile
 10298  001A'                    l3661:	
 10299                           
 10300                           ;PWM.c: 25: PWM3CON = 0b11100000;
 10301  001A' 30E0               	movlw	224
 10302  001B' 0146               	movlb	6	; select bank6
 10303  001C' 0096               	movwf	22	;volatile
 10304  001D'                    l3663:	
 10305                           
 10306                           ;PWM.c: 27: PWM4CON = 0;
 10307  001D' 019A               	clrf	26	;volatile
 10308  001E'                    l3665:	
 10309                           
 10310                           ;PWM.c: 28: PWM4DCH = 0;
 10311  001E' 0199               	clrf	25	;volatile
 10312  001F'                    l3667:	
 10313                           
 10314                           ;PWM.c: 29: PWM4DCL = 0b00111111;
 10315  001F' 303F               	movlw	63
 10316  0020' 0098               	movwf	24	;volatile
 10317  0021'                    l3669:	
 10318                           
 10319                           ;PWM.c: 30: PWM4CON = 0b10000000;
 10320  0021' 3080               	movlw	128
 10321  0022' 009A               	movwf	26	;volatile
 10322  0023'                    l3671:	
 10323                           
 10324                           ;PWM.c: 31: TRISCbits.TRISC3 = 0;
 10325  0023' 0140               	movlb	0	; select bank0
 10326  0024' 1194               	bcf	20,3	;volatile
 10327  0025'                    l3673:	
 10328                           
 10329                           ;PWM.c: 32: PWM4CON = 0b11100000;
 10330  0025' 30E0               	movlw	224
 10331  0026' 0146               	movlb	6	; select bank6
 10332  0027' 009A               	movwf	26	;volatile
 10333                           
 10334                           ;PWM.c: 34: PWM5CON = 0;
 10335  0028' 019E               	clrf	30	;volatile
 10336                           
 10337                           ;PWM.c: 35: PWM5DCH = 0;
 10338  0029' 019D               	clrf	29	;volatile
 10339  002A'                    l3675:	
 10340                           
 10341                           ;PWM.c: 36: PWM5DCL = 0b00111111;
 10342  002A' 303F               	movlw	63
 10343  002B' 009C               	movwf	28	;volatile
 10344  002C'                    l3677:	
 10345                           
 10346                           ;PWM.c: 37: PWM5CON = 0b10000000;
 10347  002C' 3080               	movlw	128
 10348  002D' 009E               	movwf	30	;volatile
 10349  002E'                    l3679:	
 10350                           
 10351                           ;PWM.c: 38: TRISCbits.TRISC4 = 0;
 10352  002E' 0140               	movlb	0	; select bank0
 10353  002F' 1214               	bcf	20,4	;volatile
 10354  0030'                    l3681:	
 10355                           
 10356                           ;PWM.c: 39: PWM5CON = 0b11100000;
 10357  0030' 30E0               	movlw	224
 10358  0031' 0146               	movlb	6	; select bank6
 10359  0032' 009E               	movwf	30	;volatile
 10360  0033'                    l3683:	
 10361                           
 10362                           ;PWM.c: 42: T2CLKCON = 0b00000011;
 10363  0033' 3003               	movlw	3
 10364  0034' 0145               	movlb	5	; select bank5
 10365  0035' 0090               	movwf	16	;volatile
 10366  0036'                    l3685:	
 10367                           
 10368                           ;PWM.c: 43: TMR2ON = 1;
 10369  0036' 178E               	bsf	14,7	;volatile
 10370  0037'                    l3687:	
 10371                           
 10372                           ;PWM.c: 44: T2CKPS0 = 0;
 10373  0037' 120E               	bcf	14,4	;volatile
 10374  0038'                    l3689:	
 10375                           
 10376                           ;PWM.c: 45: T2CKPS1 = 0;
 10377  0038' 128E               	bcf	14,5	;volatile
 10378  0039'                    l3691:	
 10379                           
 10380                           ;PWM.c: 46: T2CKPS2 = 1;
 10381  0039' 170E               	bsf	14,6	;volatile
 10382  003A'                    l3693:	
 10383                           
 10384                           ;PWM.c: 48: T2OUTPS0 = 1;
 10385  003A' 140E               	bsf	14,0	;volatile
 10386  003B'                    l3695:	
 10387                           
 10388                           ;PWM.c: 49: T2OUTPS1 = 1;
 10389  003B' 148E               	bsf	14,1	;volatile
 10390  003C'                    l3697:	
 10391                           
 10392                           ;PWM.c: 50: T2OUTPS2 = 1;
 10393  003C' 150E               	bsf	14,2	;volatile
 10394  003D'                    l3699:	
 10395                           
 10396                           ;PWM.c: 51: T2OUTPS3 = 1;
 10397  003D' 158E               	bsf	14,3	;volatile
 10398                           
 10399                           ;PWM.c: 53: TMR2 = 0;
 10400  003E' 018C               	clrf	12	;volatile
 10401  003F'                    l3701:	
 10402                           
 10403                           ;PWM.c: 54: PR2 = 255;
 10404  003F' 30FF               	movlw	255
 10405  0040' 008D               	movwf	13	;volatile
 10406  0041'                    l3703:	
 10407                           
 10408                           ;PWM.c: 55: TMR2IF = 0;
 10409  0041' 014E               	movlb	14	; select bank14
 10410  0042' 1090               	bcf	16,1	;volatile
 10411  0043'                    l232:	
 10412  0043' 0008               	return
 10413  0044'                    __end_of_PWM_INIT:	
 10414                           
 10415                           	psect	text35
 10416  0000'                    __ptext35:	
 10417 ;; *************** function _PPS_unlock *****************
 10418 ;; Defined at:
 10419 ;;		line 11 in file "PPS.c"
 10420 ;; Parameters:    Size  Location     Type
 10421 ;;		None
 10422 ;; Auto vars:     Size  Location     Type
 10423 ;;		None
 10424 ;; Return value:  Size  Location     Type
 10425 ;;                  1    wreg      void 
 10426 ;; Registers used:
 10427 ;;		wreg, status,2
 10428 ;; Tracked objects:
 10429 ;;		On entry : 0/0
 10430 ;;		On exit  : 0/0
 10431 ;;		Unchanged: 0/0
 10432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10433 ;;      Params:         0       0       0       0       0       0       0       0
 10434 ;;      Locals:         0       0       0       0       0       0       0       0
 10435 ;;      Temps:          0       0       0       0       0       0       0       0
 10436 ;;      Totals:         0       0       0       0       0       0       0       0
 10437 ;;Total ram usage:        0 bytes
 10438 ;; Hardware stack levels used:    1
 10439 ;; Hardware stack levels required when called:    2
 10440 ;; This function calls:
 10441 ;;		Nothing
 10442 ;; This function is called by:
 10443 ;;		_main
 10444 ;;		_PWM_INIT
 10445 ;; This function uses a non-reentrant model
 10446 ;;
 10447                           
 10448                           
 10449                           ;psect for function _PPS_unlock
 10450  0000'                    _PPS_unlock:	
 10451  0000'                    l3135:	
 10452                           ;incstack = 0
 10453                           ; Regs used in _PPS_unlock: [wreg+status,2]
 10454                           
 10455                           
 10456                           ;PPS.c: 12: PPSLOCK = 0x55;
 10457  0000' 3055               	movlw	85
 10458  0001' 017D               	movlb	61	; select bank61
 10459  0002' 008F               	movwf	15	;volsfr
 10460                           
 10461                           ;PPS.c: 13: PPSLOCK = 0xAA;
 10462  0003' 30AA               	movlw	170
 10463  0004' 008F               	movwf	15	;volsfr
 10464  0005'                    l3137:	
 10465                           
 10466                           ;PPS.c: 14: PPSLOCK = 0;
 10467  0005' 018F               	clrf	15	;volsfr
 10468  0006'                    l243:	
 10469  0006' 0008               	return
 10470  0007'                    __end_of_PPS_unlock:	
 10471                           
 10472                           	psect	text36
 10473  0000'                    __ptext36:	
 10474 ;; *************** function _PPS_lock *****************
 10475 ;; Defined at:
 10476 ;;		line 17 in file "PPS.c"
 10477 ;; Parameters:    Size  Location     Type
 10478 ;;		None
 10479 ;; Auto vars:     Size  Location     Type
 10480 ;;		None
 10481 ;; Return value:  Size  Location     Type
 10482 ;;                  1    wreg      void 
 10483 ;; Registers used:
 10484 ;;		wreg
 10485 ;; Tracked objects:
 10486 ;;		On entry : 0/0
 10487 ;;		On exit  : 0/0
 10488 ;;		Unchanged: 0/0
 10489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10490 ;;      Params:         0       0       0       0       0       0       0       0
 10491 ;;      Locals:         0       0       0       0       0       0       0       0
 10492 ;;      Temps:          0       0       0       0       0       0       0       0
 10493 ;;      Totals:         0       0       0       0       0       0       0       0
 10494 ;;Total ram usage:        0 bytes
 10495 ;; Hardware stack levels used:    1
 10496 ;; Hardware stack levels required when called:    2
 10497 ;; This function calls:
 10498 ;;		Nothing
 10499 ;; This function is called by:
 10500 ;;		_main
 10501 ;;		_PWM_INIT
 10502 ;; This function uses a non-reentrant model
 10503 ;;
 10504                           
 10505                           
 10506                           ;psect for function _PPS_lock
 10507  0000'                    _PPS_lock:	
 10508  0000'                    l3139:	
 10509                           ;incstack = 0
 10510                           ; Regs used in _PPS_lock: [wreg]
 10511                           
 10512                           
 10513                           ;PPS.c: 18: PPSLOCK = 0x55;
 10514  0000' 3055               	movlw	85
 10515  0001' 017D               	movlb	61	; select bank61
 10516  0002' 008F               	movwf	15	;volsfr
 10517                           
 10518                           ;PPS.c: 19: PPSLOCK = 0xAA;
 10519  0003' 30AA               	movlw	170
 10520  0004' 008F               	movwf	15	;volsfr
 10521                           
 10522                           ;PPS.c: 20: PPSLOCK = 1;
 10523  0005' 3001               	movlw	1
 10524  0006' 008F               	movwf	15	;volsfr
 10525  0007'                    l246:	
 10526  0007' 0008               	return
 10527  0008'                    __end_of_PPS_lock:	
 10528                           
 10529                           	psect	text37
 10530  0000'                    __ptext37:	
 10531 ;; *************** function _PIC_SETUP *****************
 10532 ;; Defined at:
 10533 ;;		line 25 in file "main.c"
 10534 ;; Parameters:    Size  Location     Type
 10535 ;;		None
 10536 ;; Auto vars:     Size  Location     Type
 10537 ;;		None
 10538 ;; Return value:  Size  Location     Type
 10539 ;;                  1    wreg      void 
 10540 ;; Registers used:
 10541 ;;		wreg, status,2, status,0
 10542 ;; Tracked objects:
 10543 ;;		On entry : 0/0
 10544 ;;		On exit  : 0/0
 10545 ;;		Unchanged: 0/0
 10546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10547 ;;      Params:         0       0       0       0       0       0       0       0
 10548 ;;      Locals:         0       0       0       0       0       0       0       0
 10549 ;;      Temps:          0       0       0       0       0       0       0       0
 10550 ;;      Totals:         0       0       0       0       0       0       0       0
 10551 ;;Total ram usage:        0 bytes
 10552 ;; Hardware stack levels used:    1
 10553 ;; Hardware stack levels required when called:    2
 10554 ;; This function calls:
 10555 ;;		Nothing
 10556 ;; This function is called by:
 10557 ;;		_main
 10558 ;; This function uses a non-reentrant model
 10559 ;;
 10560                           
 10561                           
 10562                           ;psect for function _PIC_SETUP
 10563  0000'                    _PIC_SETUP:	
 10564  0000'                    l3553:	
 10565                           ;incstack = 0
 10566                           ; Regs used in _PIC_SETUP: [wreg+status,2+status,0]
 10567                           
 10568                           
 10569                           ;main.c: 27: CPUDOZEbits.IDLEN = 0;
 10570  0000' 0151               	movlb	17	; select bank17
 10571  0001' 138C               	bcf	12,7	;volatile
 10572  0002'                    l3555:	
 10573                           
 10574                           ;main.c: 28: VREGCON = 0b00000011;
 10575  0002' 3003               	movlw	3
 10576  0003' 0150               	movlb	16	; select bank16
 10577  0004' 0092               	movwf	18	;volatile
 10578                           
 10579                           ;main.c: 31: TRISA = 0xFF;
 10580  0005' 30FF               	movlw	255
 10581  0006' 0140               	movlb	0	; select bank0
 10582  0007' 0092               	movwf	18	;volatile
 10583                           
 10584                           ;main.c: 32: TRISC = 0xFF;
 10585  0008' 30FF               	movlw	255
 10586  0009' 0094               	movwf	20	;volatile
 10587  000A'                    l3557:	
 10588                           
 10589                           ;main.c: 33: ANSELA = 0;
 10590  000A' 017E               	movlb	62	; select bank62
 10591  000B' 01B8               	clrf	56	;volatile
 10592  000C'                    l3559:	
 10593                           
 10594                           ;main.c: 34: ANSELC = 0;
 10595  000C' 01CE               	clrf	78	;volatile
 10596  000D'                    l3561:	
 10597                           
 10598                           ;main.c: 35: ANSELAbits.ANSA4 = 1;
 10599  000D' 1638               	bsf	56,4	;volatile
 10600                           
 10601                           ;main.c: 36: WPUA = 0b00100000;
 10602  000E' 3020               	movlw	32
 10603  000F' 00B9               	movwf	57	;volatile
 10604  0010'                    l3563:	
 10605                           
 10606                           ;main.c: 39: T1CONbits.CKPS = 0b00;
 10607  0010' 30CF               	movlw	-49
 10608  0011' 0144               	movlb	4	; select bank4
 10609  0012' 058E               	andwf	14,f	;volatile
 10610  0013'                    l3565:	
 10611                           
 10612                           ;main.c: 40: T1CONbits.nSYNC = 0;
 10613  0013' 110E               	bcf	14,2	;volatile
 10614  0014'                    l3567:	
 10615                           
 10616                           ;main.c: 41: T1CONbits.RD16 = 1;
 10617  0014' 148E               	bsf	14,1	;volatile
 10618  0015'                    l3569:	
 10619                           
 10620                           ;main.c: 42: T1GCONbits.GE = 0;
 10621  0015' 138F               	bcf	15,7	;volatile
 10622  0016'                    l3571:	
 10623                           
 10624                           ;main.c: 43: T1CLK = 0b00000100;
 10625  0016' 3004               	movlw	4
 10626  0017' 0091               	movwf	17	;volatile
 10627  0018'                    l3573:	
 10628                           
 10629                           ;main.c: 44: TMR1 = 65228;
 10630  0018' 30FE               	movlw	254
 10631  0019' 008D               	movwf	13	;volatile
 10632  001A' 30CC               	movlw	204
 10633  001B' 008C               	movwf	12	;volatile
 10634  001C'                    l3575:	
 10635                           
 10636                           ;main.c: 45: PIE4bits.TMR1IE = 1;
 10637  001C' 014E               	movlb	14	; select bank14
 10638  001D' 141A               	bsf	26,0	;volatile
 10639  001E'                    l3577:	
 10640                           
 10641                           ;main.c: 46: T1CONbits.ON = 1;
 10642  001E' 0144               	movlb	4	; select bank4
 10643  001F' 140E               	bsf	14,0	;volatile
 10644  0020'                    l3579:	
 10645                           
 10646                           ;main.c: 49: PIE0bits.IOCIE = 1;
 10647  0020' 014E               	movlb	14	; select bank14
 10648  0021' 1616               	bsf	22,4	;volatile
 10649  0022'                    l3581:	
 10650                           
 10651                           ;main.c: 50: IOCAP = 0b00100000;
 10652  0022' 3020               	movlw	32
 10653  0023' 017E               	movlb	62	; select bank62
 10654  0024' 00BD               	movwf	61	;volatile
 10655  0025'                    l3583:	
 10656                           
 10657                           ;main.c: 51: IOCAN = 0b00100000;
 10658  0025' 3020               	movlw	32
 10659  0026' 00BE               	movwf	62	;volatile
 10660  0027'                    l3585:	
 10661                           
 10662                           ;main.c: 52: IOCAF = 0x00;
 10663  0027' 01BF               	clrf	63	;volatile
 10664  0028'                    l3587:	
 10665                           
 10666                           ;main.c: 54: INTCONbits.GIE = 1;
 10667  0028' 178B               	bsf	11,7	;volatile
 10668  0029'                    l3589:	
 10669                           
 10670                           ;main.c: 55: INTCONbits.PEIE = 1;
 10671  0029' 170B               	bsf	11,6	;volatile
 10672  002A'                    l109:	
 10673  002A' 0008               	return
 10674  002B'                    __end_of_PIC_SETUP:	
 10675                           
 10676                           	psect	text38
 10677  0000'                    __ptext38:	
 10678 ;; *************** function _I2C_bus_reset *****************
 10679 ;; Defined at:
 10680 ;;		line 12 in file "I2C.c"
 10681 ;; Parameters:    Size  Location     Type
 10682 ;;		None
 10683 ;; Auto vars:     Size  Location     Type
 10684 ;;  i               1    1[BANK0 ] unsigned char 
 10685 ;; Return value:  Size  Location     Type
 10686 ;;                  1    wreg      void 
 10687 ;; Registers used:
 10688 ;;		wreg, status,2, status,0
 10689 ;; Tracked objects:
 10690 ;;		On entry : 0/0
 10691 ;;		On exit  : 0/0
 10692 ;;		Unchanged: 0/0
 10693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10694 ;;      Params:         0       0       0       0       0       0       0       0
 10695 ;;      Locals:         0       1       0       0       0       0       0       0
 10696 ;;      Temps:          0       1       0       0       0       0       0       0
 10697 ;;      Totals:         0       2       0       0       0       0       0       0
 10698 ;;Total ram usage:        2 bytes
 10699 ;; Hardware stack levels used:    1
 10700 ;; Hardware stack levels required when called:    2
 10701 ;; This function calls:
 10702 ;;		Nothing
 10703 ;; This function is called by:
 10704 ;;		_main
 10705 ;; This function uses a non-reentrant model
 10706 ;;
 10707                           
 10708                           
 10709                           ;psect for function _I2C_bus_reset
 10710  0000'                    _I2C_bus_reset:	
 10711  0000'                    l3599:	
 10712                           ;incstack = 0
 10713                           ; Regs used in _I2C_bus_reset: [wreg+status,2+status,0]
 10714                           
 10715                           
 10716                           ;I2C.c: 14: TRISCbits.TRISC0 = 1;
 10717  0000' 0140               	movlb	0	; select bank0
 10718  0001' 1414               	bsf	20,0	;volatile
 10719                           
 10720                           ;I2C.c: 15: TRISCbits.TRISC1 = 1;
 10721  0002' 1494               	bsf	20,1	;volatile
 10722  0003'                    l3601:	
 10723                           
 10724                           ;I2C.c: 17: char i = 0;
 10725  0003' 0181'              	clrf	I2C_bus_reset@i
 10726                           
 10727                           ;I2C.c: 19: while(i < 10) {
 10728  0004' 2800'              	goto	l3625
 10729  0005'                    l3603:	
 10730                           
 10731                           ;I2C.c: 20: i++;
 10732  0005' 3001               	movlw	1
 10733  0006' 0080'              	movwf	??_I2C_bus_reset
 10734  0007' 0800'              	movf	??_I2C_bus_reset,w
 10735  0008' 0781'              	addwf	I2C_bus_reset@i,f
 10736  0009'                    l3605:	
 10737                           
 10738                           ;I2C.c: 22: if(!RC1) {
 10739  0009' 188E               	btfsc	14,1	;volatile
 10740  000A' 2800'              	goto	u3241
 10741  000B' 2800'              	goto	u3240
 10742  000C'                    u3241:	
 10743  000C' 2800'              	goto	l3613
 10744  000D'                    u3240:	
 10745  000D'                    l3607:	
 10746                           
 10747                           ;I2C.c: 24: TRISCbits.TRISC0 = 0;
 10748  000D' 1014               	bcf	20,0	;volatile
 10749                           
 10750                           ;I2C.c: 25: RC0 = 0;
 10751  000E' 100E               	bcf	14,0	;volatile
 10752  000F'                    l3609:	
 10753                           
 10754                           ;I2C.c: 26: _delay((unsigned long)((1)*(32000000/4000.0)));
 10755  000F' 300B               	movlw	11
 10756  0010' 0140               	movlb	0	; select bank0
 10757  0011' 0080'              	movwf	??_I2C_bus_reset
 10758  0012' 3062               	movlw	98
 10759  0013'                    u4017:	
 10760  0013' 0B89               	decfsz	9,f
 10761  0014' 2800'              	goto	u4017
 10762  0015' 0B80'              	decfsz	??_I2C_bus_reset,f
 10763  0016' 2800'              	goto	u4017
 10764  0017' 0000               	nop
 10765  0018'                    l3611:	
 10766                           
 10767                           ;I2C.c: 27: TRISCbits.TRISC0 = 1;
 10768  0018' 0140               	movlb	0	; select bank0
 10769  0019' 1414               	bsf	20,0	;volatile
 10770                           
 10771                           ;I2C.c: 28: _delay((unsigned long)((1)*(32000000/4000.0)));
 10772  001A' 300B               	movlw	11
 10773  001B' 0140               	movlb	0	; select bank0
 10774  001C' 0080'              	movwf	??_I2C_bus_reset
 10775  001D' 3062               	movlw	98
 10776  001E'                    u4027:	
 10777  001E' 0B89               	decfsz	9,f
 10778  001F' 2800'              	goto	u4027
 10779  0020' 0B80'              	decfsz	??_I2C_bus_reset,f
 10780  0021' 2800'              	goto	u4027
 10781  0022' 0000               	nop
 10782  0023'                    l3613:	
 10783                           
 10784                           ;I2C.c: 29: };I2C.c: 30: if(RC1) {
 10785  0023' 0140               	movlb	0	; select bank0
 10786  0024' 1C8E               	btfss	14,1	;volatile
 10787  0025' 2800'              	goto	u3251
 10788  0026' 2800'              	goto	u3250
 10789  0027'                    u3251:	
 10790  0027' 2800'              	goto	l3605
 10791  0028'                    u3250:	
 10792  0028'                    l3615:	
 10793                           
 10794                           ;I2C.c: 32: TRISCbits.TRISC1 = 0;
 10795  0028' 1094               	bcf	20,1	;volatile
 10796                           
 10797                           ;I2C.c: 33: RC1 = 0;
 10798  0029' 108E               	bcf	14,1	;volatile
 10799  002A'                    l3617:	
 10800                           
 10801                           ;I2C.c: 34: _delay((unsigned long)((1)*(32000000/4000.0)));
 10802  002A' 300B               	movlw	11
 10803  002B' 0140               	movlb	0	; select bank0
 10804  002C' 0080'              	movwf	??_I2C_bus_reset
 10805  002D' 3062               	movlw	98
 10806  002E'                    u4037:	
 10807  002E' 0B89               	decfsz	9,f
 10808  002F' 2800'              	goto	u4037
 10809  0030' 0B80'              	decfsz	??_I2C_bus_reset,f
 10810  0031' 2800'              	goto	u4037
 10811  0032' 0000               	nop
 10812  0033'                    l3619:	
 10813                           
 10814                           ;I2C.c: 35: TRISCbits.TRISC1 = 1;
 10815  0033' 0140               	movlb	0	; select bank0
 10816  0034' 1494               	bsf	20,1	;volatile
 10817                           
 10818                           ;I2C.c: 36: _delay((unsigned long)((1)*(32000000/4000.0)));
 10819  0035' 300B               	movlw	11
 10820  0036' 0140               	movlb	0	; select bank0
 10821  0037' 0080'              	movwf	??_I2C_bus_reset
 10822  0038' 3062               	movlw	98
 10823  0039'                    u4047:	
 10824  0039' 0B89               	decfsz	9,f
 10825  003A' 2800'              	goto	u4047
 10826  003B' 0B80'              	decfsz	??_I2C_bus_reset,f
 10827  003C' 2800'              	goto	u4047
 10828  003D' 0000               	nop
 10829  003E'                    l3621:	
 10830                           
 10831                           ;I2C.c: 37: if(RC1) {
 10832  003E' 0140               	movlb	0	; select bank0
 10833  003F' 1C8E               	btfss	14,1	;volatile
 10834  0040' 2800'              	goto	u3261
 10835  0041' 2800'              	goto	u3260
 10836  0042'                    u3261:	
 10837  0042' 2800'              	goto	l3605
 10838  0043'                    u3260:	
 10839  0043'                    l3625:	
 10840  0043' 300A               	movlw	10
 10841  0044' 0201'              	subwf	I2C_bus_reset@i,w
 10842  0045' 1C03               	skipc
 10843  0046' 2800'              	goto	u3271
 10844  0047' 2800'              	goto	u3270
 10845  0048'                    u3271:	
 10846  0048' 2800'              	goto	l3603
 10847  0049'                    u3270:	
 10848  0049'                    l278:	
 10849  0049' 0008               	return
 10850  004A'                    __end_of_I2C_bus_reset:	
 10851                           
 10852                           	psect	text39
 10853  0000'                    __ptext39:	
 10854 ;; *************** function _I2C_Master_Init *****************
 10855 ;; Defined at:
 10856 ;;		line 45 in file "I2C.c"
 10857 ;; Parameters:    Size  Location     Type
 10858 ;;  clk             4   26[BANK0 ] const unsigned long 
 10859 ;; Auto vars:     Size  Location     Type
 10860 ;;		None
 10861 ;; Return value:  Size  Location     Type
 10862 ;;                  1    wreg      void 
 10863 ;; Registers used:
 10864 ;;		wreg, status,2, status,0, pclath, cstack
 10865 ;; Tracked objects:
 10866 ;;		On entry : 0/0
 10867 ;;		On exit  : 0/0
 10868 ;;		Unchanged: 0/0
 10869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10870 ;;      Params:         0       4       0       0       0       0       0       0
 10871 ;;      Locals:         0       0       0       0       0       0       0       0
 10872 ;;      Temps:          0       4       0       0       0       0       0       0
 10873 ;;      Totals:         0       8       0       0       0       0       0       0
 10874 ;;Total ram usage:        8 bytes
 10875 ;; Hardware stack levels used:    1
 10876 ;; Hardware stack levels required when called:    3
 10877 ;; This function calls:
 10878 ;;		___lldiv
 10879 ;; This function is called by:
 10880 ;;		_main
 10881 ;; This function uses a non-reentrant model
 10882 ;;
 10883                           
 10884                           
 10885                           ;psect for function _I2C_Master_Init
 10886  0000'                    _I2C_Master_Init:	
 10887  0000'                    l3627:	
 10888                           ;incstack = 0
 10889                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
 10890                           
 10891                           
 10892                           ;I2C.c: 47: SSP1CON1 = 0b00101000;
 10893  0000' 3028               	movlw	40
 10894  0001' 0143               	movlb	3	; select bank3
 10895  0002' 0090               	movwf	16	;volatile
 10896  0003'                    l3629:	
 10897                           
 10898                           ;I2C.c: 48: SSP1CON2 = 0x00;
 10899  0003' 0191               	clrf	17	;volatile
 10900  0004'                    l3631:	
 10901                           
 10902                           ;I2C.c: 49: SSP1ADD = (32000000 / (4*clk)) - 1;
 10903  0004' 0140               	movlb	0	; select bank0
 10904  0005' 081A'              	movf	I2C_Master_Init@clk,w
 10905  0006' 009E'              	movwf	??_I2C_Master_Init
 10906  0007' 081B'              	movf	I2C_Master_Init@clk+1,w
 10907  0008' 009F'              	movwf	??_I2C_Master_Init+1
 10908  0009' 081C'              	movf	I2C_Master_Init@clk+2,w
 10909  000A' 00A0'              	movwf	??_I2C_Master_Init+2
 10910  000B' 081D'              	movf	I2C_Master_Init@clk+3,w
 10911  000C' 00A1'              	movwf	??_I2C_Master_Init+3
 10912  000D' 3002               	movlw	2
 10913  000E'                    u3285:	
 10914  000E' 359E'              	lslf	??_I2C_Master_Init,f
 10915  000F' 0D9F'              	rlf	??_I2C_Master_Init+1,f
 10916  0010' 0DA0'              	rlf	??_I2C_Master_Init+2,f
 10917  0011' 0DA1'              	rlf	??_I2C_Master_Init+3,f
 10918  0012'                    u3280:	
 10919  0012' 0B89               	decfsz	9,f
 10920  0013' 2800'              	goto	u3285
 10921  0014' 0821'              	movf	??_I2C_Master_Init+3,w
 10922  0015' 008F'              	movwf	___lldiv@divisor+3
 10923  0016' 0820'              	movf	??_I2C_Master_Init+2,w
 10924  0017' 008E'              	movwf	___lldiv@divisor+2
 10925  0018' 081F'              	movf	??_I2C_Master_Init+1,w
 10926  0019' 008D'              	movwf	___lldiv@divisor+1
 10927  001A' 081E'              	movf	??_I2C_Master_Init,w
 10928  001B' 008C'              	movwf	___lldiv@divisor
 10929  001C' 3001               	movlw	1
 10930  001D' 0093'              	movwf	___lldiv@dividend+3
 10931  001E' 30E8               	movlw	232
 10932  001F' 0092'              	movwf	___lldiv@dividend+2
 10933  0020' 3048               	movlw	72
 10934  0021' 0091'              	movwf	___lldiv@dividend+1
 10935  0022' 3000               	movlw	0
 10936  0023' 0090'              	movwf	___lldiv@dividend
 10937  0024' 3180' 2000' 3180'  	fcall	___lldiv
 10938  0027' 0140               	movlb	0	; select bank0
 10939  0028' 080C'              	movf	?___lldiv,w
 10940  0029' 3EFF               	addlw	255
 10941  002A' 0143               	movlb	3	; select bank3
 10942  002B' 008D               	movwf	13	;volatile
 10943  002C'                    l3633:	
 10944                           
 10945                           ;I2C.c: 50: SSP1STAT = 0b10000000;
 10946  002C' 3080               	movlw	128
 10947  002D' 008F               	movwf	15	;volatile
 10948  002E'                    l281:	
 10949  002E' 0008               	return
 10950  002F'                    __end_of_I2C_Master_Init:	
 10951                           
 10952                           	psect	text40
 10953  0000'                    __ptext40:	
 10954 ;; *************** function ___lldiv *****************
 10955 ;; Defined at:
 10956 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
 10957 ;; Parameters:    Size  Location     Type
 10958 ;;  divisor         4   12[BANK0 ] unsigned long 
 10959 ;;  dividend        4   16[BANK0 ] unsigned long 
 10960 ;; Auto vars:     Size  Location     Type
 10961 ;;  quotient        4   21[BANK0 ] unsigned long 
 10962 ;;  counter         1   25[BANK0 ] unsigned char 
 10963 ;; Return value:  Size  Location     Type
 10964 ;;                  4   12[BANK0 ] unsigned long 
 10965 ;; Registers used:
 10966 ;;		wreg, status,2, status,0
 10967 ;; Tracked objects:
 10968 ;;		On entry : 0/0
 10969 ;;		On exit  : 0/0
 10970 ;;		Unchanged: 0/0
 10971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10972 ;;      Params:         0       8       0       0       0       0       0       0
 10973 ;;      Locals:         0       5       0       0       0       0       0       0
 10974 ;;      Temps:          0       1       0       0       0       0       0       0
 10975 ;;      Totals:         0      14       0       0       0       0       0       0
 10976 ;;Total ram usage:       14 bytes
 10977 ;; Hardware stack levels used:    1
 10978 ;; Hardware stack levels required when called:    2
 10979 ;; This function calls:
 10980 ;;		Nothing
 10981 ;; This function is called by:
 10982 ;;		_I2C_Master_Init
 10983 ;;		_negotiate_optimal_pdo
 10984 ;;		_i2c_master_init
 10985 ;; This function uses a non-reentrant model
 10986 ;;
 10987                           
 10988                           
 10989                           ;psect for function ___lldiv
 10990  0000'                    ___lldiv:	
 10991  0000'                    l3097:	
 10992                           ;incstack = 0
 10993                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10994                           
 10995  0000' 3000               	movlw	0
 10996  0001' 0140               	movlb	0	; select bank0
 10997  0002' 0098'              	movwf	___lldiv@quotient+3
 10998  0003' 3000               	movlw	0
 10999  0004' 0097'              	movwf	___lldiv@quotient+2
 11000  0005' 3000               	movlw	0
 11001  0006' 0096'              	movwf	___lldiv@quotient+1
 11002  0007' 3000               	movlw	0
 11003  0008' 0095'              	movwf	___lldiv@quotient
 11004  0009' 080F'              	movf	___lldiv@divisor+3,w
 11005  000A' 040E'              	iorwf	___lldiv@divisor+2,w
 11006  000B' 040D'              	iorwf	___lldiv@divisor+1,w
 11007  000C' 040C'              	iorwf	___lldiv@divisor,w
 11008  000D' 1903               	skipnz
 11009  000E' 2800'              	goto	u2491
 11010  000F' 2800'              	goto	u2490
 11011  0010'                    u2491:	
 11012  0010' 2800'              	goto	l3117
 11013  0011'                    u2490:	
 11014  0011'                    l3099:	
 11015  0011' 0199'              	clrf	___lldiv@counter
 11016  0012' 0A99'              	incf	___lldiv@counter,f
 11017  0013' 2800'              	goto	l3103
 11018  0014'                    l3101:	
 11019  0014' 3001               	movlw	1
 11020  0015'                    u2505:	
 11021  0015' 358C'              	lslf	___lldiv@divisor,f
 11022  0016' 0D8D'              	rlf	___lldiv@divisor+1,f
 11023  0017' 0D8E'              	rlf	___lldiv@divisor+2,f
 11024  0018' 0D8F'              	rlf	___lldiv@divisor+3,f
 11025  0019' 0B89               	decfsz	9,f
 11026  001A' 2800'              	goto	u2505
 11027  001B' 3001               	movlw	1
 11028  001C' 0094'              	movwf	??___lldiv
 11029  001D' 0814'              	movf	??___lldiv,w
 11030  001E' 0799'              	addwf	___lldiv@counter,f
 11031  001F'                    l3103:	
 11032  001F' 1F8F'              	btfss	___lldiv@divisor+3,7
 11033  0020' 2800'              	goto	u2511
 11034  0021' 2800'              	goto	u2510
 11035  0022'                    u2511:	
 11036  0022' 2800'              	goto	l3101
 11037  0023'                    u2510:	
 11038  0023'                    l3105:	
 11039  0023' 3001               	movlw	1
 11040  0024'                    u2525:	
 11041  0024' 3595'              	lslf	___lldiv@quotient,f
 11042  0025' 0D96'              	rlf	___lldiv@quotient+1,f
 11043  0026' 0D97'              	rlf	___lldiv@quotient+2,f
 11044  0027' 0D98'              	rlf	___lldiv@quotient+3,f
 11045  0028' 0B89               	decfsz	9,f
 11046  0029' 2800'              	goto	u2525
 11047  002A'                    l3107:	
 11048  002A' 080F'              	movf	___lldiv@divisor+3,w
 11049  002B' 0213'              	subwf	___lldiv@dividend+3,w
 11050  002C' 1D03               	skipz
 11051  002D' 2800'              	goto	u2535
 11052  002E' 080E'              	movf	___lldiv@divisor+2,w
 11053  002F' 0212'              	subwf	___lldiv@dividend+2,w
 11054  0030' 1D03               	skipz
 11055  0031' 2800'              	goto	u2535
 11056  0032' 080D'              	movf	___lldiv@divisor+1,w
 11057  0033' 0211'              	subwf	___lldiv@dividend+1,w
 11058  0034' 1D03               	skipz
 11059  0035' 2800'              	goto	u2535
 11060  0036' 080C'              	movf	___lldiv@divisor,w
 11061  0037' 0210'              	subwf	___lldiv@dividend,w
 11062  0038'                    u2535:	
 11063  0038' 1C03               	skipc
 11064  0039' 2800'              	goto	u2531
 11065  003A' 2800'              	goto	u2530
 11066  003B'                    u2531:	
 11067  003B' 2800'              	goto	l3113
 11068  003C'                    u2530:	
 11069  003C'                    l3109:	
 11070  003C' 080C'              	movf	___lldiv@divisor,w
 11071  003D' 0290'              	subwf	___lldiv@dividend,f
 11072  003E' 080D'              	movf	___lldiv@divisor+1,w
 11073  003F' 3B91'              	subwfb	___lldiv@dividend+1,f
 11074  0040' 080E'              	movf	___lldiv@divisor+2,w
 11075  0041' 3B92'              	subwfb	___lldiv@dividend+2,f
 11076  0042' 080F'              	movf	___lldiv@divisor+3,w
 11077  0043' 3B93'              	subwfb	___lldiv@dividend+3,f
 11078  0044'                    l3111:	
 11079  0044' 1415'              	bsf	___lldiv@quotient,0
 11080  0045'                    l3113:	
 11081  0045' 3001               	movlw	1
 11082  0046'                    u2545:	
 11083  0046' 368F'              	lsrf	___lldiv@divisor+3,f
 11084  0047' 0C8E'              	rrf	___lldiv@divisor+2,f
 11085  0048' 0C8D'              	rrf	___lldiv@divisor+1,f
 11086  0049' 0C8C'              	rrf	___lldiv@divisor,f
 11087  004A' 0B89               	decfsz	9,f
 11088  004B' 2800'              	goto	u2545
 11089  004C'                    l3115:	
 11090  004C' 3001               	movlw	1
 11091  004D' 0299'              	subwf	___lldiv@counter,f
 11092  004E' 1D03               	btfss	3,2
 11093  004F' 2800'              	goto	u2551
 11094  0050' 2800'              	goto	u2550
 11095  0051'                    u2551:	
 11096  0051' 2800'              	goto	l3105
 11097  0052'                    u2550:	
 11098  0052'                    l3117:	
 11099  0052' 0818'              	movf	___lldiv@quotient+3,w
 11100  0053' 008F'              	movwf	?___lldiv+3
 11101  0054' 0817'              	movf	___lldiv@quotient+2,w
 11102  0055' 008E'              	movwf	?___lldiv+2
 11103  0056' 0816'              	movf	___lldiv@quotient+1,w
 11104  0057' 008D'              	movwf	?___lldiv+1
 11105  0058' 0815'              	movf	___lldiv@quotient,w
 11106  0059' 008C'              	movwf	?___lldiv
 11107  005A'                    l937:	
 11108  005A' 0008               	return
 11109  005B'                    __end_of___lldiv:	
 11110                           
 11111                           	psect	text41
 11112  0000'                    __ptext41:	
 11113 ;; *************** function _BQ_UPDATE *****************
 11114 ;; Defined at:
 11115 ;;		line 60 in file "BQ25895M.c"
 11116 ;; Parameters:    Size  Location     Type
 11117 ;;		None
 11118 ;; Auto vars:     Size  Location     Type
 11119 ;;		None
 11120 ;; Return value:  Size  Location     Type
 11121 ;;                  1    wreg      void 
 11122 ;; Registers used:
 11123 ;;		wreg, status,2, status,0, pclath, cstack
 11124 ;; Tracked objects:
 11125 ;;		On entry : 0/0
 11126 ;;		On exit  : 0/0
 11127 ;;		Unchanged: 0/0
 11128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11129 ;;      Params:         0       0       0       0       0       0       0       0
 11130 ;;      Locals:         0       0       0       0       0       0       0       0
 11131 ;;      Temps:          0       1       0       0       0       0       0       0
 11132 ;;      Totals:         0       1       0       0       0       0       0       0
 11133 ;;Total ram usage:        1 bytes
 11134 ;; Hardware stack levels used:    1
 11135 ;; Hardware stack levels required when called:    6
 11136 ;; This function calls:
 11137 ;;		_BQ_Read
 11138 ;;		_BQ_Write
 11139 ;;		_BQ_get_chrg_state
 11140 ;;		_get_time
 11141 ;;		_timer_diff
 11142 ;; This function is called by:
 11143 ;;		_main
 11144 ;; This function uses a non-reentrant model
 11145 ;;
 11146                           
 11147                           
 11148                           ;psect for function _BQ_UPDATE
 11149  0000'                    _BQ_UPDATE:	
 11150  0000'                    l3733:	
 11151                           ;incstack = 0
 11152                           ; Regs used in _BQ_UPDATE: [wreg+status,2+status,0+pclath+cstack]
 11153                           
 11154                           
 11155                           ;BQ25895M.c: 61: if(BQ_adc_state == 0) {
 11156  0000' 0140               	movlb	0	; select bank0
 11157  0001' 080C'              	movf	_BQ_adc_state,w
 11158  0002' 1D03               	btfss	3,2
 11159  0003' 2800'              	goto	u3351
 11160  0004' 2800'              	goto	u3350
 11161  0005'                    u3351:	
 11162  0005' 2800'              	goto	l3741
 11163  0006'                    u3350:	
 11164  0006'                    l3735:	
 11165                           
 11166                           ;BQ25895M.c: 62: VBUS_CHRG_STATE = BQ_get_chrg_state();
 11167  0006' 3180' 2000' 3180'  	fcall	_BQ_get_chrg_state
 11168  0009' 0140               	movlb	0	; select bank0
 11169  000A' 008E'              	movwf	??_BQ_UPDATE
 11170  000B' 080E'              	movf	??_BQ_UPDATE,w
 11171  000C' 008E'              	movwf	_VBUS_CHRG_STATE
 11172                           
 11173                           ;BQ25895M.c: 63: BQ_Write(0x02, 0b10010001);
 11174  000D' 3091               	movlw	145
 11175  000E' 008E'              	movwf	??_BQ_UPDATE
 11176  000F' 080E'              	movf	??_BQ_UPDATE,w
 11177  0010' 0081'              	movwf	BQ_Write@data
 11178  0011' 3002               	movlw	2
 11179  0012' 3180' 2000' 3180'  	fcall	_BQ_Write
 11180  0015'                    l3737:	
 11181                           
 11182                           ;BQ25895M.c: 64: BQ_adc_time = get_time();
 11183  0015' 3180' 2000' 3180'  	fcall	_get_time
 11184  0018' 0140               	movlb	0	; select bank0
 11185  0019' 0803'              	movf	?_get_time+3,w
 11186  001A' 0142               	movlb	2	; select bank2
 11187  001B' 0080'              	movwf	(_BQ_adc_time+3)^(0+256)
 11188  001C' 0140               	movlb	0	; select bank0
 11189  001D' 0802'              	movf	?_get_time+2,w
 11190  001E' 0142               	movlb	2	; select bank2
 11191  001F' 0080'              	movwf	(_BQ_adc_time+2)^(0+256)
 11192  0020' 0140               	movlb	0	; select bank0
 11193  0021' 0801'              	movf	?_get_time+1,w
 11194  0022' 0142               	movlb	2	; select bank2
 11195  0023' 0080'              	movwf	(_BQ_adc_time+1)^(0+256)
 11196  0024' 0140               	movlb	0	; select bank0
 11197  0025' 0800'              	movf	?_get_time,w
 11198  0026' 0142               	movlb	2	; select bank2
 11199  0027' 0080'              	movwf	_BQ_adc_time^(0+256)
 11200  0028'                    l3739:	
 11201                           
 11202                           ;BQ25895M.c: 65: BQ_adc_state = 1;
 11203  0028' 0140               	movlb	0	; select bank0
 11204  0029' 018C'              	clrf	_BQ_adc_state
 11205  002A' 0A8C'              	incf	_BQ_adc_state,f
 11206                           
 11207                           ;BQ25895M.c: 66: }
 11208  002B' 2800'              	goto	l355
 11209  002C'                    l3741:	
 11210                           
 11211                           ;BQ25895M.c: 67: else if(BQ_adc_state == 1) {
 11212  002C' 030C'              	decf	_BQ_adc_state,w
 11213  002D' 1D03               	btfss	3,2
 11214  002E' 2800'              	goto	u3361
 11215  002F' 2800'              	goto	u3360
 11216  0030'                    u3361:	
 11217  0030' 2800'              	goto	l3751
 11218  0031'                    u3360:	
 11219  0031'                    l3743:	
 11220                           
 11221                           ;BQ25895M.c: 68: if(timer_diff(BQ_adc_time) >= 80) {
 11222  0031' 0142               	movlb	2	; select bank2
 11223  0032' 0800'              	movf	(_BQ_adc_time+3)^(0+256),w
 11224  0033' 0140               	movlb	0	; select bank0
 11225  0034' 0083'              	movwf	timer_diff@t+3
 11226  0035' 0142               	movlb	2	; select bank2
 11227  0036' 0800'              	movf	(_BQ_adc_time+2)^(0+256),w
 11228  0037' 0140               	movlb	0	; select bank0
 11229  0038' 0082'              	movwf	timer_diff@t+2
 11230  0039' 0142               	movlb	2	; select bank2
 11231  003A' 0800'              	movf	(_BQ_adc_time+1)^(0+256),w
 11232  003B' 0140               	movlb	0	; select bank0
 11233  003C' 0081'              	movwf	timer_diff@t+1
 11234  003D' 0142               	movlb	2	; select bank2
 11235  003E' 0800'              	movf	_BQ_adc_time^(0+256),w
 11236  003F' 0140               	movlb	0	; select bank0
 11237  0040' 0080'              	movwf	timer_diff@t
 11238  0041' 3180' 2000' 3180'  	fcall	_timer_diff
 11239  0044' 0140               	movlb	0	; select bank0
 11240  0045' 0803'              	movf	?_timer_diff+3,w
 11241  0046' 1D03               	btfss	3,2
 11242  0047' 2800'              	goto	u3370
 11243  0048' 0802'              	movf	?_timer_diff+2,w
 11244  0049' 1D03               	btfss	3,2
 11245  004A' 2800'              	goto	u3370
 11246  004B' 0801'              	movf	?_timer_diff+1,w
 11247  004C' 1D03               	btfss	3,2
 11248  004D' 2800'              	goto	u3370
 11249  004E' 3050               	movlw	80
 11250  004F' 0200'              	subwf	?_timer_diff,w
 11251  0050' 1C03               	btfss	3,0
 11252  0051' 2800'              	goto	u3371
 11253  0052' 2800'              	goto	u3370
 11254  0053'                    u3371:	
 11255  0053' 2800'              	goto	l355
 11256  0054'                    u3370:	
 11257  0054'                    l3745:	
 11258                           
 11259                           ;BQ25895M.c: 69: BATTERY_VOLTAGE = BQ_Read(0x0E);
 11260  0054' 300E               	movlw	14
 11261  0055' 3180' 2000' 3180'  	fcall	_BQ_Read
 11262  0058' 0140               	movlb	0	; select bank0
 11263  0059' 0803'              	movf	?_BQ_Read,w
 11264  005A' 008E'              	movwf	??_BQ_UPDATE
 11265  005B' 080E'              	movf	??_BQ_UPDATE,w
 11266  005C' 008D'              	movwf	_BATTERY_VOLTAGE
 11267  005D'                    l3747:	
 11268                           
 11269                           ;BQ25895M.c: 70: BQ_adc_state = 2;
 11270  005D' 3002               	movlw	2
 11271  005E' 008E'              	movwf	??_BQ_UPDATE
 11272  005F' 080E'              	movf	??_BQ_UPDATE,w
 11273  0060' 008C'              	movwf	_BQ_adc_state
 11274  0061'                    l3749:	
 11275                           
 11276                           ;BQ25895M.c: 71: BQ_adc_time = get_time();
 11277  0061' 3180' 2000' 3180'  	fcall	_get_time
 11278  0064' 0140               	movlb	0	; select bank0
 11279  0065' 0803'              	movf	?_get_time+3,w
 11280  0066' 0142               	movlb	2	; select bank2
 11281  0067' 0080'              	movwf	(_BQ_adc_time+3)^(0+256)
 11282  0068' 0140               	movlb	0	; select bank0
 11283  0069' 0802'              	movf	?_get_time+2,w
 11284  006A' 0142               	movlb	2	; select bank2
 11285  006B' 0080'              	movwf	(_BQ_adc_time+2)^(0+256)
 11286  006C' 0140               	movlb	0	; select bank0
 11287  006D' 0801'              	movf	?_get_time+1,w
 11288  006E' 0142               	movlb	2	; select bank2
 11289  006F' 0080'              	movwf	(_BQ_adc_time+1)^(0+256)
 11290  0070' 0140               	movlb	0	; select bank0
 11291  0071' 0800'              	movf	?_get_time,w
 11292  0072' 0142               	movlb	2	; select bank2
 11293  0073' 0080'              	movwf	_BQ_adc_time^(0+256)
 11294  0074' 2800'              	goto	l355
 11295  0075'                    l3751:	
 11296                           
 11297                           ;BQ25895M.c: 74: else if(BQ_adc_state == 2) {
 11298  0075' 3002               	movlw	2
 11299  0076' 060C'              	xorwf	_BQ_adc_state,w
 11300  0077' 1D03               	btfss	3,2
 11301  0078' 2800'              	goto	u3381
 11302  0079' 2800'              	goto	u3380
 11303  007A'                    u3381:	
 11304  007A' 2800'              	goto	l3755
 11305  007B'                    u3380:	
 11306  007B'                    l3753:	
 11307                           
 11308                           ;BQ25895M.c: 75: if(timer_diff(BQ_adc_time) >= 20) {
 11309  007B' 0142               	movlb	2	; select bank2
 11310  007C' 0800'              	movf	(_BQ_adc_time+3)^(0+256),w
 11311  007D' 0140               	movlb	0	; select bank0
 11312  007E' 0083'              	movwf	timer_diff@t+3
 11313  007F' 0142               	movlb	2	; select bank2
 11314  0080' 0800'              	movf	(_BQ_adc_time+2)^(0+256),w
 11315  0081' 0140               	movlb	0	; select bank0
 11316  0082' 0082'              	movwf	timer_diff@t+2
 11317  0083' 0142               	movlb	2	; select bank2
 11318  0084' 0800'              	movf	(_BQ_adc_time+1)^(0+256),w
 11319  0085' 0140               	movlb	0	; select bank0
 11320  0086' 0081'              	movwf	timer_diff@t+1
 11321  0087' 0142               	movlb	2	; select bank2
 11322  0088' 0800'              	movf	_BQ_adc_time^(0+256),w
 11323  0089' 0140               	movlb	0	; select bank0
 11324  008A' 0080'              	movwf	timer_diff@t
 11325  008B' 3180' 2000' 3180'  	fcall	_timer_diff
 11326  008E' 0140               	movlb	0	; select bank0
 11327  008F' 0803'              	movf	?_timer_diff+3,w
 11328  0090' 1D03               	btfss	3,2
 11329  0091' 2800'              	goto	u3390
 11330  0092' 0802'              	movf	?_timer_diff+2,w
 11331  0093' 1D03               	btfss	3,2
 11332  0094' 2800'              	goto	u3390
 11333  0095' 0801'              	movf	?_timer_diff+1,w
 11334  0096' 1D03               	btfss	3,2
 11335  0097' 2800'              	goto	u3390
 11336  0098' 3014               	movlw	20
 11337  0099' 0200'              	subwf	?_timer_diff,w
 11338  009A' 1C03               	btfss	3,0
 11339  009B' 2800'              	goto	u3391
 11340  009C' 2800'              	goto	u3390
 11341  009D'                    u3391:	
 11342  009D' 2800'              	goto	l351
 11343  009E'                    u3390:	
 11344  009E'                    l3755:	
 11345                           
 11346                           ;BQ25895M.c: 76: BQ_adc_state = 0;
 11347  009E' 018C'              	clrf	_BQ_adc_state
 11348  009F' 2800'              	goto	l355
 11349  00A0'                    l351:	
 11350  00A0'                    l355:	
 11351  00A0' 0008               	return
 11352  00A1'                    __end_of_BQ_UPDATE:	
 11353                           
 11354                           	psect	text42
 11355  0000'                    __ptext42:	
 11356 ;; *************** function _timer_diff *****************
 11357 ;; Defined at:
 11358 ;;		line 17 in file "time.c"
 11359 ;; Parameters:    Size  Location     Type
 11360 ;;  t               4    0[BANK0 ] unsigned long 
 11361 ;; Auto vars:     Size  Location     Type
 11362 ;;		None
 11363 ;; Return value:  Size  Location     Type
 11364 ;;                  4    0[BANK0 ] unsigned long 
 11365 ;; Registers used:
 11366 ;;		wreg
 11367 ;; Tracked objects:
 11368 ;;		On entry : 0/0
 11369 ;;		On exit  : 0/0
 11370 ;;		Unchanged: 0/0
 11371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11372 ;;      Params:         0       4       0       0       0       0       0       0
 11373 ;;      Locals:         0       0       0       0       0       0       0       0
 11374 ;;      Temps:          0       4       0       0       0       0       0       0
 11375 ;;      Totals:         0       8       0       0       0       0       0       0
 11376 ;;Total ram usage:        8 bytes
 11377 ;; Hardware stack levels used:    1
 11378 ;; Hardware stack levels required when called:    2
 11379 ;; This function calls:
 11380 ;;		Nothing
 11381 ;; This function is called by:
 11382 ;;		_main
 11383 ;;		_BQ_UPDATE
 11384 ;;		_RGB_fade
 11385 ;;		_chrg_led
 11386 ;;		_flash_led
 11387 ;; This function uses a non-reentrant model
 11388 ;;
 11389                           
 11390                           
 11391                           ;psect for function _timer_diff
 11392  0000'                    _timer_diff:	
 11393  0000'                    l3049:	
 11394                           ;incstack = 0
 11395                           ; Regs used in _timer_diff: [wreg]
 11396                           
 11397                           
 11398                           ;time.c: 18: return timer_counter - t;
 11399  0000' 0140               	movlb	0	; select bank0
 11400  0001' 0800'              	movf	timer_diff@t,w
 11401  0002' 0141               	movlb	1	; select bank1
 11402  0003' 0200'              	subwf	_timer_counter^(0+128),w
 11403  0004' 0140               	movlb	0	; select bank0
 11404  0005' 0084'              	movwf	??_timer_diff
 11405  0006' 0801'              	movf	timer_diff@t+1,w
 11406  0007' 0141               	movlb	1	; select bank1
 11407  0008' 3B00'              	subwfb	(_timer_counter+1)^(0+128),w
 11408  0009' 0140               	movlb	0	; select bank0
 11409  000A' 0085'              	movwf	??_timer_diff+1
 11410  000B' 0802'              	movf	timer_diff@t+2,w
 11411  000C' 0141               	movlb	1	; select bank1
 11412  000D' 3B00'              	subwfb	(_timer_counter+2)^(0+128),w
 11413  000E' 0140               	movlb	0	; select bank0
 11414  000F' 0086'              	movwf	??_timer_diff+2
 11415  0010' 0803'              	movf	timer_diff@t+3,w
 11416  0011' 0141               	movlb	1	; select bank1
 11417  0012' 3B00'              	subwfb	(_timer_counter+3)^(0+128),w
 11418  0013' 0140               	movlb	0	; select bank0
 11419  0014' 0087'              	movwf	??_timer_diff+3
 11420  0015' 0807'              	movf	??_timer_diff+3,w
 11421  0016' 0083'              	movwf	?_timer_diff+3
 11422  0017' 0806'              	movf	??_timer_diff+2,w
 11423  0018' 0082'              	movwf	?_timer_diff+2
 11424  0019' 0805'              	movf	??_timer_diff+1,w
 11425  001A' 0081'              	movwf	?_timer_diff+1
 11426  001B' 0804'              	movf	??_timer_diff,w
 11427  001C' 0080'              	movwf	?_timer_diff
 11428  001D'                    l833:	
 11429  001D' 0008               	return
 11430  001E'                    __end_of_timer_diff:	
 11431                           
 11432                           	psect	text43
 11433  0000'                    __ptext43:	
 11434 ;; *************** function _get_time *****************
 11435 ;; Defined at:
 11436 ;;		line 13 in file "time.c"
 11437 ;; Parameters:    Size  Location     Type
 11438 ;;		None
 11439 ;; Auto vars:     Size  Location     Type
 11440 ;;		None
 11441 ;; Return value:  Size  Location     Type
 11442 ;;                  4    0[BANK0 ] unsigned long 
 11443 ;; Registers used:
 11444 ;;		wreg
 11445 ;; Tracked objects:
 11446 ;;		On entry : 0/0
 11447 ;;		On exit  : 0/0
 11448 ;;		Unchanged: 0/0
 11449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11450 ;;      Params:         0       4       0       0       0       0       0       0
 11451 ;;      Locals:         0       0       0       0       0       0       0       0
 11452 ;;      Temps:          0       0       0       0       0       0       0       0
 11453 ;;      Totals:         0       4       0       0       0       0       0       0
 11454 ;;Total ram usage:        4 bytes
 11455 ;; Hardware stack levels used:    1
 11456 ;; Hardware stack levels required when called:    2
 11457 ;; This function calls:
 11458 ;;		Nothing
 11459 ;; This function is called by:
 11460 ;;		_main
 11461 ;;		_BQ_UPDATE
 11462 ;;		_RGB_fade
 11463 ;;		_chrg_led
 11464 ;;		_flash_led
 11465 ;; This function uses a non-reentrant model
 11466 ;;
 11467                           
 11468                           
 11469                           ;psect for function _get_time
 11470  0000'                    _get_time:	
 11471  0000'                    l3045:	
 11472                           ;incstack = 0
 11473                           ; Regs used in _get_time: [wreg]
 11474                           
 11475                           
 11476                           ;time.c: 14: return timer_counter;
 11477  0000' 0141               	movlb	1	; select bank1
 11478  0001' 0800'              	movf	(_timer_counter+3)^(0+128),w
 11479  0002' 0140               	movlb	0	; select bank0
 11480  0003' 0083'              	movwf	?_get_time+3
 11481  0004' 0141               	movlb	1	; select bank1
 11482  0005' 0800'              	movf	(_timer_counter+2)^(0+128),w
 11483  0006' 0140               	movlb	0	; select bank0
 11484  0007' 0082'              	movwf	?_get_time+2
 11485  0008' 0141               	movlb	1	; select bank1
 11486  0009' 0800'              	movf	(_timer_counter+1)^(0+128),w
 11487  000A' 0140               	movlb	0	; select bank0
 11488  000B' 0081'              	movwf	?_get_time+1
 11489  000C' 0141               	movlb	1	; select bank1
 11490  000D' 0800'              	movf	_timer_counter^(0+128),w
 11491  000E' 0140               	movlb	0	; select bank0
 11492  000F' 0080'              	movwf	?_get_time
 11493  0010'                    l830:	
 11494  0010' 0008               	return
 11495  0011'                    __end_of_get_time:	
 11496                           
 11497                           	psect	text44
 11498  0000'                    __ptext44:	
 11499 ;; *************** function _BQ_get_chrg_state *****************
 11500 ;; Defined at:
 11501 ;;		line 43 in file "BQ25895M.c"
 11502 ;; Parameters:    Size  Location     Type
 11503 ;;		None
 11504 ;; Auto vars:     Size  Location     Type
 11505 ;;  data            2   11[BANK0 ] unsigned char [2]
 11506 ;;  temp            1   13[BANK0 ] unsigned char 
 11507 ;; Return value:  Size  Location     Type
 11508 ;;                  1    wreg      PTR unsigned char 
 11509 ;; Registers used:
 11510 ;;		wreg, status,2, status,0, pclath, cstack
 11511 ;; Tracked objects:
 11512 ;;		On entry : 0/0
 11513 ;;		On exit  : 0/0
 11514 ;;		Unchanged: 0/0
 11515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11516 ;;      Params:         0       0       0       0       0       0       0       0
 11517 ;;      Locals:         0       3       0       0       0       0       0       0
 11518 ;;      Temps:          0       2       0       0       0       0       0       0
 11519 ;;      Totals:         0       5       0       0       0       0       0       0
 11520 ;;Total ram usage:        5 bytes
 11521 ;; Hardware stack levels used:    1
 11522 ;; Hardware stack levels required when called:    5
 11523 ;; This function calls:
 11524 ;;		_BQ_Read
 11525 ;; This function is called by:
 11526 ;;		_BQ_UPDATE
 11527 ;; This function uses a non-reentrant model
 11528 ;;
 11529                           
 11530                           
 11531                           ;psect for function _BQ_get_chrg_state
 11532  0000'                    _BQ_get_chrg_state:	
 11533  0000'                    l3141:	
 11534                           ;incstack = 0
 11535                           ; Regs used in _BQ_get_chrg_state: [wreg+status,2+status,0+pclath+cstack]
 11536                           
 11537                           
 11538                           ;BQ25895M.c: 45: char data[2];;BQ25895M.c: 46: char temp = BQ_Read(0x0B);
 11539  0000' 300B               	movlw	11
 11540  0001' 3180' 2000' 3180'  	fcall	_BQ_Read
 11541  0004' 0140               	movlb	0	; select bank0
 11542  0005' 0803'              	movf	?_BQ_Read,w
 11543  0006' 0089'              	movwf	??_BQ_get_chrg_state
 11544  0007' 0809'              	movf	??_BQ_get_chrg_state,w
 11545  0008' 008D'              	movwf	BQ_get_chrg_state@temp
 11546  0009'                    l3143:	
 11547                           
 11548                           ;BQ25895M.c: 48: data[0] = (temp >> 4) & 0b00000111;
 11549  0009' 080D'              	movf	BQ_get_chrg_state@temp,w
 11550  000A' 0089'              	movwf	??_BQ_get_chrg_state
 11551  000B' 3004               	movlw	4
 11552  000C'                    u2585:	
 11553  000C' 3689'              	lsrf	??_BQ_get_chrg_state,f
 11554  000D' 0B89               	decfsz	9,f
 11555  000E' 2800'              	goto	u2585
 11556  000F' 0809'              	movf	??_BQ_get_chrg_state,w
 11557  0010' 3907               	andlw	7
 11558  0011' 008A'              	movwf	??_BQ_get_chrg_state+1
 11559  0012' 080A'              	movf	??_BQ_get_chrg_state+1,w
 11560  0013' 008B'              	movwf	BQ_get_chrg_state@data
 11561  0014'                    l3145:	
 11562                           
 11563                           ;BQ25895M.c: 49: data[1] = (temp >> 2) & 0b00000011;
 11564  0014' 080D'              	movf	BQ_get_chrg_state@temp,w
 11565  0015' 0089'              	movwf	??_BQ_get_chrg_state
 11566  0016' 3002               	movlw	2
 11567  0017'                    u2595:	
 11568  0017' 3689'              	lsrf	??_BQ_get_chrg_state,f
 11569  0018' 0B89               	decfsz	9,f
 11570  0019' 2800'              	goto	u2595
 11571  001A' 0809'              	movf	??_BQ_get_chrg_state,w
 11572  001B' 3903               	andlw	3
 11573  001C' 008A'              	movwf	??_BQ_get_chrg_state+1
 11574  001D' 080A'              	movf	??_BQ_get_chrg_state+1,w
 11575  001E' 008C'              	movwf	BQ_get_chrg_state@data+1
 11576  001F'                    l3147:	
 11577                           
 11578                           ;BQ25895M.c: 51: return data;
 11579  001F' 3000'              	movlw	(low (BQ_get_chrg_state@data| 0))& (0+255)
 11580  0020'                    l336:	
 11581  0020' 0008               	return
 11582  0021'                    __end_of_BQ_get_chrg_state:	
 11583                           
 11584                           	psect	text45
 11585  0000'                    __ptext45:	
 11586 ;; *************** function _BQ_Read *****************
 11587 ;; Defined at:
 11588 ;;		line 24 in file "BQ25895M.c"
 11589 ;; Parameters:    Size  Location     Type
 11590 ;;  reg             1    wreg     unsigned char 
 11591 ;; Auto vars:     Size  Location     Type
 11592 ;;  reg             1    7[BANK0 ] unsigned char 
 11593 ;;  data            1    8[BANK0 ] unsigned char 
 11594 ;; Return value:  Size  Location     Type
 11595 ;;                  2    3[BANK0 ] unsigned short 
 11596 ;; Registers used:
 11597 ;;		wreg, status,2, status,0, pclath, cstack
 11598 ;; Tracked objects:
 11599 ;;		On entry : 0/0
 11600 ;;		On exit  : 0/0
 11601 ;;		Unchanged: 0/0
 11602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11603 ;;      Params:         0       2       0       0       0       0       0       0
 11604 ;;      Locals:         0       2       0       0       0       0       0       0
 11605 ;;      Temps:          0       2       0       0       0       0       0       0
 11606 ;;      Totals:         0       6       0       0       0       0       0       0
 11607 ;;Total ram usage:        6 bytes
 11608 ;; Hardware stack levels used:    1
 11609 ;; Hardware stack levels required when called:    4
 11610 ;; This function calls:
 11611 ;;		_I2C_Master_Read
 11612 ;;		_I2C_Master_Start
 11613 ;;		_I2C_Master_Stop
 11614 ;;		_I2C_Master_Write
 11615 ;; This function is called by:
 11616 ;;		_BQ_get_chrg_state
 11617 ;;		_BQ_UPDATE
 11618 ;;		_BQ_read_adc
 11619 ;; This function uses a non-reentrant model
 11620 ;;
 11621                           
 11622                           
 11623                           ;psect for function _BQ_Read
 11624  0000'                    _BQ_Read:	
 11625                           
 11626                           ;incstack = 0
 11627                           ; Regs used in _BQ_Read: [wreg+status,2+status,0+pclath+cstack]
 11628                           ;BQ_Read@reg stored from wreg
 11629  0000' 0140               	movlb	0	; select bank0
 11630  0001' 0087'              	movwf	BQ_Read@reg
 11631  0002'                    l3053:	
 11632                           
 11633                           ;BQ25895M.c: 25: unsigned char data;;BQ25895M.c: 27: I2C_Master_Start();
 11634  0002' 3180' 2000' 3180'  	fcall	_I2C_Master_Start
 11635                           
 11636                           ;BQ25895M.c: 28: I2C_Master_Write(0x6A << 1);
 11637  0005' 30D4               	movlw	212
 11638  0006' 3180' 2000' 3180'  	fcall	_I2C_Master_Write
 11639                           
 11640                           ;BQ25895M.c: 29: I2C_Master_Write(reg);
 11641  0009' 0140               	movlb	0	; select bank0
 11642  000A' 0807'              	movf	BQ_Read@reg,w
 11643  000B' 3180' 2000' 3180'  	fcall	_I2C_Master_Write
 11644                           
 11645                           ;BQ25895M.c: 30: I2C_Master_Start();
 11646  000E' 3180' 2000' 3180'  	fcall	_I2C_Master_Start
 11647                           
 11648                           ;BQ25895M.c: 31: I2C_Master_Write(0b11010101);
 11649  0011' 30D5               	movlw	213
 11650  0012' 3180' 2000' 3180'  	fcall	_I2C_Master_Write
 11651                           
 11652                           ;BQ25895M.c: 32: data=I2C_Master_Read(1);
 11653  0015' 3001               	movlw	1
 11654  0016' 3180' 2000' 3180'  	fcall	_I2C_Master_Read
 11655  0019' 0140               	movlb	0	; select bank0
 11656  001A' 0085'              	movwf	??_BQ_Read
 11657  001B' 0805'              	movf	??_BQ_Read,w
 11658  001C' 0088'              	movwf	BQ_Read@data
 11659                           
 11660                           ;BQ25895M.c: 33: I2C_Master_Stop();
 11661  001D' 3180' 2000' 3180'  	fcall	_I2C_Master_Stop
 11662  0020'                    l3055:	
 11663                           
 11664                           ;BQ25895M.c: 34: return data;
 11665  0020' 0140               	movlb	0	; select bank0
 11666  0021' 0808'              	movf	BQ_Read@data,w
 11667  0022' 0085'              	movwf	??_BQ_Read
 11668  0023' 0186'              	clrf	??_BQ_Read+1
 11669  0024' 0805'              	movf	??_BQ_Read,w
 11670  0025' 0083'              	movwf	?_BQ_Read
 11671  0026' 0806'              	movf	??_BQ_Read+1,w
 11672  0027' 0084'              	movwf	?_BQ_Read+1
 11673  0028'                    l330:	
 11674  0028' 0008               	return
 11675  0029'                    __end_of_BQ_Read:	
 11676                           
 11677                           	psect	text46
 11678  0000'                    __ptext46:	
 11679 ;; *************** function _I2C_Master_Read *****************
 11680 ;; Defined at:
 11681 ;;		line 94 in file "I2C.c"
 11682 ;; Parameters:    Size  Location     Type
 11683 ;;  ack             1    wreg     unsigned char 
 11684 ;; Auto vars:     Size  Location     Type
 11685 ;;  ack             1    1[BANK0 ] unsigned char 
 11686 ;;  data            1    2[BANK0 ] unsigned char 
 11687 ;; Return value:  Size  Location     Type
 11688 ;;                  1    wreg      unsigned char 
 11689 ;; Registers used:
 11690 ;;		wreg, status,2, status,0, pclath, cstack
 11691 ;; Tracked objects:
 11692 ;;		On entry : 0/0
 11693 ;;		On exit  : 0/0
 11694 ;;		Unchanged: 0/0
 11695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11696 ;;      Params:         0       0       0       0       0       0       0       0
 11697 ;;      Locals:         0       2       0       0       0       0       0       0
 11698 ;;      Temps:          0       1       0       0       0       0       0       0
 11699 ;;      Totals:         0       3       0       0       0       0       0       0
 11700 ;;Total ram usage:        3 bytes
 11701 ;; Hardware stack levels used:    1
 11702 ;; Hardware stack levels required when called:    3
 11703 ;; This function calls:
 11704 ;;		_I2C_Master_Ack
 11705 ;;		_I2C_Master_Wait
 11706 ;;		_I2C_Master_nAck
 11707 ;; This function is called by:
 11708 ;;		_BQ_Read
 11709 ;; This function uses a non-reentrant model
 11710 ;;
 11711                           
 11712                           
 11713                           ;psect for function _I2C_Master_Read
 11714  0000'                    _I2C_Master_Read:	
 11715                           
 11716                           ;incstack = 0
 11717                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11718                           ;I2C_Master_Read@ack stored from wreg
 11719  0000' 0140               	movlb	0	; select bank0
 11720  0001' 0081'              	movwf	I2C_Master_Read@ack
 11721  0002'                    l2907:	
 11722                           
 11723                           ;I2C.c: 96: I2C_Master_Wait();
 11724  0002' 3180' 2000' 3180'  	fcall	_I2C_Master_Wait
 11725  0005'                    l2909:	
 11726                           
 11727                           ;I2C.c: 97: SSP1CON2bits.RCEN = 1;
 11728  0005' 0143               	movlb	3	; select bank3
 11729  0006' 1591               	bsf	17,3	;volatile
 11730                           
 11731                           ;I2C.c: 98: I2C_Master_Wait();
 11732  0007' 3180' 2000' 3180'  	fcall	_I2C_Master_Wait
 11733  000A'                    l2911:	
 11734                           
 11735                           ;I2C.c: 100: unsigned char data = SSP1BUF;
 11736  000A' 0143               	movlb	3	; select bank3
 11737  000B' 080C               	movf	12,w	;volatile
 11738  000C' 0140               	movlb	0	; select bank0
 11739  000D' 0080'              	movwf	??_I2C_Master_Read
 11740  000E' 0800'              	movf	??_I2C_Master_Read,w
 11741  000F' 0082'              	movwf	I2C_Master_Read@data
 11742  0010'                    l2913:	
 11743                           
 11744                           ;I2C.c: 101: I2C_Master_Wait();
 11745  0010' 3180' 2000' 3180'  	fcall	_I2C_Master_Wait
 11746  0013'                    l2915:	
 11747                           
 11748                           ;I2C.c: 103: if (ack)
 11749  0013' 0140               	movlb	0	; select bank0
 11750  0014' 0801'              	movf	I2C_Master_Read@ack,w
 11751  0015' 1903               	btfsc	3,2
 11752  0016' 2800'              	goto	u2111
 11753  0017' 2800'              	goto	u2110
 11754  0018'                    u2111:	
 11755  0018' 2800'              	goto	l2919
 11756  0019'                    u2110:	
 11757  0019'                    l2917:	
 11758                           
 11759                           ;I2C.c: 104: I2C_Master_nAck();
 11760  0019' 3180' 2000' 3180'  	fcall	_I2C_Master_nAck
 11761  001C' 2800'              	goto	l2921
 11762  001D'                    l2919:	
 11763                           
 11764                           ;I2C.c: 105: else;I2C.c: 106: I2C_Master_Ack();
 11765  001D' 3180' 2000' 3180'  	fcall	_I2C_Master_Ack
 11766  0020'                    l2921:	
 11767                           
 11768                           ;I2C.c: 108: return data;
 11769  0020' 0140               	movlb	0	; select bank0
 11770  0021' 0802'              	movf	I2C_Master_Read@data,w
 11771  0022'                    l310:	
 11772  0022' 0008               	return
 11773  0023'                    __end_of_I2C_Master_Read:	
 11774                           
 11775                           	psect	text47
 11776  0000'                    __ptext47:	
 11777 ;; *************** function _I2C_Master_nAck *****************
 11778 ;; Defined at:
 11779 ;;		line 88 in file "I2C.c"
 11780 ;; Parameters:    Size  Location     Type
 11781 ;;		None
 11782 ;; Auto vars:     Size  Location     Type
 11783 ;;		None
 11784 ;; Return value:  Size  Location     Type
 11785 ;;                  1    wreg      void 
 11786 ;; Registers used:
 11787 ;;		None
 11788 ;; Tracked objects:
 11789 ;;		On entry : 0/0
 11790 ;;		On exit  : 0/0
 11791 ;;		Unchanged: 0/0
 11792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11793 ;;      Params:         0       0       0       0       0       0       0       0
 11794 ;;      Locals:         0       0       0       0       0       0       0       0
 11795 ;;      Temps:          0       0       0       0       0       0       0       0
 11796 ;;      Totals:         0       0       0       0       0       0       0       0
 11797 ;;Total ram usage:        0 bytes
 11798 ;; Hardware stack levels used:    1
 11799 ;; Hardware stack levels required when called:    2
 11800 ;; This function calls:
 11801 ;;		Nothing
 11802 ;; This function is called by:
 11803 ;;		_I2C_Master_Read
 11804 ;; This function uses a non-reentrant model
 11805 ;;
 11806                           
 11807                           
 11808                           ;psect for function _I2C_Master_nAck
 11809  0000'                    _I2C_Master_nAck:	
 11810  0000'                    l2885:	
 11811                           ;incstack = 0
 11812                           ; Regs used in _I2C_Master_nAck: []
 11813                           
 11814                           
 11815                           ;I2C.c: 90: SSP1CON2bits.ACKDT = 1;
 11816  0000' 0143               	movlb	3	; select bank3
 11817  0001' 1691               	bsf	17,5	;volatile
 11818                           
 11819                           ;I2C.c: 91: SSP1CON2bits.ACKEN = 1;
 11820  0002' 1611               	bsf	17,4	;volatile
 11821  0003'                    l305:	
 11822  0003' 0008               	return
 11823  0004'                    __end_of_I2C_Master_nAck:	
 11824                           
 11825                           	psect	text48
 11826  0000'                    __ptext48:	
 11827 ;; *************** function _I2C_Master_Ack *****************
 11828 ;; Defined at:
 11829 ;;		line 82 in file "I2C.c"
 11830 ;; Parameters:    Size  Location     Type
 11831 ;;		None
 11832 ;; Auto vars:     Size  Location     Type
 11833 ;;		None
 11834 ;; Return value:  Size  Location     Type
 11835 ;;                  1    wreg      void 
 11836 ;; Registers used:
 11837 ;;		None
 11838 ;; Tracked objects:
 11839 ;;		On entry : 0/0
 11840 ;;		On exit  : 0/0
 11841 ;;		Unchanged: 0/0
 11842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11843 ;;      Params:         0       0       0       0       0       0       0       0
 11844 ;;      Locals:         0       0       0       0       0       0       0       0
 11845 ;;      Temps:          0       0       0       0       0       0       0       0
 11846 ;;      Totals:         0       0       0       0       0       0       0       0
 11847 ;;Total ram usage:        0 bytes
 11848 ;; Hardware stack levels used:    1
 11849 ;; Hardware stack levels required when called:    2
 11850 ;; This function calls:
 11851 ;;		Nothing
 11852 ;; This function is called by:
 11853 ;;		_I2C_Master_Read
 11854 ;; This function uses a non-reentrant model
 11855 ;;
 11856                           
 11857                           
 11858                           ;psect for function _I2C_Master_Ack
 11859  0000'                    _I2C_Master_Ack:	
 11860  0000'                    l2883:	
 11861                           ;incstack = 0
 11862                           ; Regs used in _I2C_Master_Ack: []
 11863                           
 11864                           
 11865                           ;I2C.c: 84: SSP1CON2bits.ACKDT = 0;
 11866  0000' 0143               	movlb	3	; select bank3
 11867  0001' 1291               	bcf	17,5	;volatile
 11868                           
 11869                           ;I2C.c: 85: SSP1CON2bits.ACKEN = 1;
 11870  0002' 1611               	bsf	17,4	;volatile
 11871  0003'                    l302:	
 11872  0003' 0008               	return
 11873  0004'                    __end_of_I2C_Master_Ack:	
 11874                           
 11875                           	psect	text49
 11876  0000'                    __ptext49:	
 11877 ;; *************** function _BQ_INIT *****************
 11878 ;; Defined at:
 11879 ;;		line 156 in file "BQ25895M.c"
 11880 ;; Parameters:    Size  Location     Type
 11881 ;;		None
 11882 ;; Auto vars:     Size  Location     Type
 11883 ;;		None
 11884 ;; Return value:  Size  Location     Type
 11885 ;;                  1    wreg      void 
 11886 ;; Registers used:
 11887 ;;		wreg, status,2, status,0, pclath, cstack
 11888 ;; Tracked objects:
 11889 ;;		On entry : 0/0
 11890 ;;		On exit  : 0/0
 11891 ;;		Unchanged: 0/0
 11892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11893 ;;      Params:         0       0       0       0       0       0       0       0
 11894 ;;      Locals:         0       0       0       0       0       0       0       0
 11895 ;;      Temps:          0       1       0       0       0       0       0       0
 11896 ;;      Totals:         0       1       0       0       0       0       0       0
 11897 ;;Total ram usage:        1 bytes
 11898 ;; Hardware stack levels used:    1
 11899 ;; Hardware stack levels required when called:    5
 11900 ;; This function calls:
 11901 ;;		_BQ_Write
 11902 ;; This function is called by:
 11903 ;;		_main
 11904 ;; This function uses a non-reentrant model
 11905 ;;
 11906                           
 11907                           
 11908                           ;psect for function _BQ_INIT
 11909  0000'                    _BQ_INIT:	
 11910  0000'                    l3639:	
 11911                           ;incstack = 0
 11912                           ; Regs used in _BQ_INIT: [wreg+status,2+status,0+pclath+cstack]
 11913                           
 11914                           
 11915                           ;BQ25895M.c: 157: BQ_Write(0x00, REG00_config);
 11916  0000' 0140               	movlb	0	; select bank0
 11917  0001' 0808'              	movf	_REG00_config,w
 11918  0002' 0083'              	movwf	??_BQ_INIT
 11919  0003' 0803'              	movf	??_BQ_INIT,w
 11920  0004' 0081'              	movwf	BQ_Write@data
 11921  0005' 3000               	movlw	0
 11922  0006' 3180' 2000' 3180'  	fcall	_BQ_Write
 11923                           
 11924                           ;BQ25895M.c: 158: BQ_Write(0x01, REG01_config);
 11925  0009' 0140               	movlb	0	; select bank0
 11926  000A' 0807'              	movf	_REG01_config,w
 11927  000B' 0083'              	movwf	??_BQ_INIT
 11928  000C' 0803'              	movf	??_BQ_INIT,w
 11929  000D' 0081'              	movwf	BQ_Write@data
 11930  000E' 3001               	movlw	1
 11931  000F' 3180' 2000' 3180'  	fcall	_BQ_Write
 11932                           
 11933                           ;BQ25895M.c: 159: BQ_Write(0x02, REG02_config);
 11934  0012' 0140               	movlb	0	; select bank0
 11935  0013' 0806'              	movf	_REG02_config,w
 11936  0014' 0083'              	movwf	??_BQ_INIT
 11937  0015' 0803'              	movf	??_BQ_INIT,w
 11938  0016' 0081'              	movwf	BQ_Write@data
 11939  0017' 3002               	movlw	2
 11940  0018' 3180' 2000' 3180'  	fcall	_BQ_Write
 11941                           
 11942                           ;BQ25895M.c: 160: BQ_Write(0x03, REG03_config);
 11943  001B' 0140               	movlb	0	; select bank0
 11944  001C' 0805'              	movf	_REG03_config,w
 11945  001D' 0083'              	movwf	??_BQ_INIT
 11946  001E' 0803'              	movf	??_BQ_INIT,w
 11947  001F' 0081'              	movwf	BQ_Write@data
 11948  0020' 3003               	movlw	3
 11949  0021' 3180' 2000' 3180'  	fcall	_BQ_Write
 11950                           
 11951                           ;BQ25895M.c: 161: BQ_Write(0x04, REG04_config);
 11952  0024' 0804'              	movf	_REG04_config,w
 11953  0025' 0140               	movlb	0	; select bank0
 11954  0026' 0083'              	movwf	??_BQ_INIT
 11955  0027' 0803'              	movf	??_BQ_INIT,w
 11956  0028' 0081'              	movwf	BQ_Write@data
 11957  0029' 3004               	movlw	4
 11958  002A' 3180' 2000' 3180'  	fcall	_BQ_Write
 11959                           
 11960                           ;BQ25895M.c: 162: BQ_Write(0x05, REG05_config);
 11961  002D' 0803'              	movf	_REG05_config,w
 11962  002E' 0140               	movlb	0	; select bank0
 11963  002F' 0083'              	movwf	??_BQ_INIT
 11964  0030' 0803'              	movf	??_BQ_INIT,w
 11965  0031' 0081'              	movwf	BQ_Write@data
 11966  0032' 3005               	movlw	5
 11967  0033' 3180' 2000' 3180'  	fcall	_BQ_Write
 11968                           
 11969                           ;BQ25895M.c: 163: BQ_Write(0x06, REG06_config);
 11970  0036' 0802'              	movf	_REG06_config,w
 11971  0037' 0140               	movlb	0	; select bank0
 11972  0038' 0083'              	movwf	??_BQ_INIT
 11973  0039' 0803'              	movf	??_BQ_INIT,w
 11974  003A' 0081'              	movwf	BQ_Write@data
 11975  003B' 3006               	movlw	6
 11976  003C' 3180' 2000' 3180'  	fcall	_BQ_Write
 11977                           
 11978                           ;BQ25895M.c: 164: BQ_Write(0x07, REG07_config);
 11979  003F' 0801'              	movf	_REG07_config,w
 11980  0040' 0140               	movlb	0	; select bank0
 11981  0041' 0083'              	movwf	??_BQ_INIT
 11982  0042' 0803'              	movf	??_BQ_INIT,w
 11983  0043' 0081'              	movwf	BQ_Write@data
 11984  0044' 3007               	movlw	7
 11985  0045' 3180' 2000' 3180'  	fcall	_BQ_Write
 11986                           
 11987                           ;BQ25895M.c: 165: BQ_Write(0x08, REG08_config);
 11988  0048' 0800'              	movf	_REG08_config,w
 11989  0049' 0140               	movlb	0	; select bank0
 11990  004A' 0083'              	movwf	??_BQ_INIT
 11991  004B' 0803'              	movf	??_BQ_INIT,w
 11992  004C' 0081'              	movwf	BQ_Write@data
 11993  004D' 3008               	movlw	8
 11994  004E' 3180' 2000' 3180'  	fcall	_BQ_Write
 11995  0051'                    l443:	
 11996  0051' 0008               	return
 11997  0052'                    __end_of_BQ_INIT:	
 11998                           
 11999                           	psect	text50
 12000  0000'                    __ptext50:	
 12001 ;; *************** function _BQ_Write *****************
 12002 ;; Defined at:
 12003 ;;		line 16 in file "BQ25895M.c"
 12004 ;; Parameters:    Size  Location     Type
 12005 ;;  reg             1    wreg     unsigned char 
 12006 ;;  data            1    1[BANK0 ] unsigned char 
 12007 ;; Auto vars:     Size  Location     Type
 12008 ;;  reg             1    2[BANK0 ] unsigned char 
 12009 ;; Return value:  Size  Location     Type
 12010 ;;                  1    wreg      void 
 12011 ;; Registers used:
 12012 ;;		wreg, status,2, status,0, pclath, cstack
 12013 ;; Tracked objects:
 12014 ;;		On entry : 0/0
 12015 ;;		On exit  : 0/0
 12016 ;;		Unchanged: 0/0
 12017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12018 ;;      Params:         0       1       0       0       0       0       0       0
 12019 ;;      Locals:         0       1       0       0       0       0       0       0
 12020 ;;      Temps:          0       0       0       0       0       0       0       0
 12021 ;;      Totals:         0       2       0       0       0       0       0       0
 12022 ;;Total ram usage:        2 bytes
 12023 ;; Hardware stack levels used:    1
 12024 ;; Hardware stack levels required when called:    4
 12025 ;; This function calls:
 12026 ;;		_I2C_Master_Start
 12027 ;;		_I2C_Master_Stop
 12028 ;;		_I2C_Master_Write
 12029 ;; This function is called by:
 12030 ;;		_thermal_protection
 12031 ;;		_main
 12032 ;;		_BQ_UPDATE
 12033 ;;		_BQ_INIT
 12034 ;;		_BQ_read_adc
 12035 ;; This function uses a non-reentrant model
 12036 ;;
 12037                           
 12038                           
 12039                           ;psect for function _BQ_Write
 12040  0000'                    _BQ_Write:	
 12041                           
 12042                           ;incstack = 0
 12043                           ; Regs used in _BQ_Write: [wreg+status,2+status,0+pclath+cstack]
 12044                           ;BQ_Write@reg stored from wreg
 12045  0000' 0140               	movlb	0	; select bank0
 12046  0001' 0082'              	movwf	BQ_Write@reg
 12047  0002'                    l3133:	
 12048                           
 12049                           ;BQ25895M.c: 17: I2C_Master_Start();
 12050  0002' 3180' 2000' 3180'  	fcall	_I2C_Master_Start
 12051                           
 12052                           ;BQ25895M.c: 18: I2C_Master_Write(0x6A << 1);
 12053  0005' 30D4               	movlw	212
 12054  0006' 3180' 2000' 3180'  	fcall	_I2C_Master_Write
 12055                           
 12056                           ;BQ25895M.c: 19: I2C_Master_Write(reg);
 12057  0009' 0140               	movlb	0	; select bank0
 12058  000A' 0802'              	movf	BQ_Write@reg,w
 12059  000B' 3180' 2000' 3180'  	fcall	_I2C_Master_Write
 12060                           
 12061                           ;BQ25895M.c: 20: I2C_Master_Write(data);
 12062  000E' 0140               	movlb	0	; select bank0
 12063  000F' 0801'              	movf	BQ_Write@data,w
 12064  0010' 3180' 2000' 3180'  	fcall	_I2C_Master_Write
 12065                           
 12066                           ;BQ25895M.c: 21: I2C_Master_Stop();
 12067  0013' 3180' 2000' 3180'  	fcall	_I2C_Master_Stop
 12068  0016'                    l327:	
 12069  0016' 0008               	return
 12070  0017'                    __end_of_BQ_Write:	
 12071                           
 12072                           	psect	text51
 12073  0000'                    __ptext51:	
 12074 ;; *************** function _I2C_Master_Write *****************
 12075 ;; Defined at:
 12076 ;;		line 76 in file "I2C.c"
 12077 ;; Parameters:    Size  Location     Type
 12078 ;;  data            1    wreg     unsigned char 
 12079 ;; Auto vars:     Size  Location     Type
 12080 ;;  data            1    0[BANK0 ] unsigned char 
 12081 ;; Return value:  Size  Location     Type
 12082 ;;                  1    wreg      void 
 12083 ;; Registers used:
 12084 ;;		wreg, status,2, status,0, pclath, cstack
 12085 ;; Tracked objects:
 12086 ;;		On entry : 0/0
 12087 ;;		On exit  : 0/0
 12088 ;;		Unchanged: 0/0
 12089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12090 ;;      Params:         0       0       0       0       0       0       0       0
 12091 ;;      Locals:         0       1       0       0       0       0       0       0
 12092 ;;      Temps:          0       0       0       0       0       0       0       0
 12093 ;;      Totals:         0       1       0       0       0       0       0       0
 12094 ;;Total ram usage:        1 bytes
 12095 ;; Hardware stack levels used:    1
 12096 ;; Hardware stack levels required when called:    3
 12097 ;; This function calls:
 12098 ;;		_I2C_Master_Wait
 12099 ;; This function is called by:
 12100 ;;		_BQ_Write
 12101 ;;		_BQ_Read
 12102 ;; This function uses a non-reentrant model
 12103 ;;
 12104                           
 12105                           
 12106                           ;psect for function _I2C_Master_Write
 12107  0000'                    _I2C_Master_Write:	
 12108                           
 12109                           ;incstack = 0
 12110                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 12111                           ;I2C_Master_Write@data stored from wreg
 12112  0000' 0140               	movlb	0	; select bank0
 12113  0001' 0080'              	movwf	I2C_Master_Write@data
 12114  0002'                    l2903:	
 12115                           
 12116                           ;I2C.c: 78: I2C_Master_Wait();
 12117  0002' 3180' 2000' 3180'  	fcall	_I2C_Master_Wait
 12118  0005'                    l2905:	
 12119                           
 12120                           ;I2C.c: 79: SSP1BUF = data;
 12121  0005' 0140               	movlb	0	; select bank0
 12122  0006' 0800'              	movf	I2C_Master_Write@data,w
 12123  0007' 0143               	movlb	3	; select bank3
 12124  0008' 008C               	movwf	12	;volatile
 12125  0009'                    l299:	
 12126  0009' 0008               	return
 12127  000A'                    __end_of_I2C_Master_Write:	
 12128                           
 12129                           	psect	text52
 12130  0000'                    __ptext52:	
 12131 ;; *************** function _I2C_Master_Stop *****************
 12132 ;; Defined at:
 12133 ;;		line 70 in file "I2C.c"
 12134 ;; Parameters:    Size  Location     Type
 12135 ;;		None
 12136 ;; Auto vars:     Size  Location     Type
 12137 ;;		None
 12138 ;; Return value:  Size  Location     Type
 12139 ;;                  1    wreg      void 
 12140 ;; Registers used:
 12141 ;;		wreg, status,2, status,0, pclath, cstack
 12142 ;; Tracked objects:
 12143 ;;		On entry : 0/0
 12144 ;;		On exit  : 0/0
 12145 ;;		Unchanged: 0/0
 12146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12147 ;;      Params:         0       0       0       0       0       0       0       0
 12148 ;;      Locals:         0       0       0       0       0       0       0       0
 12149 ;;      Temps:          0       0       0       0       0       0       0       0
 12150 ;;      Totals:         0       0       0       0       0       0       0       0
 12151 ;;Total ram usage:        0 bytes
 12152 ;; Hardware stack levels used:    1
 12153 ;; Hardware stack levels required when called:    3
 12154 ;; This function calls:
 12155 ;;		_I2C_Master_Wait
 12156 ;; This function is called by:
 12157 ;;		_BQ_Write
 12158 ;;		_BQ_Read
 12159 ;; This function uses a non-reentrant model
 12160 ;;
 12161                           
 12162                           
 12163                           ;psect for function _I2C_Master_Stop
 12164  0000'                    _I2C_Master_Stop:	
 12165  0000'                    l2899:	
 12166                           ;incstack = 0
 12167                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 12168                           
 12169                           
 12170                           ;I2C.c: 72: I2C_Master_Wait();
 12171  0000' 3180' 2000' 3180'  	fcall	_I2C_Master_Wait
 12172  0003'                    l2901:	
 12173                           
 12174                           ;I2C.c: 73: SSP1CON2bits.PEN = 1;
 12175  0003' 0143               	movlb	3	; select bank3
 12176  0004' 1511               	bsf	17,2	;volatile
 12177  0005'                    l296:	
 12178  0005' 0008               	return
 12179  0006'                    __end_of_I2C_Master_Stop:	
 12180                           
 12181                           	psect	text53
 12182  0000'                    __ptext53:	
 12183 ;; *************** function _I2C_Master_Start *****************
 12184 ;; Defined at:
 12185 ;;		line 58 in file "I2C.c"
 12186 ;; Parameters:    Size  Location     Type
 12187 ;;		None
 12188 ;; Auto vars:     Size  Location     Type
 12189 ;;		None
 12190 ;; Return value:  Size  Location     Type
 12191 ;;                  1    wreg      void 
 12192 ;; Registers used:
 12193 ;;		wreg, status,2, status,0, pclath, cstack
 12194 ;; Tracked objects:
 12195 ;;		On entry : 0/0
 12196 ;;		On exit  : 0/0
 12197 ;;		Unchanged: 0/0
 12198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12199 ;;      Params:         0       0       0       0       0       0       0       0
 12200 ;;      Locals:         0       0       0       0       0       0       0       0
 12201 ;;      Temps:          0       0       0       0       0       0       0       0
 12202 ;;      Totals:         0       0       0       0       0       0       0       0
 12203 ;;Total ram usage:        0 bytes
 12204 ;; Hardware stack levels used:    1
 12205 ;; Hardware stack levels required when called:    3
 12206 ;; This function calls:
 12207 ;;		_I2C_Master_Wait
 12208 ;; This function is called by:
 12209 ;;		_BQ_Write
 12210 ;;		_BQ_Read
 12211 ;; This function uses a non-reentrant model
 12212 ;;
 12213                           
 12214                           
 12215                           ;psect for function _I2C_Master_Start
 12216  0000'                    _I2C_Master_Start:	
 12217  0000'                    l2895:	
 12218                           ;incstack = 0
 12219                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 12220                           
 12221                           
 12222                           ;I2C.c: 60: I2C_Master_Wait();
 12223  0000' 3180' 2000' 3180'  	fcall	_I2C_Master_Wait
 12224  0003'                    l2897:	
 12225                           
 12226                           ;I2C.c: 61: SSP1CON2bits.SEN = 1;
 12227  0003' 0143               	movlb	3	; select bank3
 12228  0004' 1411               	bsf	17,0	;volatile
 12229  0005'                    l290:	
 12230  0005' 0008               	return
 12231  0006'                    __end_of_I2C_Master_Start:	
 12232                           
 12233                           	psect	text54
 12234  0000'                    __ptext54:	
 12235 ;; *************** function _I2C_Master_Wait *****************
 12236 ;; Defined at:
 12237 ;;		line 53 in file "I2C.c"
 12238 ;; Parameters:    Size  Location     Type
 12239 ;;		None
 12240 ;; Auto vars:     Size  Location     Type
 12241 ;;		None
 12242 ;; Return value:  Size  Location     Type
 12243 ;;                  1    wreg      void 
 12244 ;; Registers used:
 12245 ;;		wreg, status,2
 12246 ;; Tracked objects:
 12247 ;;		On entry : 0/0
 12248 ;;		On exit  : 0/0
 12249 ;;		Unchanged: 0/0
 12250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12251 ;;      Params:         0       0       0       0       0       0       0       0
 12252 ;;      Locals:         0       0       0       0       0       0       0       0
 12253 ;;      Temps:          0       0       0       0       0       0       0       0
 12254 ;;      Totals:         0       0       0       0       0       0       0       0
 12255 ;;Total ram usage:        0 bytes
 12256 ;; Hardware stack levels used:    1
 12257 ;; Hardware stack levels required when called:    2
 12258 ;; This function calls:
 12259 ;;		Nothing
 12260 ;; This function is called by:
 12261 ;;		_I2C_Master_Start
 12262 ;;		_I2C_Master_Stop
 12263 ;;		_I2C_Master_Write
 12264 ;;		_I2C_Master_Read
 12265 ;;		_I2C_Master_Repeated_Start
 12266 ;; This function uses a non-reentrant model
 12267 ;;
 12268                           
 12269                           
 12270                           ;psect for function _I2C_Master_Wait
 12271  0000'                    _I2C_Master_Wait:	
 12272  0000'                    l2879:	
 12273                           ;incstack = 0
 12274                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 12275                           
 12276  0000'                    l284:	
 12277                           ;I2C.c: 55: while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
 12278                           
 12279  0000' 0143               	movlb	3	; select bank3
 12280  0001' 190F               	btfsc	15,2	;volatile
 12281  0002' 2800'              	goto	u2091
 12282  0003' 2800'              	goto	u2090
 12283  0004'                    u2091:	
 12284  0004' 2800'              	goto	l284
 12285  0005'                    u2090:	
 12286  0005'                    l2881:	
 12287  0005' 0811               	movf	17,w	;volatile
 12288  0006' 391F               	andlw	31
 12289  0007' 1D03               	btfss	3,2
 12290  0008' 2800'              	goto	u2101
 12291  0009' 2800'              	goto	u2100
 12292  000A'                    u2101:	
 12293  000A' 2800'              	goto	l284
 12294  000B'                    u2100:	
 12295  000B'                    l287:	
 12296  000B' 0008               	return
 12297  000C'                    __end_of_I2C_Master_Wait:	
 12298                           
 12299                           	psect	text55
 12300  0000'                    __ptext55:	
 12301 ;; *************** function _BQ_CONFIG_INIT *****************
 12302 ;; Defined at:
 12303 ;;		line 144 in file "BQ25895M.c"
 12304 ;; Parameters:    Size  Location     Type
 12305 ;;		None
 12306 ;; Auto vars:     Size  Location     Type
 12307 ;;		None
 12308 ;; Return value:  Size  Location     Type
 12309 ;;                  1    wreg      void 
 12310 ;; Registers used:
 12311 ;;		wreg
 12312 ;; Tracked objects:
 12313 ;;		On entry : 0/0
 12314 ;;		On exit  : 0/0
 12315 ;;		Unchanged: 0/0
 12316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12317 ;;      Params:         0       0       0       0       0       0       0       0
 12318 ;;      Locals:         0       0       0       0       0       0       0       0
 12319 ;;      Temps:          0       1       0       0       0       0       0       0
 12320 ;;      Totals:         0       1       0       0       0       0       0       0
 12321 ;;Total ram usage:        1 bytes
 12322 ;; Hardware stack levels used:    1
 12323 ;; Hardware stack levels required when called:    2
 12324 ;; This function calls:
 12325 ;;		Nothing
 12326 ;; This function is called by:
 12327 ;;		_main
 12328 ;; This function uses a non-reentrant model
 12329 ;;
 12330                           
 12331                           
 12332                           ;psect for function _BQ_CONFIG_INIT
 12333  0000'                    _BQ_CONFIG_INIT:	
 12334  0000'                    l3635:	
 12335                           ;incstack = 0
 12336                           ; Regs used in _BQ_CONFIG_INIT: [wreg]
 12337                           
 12338                           
 12339                           ;BQ25895M.c: 145: REG00_config = (EN_HIZ<<7)|(EN_ILIM<<6)|(INILIM);
 12340  0000' 307A               	movlw	122
 12341  0001' 0140               	movlb	0	; select bank0
 12342  0002' 0080'              	movwf	??_BQ_CONFIG_INIT
 12343  0003' 0800'              	movf	??_BQ_CONFIG_INIT,w
 12344  0004' 0088'              	movwf	_REG00_config
 12345                           
 12346                           ;BQ25895M.c: 146: REG01_config = (BHOT<<6)|(BCOLD<<5)|(VINDPM_OS);
 12347  0005' 3006               	movlw	6
 12348  0006' 0080'              	movwf	??_BQ_CONFIG_INIT
 12349  0007' 0800'              	movf	??_BQ_CONFIG_INIT,w
 12350  0008' 0087'              	movwf	_REG01_config
 12351                           
 12352                           ;BQ25895M.c: 147: REG02_config = (CONV_START<<7)|(CONV_RATE<<6)|(BOOST_FREQ<<5)|(ICO_EN<
      +                          <4)|(HVDCP_EN<<3)|(MAXC_EN<<2)|(FORCE_DPDM<<1)|(AUTO_DPDM_EN);
 12353  0009' 3035               	movlw	53
 12354  000A' 0080'              	movwf	??_BQ_CONFIG_INIT
 12355  000B' 0800'              	movf	??_BQ_CONFIG_INIT,w
 12356  000C' 0086'              	movwf	_REG02_config
 12357                           
 12358                           ;BQ25895M.c: 148: REG03_config = (WD_RST<<6)|(OTG_CONFIG<<5)|(CHG_CONFIG<<4)|(SYS_MIN<<1
      +                          );
 12359  000D' 301A               	movlw	26
 12360  000E' 0080'              	movwf	??_BQ_CONFIG_INIT
 12361  000F' 0800'              	movf	??_BQ_CONFIG_INIT,w
 12362  0010' 0085'              	movwf	_REG03_config
 12363                           
 12364                           ;BQ25895M.c: 149: REG04_config = (ICHG);
 12365  0011' 3060               	movlw	96
 12366  0012' 0080'              	movwf	??_BQ_CONFIG_INIT
 12367  0013' 0800'              	movf	??_BQ_CONFIG_INIT,w
 12368  0014' 0084'              	movwf	_REG04_config
 12369                           
 12370                           ;BQ25895M.c: 150: REG05_config = (IPRECHG<<4)|(ITERM);
 12371  0015' 3013               	movlw	19
 12372  0016' 0080'              	movwf	??_BQ_CONFIG_INIT
 12373  0017' 0800'              	movf	??_BQ_CONFIG_INIT,w
 12374  0018' 0083'              	movwf	_REG05_config
 12375                           
 12376                           ;BQ25895M.c: 151: REG06_config = (VREG<<2)|(BATLOWV<<1)|(VRECHG);
 12377  0019' 3058               	movlw	88
 12378  001A' 0080'              	movwf	??_BQ_CONFIG_INIT
 12379  001B' 0800'              	movf	??_BQ_CONFIG_INIT,w
 12380  001C' 0082'              	movwf	_REG06_config
 12381                           
 12382                           ;BQ25895M.c: 152: REG07_config = (EN_TERM<<7)|(STAT_DIS<<6)|(WATCHDOG<<4)|(EN_TIMER<<3)|
      +                          (CHG_TIMER<<1)|0b1;
 12383  001D' 30DD               	movlw	221
 12384  001E' 0080'              	movwf	??_BQ_CONFIG_INIT
 12385  001F' 0800'              	movf	??_BQ_CONFIG_INIT,w
 12386  0020' 0081'              	movwf	_REG07_config
 12387  0021'                    l3637:	
 12388                           
 12389                           ;BQ25895M.c: 153: REG08_config = (BAT_COMP<<5)|(VCLAMP<<2)|TREG;
 12390  0021' 0180'              	clrf	_REG08_config
 12391  0022' 0A80'              	incf	_REG08_config,f
 12392  0023'                    l440:	
 12393  0023' 0008               	return
 12394  0024'                    __end_of_BQ_CONFIG_INIT:	
 12395                           
 12396                           	psect	intentry
 12397  0000'                    __pintentry:	
 12398 ;; *************** function _ISR *****************
 12399 ;; Defined at:
 12400 ;;		line 63 in file "main.c"
 12401 ;; Parameters:    Size  Location     Type
 12402 ;;		None
 12403 ;; Auto vars:     Size  Location     Type
 12404 ;;		None
 12405 ;; Return value:  Size  Location     Type
 12406 ;;                  1    wreg      void 
 12407 ;; Registers used:
 12408 ;;		wreg, status,2, status,0, pclath, cstack
 12409 ;; Tracked objects:
 12410 ;;		On entry : 0/0
 12411 ;;		On exit  : 0/0
 12412 ;;		Unchanged: 0/0
 12413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12414 ;;      Params:         0       0       0       0       0       0       0       0
 12415 ;;      Locals:         0       0       0       0       0       0       0       0
 12416 ;;      Temps:          0       0       0       0       0       0       0       0
 12417 ;;      Totals:         0       0       0       0       0       0       0       0
 12418 ;;Total ram usage:        0 bytes
 12419 ;; Hardware stack levels used:    1
 12420 ;; Hardware stack levels required when called:    1
 12421 ;; This function calls:
 12422 ;;		i1_get_time
 12423 ;;		i1_timer_diff
 12424 ;; This function is called by:
 12425 ;;		Interrupt level 1
 12426 ;; This function uses a non-reentrant model
 12427 ;;
 12428                           
 12429  0000'                    _ISR:	
 12430                           
 12431                           ;incstack = 0
 12432  0000' 147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 12433                           
 12434                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
 12435  0001' 3180'              	pagesel	$
 12436  0002'                    i1l3943:	
 12437                           
 12438                           ;main.c: 65: if(TMR1IF) {
 12439  0002' 014E               	movlb	14	; select bank14
 12440  0003' 1C10               	btfss	16,0	;volatile
 12441  0004' 2800'              	goto	u369_21
 12442  0005' 2800'              	goto	u369_20
 12443  0006'                    u369_21:	
 12444  0006' 2800'              	goto	i1l3949
 12445  0007'                    u369_20:	
 12446  0007'                    i1l3945:	
 12447                           
 12448                           ;main.c: 66: TMR1IF = 0;
 12449  0007' 1010               	bcf	16,0	;volatile
 12450                           
 12451                           ;main.c: 67: TMR1 = 65228;
 12452  0008' 30FE               	movlw	254
 12453  0009' 0144               	movlb	4	; select bank4
 12454  000A' 008D               	movwf	13	;volatile
 12455  000B' 30CC               	movlw	204
 12456  000C' 008C               	movwf	12	;volatile
 12457  000D'                    i1l3947:	
 12458                           
 12459                           ;main.c: 68: timer_counter++;
 12460  000D' 3001               	movlw	1
 12461  000E' 0141               	movlb	1	; select bank1
 12462  000F' 0780'              	addwf	_timer_counter^(0+128),f
 12463  0010' 3000               	movlw	0
 12464  0011' 3D80'              	addwfc	(_timer_counter+1)^(0+128),f
 12465  0012' 3000               	movlw	0
 12466  0013' 3D80'              	addwfc	(_timer_counter+2)^(0+128),f
 12467  0014' 3000               	movlw	0
 12468  0015' 3D80'              	addwfc	(_timer_counter+3)^(0+128),f
 12469  0016'                    i1l3949:	
 12470                           
 12471                           ;main.c: 69: };main.c: 71: if(IOCAF5) {
 12472  0016' 017E               	movlb	62	; select bank62
 12473  0017' 1EBF               	btfss	63,5	;volatile
 12474  0018' 2800'              	goto	u370_21
 12475  0019' 2800'              	goto	u370_20
 12476  001A'                    u370_21:	
 12477  001A' 2800'              	goto	i1l123
 12478  001B'                    u370_20:	
 12479  001B'                    i1l3951:	
 12480                           
 12481                           ;main.c: 72: IOCAF5 = 0;
 12482  001B' 12BF               	bcf	63,5	;volatile
 12483  001C'                    i1l123:	
 12484                           
 12485                           ;main.c: 73: };main.c: 75: if(!RA5) {
 12486  001C' 0140               	movlb	0	; select bank0
 12487  001D' 1A8C               	btfsc	12,5	;volatile
 12488  001E' 2800'              	goto	u371_21
 12489  001F' 2800'              	goto	u371_20
 12490  0020'                    u371_21:	
 12491  0020' 2800'              	goto	i1l3959
 12492  0021'                    u371_20:	
 12493  0021'                    i1l3953:	
 12494                           
 12495                           ;main.c: 76: if(!btn_is_pressed) {
 12496  0021' 0805'              	movf	_btn_is_pressed,w
 12497  0022' 1D03               	btfss	3,2
 12498  0023' 2800'              	goto	u372_21
 12499  0024' 2800'              	goto	u372_20
 12500  0025'                    u372_21:	
 12501  0025' 2800'              	goto	i1l3957
 12502  0026'                    u372_20:	
 12503  0026'                    i1l3955:	
 12504                           
 12505                           ;main.c: 77: btn_time_start = get_time();
 12506  0026' 3180' 2000' 3180'  	fcall	i1_get_time
 12507  0029' 0803'              	movf	?i1_get_time+3,w
 12508  002A' 0142               	movlb	2	; select bank2
 12509  002B' 0080'              	movwf	(_btn_time_start+3)^(0+256)
 12510  002C' 0802'              	movf	?i1_get_time+2,w
 12511  002D' 0080'              	movwf	(_btn_time_start+2)^(0+256)
 12512  002E' 0801'              	movf	?i1_get_time+1,w
 12513  002F' 0080'              	movwf	(_btn_time_start+1)^(0+256)
 12514  0030' 0800'              	movf	?i1_get_time,w
 12515  0031' 0080'              	movwf	_btn_time_start^(0+256)
 12516  0032'                    i1l3957:	
 12517                           
 12518                           ;main.c: 78: };main.c: 79: btn_is_pressed = 1;
 12519  0032' 0185'              	clrf	_btn_is_pressed
 12520  0033' 0A85'              	incf	_btn_is_pressed,f
 12521                           
 12522                           ;main.c: 80: }
 12523  0034' 2800'              	goto	i1l129
 12524  0035'                    i1l3959:	
 12525                           
 12526                           ;main.c: 81: else {;main.c: 82: if(btn_is_pressed) {
 12527  0035' 0805'              	movf	_btn_is_pressed,w
 12528  0036' 1903               	btfsc	3,2
 12529  0037' 2800'              	goto	u373_21
 12530  0038' 2800'              	goto	u373_20
 12531  0039'                    u373_21:	
 12532  0039' 2800'              	goto	i1l3967
 12533  003A'                    u373_20:	
 12534  003A'                    i1l3961:	
 12535                           
 12536                           ;main.c: 83: btn_time = timer_diff(btn_time_start);
 12537  003A' 0142               	movlb	2	; select bank2
 12538  003B' 0800'              	movf	(_btn_time_start+3)^(0+256),w
 12539  003C' 0083'              	movwf	i1timer_diff@t+3
 12540  003D' 0800'              	movf	(_btn_time_start+2)^(0+256),w
 12541  003E' 0082'              	movwf	i1timer_diff@t+2
 12542  003F' 0800'              	movf	(_btn_time_start+1)^(0+256),w
 12543  0040' 0081'              	movwf	i1timer_diff@t+1
 12544  0041' 0800'              	movf	_btn_time_start^(0+256),w
 12545  0042' 0080'              	movwf	i1timer_diff@t
 12546  0043' 3180' 2000' 3180'  	fcall	i1_timer_diff
 12547  0046' 0803'              	movf	?i1_timer_diff+3,w
 12548  0047' 0142               	movlb	2	; select bank2
 12549  0048' 0080'              	movwf	(_btn_time+3)^(0+256)
 12550  0049' 0802'              	movf	?i1_timer_diff+2,w
 12551  004A' 0080'              	movwf	(_btn_time+2)^(0+256)
 12552  004B' 0801'              	movf	?i1_timer_diff+1,w
 12553  004C' 0080'              	movwf	(_btn_time+1)^(0+256)
 12554  004D' 0800'              	movf	?i1_timer_diff,w
 12555  004E' 0080'              	movwf	_btn_time^(0+256)
 12556  004F'                    i1l3963:	
 12557                           
 12558                           ;main.c: 84: if(btn_time >= 5) {
 12559  004F' 0800'              	movf	(_btn_time+3)^(0+256),w
 12560  0050' 1D03               	btfss	3,2
 12561  0051' 2800'              	goto	u374_20
 12562  0052' 0800'              	movf	(_btn_time+2)^(0+256),w
 12563  0053' 1D03               	btfss	3,2
 12564  0054' 2800'              	goto	u374_20
 12565  0055' 0800'              	movf	(_btn_time+1)^(0+256),w
 12566  0056' 1D03               	btfss	3,2
 12567  0057' 2800'              	goto	u374_20
 12568  0058' 3005               	movlw	5
 12569  0059' 0200'              	subwf	_btn_time^(0+256),w
 12570  005A' 1C03               	btfss	3,0
 12571  005B' 2800'              	goto	u374_21
 12572  005C' 2800'              	goto	u374_20
 12573  005D'                    u374_21:	
 12574  005D' 2800'              	goto	i1l3967
 12575  005E'                    u374_20:	
 12576  005E'                    i1l3965:	
 12577                           
 12578                           ;main.c: 85: btn_is_debounced = 1;
 12579  005E' 0140               	movlb	0	; select bank0
 12580  005F' 018A'              	clrf	_btn_is_debounced
 12581  0060' 0A8A'              	incf	_btn_is_debounced,f
 12582  0061'                    i1l3967:	
 12583                           
 12584                           ;main.c: 86: };main.c: 87: };main.c: 88: btn_is_pressed = 0;
 12585  0061' 0185'              	clrf	_btn_is_pressed
 12586  0062'                    i1l129:	
 12587  0062' 107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 12588  0063' 0009               	retfie
 12589  0064'                    __end_of_ISR:	
 12590                           
 12591                           	psect	text57
 12592  0000'                    __ptext57:	
 12593 ;; *************** function i1_timer_diff *****************
 12594 ;; Defined at:
 12595 ;;		line 17 in file "time.c"
 12596 ;; Parameters:    Size  Location     Type
 12597 ;;  t               4    0[COMMON] unsigned long 
 12598 ;; Auto vars:     Size  Location     Type
 12599 ;;		None
 12600 ;; Return value:  Size  Location     Type
 12601 ;;                  4    0[COMMON] unsigned long 
 12602 ;; Registers used:
 12603 ;;		wreg
 12604 ;; Tracked objects:
 12605 ;;		On entry : 0/0
 12606 ;;		On exit  : 0/0
 12607 ;;		Unchanged: 0/0
 12608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12609 ;;      Params:         4       0       0       0       0       0       0       0
 12610 ;;      Locals:         0       0       0       0       0       0       0       0
 12611 ;;      Temps:          4       0       0       0       0       0       0       0
 12612 ;;      Totals:         8       0       0       0       0       0       0       0
 12613 ;;Total ram usage:        8 bytes
 12614 ;; Hardware stack levels used:    1
 12615 ;; This function calls:
 12616 ;;		Nothing
 12617 ;; This function is called by:
 12618 ;;		_ISR
 12619 ;; This function uses a non-reentrant model
 12620 ;;
 12621                           
 12622                           
 12623                           ;psect for function i1_timer_diff
 12624  0000'                    i1_timer_diff:	
 12625  0000'                    i1l3939:	
 12626                           ;incstack = 0
 12627                           ; Regs used in i1_timer_diff: [wreg]
 12628                           
 12629                           
 12630                           ;time.c: 18: return timer_counter - t;
 12631  0000' 0800'              	movf	i1timer_diff@t,w
 12632  0001' 0141               	movlb	1	; select bank1
 12633  0002' 0200'              	subwf	_timer_counter^(0+128),w
 12634  0003' 0084'              	movwf	??i1_timer_diff
 12635  0004' 0801'              	movf	i1timer_diff@t+1,w
 12636  0005' 3B00'              	subwfb	(_timer_counter+1)^(0+128),w
 12637  0006' 0085'              	movwf	??i1_timer_diff+1
 12638  0007' 0802'              	movf	i1timer_diff@t+2,w
 12639  0008' 3B00'              	subwfb	(_timer_counter+2)^(0+128),w
 12640  0009' 0086'              	movwf	??i1_timer_diff+2
 12641  000A' 0803'              	movf	i1timer_diff@t+3,w
 12642  000B' 3B00'              	subwfb	(_timer_counter+3)^(0+128),w
 12643  000C' 0087'              	movwf	??i1_timer_diff+3
 12644  000D' 0807'              	movf	??i1_timer_diff+3,w
 12645  000E' 0083'              	movwf	?i1_timer_diff+3
 12646  000F' 0806'              	movf	??i1_timer_diff+2,w
 12647  0010' 0082'              	movwf	?i1_timer_diff+2
 12648  0011' 0805'              	movf	??i1_timer_diff+1,w
 12649  0012' 0081'              	movwf	?i1_timer_diff+1
 12650  0013' 0804'              	movf	??i1_timer_diff,w
 12651  0014' 0080'              	movwf	?i1_timer_diff
 12652  0015'                    i1l833:	
 12653  0015' 0008               	return
 12654  0016'                    __end_ofi1_timer_diff:	
 12655                           
 12656                           	psect	text58
 12657  0000'                    __ptext58:	
 12658 ;; *************** function i1_get_time *****************
 12659 ;; Defined at:
 12660 ;;		line 13 in file "time.c"
 12661 ;; Parameters:    Size  Location     Type
 12662 ;;		None
 12663 ;; Auto vars:     Size  Location     Type
 12664 ;;		None
 12665 ;; Return value:  Size  Location     Type
 12666 ;;                  4    0[COMMON] unsigned long 
 12667 ;; Registers used:
 12668 ;;		wreg
 12669 ;; Tracked objects:
 12670 ;;		On entry : 0/0
 12671 ;;		On exit  : 0/0
 12672 ;;		Unchanged: 0/0
 12673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 12674 ;;      Params:         4       0       0       0       0       0       0       0
 12675 ;;      Locals:         0       0       0       0       0       0       0       0
 12676 ;;      Temps:          0       0       0       0       0       0       0       0
 12677 ;;      Totals:         4       0       0       0       0       0       0       0
 12678 ;;Total ram usage:        4 bytes
 12679 ;; Hardware stack levels used:    1
 12680 ;; This function calls:
 12681 ;;		Nothing
 12682 ;; This function is called by:
 12683 ;;		_ISR
 12684 ;; This function uses a non-reentrant model
 12685 ;;
 12686                           
 12687                           
 12688                           ;psect for function i1_get_time
 12689  0000'                    i1_get_time:	
 12690  0000'                    i1l3935:	
 12691                           ;incstack = 0
 12692                           ; Regs used in i1_get_time: [wreg]
 12693                           
 12694                           
 12695                           ;time.c: 14: return timer_counter;
 12696  0000' 0141               	movlb	1	; select bank1
 12697  0001' 0800'              	movf	(_timer_counter+3)^(0+128),w
 12698  0002' 0083'              	movwf	?i1_get_time+3
 12699  0003' 0800'              	movf	(_timer_counter+2)^(0+128),w
 12700  0004' 0082'              	movwf	?i1_get_time+2
 12701  0005' 0800'              	movf	(_timer_counter+1)^(0+128),w
 12702  0006' 0081'              	movwf	?i1_get_time+1
 12703  0007' 0800'              	movf	_timer_counter^(0+128),w
 12704  0008' 0080'              	movwf	?i1_get_time
 12705  0009'                    i1l830:	
 12706  0009' 0008               	return
 12707  000A'                    __end_ofi1_get_time:	
 12708  007E                     btemp	set	126	;btemp
 12709  007E                     int$flags	set	126
 12710  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    40
    Data        19
    BSS         67
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            79     63      79
    BANK1            80     67      80
    BANK2            80      0      51
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    write_sector@sector_data	PTR const unsigned char  size(2) Largest target is 40
		 -> nvm_config(CODE[40]), 

    i2c_master_read_u16@data	PTR unsigned int  size(1) Largest target is 2
		 -> stusb_negotiate@header(BANK1[2]), 

    i2c_master_read_u8@data	PTR unsigned char  size(1) Largest target is 40
		 -> write_sector@buffer(BANK0[1]), read_sector@buffer(COMMON[1]), enter_write_mode@buffer(BANK0[1]), stusb_negotiate@buffer(BANK1[40]), 
		 -> reset@res(BANK0[1]), 

    i2c_master_read@buf	PTR void  size(1) Largest target is 40
		 -> nvm_read@sectors(BANK0[40]), write_sector@buffer(BANK0[1]), read_sector@buffer(COMMON[1]), enter_write_mode@buffer(BANK0[1]), 
		 -> stusb_negotiate@header(BANK1[2]), stusb_negotiate@buffer(BANK1[40]), reset@res(BANK0[1]), 

    i2c_master_read@data	PTR unsigned char  size(1) Largest target is 40
		 -> nvm_read@sectors(BANK0[40]), write_sector@buffer(BANK0[1]), read_sector@buffer(COMMON[1]), enter_write_mode@buffer(BANK0[1]), 
		 -> stusb_negotiate@header(BANK1[2]), stusb_negotiate@buffer(BANK1[40]), reset@res(BANK0[1]), 

    i2c_master_write@buf	PTR const void  size(2) Largest target is 40
		 -> nvm_config(CODE[40]), i2c_master_write_u32@data(BANK0[4]), i2c_master_write_u16@data(COMMON[2]), i2c_master_write_u8@data(BANK0[1]), 

    i2c_master_write@data	PTR unsigned char  size(2) Largest target is 40
		 -> nvm_config(CODE[40]), i2c_master_write_u32@data(BANK0[4]), i2c_master_write_u16@data(COMMON[2]), i2c_master_write_u8@data(BANK0[1]), 

    negotiate_optimal_pdo@src_pdos	PTR unsigned long  size(1) Largest target is 40
		 -> stusb_negotiate@buffer(BANK1[40]), 

    sp__BQ_get_chrg_state	PTR unsigned char  size(1) Largest target is 2
		 -> BQ_get_chrg_state@data(BANK0[2]), 

    VBUS_CHRG_STATE	PTR unsigned char  size(1) Largest target is 2
		 -> NULL(NULL[0]), BQ_get_chrg_state@data(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_timer_diff

Critical Paths under _main in BANK0

    _main->_stusb_negotiate
    _thermal_protection->_readADC
    _stusb_negotiate->_negotiate_optimal_pdo
    _negotiate_optimal_pdo->_write_pdo
    _write_pdo->_reset
    _reset->_i2c_master_read_u8
    _reset->_i2c_master_write_u8
    _i2c_master_write_u32->_i2c_master_write
    _i2c_master_read_u16->_i2c_master_read
    _nvm_flash->_write_sector
    _write_sector->_i2c_master_read_u8
    _write_sector->_i2c_master_write_u8
    _exit_rw_mode->_i2c_master_write_u8
    _enter_write_mode->_i2c_master_read_u8
    _enter_write_mode->_i2c_master_write_u8
    _i2c_master_write_u8->_i2c_master_write
    _i2c_master_write->_i2c_master_send_byte
    _i2c_master_read_u8->_i2c_master_read
    _i2c_master_read->_i2c_master_send_byte
    _led_modes->_battery_fade
    _flash_led->_timer_diff
    _battery_fade->_Map
    _Map->___awdiv
    ___awdiv->___wmul
    _RGB_fade->_timer_diff
    _chrg_led->_timer_diff
    _I2C_Master_Init->___lldiv
    ___lldiv->___lmul
    _BQ_UPDATE->_BQ_get_chrg_state
    _BQ_get_chrg_state->_BQ_Read
    _BQ_Read->_I2C_Master_Read
    _BQ_INIT->_BQ_Write
    _BQ_Write->_I2C_Master_Write

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_stusb_negotiate
    _stusb_negotiate->_negotiate_optimal_pdo

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   63926
                                             62 BANK0      1     1      0
                     _BQ_CONFIG_INIT
                            _BQ_INIT
                          _BQ_UPDATE
                           _BQ_Write
                    _I2C_Master_Init
                      _I2C_bus_reset
                          _PIC_SETUP
                           _PPS_lock
                         _PPS_unlock
                           _PWM_INIT
                     _PWM_power_down
                           _chrg_led
                           _get_time
                          _led_modes
                          _nvm_flash
                    _stusb_negotiate
                 _thermal_protection
                         _timer_diff
 ---------------------------------------------------------------------------------
 (1) _thermal_protection                                   1     1      0    1076
                                              5 BANK0      1     1      0
                           _BQ_Write
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              5     3      2      22
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _stusb_negotiate                                     48    48      0   28448
                                             56 BANK0      6     6      0
                                             25 BANK1     42    42      0
                    _i2c_master_read
                _i2c_master_read_u16
                 _i2c_master_read_u8
              _negotiate_optimal_pdo
                              _reset
 ---------------------------------------------------------------------------------
 (2) _negotiate_optimal_pdo                               35    33      2   12974
                                             46 BANK0     10     8      2
                                              0 BANK1     25    25      0
                            ___lldiv
                             ___lmul
                             ___wmul
                          _write_pdo
 ---------------------------------------------------------------------------------
 (3) _write_pdo                                           21    16      5   11000
                                             25 BANK0     21    16      5
                            ___lwdiv
               _i2c_master_write_u32
                              _reset
 ---------------------------------------------------------------------------------
 (2) _reset                                                7     5      2    8794
                                             18 BANK0      7     5      2
                 _i2c_master_read_u8
                _i2c_master_write_u8
 ---------------------------------------------------------------------------------
 (4) _i2c_master_write_u32                                 7     2      5    1379
                                             14 BANK0      7     2      5
                   _i2c_master_write
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _i2c_master_read_u16                                  5     3      2    1739
                                             13 BANK0      5     3      2
                    _i2c_master_read
 ---------------------------------------------------------------------------------
 (1) _nvm_flash                                            0     0      0   24907
                   _enter_write_mode
                       _exit_rw_mode
                       _write_sector
 ---------------------------------------------------------------------------------
 (2) _write_sector                                         6     4      2   10401
                                             18 BANK0      6     4      2
                 _i2c_master_read_u8
                   _i2c_master_write
                _i2c_master_write_u8
 ---------------------------------------------------------------------------------
 (2) _exit_rw_mode                                         5     3      2    5552
                                             18 BANK0      5     3      2
                _i2c_master_write_u8
 ---------------------------------------------------------------------------------
 (2) _enter_write_mode                                     5     3      2    8954
                                             18 BANK0      5     3      2
                 _i2c_master_read_u8
                _i2c_master_write_u8
 ---------------------------------------------------------------------------------
 (3) _i2c_master_write_u8                                  4     2      2    5483
                                             14 BANK0      4     2      2
                   _i2c_master_write
 ---------------------------------------------------------------------------------
 (4) _i2c_master_write                                    10     5      5    1160
                                              4 BANK0     10     5      5
               _i2c_master_send_byte
                   _i2c_master_start
                    _i2c_master_stop
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_master_read_u8                                   5     3      2    3107
                                             13 BANK0      5     3      2
                    _i2c_master_read
 ---------------------------------------------------------------------------------
 (4) _i2c_master_read                                      9     5      4    1521
                                              4 BANK0      9     5      4
            _i2c_master_receive_byte
            _i2c_master_repeat_start
               _i2c_master_send_byte
                   _i2c_master_start
                    _i2c_master_stop
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_stop                                      0     0      0       0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_start                                     0     0      0       0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_send_byte                                 4     1      3      22
                                              0 BANK0      4     1      3
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_repeat_start                              0     0      0       0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_receive_byte                              3     3      0      45
                                              0 BANK0      3     3      0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_modes                                            0     0      0    3688
                           _RGB_fade
                       _battery_fade
                          _flash_led
 ---------------------------------------------------------------------------------
 (2) _flash_led                                            1     1      0     528
                                              8 BANK0      1     1      0
                           _get_time
                         _timer_diff
 ---------------------------------------------------------------------------------
 (2) _battery_fade                                         9     9      0    2632
                                             23 BANK0      9     9      0
                                _Map
 ---------------------------------------------------------------------------------
 (3) _Map                                                  8     2      6    2294
                                             15 BANK0      8     2      6
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     452
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _RGB_fade                                             1     1      0     528
                                              8 BANK0      1     1      0
                           _get_time
                         _timer_diff
 ---------------------------------------------------------------------------------
 (1) _chrg_led                                             1     1      0     528
                                              8 BANK0      1     1      0
                           _get_time
                         _timer_diff
 ---------------------------------------------------------------------------------
 (1) _PWM_power_down                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_INIT                                             0     0      0       0
                           _PPS_lock
                         _PPS_unlock
 ---------------------------------------------------------------------------------
 (2) _PPS_unlock                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PPS_lock                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIC_SETUP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_bus_reset                                        2     2      0      24
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     716
                                             26 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _BQ_UPDATE                                            1     1      0    1903
                                             14 BANK0      1     1      0
                            _BQ_Read
                           _BQ_Write
                  _BQ_get_chrg_state
                           _get_time
                         _timer_diff
 ---------------------------------------------------------------------------------
 (1) _timer_diff                                           8     4      4     528
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _get_time                                             4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _BQ_get_chrg_state                                    5     5      0     209
                                              9 BANK0      5     5      0
                            _BQ_Read
 ---------------------------------------------------------------------------------
 (3) _BQ_Read                                              6     4      2     112
                                              3 BANK0      6     4      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Read                                      3     3      0      45
                                              0 BANK0      3     3      0
                     _I2C_Master_Ack
                    _I2C_Master_Wait
                    _I2C_Master_nAck
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_nAck                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Ack                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BQ_INIT                                              1     1      0    1054
                                              3 BANK0      1     1      0
                           _BQ_Write
 ---------------------------------------------------------------------------------
 (2) _BQ_Write                                             2     1      1    1054
                                              1 BANK0      2     1      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      22
                                              0 BANK0      1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BQ_CONFIG_INIT                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  0     0      0      48
                         i1_get_time
                       i1_timer_diff
 ---------------------------------------------------------------------------------
 (10) i1_timer_diff                                        8     4      4      48
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (10) i1_get_time                                          4     0      4       0
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BQ_CONFIG_INIT
   _BQ_INIT
     _BQ_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _BQ_UPDATE
     _BQ_Read
       _I2C_Master_Read
         _I2C_Master_Ack
         _I2C_Master_Wait
         _I2C_Master_nAck
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BQ_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BQ_get_chrg_state
       _BQ_Read
         _I2C_Master_Read
           _I2C_Master_Ack
           _I2C_Master_Wait
           _I2C_Master_nAck
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _get_time
     _timer_diff
   _BQ_Write
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _I2C_Master_Init
     ___lldiv
       ___lmul (ARG)
   _I2C_bus_reset
   _PIC_SETUP
   _PPS_lock
   _PPS_unlock
   _PWM_INIT
     _PPS_lock
     _PPS_unlock
   _PWM_power_down
   _chrg_led
     _get_time
     _timer_diff
   _get_time
   _led_modes
     _RGB_fade
       _get_time
       _timer_diff
     _battery_fade
       _Map
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _flash_led
       _get_time
       _timer_diff
   _nvm_flash
     _enter_write_mode
       _i2c_master_read_u8
         _i2c_master_read
           _i2c_master_receive_byte
             _i2c_master_wait
           _i2c_master_repeat_start
             _i2c_master_wait
           _i2c_master_send_byte
             _i2c_master_wait
           _i2c_master_start
             _i2c_master_wait
           _i2c_master_stop
             _i2c_master_wait
           _i2c_master_wait
       _i2c_master_write_u8
         _i2c_master_write
           _i2c_master_send_byte
             _i2c_master_wait
           _i2c_master_start
             _i2c_master_wait
           _i2c_master_stop
             _i2c_master_wait
           _i2c_master_wait
     _exit_rw_mode
       _i2c_master_write_u8
         _i2c_master_write
           _i2c_master_send_byte
             _i2c_master_wait
           _i2c_master_start
             _i2c_master_wait
           _i2c_master_stop
             _i2c_master_wait
           _i2c_master_wait
     _write_sector
       _i2c_master_read_u8
         _i2c_master_read
           _i2c_master_receive_byte
             _i2c_master_wait
           _i2c_master_repeat_start
             _i2c_master_wait
           _i2c_master_send_byte
             _i2c_master_wait
           _i2c_master_start
             _i2c_master_wait
           _i2c_master_stop
             _i2c_master_wait
           _i2c_master_wait
       _i2c_master_write
         _i2c_master_send_byte
           _i2c_master_wait
         _i2c_master_start
           _i2c_master_wait
         _i2c_master_stop
           _i2c_master_wait
         _i2c_master_wait
       _i2c_master_write_u8
         _i2c_master_write
           _i2c_master_send_byte
             _i2c_master_wait
           _i2c_master_start
             _i2c_master_wait
           _i2c_master_stop
             _i2c_master_wait
           _i2c_master_wait
   _stusb_negotiate
     _i2c_master_read
       _i2c_master_receive_byte
         _i2c_master_wait
       _i2c_master_repeat_start
         _i2c_master_wait
       _i2c_master_send_byte
         _i2c_master_wait
       _i2c_master_start
         _i2c_master_wait
       _i2c_master_stop
         _i2c_master_wait
       _i2c_master_wait
     _i2c_master_read_u16
       _i2c_master_read
         _i2c_master_receive_byte
           _i2c_master_wait
         _i2c_master_repeat_start
           _i2c_master_wait
         _i2c_master_send_byte
           _i2c_master_wait
         _i2c_master_start
           _i2c_master_wait
         _i2c_master_stop
           _i2c_master_wait
         _i2c_master_wait
     _i2c_master_read_u8
       _i2c_master_read
         _i2c_master_receive_byte
           _i2c_master_wait
         _i2c_master_repeat_start
           _i2c_master_wait
         _i2c_master_send_byte
           _i2c_master_wait
         _i2c_master_start
           _i2c_master_wait
         _i2c_master_stop
           _i2c_master_wait
         _i2c_master_wait
     _negotiate_optimal_pdo
       ___lldiv
         ___lmul (ARG)
       ___lmul
       ___wmul
       _write_pdo
         ___lwdiv
         _i2c_master_write_u32
           _i2c_master_write
             _i2c_master_send_byte
               _i2c_master_wait
             _i2c_master_start
               _i2c_master_wait
             _i2c_master_stop
               _i2c_master_wait
             _i2c_master_wait
         _reset
           _i2c_master_read_u8
             _i2c_master_read
               _i2c_master_receive_byte
                 _i2c_master_wait
               _i2c_master_repeat_start
                 _i2c_master_wait
               _i2c_master_send_byte
                 _i2c_master_wait
               _i2c_master_start
                 _i2c_master_wait
               _i2c_master_stop
                 _i2c_master_wait
               _i2c_master_wait
           _i2c_master_write_u8
             _i2c_master_write
               _i2c_master_send_byte
                 _i2c_master_wait
               _i2c_master_start
                 _i2c_master_wait
               _i2c_master_stop
                 _i2c_master_wait
               _i2c_master_wait
     _reset
       _i2c_master_read_u8
         _i2c_master_read
           _i2c_master_receive_byte
             _i2c_master_wait
           _i2c_master_repeat_start
             _i2c_master_wait
           _i2c_master_send_byte
             _i2c_master_wait
           _i2c_master_start
             _i2c_master_wait
           _i2c_master_stop
             _i2c_master_wait
           _i2c_master_wait
       _i2c_master_write_u8
         _i2c_master_write
           _i2c_master_send_byte
             _i2c_master_wait
           _i2c_master_start
             _i2c_master_wait
           _i2c_master_stop
             _i2c_master_wait
           _i2c_master_wait
   _thermal_protection
     _BQ_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _readADC
   _timer_diff

 _ISR (ROOT)
   i1_get_time
   i1_timer_diff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1EF      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      E0       4        0.0%
BITBANK0            4F      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               4F     3F      4F       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     43      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      33      10       63.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      E0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Oct 12 10:52:24 2020

                                   _c 0003                                     _i 0004  
                   _BQ_get_chrg_state 0000                           __CFG_CP$OFF 0000  
                        ___awdiv@sign 000C                   ___wmul@multiplicand 0002  
                  ?_BQ_get_chrg_state 0000                  __end_ofi1_timer_diff 0016  
                          _PPS_unlock 0000                                   l109 002A  
                                 l133 0018                                   l302 0003  
                                 l310 0022                                   l232 0043  
                                 l305 0003                                   l145 002D  
                                 l330 0028                                   l243 0006  
                                 l235 000B                                   l156 00B1  
                                 l148 005A                                   l501 0077  
                                 l246 0007                                   l327 0016  
                                 l351 00A0                                   l440 0023  
                                 l336 0020                                   l520 0081  
                                 l281 002E                                   l290 0005  
                                 l530 0050                                   l602 006E  
                                 l443 0051                                   l355 00A0  
                                 l284 0000                                   l621 0156  
                                 l278 0049                                   l702 0017  
                                 l630 003A                                   l287 000B  
                                 l543 0029                                   l296 0005  
                                 l720 0017                                   l608 007C  
                                 l456 001C                                   l490 0078  
                                 l706 007A                                   l299 0009  
                                 l627 00FB                                   l459 0028  
                                 l660 000B                                   l901 000B  
                                 l493 0024                                   l717 0017  
                                 l830 0010                                   l903 001F  
                                 l663 0005                                   l744 00A3  
                                 l833 001D                                   l657 0000  
                                 l737 0139                                   l666 0005  
                                 l754 0133                                   l915 0033  
                                 l676 0016                                   l669 0005  
                                 l749 00EB                                   l686 005C  
                                 l679 001D                                   l783 007F  
                                 l696 0017                                   l937 005A  
                                 l793 003D                                   l777 00CF  
                                 l779 003D                                   l788 00C9  
                                 l799 005E                                   _RA2 0062  
                                 _RC0 0070                                   _RA5 0065  
                                 _RC1 0071                                   _RC2 0072  
                                 _RC3 0073                                   _RC4 0074  
                                 _RC5 0075                                   _PR2 028D  
                                 _ISR 0000                                   _Map 0000  
                                 _dir 0001                          __CFG_BORV$LO 0000  
                                 wreg 0009                   ??_BQ_get_chrg_state 0009  
                          i1_get_time 0000                         __CFG_BBEN$OFF 0000  
                          _SYS_ENABLE 000B                          __CFG_LVP$OFF 0000  
                     __end_of_BQ_INIT 0052                                  ?_ISR 0000  
                       i1timer_diff@t 0000                          __CFG_ZCD$OFF 0000  
                                ?_Map 000F                                  l1054 005F  
                                l3001 0032                                  l3003 0041  
                                l3011 0051                                  l3101 0014  
                                l3013 0056                                  l3005 0045  
                                l1173 003C                                  l3021 0003  
                                l3111 0044                                  l3103 001F  
                                l3015 005B                                  l3007 0046  
                                l3031 0019                                  l3023 0009  
                                l3113 0045                                  l3105 0023  
                                l3009 004B                                  l3201 002D  
                                l3033 0028                                  l3025 000C  
                                l3041 0038                                  l3121 0002  
                                l4001 008F                                  l3115 004C  
                                l3107 002A                                  l3211 0054  
                                l3203 0045                                  l3035 002C  
                                l3027 0011                                  l3019 0000  
                                l3123 0005                                  l4011 00A0  
                                l4003 0094                                  l3133 0002  
                                l3053 0002                                  l3141 0000  
                                l3045 0000                                  l3109 003C  
                                l3117 0052                                  l3213 006F  
                                l3205 0047                                  l3221 0023  
                                l3301 0047                                  l3037 002D  
                                l3029 0015                                  l3125 0011  
                                l4021 00D8                                  l4013 00A9  
                                l4005 0098                                  l3055 0020  
                                l3143 0009                                  l3135 0000  
                                l3151 0000                                  l3215 0071  
                                l3207 004B                                  l3231 004C  
                                l3223 002D                                  l3311 0063  
                                l3303 004B                                  l3039 0032  
                                l3071 0011                                  l3063 0000  
                                l3127 001A                                  l4031 00FD  
                                l4023 00DE                                  l4015 00AE  
                                l4007 009A                                  l3145 0014  
                                l3049 0000                                  l3137 0005  
                                l3161 0041                                  l3153 0023  
                                l3217 0073                                  l3209 004E  
                                l3225 0040                                  l3073 0054  
                                l3065 0006                                  l3241 0015  
                                l3233 0002                                  l3129 0020  
                                l4041 0118                                  l4033 0105  
                                l4025 00E1                                  l4017 00D3  
                                l4009 009D                                  l3147 001F  
                                l3139 0000                                  l3171 0054  
                                l3163 0047                                  l3155 0036  
                                l3059 0000                                  l3227 0046  
                                l3219 0000                                  l3331 00A7  
                                l3091 001C                                  l3083 0000  
                                l3067 000C                                  l3251 00DE  
                                l3243 002F                                  l3235 0006  
                                l4035 010A                                  l4027 00E4  
                                l4019 00D5                                  l3181 0070  
                                l3173 0059                                  l3157 003C  
                                l3165 0048                                  l3229 0049  
                                l3341 00C3                                  l3333 00AB  
                                l3325 008F                                  l3317 0077  
                                l3309 005F                                  l3501 0087  
                                l3093 002B                                  l3085 0009  
                                l3253 00E8                                  l3261 0116  
                                l3245 0047                                  l3237 000A  
                                l4037 010E                                  l4029 00F7  
                                l3183 0073                                  l3175 005F  
                                l3167 004C                                  l3159 003D  
                                l3191 0005                                  l3319 007B  
                                l3087 000D                                  l3079 0074  
                                l3255 00F2                                  l3247 0072  
                                l3263 011B                                  l3239 0012  
                                l4039 0113                                  l3097 0000  
                                l3601 0003                                  l3177 0061  
                                l3169 0051                                  l3193 000B  
                                l3185 0000                                  l2801 000B  
                                l3361 0107                                  l3353 00EF  
                                l3281 0018                                  l3521 00CD  
                                l3273 0002                                  l3089 0015  
                                l3265 012A                                  l3257 0104  
                                l3249 00AE                                  l3099 0011  
                                l3611 0018                                  l3603 0005  
                                l3179 0069                                  l3187 0005  
                                l2811 0016                                  l3363 010B  
                                l3355 00F3                                  l3347 00D7  
                                l3339 00BF                                  l3515 00B5  
                                l3507 009B                                  l3267 0131  
                                l3259 0114           __size_of_i2c_master_read_u8 0018  
                                l2901 0003                       __end_of_BQ_Read 0029  
                                l3621 003E                                  l3613 0023  
                                l3605 0009                                  l3701 003F  
                                l3197 000F                                  l3189 0005  
                                l2821 0035                                  l2813 0016  
                                l2805 0010                                  l3293 0032  
                                l3285 001D                                  l3277 0000  
                                l3541 002A                                  l3533 0019  
                                l3525 0000                                  l3509 00A1  
                                l3461 0002                                  l3269 014F  
                                l2903 0002                                  l2911 000A  
                                l3631 0004                                  l3615 0028  
                                l3607 000D                                  l3703 0041  
                                l3199 0027                                  l2751 0000  
                                l2831 0050                                  l2823 0038  
                                l2815 0020                                  l2807 0010  
                                l3375 0137                                  l3295 0033  
                                l3287 001E                                  l3279 0005  
                                l3543 002A                                  l3535 0019  
                                l3527 0000                                  l3471 0025  
                                l3463 0008                                  l2905 0005  
                                l2921 0020                                  l2913 0010  
                                l3633 002C                                  l3617 002A  
                                l3609 000F                                  l3625 0043  
                                l3561 000D                                  l3553 0000  
                                l3641 0000                                  l3801 005F  
                                l2753 0005                                  l2761 0002  
                                l2833 0062                                  l2825 003F  
                                l2817 0026                                  l2809 0013  
                                l3369 011F                                  l3529 0014  
                                l3473 0029                                  l3465 000D  
                                l3721 003B                                  l3713 001B  
                                l3705 0000                                  l3635 0000  
                                l2915 0013                                  l2907 0002  
                                l3627 0000                                  l3619 0033  
                                l3571 0016                                  l3563 0010  
                                l3555 0002                                  l3651 000D  
                                l3643 0003                                  l3811 006C  
                                l3803 0061                                  l2771 0008  
                                l2755 0000                                  l2763 0000  
                                l2835 0066                                  l2827 0049  
                                l2819 002F                                  l2851 0011  
                                l2843 0002                                  l2931 0010  
                                l3637 0021                                  l2917 0019  
                                l2909 0005                                  l3741 002C  
                                l3733 0000                                  l3629 0003  
                                l3581 0022                                  l3573 0018  
                                l3565 0013                                  l3557 000A  
                                l3661 001A                                  l3653 000F  
                                l3645 0006                                  l3813 006E  
                                l2781 0004                                  l2773 000D  
                                l2757 0002                                  l2765 0002  
                                l2837 0072                                  l2861 0021  
                                l2853 0011                                  l2845 0006  
                                l3549 003B                                  l3493 006B  
                                l3485 0053                                  l3725 004B  
                                l3717 002B                                  l3709 000B  
                                l2933 0016                                  l2941 0039  
                                l2925 0000                                  l3821 001A  
                                l3639 0000                                  l2919 001D  
                                l3743 0031                                  l3751 0075  
                                l3735 0006                                  l3583 0025  
                                l3575 001C                                  l3567 0014  
                                l3559 000C                                  l3671 0023  
                                l3663 001D                                  l3655 0014  
                                l3647 0008                                  l3807 0066  
                                l3815 0073                                  l2791 0018  
                                l2783 0007                                  l2759 0000  
                                l2775 0011                                  l2767 0002  
                                l2839 0075                                  l2871 0048  
                                l2863 0027                                  l2855 0014  
                                l2847 000C                                  l3487 0057  
                                l3479 003F                                  l2951 0067  
                                l2943 003F                                  l2935 0027  
                                l2927 0000                                  l3831 0040  
                                l3591 0000                                  l2881 0005  
                                l3753 007B                                  l3745 0054  
                                l3737 0015                                  l3585 0027  
                                l3577 001E                                  l3569 0015  
                                l3681 0030                                  l3673 0025  
                                l3665 001E                                  l3657 0016  
                                l3649 000A                                  l3809 0068  
                                l2961 0000                                  l3761 0006  
                                l2793 001B                                  l2785 000D  
                                l2769 0005                                  l2873 0054  
                                l2865 0031                                  l2857 0017  
                                l3729 005B                                  l2953 006C  
                                l2945 004C                                  l2937 002D  
                                l2929 0000                                  l3825 0025  
                                l3817 0000                                  l3593 000E  
                                l2883 0000                                  l3755 009E  
                                l3747 005D                                  l3739 0028  
                                l3587 0028                                  l3579 0020  
                                l3691 0039                                  l3683 0033  
                                l3675 002A                                  l3667 001F  
                                l3659 0018                                  l2971 001B  
                                l2963 0003                                  l3771 001E  
                                l3763 000B                                  l2787 0010  
                                l2779 0002                                  l2891 0002  
                                l2875 0057                                  l2867 003E  
                                l2859 0017                                  l3499 0083  
                                l2947 0053                                  l2939 0033  
                                l3851 00E6                                  l3843 0092  
                                l3835 0055                                  l3819 0014  
                                l3595 000F                                  l2885 0000  
                                l3749 0061                                  l3589 0029  
                                l3693 003A                                  l3685 0036  
                                l3677 002C                                  l3669 0021  
                                l3861 0006                                  l3781 0036  
                                l2981 000B                                  l2965 0007  
                                l3773 0024                                  l3765 0010  
                                l2789 0017                                  l2797 0002  
                                l2869 0042                                  l2957 0002  
                                l2949 0061                                  l3837 006D  
                                l3597 0010                                  l2879 0000  
                                l2895 0000                                  l3599 0000  
                                l3695 003B                                  l3687 0037  
                                l3679 002E                                  l3863 0007  
                                l3855 0000                                  l3791 004A  
                                l3783 003C                                  l2991 001C  
                                l2983 000D                                  l2975 0000  
                                l2967 0010                                  l3775 0028  
                                l3767 0014                                  l3759 0000  
                                l2799 0006                                  l2887 0002  
                                l3847 00B8                                  l3839 007E  
                                l2897 0003                                  l3697 003C  
                                l3689 0038                                  l3865 0009  
                                l3857 0004                                  l3793 004F  
                                l3785 003D                                  l3777 0000  
                                l2993 0022                                  l2985 0011  
                                l2977 0002                                  l2969 0015  
                                l3769 001A                                  l2899 0000  
                                l3699 003D                                  l3867 000A  
                                l3859 0005                                  l3795 0054  
                                l3787 0043                                  l3779 0023  
                                l2995 0025                                  l2987 0016  
                                l2979 0006                                  l3971 0009  
                                l3797 0057                                  l3789 0045  
                                l2997 002A                                  l2989 001A  
                                l3981 0034                                  l3973 000C  
                                l3799 005A                                  l2999 002E  
                                l3991 0061                                  l3983 0044  
                                l3975 000F                                  l3985 0054  
                                l3993 006A                                  l3977 0012  
                                l3969 0000                                  l3995 0070  
                                l3987 0056                                  l3979 002E  
                                l3997 0080                                  l3989 005B  
                                l3999 0089                          __CFG_WDTE$ON 0000  
                                _BHOT 0007                                  _ICHG 0008  
                                u2000 003F                                  u2001 003E  
                                u2010 004F                                  u2011 004E  
                                u2100 000B                                  u2020 0057  
                                u2101 000A                                  u2021 0055  
                                u2110 0019                                  u2030 0058  
                                u2111 0018                                  u2040 0072  
                                u2120 0016                                  u2041 0071  
                                u2121 0015                                  u2050 000C  
                                u2130 002D                                  u2051 000B  
                                u2131 002C                                  u2220 001B  
                                u2060 0027                                  u3100 0024  
                                u2140 0033                                  u2221 001A  
                                u2205 000C                                  u2061 0026  
                                u3101 0023                                  u2141 0032  
                                u2310 0051                                  u2230 0006  
                                u2070 0048                                  u3110 003C  
                                u2150 0039                                  u2311 0050  
                                u2231 0005                                  u2215 0011  
                                u2071 0047                                  u3111 003B  
                                u2151 0038                                  u2320 0056  
                                u2240 0011                                  u2080 0054  
                                u3200 0014                                  u3120 0052  
                                u2160 003F                                  u2400 0006  
                                u2321 0055                                  u2305 0047  
                                u2241 0010                                  u2081 0053  
                                u3201 0013                                  u3121 0051  
                                u2161 003E                                  u2401 0005  
                                u2090 0005                                  u2250 0022  
                                u3210 0029                                  u3130 006A  
                                u2330 0009                                  u2170 0053  
                                u2410 000C                                  u2091 0004  
                                u2251 0021                                  u3211 0028  
                                u3131 0069                                  u2331 0008  
                                u2171 0052                                  u2411 000B  
                                u3220 003A                                  u3140 007E  
                                u3300 001A                                  u2180 0067  
                                u2420 002E                                  u3221 0039  
                                u3141 007D                                  u3301 0019  
                                u2181 0066                                  u2510 0023  
                                u2270 0032                                  u2190 0007  
                                u3150 0083                                  u3310 002A  
                                u2350 0019                                  u3230 000E  
                                u2511 0022                                  u2271 0031  
                                u2191 0006                                  u3151 0082  
                                u3311 0029                                  u2351 0018  
                                u4007 0045                                  u3231 000D  
                                u3240 000D                                  u2600 0023  
                                u3400 0006                                  u3160 009A  
                                u3320 003A                                  u2440 0073  
                                u2505 0015                                  u4017 0013  
                                u3241 000C                                  u2601 0022  
                                u2265 0026                                  u3401 0005  
                                u3161 0099                                  u3321 0039  
                                u2345 000D                                  u2441 0072  
                                u2425 002A                                  u2530 003C  
                                u3250 0028                                  u2610 003C  
                                u2290 0041                                  u3410 0010  
                                u3170 00B4                                  u3090 0008  
                                u3330 004A                                  u2450 000D  
                                u2370 0028                                  u2531 003B  
                                u3251 0027                                  u4027 001E  
                                u2611 003B                                  u2291 0040  
                                u3411 000F                                  u3171 00B3  
                                u3091 0007                                  u3331 0049  
                                u2451 000C                                  u2371 0027  
                                u2435 0057                                  u3260 0043  
                                u2620 0047                                  u2700 0029  
                                u3420 001A                                  u3180 00C8  
                                u3340 005A                                  u3500 0019  
                                u2525 0024                                  u3261 0042  
                                u4037 002E                                  u2621 0046  
                                u2285 0033                                  u2701 0027  
                                u3421 0019                                  u3181 00C7  
                                u3341 0059                                  u2365 001A  
                                u3501 0018                                  u3350 0006  
                                u2550 0052                                  u3270 0049  
                                u2630 0051                                  u2710 002A  
                                u3430 0024                                  u3190 00CD  
                                u2390 0038                                  u3510 0024  
                                u3351 0005                                  u2551 0051  
                                u2535 0038                                  u3271 0048  
                                u4047 0039                                  u2631 0050  
                                u2295 003D                                  u3431 0023  
                                u3191 00CC                                  u2391 0037  
                                u2375 0024                                  u3511 0023  
                                u3360 0031                                  u3280 0012  
                                u3440 0023                                  u2640 005F  
                                u2720 0046                                  u2480 002B  
                                u2800 012A                                  u3520 0039  
                                u3361 0030                                  u2545 0046  
                                u3441 0022                                  u2641 005E  
                                u2721 0045                                  u2481 002A  
                                u2465 0016                                  u2385 002E  
                                u2801 0129                                  u3521 0038  
                                u3370 0054                                  u2490 0011  
                                u3450 003C                                  u2650 0070  
                                u3290 000A                                  u2810 0131  
                                u3530 003F                                  u2570 0020  
                                u3371 0053                                  u2491 0010  
                                u3451 003B                                  u2651 006F  
                                u3291 0009                                  u2475 001D  
                                u2811 0130                                  u3531 003E  
                                u2571 001F                                  u3380 007B  
                                u3460 0043                                  u2660 000B  
                                u1940 0005                                  u2900 00BE  
                                u2820 0018                                  u2740 005B  
                                u3540 0054                                  u3381 007A  
                                u3285 000E                                  u3461 0042  
                                u2661 000A                                  u1941 0004  
                                u2901 00BD                                  u2821 0017  
                                u2805 0126                                  u3541 0053  
                                u2565 0009                                  u3390 009E  
                                u3470 004A                                  u2670 002D  
                                u1950 000B                                  u2910 00D6  
                                u2830 0031                                  u2750 00CC  
                                u3550 006D                                  u3391 009D  
                                u3471 0049                                  u2671 002C  
                                u1951 000A                                  u2911 00D5  
                                u2831 0030                                  u2735 001A  
                                u3551 006C                                  u3480 0054  
                                u2680 0054                                  u1960 000D  
                                u2920 00EA                                  u2840 0046  
                                u2760 00DE                                  u3560 007D  
                                u3800 0061                                  u2585 000C  
                                u3481 0053                                  u2681 0053  
                                u1961 000C                                  u2921 00E9  
                                u2841 0045                                  u2761 00DD  
                                u2745 0057                                  u3561 007C  
                                u3801 0060                                  u2690 0023  
                                u1970 000B                                  u2930 00EF  
                                u2850 005E                                  u2770 00E8  
                                u3570 0091                                  u3490 0014  
                                u3810 0070                                  u2595 0017  
                                u2691 0022                                  u1971 000A  
                                u2931 00EE                                  u2851 005D  
                                u2771 00E7                                  u2755 00C8  
                                u3571 0090                                  u3491 0013  
                                u3811 006F                                  u1980 0026  
                                u2940 0106                                  u2860 0076  
                                u2780 00F1                                  u3580 00B7  
                                u3900 0105                                  u3820 0080  
                                u1981 0025                                  u2941 0105  
                                u2861 0075                                  u2781 00F0  
                                u3581 00B6                                  u3901 0104  
                                u3821 007F                                  u1990 0035  
                                u2950 011E                                  u2870 008E  
                                u2790 0104                                  u3590 00E5  
                                u3910 010A                                  u3830 0089  
                                u3750 0034                                  u1991 0034  
                                u2951 011D                                  u2871 008D  
                                u2791 0103                                  u3591 00E4  
                                u3911 0109                                  u3831 0088  
                                u3751 0033                                  u2960 0132  
                                u2880 00A2                                  u3920 010E  
                                u3840 008F                                  u3760 0044  
                                u2961 0131                                  u2881 00A1  
                                u3585 00B3                                  u3921 010D  
                                u3841 008E                                  u3761 0043  
                                u2970 0137                                  u2890 00A7  
                                u3930 0113                                  u3850 00A9  
                                u3770 004B                                  u2971 0136  
                                u2891 00A6                                  u2795 0100  
                                u3931 0112                                  u3851 00A8  
                                u3771 0049                                  u3940 0118  
                                u3860 00AE                                  u3780 004C  
                                u3941 0117                                  u3861 00AD  
                                u3870 00D3                                  u3790 0054  
                                u3871 00D2                                  u3791 0053  
                                u3880 00DE                                  u3881 00DD  
                                u3890 00FD                                  u3891 00FC  
                                u3997 0015                                  Map@x 000F  
                                _TMR1 020C                                  _TMR2 028C  
                                _TREG 0000                                  _VREG 0005  
                                _WPUA 1F39                         __CFG_FCMEN$ON 0000  
                                _main 0000                                  _mode 0000  
                                fsr0h 0005                                  fsr1h 0007  
                                indf0 0000                                  fsr0l 0004  
                                indf1 0001                                  fsr1l 0006  
                                btemp 007E                         __CFG_BOREN$ON 0000  
                  __size_of_BQ_UPDATE 00A1                                  start 0000* 
                      _btn_time_start 0018                         __CFG_CSWEN$ON 0000  
           __end_of_BQ_get_chrg_state 0021                                 ??_ISR 0008  
                               ??_Map 0015                       _VBUS_CHRG_STATE 000E  
    __size_of_i2c_master_repeat_start 0006                    __size_of_PIC_SETUP 002B  
                __end_of_battery_fade 0078                      ?_I2C_Master_Init 001A  
                    ?_I2C_Master_Read 0000                      ?_I2C_Master_Wait 0000  
                    ?_I2C_Master_nAck 0000                      ?_I2C_Master_Stop 0000  
        __size_of_i2c_master_read_u16 0018                write_sector@sector_num 0016  
                               ?_main 0000                       __end_of___awdiv 0060  
                               _BCOLD 0006                       __end_of___lldiv 005B  
                               _T1CLK 0211                       ___awdiv@divisor 0006  
                               _IOCAF 1F3F                                 _IOCAN 1F3E  
                               _IOCAP 1F3D    negotiate_optimal_pdo@opt_pdo_power 0000  
                     __end_of___lwdiv 003D                      __end_of_BQ_Write 0017  
                               i1l123 001C                                 i1l129 0062  
                               i1l830 0009                                 i1l833 0015  
                               _ITERM 0006                       ___awdiv@counter 000B  
             ??_negotiate_optimal_pdo 0030                                 _TRISA 0012  
                               _TRISC 0014                   ___lmul@multiplicand 0004  
                    __end_of_RGB_fade 0079                         __CFG_WRTB$OFF 0000  
                       __CFG_WRTC$OFF 0000                       __end_of_readADC 0029  
            __size_of_stusb_negotiate 00FC                                 _color 0002  
                               _reset 0000                      __end_of_PWM_INIT 0044  
                    __end_of_PPS_lock 0008                negotiate_optimal_pdo@i 000F  
        __size_of_i2c_master_write_u8 0018                                 status 0003  
                               wtemp0 007E                        __CFG_MCLRE$OFF 0000  
                     __initialization 0000                          __end_of_main 0121  
       negotiate_optimal_pdo@num_pdos 002E                        __CFG_SAFEN$OFF 0000  
       negotiate_optimal_pdo@src_pdos 0008           __size_of_thermal_protection 0019  
               __size_of_write_sector 00D0                           ?_PPS_unlock 0000  
                              ??_main 003E                             ??_BQ_INIT 0003  
                   __end_of_BQ_UPDATE 00A1                             ??_BQ_Read 0005  
                   ?_I2C_Master_Start 0000                     ?_I2C_Master_Write 0000  
                         ?i1_get_time 0000               write_sector@sector_data 0012  
                         BQ_Read@data 0008                    ??_I2C_Master_Start 0000  
                              _ADCON0 009D                                _ADCON1 009E  
                  ??_I2C_Master_Write 0000                                _ADRESH 009C  
                              ?_reset 0012                      ___awdiv@dividend 0008  
                              _ANSELA 1F38                                _ANSELC 1F4E  
                              _IOCAF5 F9FD                                _ICO_EN 000D  
             _i2c_master_receive_byte 0000                                _RC0PPS 1F20  
                              _RC1PPS 1F21                                _RC2PPS 1F22  
                              _RC3PPS 1F23                                _RC4PPS 1F24  
           __size_of_enter_write_mode 013A                                _INILIM 0002  
                              i1l3935 0000                                i1l3951 001B  
                              i1l3943 0002                                i1l3961 003A  
                              i1l3953 0021                                i1l3945 0007  
                              i1l3939 0000                                i1l3963 004F  
                              i1l3955 0026                                i1l3947 000D  
                              i1l3965 005E                                i1l3957 0032  
                              i1l3949 0016                                i1l3967 0061  
                              i1l3959 0035                                _EN_HIZ 0008  
                   __end_of_PIC_SETUP 002B                                u370_20 001B  
                              u370_21 001A                                u371_20 0021  
                              u371_21 0020                                u372_20 0026  
                              u372_21 0025                                u373_20 003A  
                              u373_21 0039                                u374_20 005E  
                              u374_21 005D                                u369_20 0007  
                              u369_21 0006                                _VCLAMP 001C  
                              _TMR1IF 3880                                _TMR2IF 3881  
                              _TMR2ON 1477                                _VRECHG 001F  
                    ??_BQ_CONFIG_INIT 0000                                _WD_RST 0022  
       __size_of_i2c_master_send_byte 0017                        __CFG_PWRTE$OFF 0000  
                    __end_of_chrg_led 0082            __size_of_BQ_get_chrg_state 0021  
                        _write_sector 0000                      __end_of_get_time 0011  
               __size_ofi1_timer_diff 0016                                ___lmul 0000  
                              ___wmul 0000                             ??___awdiv 000A  
                      __CFG_STVREN$ON 0000                       _i2c_master_read 0000  
                           ??___lldiv 0014                       _i2c_master_wait 0000  
                     _i2c_master_stop 0000                             ??___lwdiv 0004  
            i2c_master_send_byte@data 0003                      ___awdiv@quotient 000D  
             __size_of_I2C_Master_Ack 0004             __size_of_i2c_master_start 0006  
           __size_of_i2c_master_write 005D                             ??_readADC 0002  
             negotiate_optimal_pdo@ok 0011                __size_of_I2C_bus_reset 004A  
                       ?_exit_rw_mode 0012         __size_of_i2c_master_write_u32 0018  
                         BQ_Write@reg 0002                    write_sector@buffer 0017  
             __end_of__initialization 003A                          i1_timer_diff 0000  
                   ??_stusb_negotiate 0038                   __size_of_PPS_unlock 0007  
                           ?_BQ_Write 0001                 __size_of_battery_fade 0078  
                      __pcstackCOMMON 0000                             ?_RGB_fade 0000  
                        __pidataBANK0 0000                          __pidataBANK1 0000  
                        __pidataBANK2 0000                   __size_ofi1_get_time 000A  
             _i2c_master_repeat_start 0000                         __end_of_reset 006F  
                     _BATTERY_VOLTAGE 000D                             ?_PWM_INIT 0000  
                           ?_PPS_lock 0000                        ??_exit_rw_mode 0014  
                  __size_of_flash_led 0051             ??_i2c_master_receive_byte 0000  
                  __size_of_led_modes 002A                               ??_reset 0014  
                          __pbssBANK0 0000                            __pbssBANK1 0000  
                          __pbssBANK2 0000                          _battery_fade 0000  
                 _i2c_master_read_u16 0000               __end_of_i2c_master_read 007B  
             __end_of_i2c_master_wait 000C               __end_of_i2c_master_stop 0006  
                          ??_BQ_Write 0002                         _I2C_bus_reset 0000  
                          __pmaintext 0000                            ??_RGB_fade 0008  
                             ?___lmul 0000                               ?___wmul 0000  
                          _chrg_delay 0004                            __pintentry 0000  
                      ___lmul@product 0008                               _BATLOWV 0020  
                          ??_PWM_INIT 0000                  ?_i2c_master_read_u16 000D  
                 __CFG_RSTOSC$HFINT32 0000                   _i2c_master_write_u8 0000  
                          ??_PPS_lock 0000                               _T2CKPS0 1474  
                             _T2CKPS1 1475                               _T2CKPS2 1476  
                  __size_of_nvm_flash 005F                               _BQ_INIT 0000  
                             _EN_ILIM 0003                               _MAXC_EN 000C  
                             _IPRECHG 0007               __size_of_PWM_power_down 000C  
                             _EN_TERM 0004                               _BQ_Read 0000  
                          _flash_time 0000        __size_of_negotiate_optimal_pdo 0157  
       __end_of_negotiate_optimal_pdo 0157            __end_of_i2c_master_read_u8 0018  
                             _NVMADRH 081B                               _NVMADRL 081A  
                             _PWM3DCH 0315                               _NVMDATL 081C  
                             _PWM3DCL 0314                               _PWM4DCH 0319  
                             _NVMCON2 081F                               _PWM4DCL 0318  
                             _PWM5DCH 031D                             ?_chrg_led 0000  
                             _PWM5DCL 031C                               _PWM3CON 0316  
                             _PWM4CON 031A                               _PWM5CON 031E  
                             _SSP1ADD 018D                               _PPSLOCK 1E8F  
                             _SSP1BUF 018C                               _VREGCON 0812  
              i2c_master_read_u16@reg 000D                             ?_get_time 0000  
                    _enter_write_mode 0000                               _SYS_MIN 0009  
               BQ_get_chrg_state@data 000B                i2c_master_read_u8@data 000E  
               BQ_get_chrg_state@temp 000D                  ?_i2c_master_write_u8 000E  
                  __size_of_write_pdo 007D                        ?_I2C_bus_reset 0000  
           ??_i2c_master_repeat_start 0000                     __end_of_flash_led 0051  
                             ___awdiv 0000                       __size_of___lmul 0034  
                           _CHG_TIMER 0001                               ___lldiv 0000  
                   __end_of_led_modes 002A                       __size_of___wmul 0020  
                             ___lwdiv 0000                        _I2C_Master_Ack 0000  
               ??_i2c_master_read_u16 000F                          ??_PPS_unlock 0000  
                    _i2c_master_start 0000                               __ptext1 0000  
                             __ptext2 0000                               __ptext3 0000  
                             __ptext4 0000                               __ptext5 0000  
                             __ptext6 0000                               __ptext7 0000  
                             __ptext8 0000                               __ptext9 0000  
                    _i2c_master_write 0000                       __CFG_WRTAPP$OFF 0000  
                             _readADC 0000                          __size_of_ISR 0064  
                           _T1CONbits 020E                          __size_of_Map 0025  
                           _CONV_RATE 0004                       __CFG_WRTSAF$OFF 0000  
            __size_of_I2C_Master_Init 002F              __size_of_I2C_Master_Read 0023  
                        ??i1_get_time 0004              __size_of_I2C_Master_Wait 000C  
            __size_of_I2C_Master_nAck 0004              __size_of_I2C_Master_Stop 0006  
                          ??_chrg_led 0008                             _BQ_UPDATE 0000  
                             clrloop0 0001                            ??_get_time 0004  
                end_of_initialization 003A                 ??_i2c_master_write_u8 0010  
                    write_pdo@pdo_num 001D                               init_ram 0000  
                             initloop 0001                      ?_i2c_master_read 0004  
           __size_of_I2C_Master_Start 0006                     __end_of_nvm_flash 005F  
                  __end_of_PPS_unlock 0007                      ?_i2c_master_wait 0000  
                           _PIC_SETUP 0000             __size_of_I2C_Master_Write 000A  
                     ___lldiv@divisor 000C                      ?_i2c_master_stop 0000  
            negotiate_optimal_pdo@pdo 0013                               reset@ok 0017  
                     ___lldiv@counter 0019                  __end_of_exit_rw_mode 003E  
              __end_of_I2C_Master_Ack 0004                          _AUTO_DPDM_EN 000B  
          __end_of_thermal_protection 0019                    __end_ofi1_get_time 000A  
                          _nvm_config 0000                          BQ_Write@data 0001  
               __CFG_WDTCPS$WDTCPS_13 0000                             Map@outMax 0014  
                           Map@outMin 0013                            _timer_diff 0000  
                           _VINDPM_OS 0001          __end_of_i2c_master_send_byte 0017  
                        _REG00_config 0008                          _REG01_config 0007  
                   __end_of_write_pdo 007D                  __CFG_WDTCCS$LFINTOSC 0000  
                        _REG02_config 0006                             _TRISAbits 0012  
                     _stusb_negotiate 0000                          _REG03_config 0005  
                           _TRISCbits 0014                          _REG04_config 0004  
                         timer_diff@t 0000                          _REG05_config 0003  
                        _REG06_config 0002                            ?_BQ_UPDATE 0000  
                        _REG07_config 0001                      __CFG_FEXTOSC$OFF 0000  
                        _REG08_config 0000                       ??_I2C_bus_reset 0000  
                          ?_PIC_SETUP 0000                          write_pdo@pdo 002A  
negotiate_optimal_pdo@opt_pdo_current 0004                         battery_fade@v 001F  
        __end_of_i2c_master_write_u32 0018              i2c_master_read_u8@device 0011  
                     ?_I2C_Master_Ack 0000                     __size_of_BQ_Write 0017  
          i2c_master_receive_byte@ack 0001  negotiate_optimal_pdo@opt_pdo_voltage 0006  
                      __end_of___lmul 0034                        __end_of___wmul 0020  
                   __size_of_RGB_fade 0079                     __size_of_PWM_INIT 0044  
                      _PWM_power_down 0000                     __size_of_PPS_lock 0008  
                 start_initialization 0000                           __end_of_ISR 0064  
                         __end_of_Map 0025             i2c_master_read_u16@device 0011  
                 write_pdo@current_mA 0019                     ??_I2C_Master_Init 001E  
                   ??_I2C_Master_Read 0000                     ??_I2C_Master_Wait 0000  
                   ??_I2C_Master_nAck 0000                            BQ_Read@reg 0007  
                   ??_I2C_Master_Stop 0000                      __CFG_LPBOREN$OFF 0000  
                            ??___lmul 0008                              ??___wmul 0004  
                         __pdataBANK0 0000                           __pdataBANK1 0000  
                         __pdataBANK2 0000               __size_of_BQ_CONFIG_INIT 0024  
            __end_of_enter_write_mode 013A               __end_of_stusb_negotiate 00FC  
                         ?_timer_diff 0000                __end_of_PWM_power_down 000C  
                            ?_BQ_INIT 0000                           __pbssCOMMON 0000  
                            ?_BQ_Read 0003                             ___latbits 0001  
                       __pcstackBANK0 0000                         __pcstackBANK1 0000  
                         ??_BQ_UPDATE 000E                     __size_of_chrg_led 0082  
               __size_of_exit_rw_mode 003E                     __size_of_get_time 0011  
            __end_of_i2c_master_start 0006              __end_of_i2c_master_write 005D  
                    _I2C_Master_Start 0000                  _i2c_master_send_byte 0000  
                  _i2c_master_read_u8 0000                           ??_PIC_SETUP 0000  
                    _I2C_Master_Write 0000                      ___lwdiv@dividend 0002  
            i2c_master_write_u32@data 000F                 i2c_master_read@device 0009  
         i2c_master_receive_byte@data 0002                              ?___awdiv 0006  
                            ?___lldiv 000C                   ?_i2c_master_read_u8 000D  
                            ?___lwdiv 0000                          _BQ_adc_state 000C  
                    __CFG_PPS1WAY$OFF 0000                             _flash_led 0000  
                I2C_Master_Write@data 0000                       ?_PWM_power_down 0000  
                           _led_modes 0000                              ?_readADC 0000  
            ?_i2c_master_receive_byte 0000                 i2c_master_read_u8@reg 000D  
                 write_pdo@voltage_mV 001B                              _BAT_COMP 001D  
                        _exit_rw_mode 0000                  _i2c_master_write_u32 0000  
                    ___lwdiv@quotient 0005                  ??_i2c_master_read_u8 000F  
                         _CPUDOZEbits 088C                              _T2CLKCON 0290  
               _negotiate_optimal_pdo 0000                        __size_of_reset 006F  
                           _rgb_delay 0008                              _T2OUTPS0 1470  
                            _T2OUTPS1 1471                              _T2OUTPS2 1472  
                            _T2OUTPS3 1473                        ___wmul@product 0004  
                            _HVDCP_EN 0024                   __size_of_timer_diff 001E  
                            _EN_TIMER 0002                 ?_i2c_master_send_byte 0000  
                           clear_ram0 0000                              _PIE0bits 0716  
                            _PIE4bits 071A                enter_write_mode@buffer 0016  
                            _BQ_Write 0000                           _flash_state 0000  
                       ?_write_sector 0012           __end_of_i2c_master_read_u16 0018  
                            _WATCHDOG 001E                              _RGB_fade 0000  
                   __CFG_BBSIZE$BB512 0000                              Map@inMax 0012  
                            Map@inMin 0011                             _nvm_flash 0000  
                            _SSP1CON1 0190                              _SSP1CON2 0191  
                            _SSP1CON3 0192                              _SSP1STAT 018F  
             i2c_master_read_u16@data 000E                              _STAT_DIS 0003  
                          ?_flash_led 0000                              _PWM_INIT 0000  
                    ?_stusb_negotiate 0000                            _ADCON0bits 009D  
                            _PPS_lock 0000                     ___wmul@multiplier 0000  
                          ?_led_modes 0000                      __size_of_BQ_INIT 0052  
                  _thermal_protection 0000           __end_of_i2c_master_write_u8 0018  
                    __size_of_BQ_Read 0029                 ?_i2c_master_write_u32 000E  
                 I2C_Master_Read@data 0002                     ___lmul@multiplier 0000  
                           _write_pdo 0000                   ?_thermal_protection 0000  
            ?_i2c_master_repeat_start 0000                         ?i1_timer_diff 0000  
                    ??_I2C_Master_Ack 0000                        ??_write_sector 0014  
                       _set_stusb4500 0009                            ?_nvm_flash 0000  
                          _CHG_CONFIG 000A                        _BQ_CONFIG_INIT 0000  
     __end_of_i2c_master_receive_byte 001E                      __size_of___awdiv 0060  
            __size_of_i2c_master_read 007B                      __size_of___lldiv 005B  
                ??_thermal_protection 0005              __size_of_i2c_master_wait 000C  
                    __size_of___lwdiv 003D              __size_of_i2c_master_stop 0006  
                      readADC@channel 0004                            _ANSELAbits 1F38  
                     _I2C_Master_Init 0000                      __size_of_readADC 0029  
                     _I2C_Master_Read 0000                       _I2C_Master_Wait 0000  
                     _I2C_Master_nAck 0000                       _I2C_Master_Stop 0000  
                     ___lwdiv@divisor 0000               i2c_master_write_u32@reg 000E  
                            _chrg_led 0000                       ___lwdiv@counter 0007  
              ?_negotiate_optimal_pdo 002E                              __ptext10 0000  
                            __ptext11 0000                              __ptext20 0000  
                            __ptext12 0000                              __ptext21 0000  
                            __ptext13 0000                            _T1GCONbits 020F  
                            __ptext30 0000                              __ptext22 0000  
                            __ptext14 0000                              __ptext31 0000  
                            __ptext23 0000                              __ptext15 0000  
                            __ptext40 0000                              __ptext32 0000  
                            __ptext24 0000                              __ptext16 0000  
                            __ptext41 0000                              __ptext33 0000  
                            __ptext25 0000                              __ptext17 0000  
                            __ptext50 0000                              __ptext42 0000  
                            __ptext34 0000                              __ptext26 0000  
                            __ptext18 0000                              __ptext51 0000  
                            __ptext43 0000                              __ptext35 0000  
                            __ptext27 0000                              __ptext19 0000  
                            __ptext52 0000                              __ptext44 0000  
                            __ptext36 0000                              __ptext28 0000  
                            __ptext53 0000                              __ptext45 0000  
                            __ptext37 0000                              __ptext29 0000  
                            __ptext54 0000                              __ptext46 0000  
                            __ptext38 0000                              __ptext55 0000  
                            __ptext47 0000                              __ptext39 0000  
                            __ptext48 0000                              __ptext57 0000  
                            __ptext49 0000                              __ptext58 0000  
                         _BQ_adc_time 000C                          _SSP1CON2bits 0191  
                          ?_write_pdo 0019                              _get_time 0000  
                            _btn_time 0014                            _BOOST_FREQ 0000  
             i2c_master_write_u8@data 000F                         ?_battery_fade 0000  
                      ??i1_timer_diff 0004        negotiate_optimal_pdo@pdo_power 0009  
              ??_i2c_master_send_byte 0003                         __size_of_main 0121  
          i2c_master_write_u32@device 0014                            _CONV_START 0005  
                __CFG_WDTCWS$WDTCWS_7 0000                 __end_of_I2C_bus_reset 004A  
                          _FORCE_DPDM 0023                     _stusb4500_timeout 0010  
                      I2C_bus_reset@i 0001                __end_of_BQ_CONFIG_INIT 0024  
                            int$flags 007E                           ??_flash_led 0008  
                       _timer_counter 0000                          ??_timer_diff 0004  
                   ?_enter_write_mode 0012                    I2C_Master_Init@clk 001A  
                  I2C_Master_Read@ack 0001                           ??_led_modes 0020  
                  ??_enter_write_mode 0014              __end_of_I2C_Master_Start 0006  
            __end_of_I2C_Master_Write 000A                            _INTCONbits 000B  
              ??_i2c_master_write_u32 0013                           _NVMCON1bits 081E  
              i2c_master_write@device 0009                           _PWM3CONbits 0316  
                         _PWM4CONbits 031A       __end_of_i2c_master_repeat_start 0006  
                         _PWM5CONbits 031E                        ??_battery_fade 0017  
                            intlevel1 0000*                     _btn_is_debounced 000A  
                 i2c_master_read@data 000A                      ___lldiv@dividend 0010  
                  __end_of_nvm_config 0028                     ?_i2c_master_start 0000  
                   __CFG_CLKOUTEN$OFF 0000                     ?_i2c_master_write 0004  
              i2c_master_write_u8@reg 000E                              reset@res 0016  
                  __end_of_timer_diff 001E                    ??_i2c_master_start 0000  
                  ??_i2c_master_write 0009                       ?_BQ_CONFIG_INIT 0000  
                    ??_PWM_power_down 0000                           ??_nvm_flash 0018  
             __end_of_I2C_Master_Init 002F               __end_of_I2C_Master_Read 0023  
             __end_of_I2C_Master_Wait 000C               __end_of_I2C_Master_nAck 0004  
             __end_of_I2C_Master_Stop 0006                         __pstringtext1 0000  
               stusb_negotiate@header 0041                 stusb_negotiate@buffer 0019  
                          _SSP1DATPPS 1EC6                    i2c_master_read@buf 0005  
                  i2c_master_read@len 0006                    i2c_master_read@reg 0004  
                          _SSP1CLKPPS 1EC5                            _OTG_CONFIG 0021  
                    ___lldiv@quotient 0015                     ??_i2c_master_read 0008  
                   ??_i2c_master_wait 0000                  __end_of_write_sector 00D0  
                   ??_i2c_master_stop 0000      negotiate_optimal_pdo@pdo_current 000D  
                         ??_write_pdo 001E                  i2c_master_write@data 000A  
           i2c_master_write_u8@device 0011                     i2c_master_read@ok 000B  
    __size_of_i2c_master_receive_byte 001E      negotiate_optimal_pdo@pdo_voltage 0017  
                 i2c_master_write@buf 0005                   i2c_master_write@len 0007  
                 i2c_master_write@reg 0004                    i2c_master_write@ok 000C  
                      _btn_is_pressed 0005  
