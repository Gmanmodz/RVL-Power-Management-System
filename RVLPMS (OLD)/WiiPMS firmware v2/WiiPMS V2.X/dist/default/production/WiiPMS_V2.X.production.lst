

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 21 13:56:51 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F15324
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	psect	text41,local,class=CODE,merge=1,delta=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2
    64                           	psect	text43,local,class=CODE,merge=1,delta=2
    65                           	psect	text44,local,class=CODE,merge=1,delta=2
    66                           	psect	text45,local,class=CODE,merge=1,delta=2
    67                           	psect	text46,local,class=CODE,merge=1,delta=2
    68                           	psect	text47,local,class=CODE,merge=1,delta=2
    69                           	psect	text48,local,class=CODE,merge=1,delta=2
    70                           	psect	text49,local,class=CODE,merge=1,delta=2
    71                           	psect	text50,local,class=CODE,merge=1,delta=2
    72                           	psect	text51,local,class=CODE,merge=1,delta=2
    73                           	psect	intentry,global,class=CODE,delta=2
    74                           	psect	text53,local,class=CODE,merge=1,delta=2
    75                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    76                           	dabs	1,0x7E,2
    77  0000                     
    78                           ; Version 2.10
    79                           ; Generated 31/07/2019 GMT
    80                           ; 
    81                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC16F15324 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000E                     	;# 
   126  0012                     	;# 
   127  0014                     	;# 
   128  0018                     	;# 
   129  001A                     	;# 
   130  009B                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0119                     	;# 
   137  0119                     	;# 
   138  0119                     	;# 
   139  011A                     	;# 
   140  011A                     	;# 
   141  011A                     	;# 
   142  011B                     	;# 
   143  011B                     	;# 
   144  011B                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011C                     	;# 
   148  011C                     	;# 
   149  011C                     	;# 
   150  011D                     	;# 
   151  011D                     	;# 
   152  011D                     	;# 
   153  011E                     	;# 
   154  011E                     	;# 
   155  011E                     	;# 
   156  011F                     	;# 
   157  011F                     	;# 
   158  011F                     	;# 
   159  011F                     	;# 
   160  011F                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  018E                     	;# 
   164  018F                     	;# 
   165  0190                     	;# 
   166  0191                     	;# 
   167  0192                     	;# 
   168  020C                     	;# 
   169  020C                     	;# 
   170  020D                     	;# 
   171  020E                     	;# 
   172  020F                     	;# 
   173  020F                     	;# 
   174  0210                     	;# 
   175  0210                     	;# 
   176  0211                     	;# 
   177  0211                     	;# 
   178  028C                     	;# 
   179  028C                     	;# 
   180  028D                     	;# 
   181  028D                     	;# 
   182  028E                     	;# 
   183  028F                     	;# 
   184  0290                     	;# 
   185  0291                     	;# 
   186  030C                     	;# 
   187  030C                     	;# 
   188  030D                     	;# 
   189  030E                     	;# 
   190  030F                     	;# 
   191  0310                     	;# 
   192  0310                     	;# 
   193  0311                     	;# 
   194  0312                     	;# 
   195  0313                     	;# 
   196  0314                     	;# 
   197  0314                     	;# 
   198  0315                     	;# 
   199  0316                     	;# 
   200  0318                     	;# 
   201  0318                     	;# 
   202  0319                     	;# 
   203  031A                     	;# 
   204  031C                     	;# 
   205  031C                     	;# 
   206  031D                     	;# 
   207  031E                     	;# 
   208  038C                     	;# 
   209  038C                     	;# 
   210  038D                     	;# 
   211  038E                     	;# 
   212  058C                     	;# 
   213  058C                     	;# 
   214  058D                     	;# 
   215  058E                     	;# 
   216  058F                     	;# 
   217  058F                     	;# 
   218  0590                     	;# 
   219  0591                     	;# 
   220  0592                     	;# 
   221  0593                     	;# 
   222  059C                     	;# 
   223  059C                     	;# 
   224  059D                     	;# 
   225  059D                     	;# 
   226  059E                     	;# 
   227  059F                     	;# 
   228  060C                     	;# 
   229  060D                     	;# 
   230  060E                     	;# 
   231  060F                     	;# 
   232  0610                     	;# 
   233  0611                     	;# 
   234  0612                     	;# 
   235  0613                     	;# 
   236  0614                     	;# 
   237  070C                     	;# 
   238  070D                     	;# 
   239  070E                     	;# 
   240  070F                     	;# 
   241  0710                     	;# 
   242  0711                     	;# 
   243  0712                     	;# 
   244  0713                     	;# 
   245  0716                     	;# 
   246  0717                     	;# 
   247  0718                     	;# 
   248  0719                     	;# 
   249  071A                     	;# 
   250  071B                     	;# 
   251  071C                     	;# 
   252  071D                     	;# 
   253  0796                     	;# 
   254  0797                     	;# 
   255  0798                     	;# 
   256  0799                     	;# 
   257  079A                     	;# 
   258  079B                     	;# 
   259  080C                     	;# 
   260  080D                     	;# 
   261  080E                     	;# 
   262  080F                     	;# 
   263  0810                     	;# 
   264  0811                     	;# 
   265  0812                     	;# 
   266  0813                     	;# 
   267  0814                     	;# 
   268  081A                     	;# 
   269  081A                     	;# 
   270  081B                     	;# 
   271  081C                     	;# 
   272  081C                     	;# 
   273  081D                     	;# 
   274  081E                     	;# 
   275  081F                     	;# 
   276  088C                     	;# 
   277  088D                     	;# 
   278  088E                     	;# 
   279  088F                     	;# 
   280  0890                     	;# 
   281  0891                     	;# 
   282  0892                     	;# 
   283  0893                     	;# 
   284  0895                     	;# 
   285  0896                     	;# 
   286  090C                     	;# 
   287  090E                     	;# 
   288  090F                     	;# 
   289  091F                     	;# 
   290  098F                     	;# 
   291  098F                     	;# 
   292  0990                     	;# 
   293  0991                     	;# 
   294  0992                     	;# 
   295  0993                     	;# 
   296  0994                     	;# 
   297  0995                     	;# 
   298  0996                     	;# 
   299  0997                     	;# 
   300  0A19                     	;# 
   301  0A19                     	;# 
   302  0A1A                     	;# 
   303  0A1A                     	;# 
   304  0A1B                     	;# 
   305  0A1B                     	;# 
   306  0A1B                     	;# 
   307  0A1C                     	;# 
   308  0A1C                     	;# 
   309  0A1D                     	;# 
   310  0A1D                     	;# 
   311  0A1E                     	;# 
   312  0A1E                     	;# 
   313  0A1F                     	;# 
   314  0A1F                     	;# 
   315  0A1F                     	;# 
   316  1E0F                     	;# 
   317  1E10                     	;# 
   318  1E11                     	;# 
   319  1E12                     	;# 
   320  1E13                     	;# 
   321  1E14                     	;# 
   322  1E15                     	;# 
   323  1E16                     	;# 
   324  1E17                     	;# 
   325  1E18                     	;# 
   326  1E19                     	;# 
   327  1E1A                     	;# 
   328  1E1B                     	;# 
   329  1E1C                     	;# 
   330  1E1D                     	;# 
   331  1E1E                     	;# 
   332  1E1F                     	;# 
   333  1E20                     	;# 
   334  1E21                     	;# 
   335  1E22                     	;# 
   336  1E23                     	;# 
   337  1E24                     	;# 
   338  1E25                     	;# 
   339  1E26                     	;# 
   340  1E27                     	;# 
   341  1E28                     	;# 
   342  1E29                     	;# 
   343  1E2A                     	;# 
   344  1E2B                     	;# 
   345  1E2C                     	;# 
   346  1E2D                     	;# 
   347  1E2E                     	;# 
   348  1E2F                     	;# 
   349  1E30                     	;# 
   350  1E31                     	;# 
   351  1E32                     	;# 
   352  1E33                     	;# 
   353  1E34                     	;# 
   354  1E35                     	;# 
   355  1E36                     	;# 
   356  1E37                     	;# 
   357  1E8F                     	;# 
   358  1E90                     	;# 
   359  1E91                     	;# 
   360  1E92                     	;# 
   361  1E93                     	;# 
   362  1E9C                     	;# 
   363  1EA1                     	;# 
   364  1EA2                     	;# 
   365  1EB1                     	;# 
   366  1EBB                     	;# 
   367  1EBC                     	;# 
   368  1EBD                     	;# 
   369  1EBE                     	;# 
   370  1EC3                     	;# 
   371  1EC5                     	;# 
   372  1EC6                     	;# 
   373  1EC7                     	;# 
   374  1ECB                     	;# 
   375  1ECC                     	;# 
   376  1ECD                     	;# 
   377  1ECE                     	;# 
   378  1F10                     	;# 
   379  1F11                     	;# 
   380  1F12                     	;# 
   381  1F13                     	;# 
   382  1F14                     	;# 
   383  1F15                     	;# 
   384  1F20                     	;# 
   385  1F21                     	;# 
   386  1F22                     	;# 
   387  1F23                     	;# 
   388  1F24                     	;# 
   389  1F25                     	;# 
   390  1F38                     	;# 
   391  1F39                     	;# 
   392  1F3A                     	;# 
   393  1F3B                     	;# 
   394  1F3C                     	;# 
   395  1F3D                     	;# 
   396  1F3E                     	;# 
   397  1F3F                     	;# 
   398  1F4E                     	;# 
   399  1F4F                     	;# 
   400  1F50                     	;# 
   401  1F51                     	;# 
   402  1F52                     	;# 
   403  1F53                     	;# 
   404  1F54                     	;# 
   405  1F55                     	;# 
   406  1FE4                     	;# 
   407  1FE5                     	;# 
   408  1FE6                     	;# 
   409  1FE7                     	;# 
   410  1FE8                     	;# 
   411  1FE8                     	;# 
   412  1FE9                     	;# 
   413  1FEA                     	;# 
   414  1FEA                     	;# 
   415  1FEB                     	;# 
   416  1FED                     	;# 
   417  1FEE                     	;# 
   418  1FEF                     	;# 
   419  0000                     	;# 
   420  0001                     	;# 
   421  0002                     	;# 
   422  0003                     	;# 
   423  0004                     	;# 
   424  0005                     	;# 
   425  0006                     	;# 
   426  0007                     	;# 
   427  0008                     	;# 
   428  0009                     	;# 
   429  000A                     	;# 
   430  000B                     	;# 
   431  000C                     	;# 
   432  000E                     	;# 
   433  0012                     	;# 
   434  0014                     	;# 
   435  0018                     	;# 
   436  001A                     	;# 
   437  009B                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  0119                     	;# 
   444  0119                     	;# 
   445  0119                     	;# 
   446  011A                     	;# 
   447  011A                     	;# 
   448  011A                     	;# 
   449  011B                     	;# 
   450  011B                     	;# 
   451  011B                     	;# 
   452  011B                     	;# 
   453  011B                     	;# 
   454  011C                     	;# 
   455  011C                     	;# 
   456  011C                     	;# 
   457  011D                     	;# 
   458  011D                     	;# 
   459  011D                     	;# 
   460  011E                     	;# 
   461  011E                     	;# 
   462  011E                     	;# 
   463  011F                     	;# 
   464  011F                     	;# 
   465  011F                     	;# 
   466  011F                     	;# 
   467  011F                     	;# 
   468  018C                     	;# 
   469  018D                     	;# 
   470  018E                     	;# 
   471  018F                     	;# 
   472  0190                     	;# 
   473  0191                     	;# 
   474  0192                     	;# 
   475  020C                     	;# 
   476  020C                     	;# 
   477  020D                     	;# 
   478  020E                     	;# 
   479  020F                     	;# 
   480  020F                     	;# 
   481  0210                     	;# 
   482  0210                     	;# 
   483  0211                     	;# 
   484  0211                     	;# 
   485  028C                     	;# 
   486  028C                     	;# 
   487  028D                     	;# 
   488  028D                     	;# 
   489  028E                     	;# 
   490  028F                     	;# 
   491  0290                     	;# 
   492  0291                     	;# 
   493  030C                     	;# 
   494  030C                     	;# 
   495  030D                     	;# 
   496  030E                     	;# 
   497  030F                     	;# 
   498  0310                     	;# 
   499  0310                     	;# 
   500  0311                     	;# 
   501  0312                     	;# 
   502  0313                     	;# 
   503  0314                     	;# 
   504  0314                     	;# 
   505  0315                     	;# 
   506  0316                     	;# 
   507  0318                     	;# 
   508  0318                     	;# 
   509  0319                     	;# 
   510  031A                     	;# 
   511  031C                     	;# 
   512  031C                     	;# 
   513  031D                     	;# 
   514  031E                     	;# 
   515  038C                     	;# 
   516  038C                     	;# 
   517  038D                     	;# 
   518  038E                     	;# 
   519  058C                     	;# 
   520  058C                     	;# 
   521  058D                     	;# 
   522  058E                     	;# 
   523  058F                     	;# 
   524  058F                     	;# 
   525  0590                     	;# 
   526  0591                     	;# 
   527  0592                     	;# 
   528  0593                     	;# 
   529  059C                     	;# 
   530  059C                     	;# 
   531  059D                     	;# 
   532  059D                     	;# 
   533  059E                     	;# 
   534  059F                     	;# 
   535  060C                     	;# 
   536  060D                     	;# 
   537  060E                     	;# 
   538  060F                     	;# 
   539  0610                     	;# 
   540  0611                     	;# 
   541  0612                     	;# 
   542  0613                     	;# 
   543  0614                     	;# 
   544  070C                     	;# 
   545  070D                     	;# 
   546  070E                     	;# 
   547  070F                     	;# 
   548  0710                     	;# 
   549  0711                     	;# 
   550  0712                     	;# 
   551  0713                     	;# 
   552  0716                     	;# 
   553  0717                     	;# 
   554  0718                     	;# 
   555  0719                     	;# 
   556  071A                     	;# 
   557  071B                     	;# 
   558  071C                     	;# 
   559  071D                     	;# 
   560  0796                     	;# 
   561  0797                     	;# 
   562  0798                     	;# 
   563  0799                     	;# 
   564  079A                     	;# 
   565  079B                     	;# 
   566  080C                     	;# 
   567  080D                     	;# 
   568  080E                     	;# 
   569  080F                     	;# 
   570  0810                     	;# 
   571  0811                     	;# 
   572  0812                     	;# 
   573  0813                     	;# 
   574  0814                     	;# 
   575  081A                     	;# 
   576  081A                     	;# 
   577  081B                     	;# 
   578  081C                     	;# 
   579  081C                     	;# 
   580  081D                     	;# 
   581  081E                     	;# 
   582  081F                     	;# 
   583  088C                     	;# 
   584  088D                     	;# 
   585  088E                     	;# 
   586  088F                     	;# 
   587  0890                     	;# 
   588  0891                     	;# 
   589  0892                     	;# 
   590  0893                     	;# 
   591  0895                     	;# 
   592  0896                     	;# 
   593  090C                     	;# 
   594  090E                     	;# 
   595  090F                     	;# 
   596  091F                     	;# 
   597  098F                     	;# 
   598  098F                     	;# 
   599  0990                     	;# 
   600  0991                     	;# 
   601  0992                     	;# 
   602  0993                     	;# 
   603  0994                     	;# 
   604  0995                     	;# 
   605  0996                     	;# 
   606  0997                     	;# 
   607  0A19                     	;# 
   608  0A19                     	;# 
   609  0A1A                     	;# 
   610  0A1A                     	;# 
   611  0A1B                     	;# 
   612  0A1B                     	;# 
   613  0A1B                     	;# 
   614  0A1C                     	;# 
   615  0A1C                     	;# 
   616  0A1D                     	;# 
   617  0A1D                     	;# 
   618  0A1E                     	;# 
   619  0A1E                     	;# 
   620  0A1F                     	;# 
   621  0A1F                     	;# 
   622  0A1F                     	;# 
   623  1E0F                     	;# 
   624  1E10                     	;# 
   625  1E11                     	;# 
   626  1E12                     	;# 
   627  1E13                     	;# 
   628  1E14                     	;# 
   629  1E15                     	;# 
   630  1E16                     	;# 
   631  1E17                     	;# 
   632  1E18                     	;# 
   633  1E19                     	;# 
   634  1E1A                     	;# 
   635  1E1B                     	;# 
   636  1E1C                     	;# 
   637  1E1D                     	;# 
   638  1E1E                     	;# 
   639  1E1F                     	;# 
   640  1E20                     	;# 
   641  1E21                     	;# 
   642  1E22                     	;# 
   643  1E23                     	;# 
   644  1E24                     	;# 
   645  1E25                     	;# 
   646  1E26                     	;# 
   647  1E27                     	;# 
   648  1E28                     	;# 
   649  1E29                     	;# 
   650  1E2A                     	;# 
   651  1E2B                     	;# 
   652  1E2C                     	;# 
   653  1E2D                     	;# 
   654  1E2E                     	;# 
   655  1E2F                     	;# 
   656  1E30                     	;# 
   657  1E31                     	;# 
   658  1E32                     	;# 
   659  1E33                     	;# 
   660  1E34                     	;# 
   661  1E35                     	;# 
   662  1E36                     	;# 
   663  1E37                     	;# 
   664  1E8F                     	;# 
   665  1E90                     	;# 
   666  1E91                     	;# 
   667  1E92                     	;# 
   668  1E93                     	;# 
   669  1E9C                     	;# 
   670  1EA1                     	;# 
   671  1EA2                     	;# 
   672  1EB1                     	;# 
   673  1EBB                     	;# 
   674  1EBC                     	;# 
   675  1EBD                     	;# 
   676  1EBE                     	;# 
   677  1EC3                     	;# 
   678  1EC5                     	;# 
   679  1EC6                     	;# 
   680  1EC7                     	;# 
   681  1ECB                     	;# 
   682  1ECC                     	;# 
   683  1ECD                     	;# 
   684  1ECE                     	;# 
   685  1F10                     	;# 
   686  1F11                     	;# 
   687  1F12                     	;# 
   688  1F13                     	;# 
   689  1F14                     	;# 
   690  1F15                     	;# 
   691  1F20                     	;# 
   692  1F21                     	;# 
   693  1F22                     	;# 
   694  1F23                     	;# 
   695  1F24                     	;# 
   696  1F25                     	;# 
   697  1F38                     	;# 
   698  1F39                     	;# 
   699  1F3A                     	;# 
   700  1F3B                     	;# 
   701  1F3C                     	;# 
   702  1F3D                     	;# 
   703  1F3E                     	;# 
   704  1F3F                     	;# 
   705  1F4E                     	;# 
   706  1F4F                     	;# 
   707  1F50                     	;# 
   708  1F51                     	;# 
   709  1F52                     	;# 
   710  1F53                     	;# 
   711  1F54                     	;# 
   712  1F55                     	;# 
   713  1FE4                     	;# 
   714  1FE5                     	;# 
   715  1FE6                     	;# 
   716  1FE7                     	;# 
   717  1FE8                     	;# 
   718  1FE8                     	;# 
   719  1FE9                     	;# 
   720  1FEA                     	;# 
   721  1FEA                     	;# 
   722  1FEB                     	;# 
   723  1FED                     	;# 
   724  1FEE                     	;# 
   725  1FEF                     	;# 
   726  0000                     	;# 
   727  0001                     	;# 
   728  0002                     	;# 
   729  0003                     	;# 
   730  0004                     	;# 
   731  0005                     	;# 
   732  0006                     	;# 
   733  0007                     	;# 
   734  0008                     	;# 
   735  0009                     	;# 
   736  000A                     	;# 
   737  000B                     	;# 
   738  000C                     	;# 
   739  000E                     	;# 
   740  0012                     	;# 
   741  0014                     	;# 
   742  0018                     	;# 
   743  001A                     	;# 
   744  009B                     	;# 
   745  009B                     	;# 
   746  009C                     	;# 
   747  009D                     	;# 
   748  009E                     	;# 
   749  009F                     	;# 
   750  0119                     	;# 
   751  0119                     	;# 
   752  0119                     	;# 
   753  011A                     	;# 
   754  011A                     	;# 
   755  011A                     	;# 
   756  011B                     	;# 
   757  011B                     	;# 
   758  011B                     	;# 
   759  011B                     	;# 
   760  011B                     	;# 
   761  011C                     	;# 
   762  011C                     	;# 
   763  011C                     	;# 
   764  011D                     	;# 
   765  011D                     	;# 
   766  011D                     	;# 
   767  011E                     	;# 
   768  011E                     	;# 
   769  011E                     	;# 
   770  011F                     	;# 
   771  011F                     	;# 
   772  011F                     	;# 
   773  011F                     	;# 
   774  011F                     	;# 
   775  018C                     	;# 
   776  018D                     	;# 
   777  018E                     	;# 
   778  018F                     	;# 
   779  0190                     	;# 
   780  0191                     	;# 
   781  0192                     	;# 
   782  020C                     	;# 
   783  020C                     	;# 
   784  020D                     	;# 
   785  020E                     	;# 
   786  020F                     	;# 
   787  020F                     	;# 
   788  0210                     	;# 
   789  0210                     	;# 
   790  0211                     	;# 
   791  0211                     	;# 
   792  028C                     	;# 
   793  028C                     	;# 
   794  028D                     	;# 
   795  028D                     	;# 
   796  028E                     	;# 
   797  028F                     	;# 
   798  0290                     	;# 
   799  0291                     	;# 
   800  030C                     	;# 
   801  030C                     	;# 
   802  030D                     	;# 
   803  030E                     	;# 
   804  030F                     	;# 
   805  0310                     	;# 
   806  0310                     	;# 
   807  0311                     	;# 
   808  0312                     	;# 
   809  0313                     	;# 
   810  0314                     	;# 
   811  0314                     	;# 
   812  0315                     	;# 
   813  0316                     	;# 
   814  0318                     	;# 
   815  0318                     	;# 
   816  0319                     	;# 
   817  031A                     	;# 
   818  031C                     	;# 
   819  031C                     	;# 
   820  031D                     	;# 
   821  031E                     	;# 
   822  038C                     	;# 
   823  038C                     	;# 
   824  038D                     	;# 
   825  038E                     	;# 
   826  058C                     	;# 
   827  058C                     	;# 
   828  058D                     	;# 
   829  058E                     	;# 
   830  058F                     	;# 
   831  058F                     	;# 
   832  0590                     	;# 
   833  0591                     	;# 
   834  0592                     	;# 
   835  0593                     	;# 
   836  059C                     	;# 
   837  059C                     	;# 
   838  059D                     	;# 
   839  059D                     	;# 
   840  059E                     	;# 
   841  059F                     	;# 
   842  060C                     	;# 
   843  060D                     	;# 
   844  060E                     	;# 
   845  060F                     	;# 
   846  0610                     	;# 
   847  0611                     	;# 
   848  0612                     	;# 
   849  0613                     	;# 
   850  0614                     	;# 
   851  070C                     	;# 
   852  070D                     	;# 
   853  070E                     	;# 
   854  070F                     	;# 
   855  0710                     	;# 
   856  0711                     	;# 
   857  0712                     	;# 
   858  0713                     	;# 
   859  0716                     	;# 
   860  0717                     	;# 
   861  0718                     	;# 
   862  0719                     	;# 
   863  071A                     	;# 
   864  071B                     	;# 
   865  071C                     	;# 
   866  071D                     	;# 
   867  0796                     	;# 
   868  0797                     	;# 
   869  0798                     	;# 
   870  0799                     	;# 
   871  079A                     	;# 
   872  079B                     	;# 
   873  080C                     	;# 
   874  080D                     	;# 
   875  080E                     	;# 
   876  080F                     	;# 
   877  0810                     	;# 
   878  0811                     	;# 
   879  0812                     	;# 
   880  0813                     	;# 
   881  0814                     	;# 
   882  081A                     	;# 
   883  081A                     	;# 
   884  081B                     	;# 
   885  081C                     	;# 
   886  081C                     	;# 
   887  081D                     	;# 
   888  081E                     	;# 
   889  081F                     	;# 
   890  088C                     	;# 
   891  088D                     	;# 
   892  088E                     	;# 
   893  088F                     	;# 
   894  0890                     	;# 
   895  0891                     	;# 
   896  0892                     	;# 
   897  0893                     	;# 
   898  0895                     	;# 
   899  0896                     	;# 
   900  090C                     	;# 
   901  090E                     	;# 
   902  090F                     	;# 
   903  091F                     	;# 
   904  098F                     	;# 
   905  098F                     	;# 
   906  0990                     	;# 
   907  0991                     	;# 
   908  0992                     	;# 
   909  0993                     	;# 
   910  0994                     	;# 
   911  0995                     	;# 
   912  0996                     	;# 
   913  0997                     	;# 
   914  0A19                     	;# 
   915  0A19                     	;# 
   916  0A1A                     	;# 
   917  0A1A                     	;# 
   918  0A1B                     	;# 
   919  0A1B                     	;# 
   920  0A1B                     	;# 
   921  0A1C                     	;# 
   922  0A1C                     	;# 
   923  0A1D                     	;# 
   924  0A1D                     	;# 
   925  0A1E                     	;# 
   926  0A1E                     	;# 
   927  0A1F                     	;# 
   928  0A1F                     	;# 
   929  0A1F                     	;# 
   930  1E0F                     	;# 
   931  1E10                     	;# 
   932  1E11                     	;# 
   933  1E12                     	;# 
   934  1E13                     	;# 
   935  1E14                     	;# 
   936  1E15                     	;# 
   937  1E16                     	;# 
   938  1E17                     	;# 
   939  1E18                     	;# 
   940  1E19                     	;# 
   941  1E1A                     	;# 
   942  1E1B                     	;# 
   943  1E1C                     	;# 
   944  1E1D                     	;# 
   945  1E1E                     	;# 
   946  1E1F                     	;# 
   947  1E20                     	;# 
   948  1E21                     	;# 
   949  1E22                     	;# 
   950  1E23                     	;# 
   951  1E24                     	;# 
   952  1E25                     	;# 
   953  1E26                     	;# 
   954  1E27                     	;# 
   955  1E28                     	;# 
   956  1E29                     	;# 
   957  1E2A                     	;# 
   958  1E2B                     	;# 
   959  1E2C                     	;# 
   960  1E2D                     	;# 
   961  1E2E                     	;# 
   962  1E2F                     	;# 
   963  1E30                     	;# 
   964  1E31                     	;# 
   965  1E32                     	;# 
   966  1E33                     	;# 
   967  1E34                     	;# 
   968  1E35                     	;# 
   969  1E36                     	;# 
   970  1E37                     	;# 
   971  1E8F                     	;# 
   972  1E90                     	;# 
   973  1E91                     	;# 
   974  1E92                     	;# 
   975  1E93                     	;# 
   976  1E9C                     	;# 
   977  1EA1                     	;# 
   978  1EA2                     	;# 
   979  1EB1                     	;# 
   980  1EBB                     	;# 
   981  1EBC                     	;# 
   982  1EBD                     	;# 
   983  1EBE                     	;# 
   984  1EC3                     	;# 
   985  1EC5                     	;# 
   986  1EC6                     	;# 
   987  1EC7                     	;# 
   988  1ECB                     	;# 
   989  1ECC                     	;# 
   990  1ECD                     	;# 
   991  1ECE                     	;# 
   992  1F10                     	;# 
   993  1F11                     	;# 
   994  1F12                     	;# 
   995  1F13                     	;# 
   996  1F14                     	;# 
   997  1F15                     	;# 
   998  1F20                     	;# 
   999  1F21                     	;# 
  1000  1F22                     	;# 
  1001  1F23                     	;# 
  1002  1F24                     	;# 
  1003  1F25                     	;# 
  1004  1F38                     	;# 
  1005  1F39                     	;# 
  1006  1F3A                     	;# 
  1007  1F3B                     	;# 
  1008  1F3C                     	;# 
  1009  1F3D                     	;# 
  1010  1F3E                     	;# 
  1011  1F3F                     	;# 
  1012  1F4E                     	;# 
  1013  1F4F                     	;# 
  1014  1F50                     	;# 
  1015  1F51                     	;# 
  1016  1F52                     	;# 
  1017  1F53                     	;# 
  1018  1F54                     	;# 
  1019  1F55                     	;# 
  1020  1FE4                     	;# 
  1021  1FE5                     	;# 
  1022  1FE6                     	;# 
  1023  1FE7                     	;# 
  1024  1FE8                     	;# 
  1025  1FE8                     	;# 
  1026  1FE9                     	;# 
  1027  1FEA                     	;# 
  1028  1FEA                     	;# 
  1029  1FEB                     	;# 
  1030  1FED                     	;# 
  1031  1FEE                     	;# 
  1032  1FEF                     	;# 
  1033  0000                     	;# 
  1034  0001                     	;# 
  1035  0002                     	;# 
  1036  0003                     	;# 
  1037  0004                     	;# 
  1038  0005                     	;# 
  1039  0006                     	;# 
  1040  0007                     	;# 
  1041  0008                     	;# 
  1042  0009                     	;# 
  1043  000A                     	;# 
  1044  000B                     	;# 
  1045  000C                     	;# 
  1046  000E                     	;# 
  1047  0012                     	;# 
  1048  0014                     	;# 
  1049  0018                     	;# 
  1050  001A                     	;# 
  1051  009B                     	;# 
  1052  009B                     	;# 
  1053  009C                     	;# 
  1054  009D                     	;# 
  1055  009E                     	;# 
  1056  009F                     	;# 
  1057  0119                     	;# 
  1058  0119                     	;# 
  1059  0119                     	;# 
  1060  011A                     	;# 
  1061  011A                     	;# 
  1062  011A                     	;# 
  1063  011B                     	;# 
  1064  011B                     	;# 
  1065  011B                     	;# 
  1066  011B                     	;# 
  1067  011B                     	;# 
  1068  011C                     	;# 
  1069  011C                     	;# 
  1070  011C                     	;# 
  1071  011D                     	;# 
  1072  011D                     	;# 
  1073  011D                     	;# 
  1074  011E                     	;# 
  1075  011E                     	;# 
  1076  011E                     	;# 
  1077  011F                     	;# 
  1078  011F                     	;# 
  1079  011F                     	;# 
  1080  011F                     	;# 
  1081  011F                     	;# 
  1082  018C                     	;# 
  1083  018D                     	;# 
  1084  018E                     	;# 
  1085  018F                     	;# 
  1086  0190                     	;# 
  1087  0191                     	;# 
  1088  0192                     	;# 
  1089  020C                     	;# 
  1090  020C                     	;# 
  1091  020D                     	;# 
  1092  020E                     	;# 
  1093  020F                     	;# 
  1094  020F                     	;# 
  1095  0210                     	;# 
  1096  0210                     	;# 
  1097  0211                     	;# 
  1098  0211                     	;# 
  1099  028C                     	;# 
  1100  028C                     	;# 
  1101  028D                     	;# 
  1102  028D                     	;# 
  1103  028E                     	;# 
  1104  028F                     	;# 
  1105  0290                     	;# 
  1106  0291                     	;# 
  1107  030C                     	;# 
  1108  030C                     	;# 
  1109  030D                     	;# 
  1110  030E                     	;# 
  1111  030F                     	;# 
  1112  0310                     	;# 
  1113  0310                     	;# 
  1114  0311                     	;# 
  1115  0312                     	;# 
  1116  0313                     	;# 
  1117  0314                     	;# 
  1118  0314                     	;# 
  1119  0315                     	;# 
  1120  0316                     	;# 
  1121  0318                     	;# 
  1122  0318                     	;# 
  1123  0319                     	;# 
  1124  031A                     	;# 
  1125  031C                     	;# 
  1126  031C                     	;# 
  1127  031D                     	;# 
  1128  031E                     	;# 
  1129  038C                     	;# 
  1130  038C                     	;# 
  1131  038D                     	;# 
  1132  038E                     	;# 
  1133  058C                     	;# 
  1134  058C                     	;# 
  1135  058D                     	;# 
  1136  058E                     	;# 
  1137  058F                     	;# 
  1138  058F                     	;# 
  1139  0590                     	;# 
  1140  0591                     	;# 
  1141  0592                     	;# 
  1142  0593                     	;# 
  1143  059C                     	;# 
  1144  059C                     	;# 
  1145  059D                     	;# 
  1146  059D                     	;# 
  1147  059E                     	;# 
  1148  059F                     	;# 
  1149  060C                     	;# 
  1150  060D                     	;# 
  1151  060E                     	;# 
  1152  060F                     	;# 
  1153  0610                     	;# 
  1154  0611                     	;# 
  1155  0612                     	;# 
  1156  0613                     	;# 
  1157  0614                     	;# 
  1158  070C                     	;# 
  1159  070D                     	;# 
  1160  070E                     	;# 
  1161  070F                     	;# 
  1162  0710                     	;# 
  1163  0711                     	;# 
  1164  0712                     	;# 
  1165  0713                     	;# 
  1166  0716                     	;# 
  1167  0717                     	;# 
  1168  0718                     	;# 
  1169  0719                     	;# 
  1170  071A                     	;# 
  1171  071B                     	;# 
  1172  071C                     	;# 
  1173  071D                     	;# 
  1174  0796                     	;# 
  1175  0797                     	;# 
  1176  0798                     	;# 
  1177  0799                     	;# 
  1178  079A                     	;# 
  1179  079B                     	;# 
  1180  080C                     	;# 
  1181  080D                     	;# 
  1182  080E                     	;# 
  1183  080F                     	;# 
  1184  0810                     	;# 
  1185  0811                     	;# 
  1186  0812                     	;# 
  1187  0813                     	;# 
  1188  0814                     	;# 
  1189  081A                     	;# 
  1190  081A                     	;# 
  1191  081B                     	;# 
  1192  081C                     	;# 
  1193  081C                     	;# 
  1194  081D                     	;# 
  1195  081E                     	;# 
  1196  081F                     	;# 
  1197  088C                     	;# 
  1198  088D                     	;# 
  1199  088E                     	;# 
  1200  088F                     	;# 
  1201  0890                     	;# 
  1202  0891                     	;# 
  1203  0892                     	;# 
  1204  0893                     	;# 
  1205  0895                     	;# 
  1206  0896                     	;# 
  1207  090C                     	;# 
  1208  090E                     	;# 
  1209  090F                     	;# 
  1210  091F                     	;# 
  1211  098F                     	;# 
  1212  098F                     	;# 
  1213  0990                     	;# 
  1214  0991                     	;# 
  1215  0992                     	;# 
  1216  0993                     	;# 
  1217  0994                     	;# 
  1218  0995                     	;# 
  1219  0996                     	;# 
  1220  0997                     	;# 
  1221  0A19                     	;# 
  1222  0A19                     	;# 
  1223  0A1A                     	;# 
  1224  0A1A                     	;# 
  1225  0A1B                     	;# 
  1226  0A1B                     	;# 
  1227  0A1B                     	;# 
  1228  0A1C                     	;# 
  1229  0A1C                     	;# 
  1230  0A1D                     	;# 
  1231  0A1D                     	;# 
  1232  0A1E                     	;# 
  1233  0A1E                     	;# 
  1234  0A1F                     	;# 
  1235  0A1F                     	;# 
  1236  0A1F                     	;# 
  1237  1E0F                     	;# 
  1238  1E10                     	;# 
  1239  1E11                     	;# 
  1240  1E12                     	;# 
  1241  1E13                     	;# 
  1242  1E14                     	;# 
  1243  1E15                     	;# 
  1244  1E16                     	;# 
  1245  1E17                     	;# 
  1246  1E18                     	;# 
  1247  1E19                     	;# 
  1248  1E1A                     	;# 
  1249  1E1B                     	;# 
  1250  1E1C                     	;# 
  1251  1E1D                     	;# 
  1252  1E1E                     	;# 
  1253  1E1F                     	;# 
  1254  1E20                     	;# 
  1255  1E21                     	;# 
  1256  1E22                     	;# 
  1257  1E23                     	;# 
  1258  1E24                     	;# 
  1259  1E25                     	;# 
  1260  1E26                     	;# 
  1261  1E27                     	;# 
  1262  1E28                     	;# 
  1263  1E29                     	;# 
  1264  1E2A                     	;# 
  1265  1E2B                     	;# 
  1266  1E2C                     	;# 
  1267  1E2D                     	;# 
  1268  1E2E                     	;# 
  1269  1E2F                     	;# 
  1270  1E30                     	;# 
  1271  1E31                     	;# 
  1272  1E32                     	;# 
  1273  1E33                     	;# 
  1274  1E34                     	;# 
  1275  1E35                     	;# 
  1276  1E36                     	;# 
  1277  1E37                     	;# 
  1278  1E8F                     	;# 
  1279  1E90                     	;# 
  1280  1E91                     	;# 
  1281  1E92                     	;# 
  1282  1E93                     	;# 
  1283  1E9C                     	;# 
  1284  1EA1                     	;# 
  1285  1EA2                     	;# 
  1286  1EB1                     	;# 
  1287  1EBB                     	;# 
  1288  1EBC                     	;# 
  1289  1EBD                     	;# 
  1290  1EBE                     	;# 
  1291  1EC3                     	;# 
  1292  1EC5                     	;# 
  1293  1EC6                     	;# 
  1294  1EC7                     	;# 
  1295  1ECB                     	;# 
  1296  1ECC                     	;# 
  1297  1ECD                     	;# 
  1298  1ECE                     	;# 
  1299  1F10                     	;# 
  1300  1F11                     	;# 
  1301  1F12                     	;# 
  1302  1F13                     	;# 
  1303  1F14                     	;# 
  1304  1F15                     	;# 
  1305  1F20                     	;# 
  1306  1F21                     	;# 
  1307  1F22                     	;# 
  1308  1F23                     	;# 
  1309  1F24                     	;# 
  1310  1F25                     	;# 
  1311  1F38                     	;# 
  1312  1F39                     	;# 
  1313  1F3A                     	;# 
  1314  1F3B                     	;# 
  1315  1F3C                     	;# 
  1316  1F3D                     	;# 
  1317  1F3E                     	;# 
  1318  1F3F                     	;# 
  1319  1F4E                     	;# 
  1320  1F4F                     	;# 
  1321  1F50                     	;# 
  1322  1F51                     	;# 
  1323  1F52                     	;# 
  1324  1F53                     	;# 
  1325  1F54                     	;# 
  1326  1F55                     	;# 
  1327  1FE4                     	;# 
  1328  1FE5                     	;# 
  1329  1FE6                     	;# 
  1330  1FE7                     	;# 
  1331  1FE8                     	;# 
  1332  1FE8                     	;# 
  1333  1FE9                     	;# 
  1334  1FEA                     	;# 
  1335  1FEA                     	;# 
  1336  1FEB                     	;# 
  1337  1FED                     	;# 
  1338  1FEE                     	;# 
  1339  1FEF                     	;# 
  1340  0000                     	;# 
  1341  0001                     	;# 
  1342  0002                     	;# 
  1343  0003                     	;# 
  1344  0004                     	;# 
  1345  0005                     	;# 
  1346  0006                     	;# 
  1347  0007                     	;# 
  1348  0008                     	;# 
  1349  0009                     	;# 
  1350  000A                     	;# 
  1351  000B                     	;# 
  1352  000C                     	;# 
  1353  000E                     	;# 
  1354  0012                     	;# 
  1355  0014                     	;# 
  1356  0018                     	;# 
  1357  001A                     	;# 
  1358  009B                     	;# 
  1359  009B                     	;# 
  1360  009C                     	;# 
  1361  009D                     	;# 
  1362  009E                     	;# 
  1363  009F                     	;# 
  1364  0119                     	;# 
  1365  0119                     	;# 
  1366  0119                     	;# 
  1367  011A                     	;# 
  1368  011A                     	;# 
  1369  011A                     	;# 
  1370  011B                     	;# 
  1371  011B                     	;# 
  1372  011B                     	;# 
  1373  011B                     	;# 
  1374  011B                     	;# 
  1375  011C                     	;# 
  1376  011C                     	;# 
  1377  011C                     	;# 
  1378  011D                     	;# 
  1379  011D                     	;# 
  1380  011D                     	;# 
  1381  011E                     	;# 
  1382  011E                     	;# 
  1383  011E                     	;# 
  1384  011F                     	;# 
  1385  011F                     	;# 
  1386  011F                     	;# 
  1387  011F                     	;# 
  1388  011F                     	;# 
  1389  018C                     	;# 
  1390  018D                     	;# 
  1391  018E                     	;# 
  1392  018F                     	;# 
  1393  0190                     	;# 
  1394  0191                     	;# 
  1395  0192                     	;# 
  1396  020C                     	;# 
  1397  020C                     	;# 
  1398  020D                     	;# 
  1399  020E                     	;# 
  1400  020F                     	;# 
  1401  020F                     	;# 
  1402  0210                     	;# 
  1403  0210                     	;# 
  1404  0211                     	;# 
  1405  0211                     	;# 
  1406  028C                     	;# 
  1407  028C                     	;# 
  1408  028D                     	;# 
  1409  028D                     	;# 
  1410  028E                     	;# 
  1411  028F                     	;# 
  1412  0290                     	;# 
  1413  0291                     	;# 
  1414  030C                     	;# 
  1415  030C                     	;# 
  1416  030D                     	;# 
  1417  030E                     	;# 
  1418  030F                     	;# 
  1419  0310                     	;# 
  1420  0310                     	;# 
  1421  0311                     	;# 
  1422  0312                     	;# 
  1423  0313                     	;# 
  1424  0314                     	;# 
  1425  0314                     	;# 
  1426  0315                     	;# 
  1427  0316                     	;# 
  1428  0318                     	;# 
  1429  0318                     	;# 
  1430  0319                     	;# 
  1431  031A                     	;# 
  1432  031C                     	;# 
  1433  031C                     	;# 
  1434  031D                     	;# 
  1435  031E                     	;# 
  1436  038C                     	;# 
  1437  038C                     	;# 
  1438  038D                     	;# 
  1439  038E                     	;# 
  1440  058C                     	;# 
  1441  058C                     	;# 
  1442  058D                     	;# 
  1443  058E                     	;# 
  1444  058F                     	;# 
  1445  058F                     	;# 
  1446  0590                     	;# 
  1447  0591                     	;# 
  1448  0592                     	;# 
  1449  0593                     	;# 
  1450  059C                     	;# 
  1451  059C                     	;# 
  1452  059D                     	;# 
  1453  059D                     	;# 
  1454  059E                     	;# 
  1455  059F                     	;# 
  1456  060C                     	;# 
  1457  060D                     	;# 
  1458  060E                     	;# 
  1459  060F                     	;# 
  1460  0610                     	;# 
  1461  0611                     	;# 
  1462  0612                     	;# 
  1463  0613                     	;# 
  1464  0614                     	;# 
  1465  070C                     	;# 
  1466  070D                     	;# 
  1467  070E                     	;# 
  1468  070F                     	;# 
  1469  0710                     	;# 
  1470  0711                     	;# 
  1471  0712                     	;# 
  1472  0713                     	;# 
  1473  0716                     	;# 
  1474  0717                     	;# 
  1475  0718                     	;# 
  1476  0719                     	;# 
  1477  071A                     	;# 
  1478  071B                     	;# 
  1479  071C                     	;# 
  1480  071D                     	;# 
  1481  0796                     	;# 
  1482  0797                     	;# 
  1483  0798                     	;# 
  1484  0799                     	;# 
  1485  079A                     	;# 
  1486  079B                     	;# 
  1487  080C                     	;# 
  1488  080D                     	;# 
  1489  080E                     	;# 
  1490  080F                     	;# 
  1491  0810                     	;# 
  1492  0811                     	;# 
  1493  0812                     	;# 
  1494  0813                     	;# 
  1495  0814                     	;# 
  1496  081A                     	;# 
  1497  081A                     	;# 
  1498  081B                     	;# 
  1499  081C                     	;# 
  1500  081C                     	;# 
  1501  081D                     	;# 
  1502  081E                     	;# 
  1503  081F                     	;# 
  1504  088C                     	;# 
  1505  088D                     	;# 
  1506  088E                     	;# 
  1507  088F                     	;# 
  1508  0890                     	;# 
  1509  0891                     	;# 
  1510  0892                     	;# 
  1511  0893                     	;# 
  1512  0895                     	;# 
  1513  0896                     	;# 
  1514  090C                     	;# 
  1515  090E                     	;# 
  1516  090F                     	;# 
  1517  091F                     	;# 
  1518  098F                     	;# 
  1519  098F                     	;# 
  1520  0990                     	;# 
  1521  0991                     	;# 
  1522  0992                     	;# 
  1523  0993                     	;# 
  1524  0994                     	;# 
  1525  0995                     	;# 
  1526  0996                     	;# 
  1527  0997                     	;# 
  1528  0A19                     	;# 
  1529  0A19                     	;# 
  1530  0A1A                     	;# 
  1531  0A1A                     	;# 
  1532  0A1B                     	;# 
  1533  0A1B                     	;# 
  1534  0A1B                     	;# 
  1535  0A1C                     	;# 
  1536  0A1C                     	;# 
  1537  0A1D                     	;# 
  1538  0A1D                     	;# 
  1539  0A1E                     	;# 
  1540  0A1E                     	;# 
  1541  0A1F                     	;# 
  1542  0A1F                     	;# 
  1543  0A1F                     	;# 
  1544  1E0F                     	;# 
  1545  1E10                     	;# 
  1546  1E11                     	;# 
  1547  1E12                     	;# 
  1548  1E13                     	;# 
  1549  1E14                     	;# 
  1550  1E15                     	;# 
  1551  1E16                     	;# 
  1552  1E17                     	;# 
  1553  1E18                     	;# 
  1554  1E19                     	;# 
  1555  1E1A                     	;# 
  1556  1E1B                     	;# 
  1557  1E1C                     	;# 
  1558  1E1D                     	;# 
  1559  1E1E                     	;# 
  1560  1E1F                     	;# 
  1561  1E20                     	;# 
  1562  1E21                     	;# 
  1563  1E22                     	;# 
  1564  1E23                     	;# 
  1565  1E24                     	;# 
  1566  1E25                     	;# 
  1567  1E26                     	;# 
  1568  1E27                     	;# 
  1569  1E28                     	;# 
  1570  1E29                     	;# 
  1571  1E2A                     	;# 
  1572  1E2B                     	;# 
  1573  1E2C                     	;# 
  1574  1E2D                     	;# 
  1575  1E2E                     	;# 
  1576  1E2F                     	;# 
  1577  1E30                     	;# 
  1578  1E31                     	;# 
  1579  1E32                     	;# 
  1580  1E33                     	;# 
  1581  1E34                     	;# 
  1582  1E35                     	;# 
  1583  1E36                     	;# 
  1584  1E37                     	;# 
  1585  1E8F                     	;# 
  1586  1E90                     	;# 
  1587  1E91                     	;# 
  1588  1E92                     	;# 
  1589  1E93                     	;# 
  1590  1E9C                     	;# 
  1591  1EA1                     	;# 
  1592  1EA2                     	;# 
  1593  1EB1                     	;# 
  1594  1EBB                     	;# 
  1595  1EBC                     	;# 
  1596  1EBD                     	;# 
  1597  1EBE                     	;# 
  1598  1EC3                     	;# 
  1599  1EC5                     	;# 
  1600  1EC6                     	;# 
  1601  1EC7                     	;# 
  1602  1ECB                     	;# 
  1603  1ECC                     	;# 
  1604  1ECD                     	;# 
  1605  1ECE                     	;# 
  1606  1F10                     	;# 
  1607  1F11                     	;# 
  1608  1F12                     	;# 
  1609  1F13                     	;# 
  1610  1F14                     	;# 
  1611  1F15                     	;# 
  1612  1F20                     	;# 
  1613  1F21                     	;# 
  1614  1F22                     	;# 
  1615  1F23                     	;# 
  1616  1F24                     	;# 
  1617  1F25                     	;# 
  1618  1F38                     	;# 
  1619  1F39                     	;# 
  1620  1F3A                     	;# 
  1621  1F3B                     	;# 
  1622  1F3C                     	;# 
  1623  1F3D                     	;# 
  1624  1F3E                     	;# 
  1625  1F3F                     	;# 
  1626  1F4E                     	;# 
  1627  1F4F                     	;# 
  1628  1F50                     	;# 
  1629  1F51                     	;# 
  1630  1F52                     	;# 
  1631  1F53                     	;# 
  1632  1F54                     	;# 
  1633  1F55                     	;# 
  1634  1FE4                     	;# 
  1635  1FE5                     	;# 
  1636  1FE6                     	;# 
  1637  1FE7                     	;# 
  1638  1FE8                     	;# 
  1639  1FE8                     	;# 
  1640  1FE9                     	;# 
  1641  1FEA                     	;# 
  1642  1FEA                     	;# 
  1643  1FEB                     	;# 
  1644  1FED                     	;# 
  1645  1FEE                     	;# 
  1646  1FEF                     	;# 
  1647  0000                     	;# 
  1648  0001                     	;# 
  1649  0002                     	;# 
  1650  0003                     	;# 
  1651  0004                     	;# 
  1652  0005                     	;# 
  1653  0006                     	;# 
  1654  0007                     	;# 
  1655  0008                     	;# 
  1656  0009                     	;# 
  1657  000A                     	;# 
  1658  000B                     	;# 
  1659  000C                     	;# 
  1660  000E                     	;# 
  1661  0012                     	;# 
  1662  0014                     	;# 
  1663  0018                     	;# 
  1664  001A                     	;# 
  1665  009B                     	;# 
  1666  009B                     	;# 
  1667  009C                     	;# 
  1668  009D                     	;# 
  1669  009E                     	;# 
  1670  009F                     	;# 
  1671  0119                     	;# 
  1672  0119                     	;# 
  1673  0119                     	;# 
  1674  011A                     	;# 
  1675  011A                     	;# 
  1676  011A                     	;# 
  1677  011B                     	;# 
  1678  011B                     	;# 
  1679  011B                     	;# 
  1680  011B                     	;# 
  1681  011B                     	;# 
  1682  011C                     	;# 
  1683  011C                     	;# 
  1684  011C                     	;# 
  1685  011D                     	;# 
  1686  011D                     	;# 
  1687  011D                     	;# 
  1688  011E                     	;# 
  1689  011E                     	;# 
  1690  011E                     	;# 
  1691  011F                     	;# 
  1692  011F                     	;# 
  1693  011F                     	;# 
  1694  011F                     	;# 
  1695  011F                     	;# 
  1696  018C                     	;# 
  1697  018D                     	;# 
  1698  018E                     	;# 
  1699  018F                     	;# 
  1700  0190                     	;# 
  1701  0191                     	;# 
  1702  0192                     	;# 
  1703  020C                     	;# 
  1704  020C                     	;# 
  1705  020D                     	;# 
  1706  020E                     	;# 
  1707  020F                     	;# 
  1708  020F                     	;# 
  1709  0210                     	;# 
  1710  0210                     	;# 
  1711  0211                     	;# 
  1712  0211                     	;# 
  1713  028C                     	;# 
  1714  028C                     	;# 
  1715  028D                     	;# 
  1716  028D                     	;# 
  1717  028E                     	;# 
  1718  028F                     	;# 
  1719  0290                     	;# 
  1720  0291                     	;# 
  1721  030C                     	;# 
  1722  030C                     	;# 
  1723  030D                     	;# 
  1724  030E                     	;# 
  1725  030F                     	;# 
  1726  0310                     	;# 
  1727  0310                     	;# 
  1728  0311                     	;# 
  1729  0312                     	;# 
  1730  0313                     	;# 
  1731  0314                     	;# 
  1732  0314                     	;# 
  1733  0315                     	;# 
  1734  0316                     	;# 
  1735  0318                     	;# 
  1736  0318                     	;# 
  1737  0319                     	;# 
  1738  031A                     	;# 
  1739  031C                     	;# 
  1740  031C                     	;# 
  1741  031D                     	;# 
  1742  031E                     	;# 
  1743  038C                     	;# 
  1744  038C                     	;# 
  1745  038D                     	;# 
  1746  038E                     	;# 
  1747  058C                     	;# 
  1748  058C                     	;# 
  1749  058D                     	;# 
  1750  058E                     	;# 
  1751  058F                     	;# 
  1752  058F                     	;# 
  1753  0590                     	;# 
  1754  0591                     	;# 
  1755  0592                     	;# 
  1756  0593                     	;# 
  1757  059C                     	;# 
  1758  059C                     	;# 
  1759  059D                     	;# 
  1760  059D                     	;# 
  1761  059E                     	;# 
  1762  059F                     	;# 
  1763  060C                     	;# 
  1764  060D                     	;# 
  1765  060E                     	;# 
  1766  060F                     	;# 
  1767  0610                     	;# 
  1768  0611                     	;# 
  1769  0612                     	;# 
  1770  0613                     	;# 
  1771  0614                     	;# 
  1772  070C                     	;# 
  1773  070D                     	;# 
  1774  070E                     	;# 
  1775  070F                     	;# 
  1776  0710                     	;# 
  1777  0711                     	;# 
  1778  0712                     	;# 
  1779  0713                     	;# 
  1780  0716                     	;# 
  1781  0717                     	;# 
  1782  0718                     	;# 
  1783  0719                     	;# 
  1784  071A                     	;# 
  1785  071B                     	;# 
  1786  071C                     	;# 
  1787  071D                     	;# 
  1788  0796                     	;# 
  1789  0797                     	;# 
  1790  0798                     	;# 
  1791  0799                     	;# 
  1792  079A                     	;# 
  1793  079B                     	;# 
  1794  080C                     	;# 
  1795  080D                     	;# 
  1796  080E                     	;# 
  1797  080F                     	;# 
  1798  0810                     	;# 
  1799  0811                     	;# 
  1800  0812                     	;# 
  1801  0813                     	;# 
  1802  0814                     	;# 
  1803  081A                     	;# 
  1804  081A                     	;# 
  1805  081B                     	;# 
  1806  081C                     	;# 
  1807  081C                     	;# 
  1808  081D                     	;# 
  1809  081E                     	;# 
  1810  081F                     	;# 
  1811  088C                     	;# 
  1812  088D                     	;# 
  1813  088E                     	;# 
  1814  088F                     	;# 
  1815  0890                     	;# 
  1816  0891                     	;# 
  1817  0892                     	;# 
  1818  0893                     	;# 
  1819  0895                     	;# 
  1820  0896                     	;# 
  1821  090C                     	;# 
  1822  090E                     	;# 
  1823  090F                     	;# 
  1824  091F                     	;# 
  1825  098F                     	;# 
  1826  098F                     	;# 
  1827  0990                     	;# 
  1828  0991                     	;# 
  1829  0992                     	;# 
  1830  0993                     	;# 
  1831  0994                     	;# 
  1832  0995                     	;# 
  1833  0996                     	;# 
  1834  0997                     	;# 
  1835  0A19                     	;# 
  1836  0A19                     	;# 
  1837  0A1A                     	;# 
  1838  0A1A                     	;# 
  1839  0A1B                     	;# 
  1840  0A1B                     	;# 
  1841  0A1B                     	;# 
  1842  0A1C                     	;# 
  1843  0A1C                     	;# 
  1844  0A1D                     	;# 
  1845  0A1D                     	;# 
  1846  0A1E                     	;# 
  1847  0A1E                     	;# 
  1848  0A1F                     	;# 
  1849  0A1F                     	;# 
  1850  0A1F                     	;# 
  1851  1E0F                     	;# 
  1852  1E10                     	;# 
  1853  1E11                     	;# 
  1854  1E12                     	;# 
  1855  1E13                     	;# 
  1856  1E14                     	;# 
  1857  1E15                     	;# 
  1858  1E16                     	;# 
  1859  1E17                     	;# 
  1860  1E18                     	;# 
  1861  1E19                     	;# 
  1862  1E1A                     	;# 
  1863  1E1B                     	;# 
  1864  1E1C                     	;# 
  1865  1E1D                     	;# 
  1866  1E1E                     	;# 
  1867  1E1F                     	;# 
  1868  1E20                     	;# 
  1869  1E21                     	;# 
  1870  1E22                     	;# 
  1871  1E23                     	;# 
  1872  1E24                     	;# 
  1873  1E25                     	;# 
  1874  1E26                     	;# 
  1875  1E27                     	;# 
  1876  1E28                     	;# 
  1877  1E29                     	;# 
  1878  1E2A                     	;# 
  1879  1E2B                     	;# 
  1880  1E2C                     	;# 
  1881  1E2D                     	;# 
  1882  1E2E                     	;# 
  1883  1E2F                     	;# 
  1884  1E30                     	;# 
  1885  1E31                     	;# 
  1886  1E32                     	;# 
  1887  1E33                     	;# 
  1888  1E34                     	;# 
  1889  1E35                     	;# 
  1890  1E36                     	;# 
  1891  1E37                     	;# 
  1892  1E8F                     	;# 
  1893  1E90                     	;# 
  1894  1E91                     	;# 
  1895  1E92                     	;# 
  1896  1E93                     	;# 
  1897  1E9C                     	;# 
  1898  1EA1                     	;# 
  1899  1EA2                     	;# 
  1900  1EB1                     	;# 
  1901  1EBB                     	;# 
  1902  1EBC                     	;# 
  1903  1EBD                     	;# 
  1904  1EBE                     	;# 
  1905  1EC3                     	;# 
  1906  1EC5                     	;# 
  1907  1EC6                     	;# 
  1908  1EC7                     	;# 
  1909  1ECB                     	;# 
  1910  1ECC                     	;# 
  1911  1ECD                     	;# 
  1912  1ECE                     	;# 
  1913  1F10                     	;# 
  1914  1F11                     	;# 
  1915  1F12                     	;# 
  1916  1F13                     	;# 
  1917  1F14                     	;# 
  1918  1F15                     	;# 
  1919  1F20                     	;# 
  1920  1F21                     	;# 
  1921  1F22                     	;# 
  1922  1F23                     	;# 
  1923  1F24                     	;# 
  1924  1F25                     	;# 
  1925  1F38                     	;# 
  1926  1F39                     	;# 
  1927  1F3A                     	;# 
  1928  1F3B                     	;# 
  1929  1F3C                     	;# 
  1930  1F3D                     	;# 
  1931  1F3E                     	;# 
  1932  1F3F                     	;# 
  1933  1F4E                     	;# 
  1934  1F4F                     	;# 
  1935  1F50                     	;# 
  1936  1F51                     	;# 
  1937  1F52                     	;# 
  1938  1F53                     	;# 
  1939  1F54                     	;# 
  1940  1F55                     	;# 
  1941  1FE4                     	;# 
  1942  1FE5                     	;# 
  1943  1FE6                     	;# 
  1944  1FE7                     	;# 
  1945  1FE8                     	;# 
  1946  1FE8                     	;# 
  1947  1FE9                     	;# 
  1948  1FEA                     	;# 
  1949  1FEA                     	;# 
  1950  1FEB                     	;# 
  1951  1FED                     	;# 
  1952  1FEE                     	;# 
  1953  1FEF                     	;# 
  1954  0000                     	;# 
  1955  0001                     	;# 
  1956  0002                     	;# 
  1957  0003                     	;# 
  1958  0004                     	;# 
  1959  0005                     	;# 
  1960  0006                     	;# 
  1961  0007                     	;# 
  1962  0008                     	;# 
  1963  0009                     	;# 
  1964  000A                     	;# 
  1965  000B                     	;# 
  1966  000C                     	;# 
  1967  000E                     	;# 
  1968  0012                     	;# 
  1969  0014                     	;# 
  1970  0018                     	;# 
  1971  001A                     	;# 
  1972  009B                     	;# 
  1973  009B                     	;# 
  1974  009C                     	;# 
  1975  009D                     	;# 
  1976  009E                     	;# 
  1977  009F                     	;# 
  1978  0119                     	;# 
  1979  0119                     	;# 
  1980  0119                     	;# 
  1981  011A                     	;# 
  1982  011A                     	;# 
  1983  011A                     	;# 
  1984  011B                     	;# 
  1985  011B                     	;# 
  1986  011B                     	;# 
  1987  011B                     	;# 
  1988  011B                     	;# 
  1989  011C                     	;# 
  1990  011C                     	;# 
  1991  011C                     	;# 
  1992  011D                     	;# 
  1993  011D                     	;# 
  1994  011D                     	;# 
  1995  011E                     	;# 
  1996  011E                     	;# 
  1997  011E                     	;# 
  1998  011F                     	;# 
  1999  011F                     	;# 
  2000  011F                     	;# 
  2001  011F                     	;# 
  2002  011F                     	;# 
  2003  018C                     	;# 
  2004  018D                     	;# 
  2005  018E                     	;# 
  2006  018F                     	;# 
  2007  0190                     	;# 
  2008  0191                     	;# 
  2009  0192                     	;# 
  2010  020C                     	;# 
  2011  020C                     	;# 
  2012  020D                     	;# 
  2013  020E                     	;# 
  2014  020F                     	;# 
  2015  020F                     	;# 
  2016  0210                     	;# 
  2017  0210                     	;# 
  2018  0211                     	;# 
  2019  0211                     	;# 
  2020  028C                     	;# 
  2021  028C                     	;# 
  2022  028D                     	;# 
  2023  028D                     	;# 
  2024  028E                     	;# 
  2025  028F                     	;# 
  2026  0290                     	;# 
  2027  0291                     	;# 
  2028  030C                     	;# 
  2029  030C                     	;# 
  2030  030D                     	;# 
  2031  030E                     	;# 
  2032  030F                     	;# 
  2033  0310                     	;# 
  2034  0310                     	;# 
  2035  0311                     	;# 
  2036  0312                     	;# 
  2037  0313                     	;# 
  2038  0314                     	;# 
  2039  0314                     	;# 
  2040  0315                     	;# 
  2041  0316                     	;# 
  2042  0318                     	;# 
  2043  0318                     	;# 
  2044  0319                     	;# 
  2045  031A                     	;# 
  2046  031C                     	;# 
  2047  031C                     	;# 
  2048  031D                     	;# 
  2049  031E                     	;# 
  2050  038C                     	;# 
  2051  038C                     	;# 
  2052  038D                     	;# 
  2053  038E                     	;# 
  2054  058C                     	;# 
  2055  058C                     	;# 
  2056  058D                     	;# 
  2057  058E                     	;# 
  2058  058F                     	;# 
  2059  058F                     	;# 
  2060  0590                     	;# 
  2061  0591                     	;# 
  2062  0592                     	;# 
  2063  0593                     	;# 
  2064  059C                     	;# 
  2065  059C                     	;# 
  2066  059D                     	;# 
  2067  059D                     	;# 
  2068  059E                     	;# 
  2069  059F                     	;# 
  2070  060C                     	;# 
  2071  060D                     	;# 
  2072  060E                     	;# 
  2073  060F                     	;# 
  2074  0610                     	;# 
  2075  0611                     	;# 
  2076  0612                     	;# 
  2077  0613                     	;# 
  2078  0614                     	;# 
  2079  070C                     	;# 
  2080  070D                     	;# 
  2081  070E                     	;# 
  2082  070F                     	;# 
  2083  0710                     	;# 
  2084  0711                     	;# 
  2085  0712                     	;# 
  2086  0713                     	;# 
  2087  0716                     	;# 
  2088  0717                     	;# 
  2089  0718                     	;# 
  2090  0719                     	;# 
  2091  071A                     	;# 
  2092  071B                     	;# 
  2093  071C                     	;# 
  2094  071D                     	;# 
  2095  0796                     	;# 
  2096  0797                     	;# 
  2097  0798                     	;# 
  2098  0799                     	;# 
  2099  079A                     	;# 
  2100  079B                     	;# 
  2101  080C                     	;# 
  2102  080D                     	;# 
  2103  080E                     	;# 
  2104  080F                     	;# 
  2105  0810                     	;# 
  2106  0811                     	;# 
  2107  0812                     	;# 
  2108  0813                     	;# 
  2109  0814                     	;# 
  2110  081A                     	;# 
  2111  081A                     	;# 
  2112  081B                     	;# 
  2113  081C                     	;# 
  2114  081C                     	;# 
  2115  081D                     	;# 
  2116  081E                     	;# 
  2117  081F                     	;# 
  2118  088C                     	;# 
  2119  088D                     	;# 
  2120  088E                     	;# 
  2121  088F                     	;# 
  2122  0890                     	;# 
  2123  0891                     	;# 
  2124  0892                     	;# 
  2125  0893                     	;# 
  2126  0895                     	;# 
  2127  0896                     	;# 
  2128  090C                     	;# 
  2129  090E                     	;# 
  2130  090F                     	;# 
  2131  091F                     	;# 
  2132  098F                     	;# 
  2133  098F                     	;# 
  2134  0990                     	;# 
  2135  0991                     	;# 
  2136  0992                     	;# 
  2137  0993                     	;# 
  2138  0994                     	;# 
  2139  0995                     	;# 
  2140  0996                     	;# 
  2141  0997                     	;# 
  2142  0A19                     	;# 
  2143  0A19                     	;# 
  2144  0A1A                     	;# 
  2145  0A1A                     	;# 
  2146  0A1B                     	;# 
  2147  0A1B                     	;# 
  2148  0A1B                     	;# 
  2149  0A1C                     	;# 
  2150  0A1C                     	;# 
  2151  0A1D                     	;# 
  2152  0A1D                     	;# 
  2153  0A1E                     	;# 
  2154  0A1E                     	;# 
  2155  0A1F                     	;# 
  2156  0A1F                     	;# 
  2157  0A1F                     	;# 
  2158  1E0F                     	;# 
  2159  1E10                     	;# 
  2160  1E11                     	;# 
  2161  1E12                     	;# 
  2162  1E13                     	;# 
  2163  1E14                     	;# 
  2164  1E15                     	;# 
  2165  1E16                     	;# 
  2166  1E17                     	;# 
  2167  1E18                     	;# 
  2168  1E19                     	;# 
  2169  1E1A                     	;# 
  2170  1E1B                     	;# 
  2171  1E1C                     	;# 
  2172  1E1D                     	;# 
  2173  1E1E                     	;# 
  2174  1E1F                     	;# 
  2175  1E20                     	;# 
  2176  1E21                     	;# 
  2177  1E22                     	;# 
  2178  1E23                     	;# 
  2179  1E24                     	;# 
  2180  1E25                     	;# 
  2181  1E26                     	;# 
  2182  1E27                     	;# 
  2183  1E28                     	;# 
  2184  1E29                     	;# 
  2185  1E2A                     	;# 
  2186  1E2B                     	;# 
  2187  1E2C                     	;# 
  2188  1E2D                     	;# 
  2189  1E2E                     	;# 
  2190  1E2F                     	;# 
  2191  1E30                     	;# 
  2192  1E31                     	;# 
  2193  1E32                     	;# 
  2194  1E33                     	;# 
  2195  1E34                     	;# 
  2196  1E35                     	;# 
  2197  1E36                     	;# 
  2198  1E37                     	;# 
  2199  1E8F                     	;# 
  2200  1E90                     	;# 
  2201  1E91                     	;# 
  2202  1E92                     	;# 
  2203  1E93                     	;# 
  2204  1E9C                     	;# 
  2205  1EA1                     	;# 
  2206  1EA2                     	;# 
  2207  1EB1                     	;# 
  2208  1EBB                     	;# 
  2209  1EBC                     	;# 
  2210  1EBD                     	;# 
  2211  1EBE                     	;# 
  2212  1EC3                     	;# 
  2213  1EC5                     	;# 
  2214  1EC6                     	;# 
  2215  1EC7                     	;# 
  2216  1ECB                     	;# 
  2217  1ECC                     	;# 
  2218  1ECD                     	;# 
  2219  1ECE                     	;# 
  2220  1F10                     	;# 
  2221  1F11                     	;# 
  2222  1F12                     	;# 
  2223  1F13                     	;# 
  2224  1F14                     	;# 
  2225  1F15                     	;# 
  2226  1F20                     	;# 
  2227  1F21                     	;# 
  2228  1F22                     	;# 
  2229  1F23                     	;# 
  2230  1F24                     	;# 
  2231  1F25                     	;# 
  2232  1F38                     	;# 
  2233  1F39                     	;# 
  2234  1F3A                     	;# 
  2235  1F3B                     	;# 
  2236  1F3C                     	;# 
  2237  1F3D                     	;# 
  2238  1F3E                     	;# 
  2239  1F3F                     	;# 
  2240  1F4E                     	;# 
  2241  1F4F                     	;# 
  2242  1F50                     	;# 
  2243  1F51                     	;# 
  2244  1F52                     	;# 
  2245  1F53                     	;# 
  2246  1F54                     	;# 
  2247  1F55                     	;# 
  2248  1FE4                     	;# 
  2249  1FE5                     	;# 
  2250  1FE6                     	;# 
  2251  1FE7                     	;# 
  2252  1FE8                     	;# 
  2253  1FE8                     	;# 
  2254  1FE9                     	;# 
  2255  1FEA                     	;# 
  2256  1FEA                     	;# 
  2257  1FEB                     	;# 
  2258  1FED                     	;# 
  2259  1FEE                     	;# 
  2260  1FEF                     	;# 
  2261  0000                     	;# 
  2262  0001                     	;# 
  2263  0002                     	;# 
  2264  0003                     	;# 
  2265  0004                     	;# 
  2266  0005                     	;# 
  2267  0006                     	;# 
  2268  0007                     	;# 
  2269  0008                     	;# 
  2270  0009                     	;# 
  2271  000A                     	;# 
  2272  000B                     	;# 
  2273  000C                     	;# 
  2274  000E                     	;# 
  2275  0012                     	;# 
  2276  0014                     	;# 
  2277  0018                     	;# 
  2278  001A                     	;# 
  2279  009B                     	;# 
  2280  009B                     	;# 
  2281  009C                     	;# 
  2282  009D                     	;# 
  2283  009E                     	;# 
  2284  009F                     	;# 
  2285  0119                     	;# 
  2286  0119                     	;# 
  2287  0119                     	;# 
  2288  011A                     	;# 
  2289  011A                     	;# 
  2290  011A                     	;# 
  2291  011B                     	;# 
  2292  011B                     	;# 
  2293  011B                     	;# 
  2294  011B                     	;# 
  2295  011B                     	;# 
  2296  011C                     	;# 
  2297  011C                     	;# 
  2298  011C                     	;# 
  2299  011D                     	;# 
  2300  011D                     	;# 
  2301  011D                     	;# 
  2302  011E                     	;# 
  2303  011E                     	;# 
  2304  011E                     	;# 
  2305  011F                     	;# 
  2306  011F                     	;# 
  2307  011F                     	;# 
  2308  011F                     	;# 
  2309  011F                     	;# 
  2310  018C                     	;# 
  2311  018D                     	;# 
  2312  018E                     	;# 
  2313  018F                     	;# 
  2314  0190                     	;# 
  2315  0191                     	;# 
  2316  0192                     	;# 
  2317  020C                     	;# 
  2318  020C                     	;# 
  2319  020D                     	;# 
  2320  020E                     	;# 
  2321  020F                     	;# 
  2322  020F                     	;# 
  2323  0210                     	;# 
  2324  0210                     	;# 
  2325  0211                     	;# 
  2326  0211                     	;# 
  2327  028C                     	;# 
  2328  028C                     	;# 
  2329  028D                     	;# 
  2330  028D                     	;# 
  2331  028E                     	;# 
  2332  028F                     	;# 
  2333  0290                     	;# 
  2334  0291                     	;# 
  2335  030C                     	;# 
  2336  030C                     	;# 
  2337  030D                     	;# 
  2338  030E                     	;# 
  2339  030F                     	;# 
  2340  0310                     	;# 
  2341  0310                     	;# 
  2342  0311                     	;# 
  2343  0312                     	;# 
  2344  0313                     	;# 
  2345  0314                     	;# 
  2346  0314                     	;# 
  2347  0315                     	;# 
  2348  0316                     	;# 
  2349  0318                     	;# 
  2350  0318                     	;# 
  2351  0319                     	;# 
  2352  031A                     	;# 
  2353  031C                     	;# 
  2354  031C                     	;# 
  2355  031D                     	;# 
  2356  031E                     	;# 
  2357  038C                     	;# 
  2358  038C                     	;# 
  2359  038D                     	;# 
  2360  038E                     	;# 
  2361  058C                     	;# 
  2362  058C                     	;# 
  2363  058D                     	;# 
  2364  058E                     	;# 
  2365  058F                     	;# 
  2366  058F                     	;# 
  2367  0590                     	;# 
  2368  0591                     	;# 
  2369  0592                     	;# 
  2370  0593                     	;# 
  2371  059C                     	;# 
  2372  059C                     	;# 
  2373  059D                     	;# 
  2374  059D                     	;# 
  2375  059E                     	;# 
  2376  059F                     	;# 
  2377  060C                     	;# 
  2378  060D                     	;# 
  2379  060E                     	;# 
  2380  060F                     	;# 
  2381  0610                     	;# 
  2382  0611                     	;# 
  2383  0612                     	;# 
  2384  0613                     	;# 
  2385  0614                     	;# 
  2386  070C                     	;# 
  2387  070D                     	;# 
  2388  070E                     	;# 
  2389  070F                     	;# 
  2390  0710                     	;# 
  2391  0711                     	;# 
  2392  0712                     	;# 
  2393  0713                     	;# 
  2394  0716                     	;# 
  2395  0717                     	;# 
  2396  0718                     	;# 
  2397  0719                     	;# 
  2398  071A                     	;# 
  2399  071B                     	;# 
  2400  071C                     	;# 
  2401  071D                     	;# 
  2402  0796                     	;# 
  2403  0797                     	;# 
  2404  0798                     	;# 
  2405  0799                     	;# 
  2406  079A                     	;# 
  2407  079B                     	;# 
  2408  080C                     	;# 
  2409  080D                     	;# 
  2410  080E                     	;# 
  2411  080F                     	;# 
  2412  0810                     	;# 
  2413  0811                     	;# 
  2414  0812                     	;# 
  2415  0813                     	;# 
  2416  0814                     	;# 
  2417  081A                     	;# 
  2418  081A                     	;# 
  2419  081B                     	;# 
  2420  081C                     	;# 
  2421  081C                     	;# 
  2422  081D                     	;# 
  2423  081E                     	;# 
  2424  081F                     	;# 
  2425  088C                     	;# 
  2426  088D                     	;# 
  2427  088E                     	;# 
  2428  088F                     	;# 
  2429  0890                     	;# 
  2430  0891                     	;# 
  2431  0892                     	;# 
  2432  0893                     	;# 
  2433  0895                     	;# 
  2434  0896                     	;# 
  2435  090C                     	;# 
  2436  090E                     	;# 
  2437  090F                     	;# 
  2438  091F                     	;# 
  2439  098F                     	;# 
  2440  098F                     	;# 
  2441  0990                     	;# 
  2442  0991                     	;# 
  2443  0992                     	;# 
  2444  0993                     	;# 
  2445  0994                     	;# 
  2446  0995                     	;# 
  2447  0996                     	;# 
  2448  0997                     	;# 
  2449  0A19                     	;# 
  2450  0A19                     	;# 
  2451  0A1A                     	;# 
  2452  0A1A                     	;# 
  2453  0A1B                     	;# 
  2454  0A1B                     	;# 
  2455  0A1B                     	;# 
  2456  0A1C                     	;# 
  2457  0A1C                     	;# 
  2458  0A1D                     	;# 
  2459  0A1D                     	;# 
  2460  0A1E                     	;# 
  2461  0A1E                     	;# 
  2462  0A1F                     	;# 
  2463  0A1F                     	;# 
  2464  0A1F                     	;# 
  2465  1E0F                     	;# 
  2466  1E10                     	;# 
  2467  1E11                     	;# 
  2468  1E12                     	;# 
  2469  1E13                     	;# 
  2470  1E14                     	;# 
  2471  1E15                     	;# 
  2472  1E16                     	;# 
  2473  1E17                     	;# 
  2474  1E18                     	;# 
  2475  1E19                     	;# 
  2476  1E1A                     	;# 
  2477  1E1B                     	;# 
  2478  1E1C                     	;# 
  2479  1E1D                     	;# 
  2480  1E1E                     	;# 
  2481  1E1F                     	;# 
  2482  1E20                     	;# 
  2483  1E21                     	;# 
  2484  1E22                     	;# 
  2485  1E23                     	;# 
  2486  1E24                     	;# 
  2487  1E25                     	;# 
  2488  1E26                     	;# 
  2489  1E27                     	;# 
  2490  1E28                     	;# 
  2491  1E29                     	;# 
  2492  1E2A                     	;# 
  2493  1E2B                     	;# 
  2494  1E2C                     	;# 
  2495  1E2D                     	;# 
  2496  1E2E                     	;# 
  2497  1E2F                     	;# 
  2498  1E30                     	;# 
  2499  1E31                     	;# 
  2500  1E32                     	;# 
  2501  1E33                     	;# 
  2502  1E34                     	;# 
  2503  1E35                     	;# 
  2504  1E36                     	;# 
  2505  1E37                     	;# 
  2506  1E8F                     	;# 
  2507  1E90                     	;# 
  2508  1E91                     	;# 
  2509  1E92                     	;# 
  2510  1E93                     	;# 
  2511  1E9C                     	;# 
  2512  1EA1                     	;# 
  2513  1EA2                     	;# 
  2514  1EB1                     	;# 
  2515  1EBB                     	;# 
  2516  1EBC                     	;# 
  2517  1EBD                     	;# 
  2518  1EBE                     	;# 
  2519  1EC3                     	;# 
  2520  1EC5                     	;# 
  2521  1EC6                     	;# 
  2522  1EC7                     	;# 
  2523  1ECB                     	;# 
  2524  1ECC                     	;# 
  2525  1ECD                     	;# 
  2526  1ECE                     	;# 
  2527  1F10                     	;# 
  2528  1F11                     	;# 
  2529  1F12                     	;# 
  2530  1F13                     	;# 
  2531  1F14                     	;# 
  2532  1F15                     	;# 
  2533  1F20                     	;# 
  2534  1F21                     	;# 
  2535  1F22                     	;# 
  2536  1F23                     	;# 
  2537  1F24                     	;# 
  2538  1F25                     	;# 
  2539  1F38                     	;# 
  2540  1F39                     	;# 
  2541  1F3A                     	;# 
  2542  1F3B                     	;# 
  2543  1F3C                     	;# 
  2544  1F3D                     	;# 
  2545  1F3E                     	;# 
  2546  1F3F                     	;# 
  2547  1F4E                     	;# 
  2548  1F4F                     	;# 
  2549  1F50                     	;# 
  2550  1F51                     	;# 
  2551  1F52                     	;# 
  2552  1F53                     	;# 
  2553  1F54                     	;# 
  2554  1F55                     	;# 
  2555  1FE4                     	;# 
  2556  1FE5                     	;# 
  2557  1FE6                     	;# 
  2558  1FE7                     	;# 
  2559  1FE8                     	;# 
  2560  1FE8                     	;# 
  2561  1FE9                     	;# 
  2562  1FEA                     	;# 
  2563  1FEA                     	;# 
  2564  1FEB                     	;# 
  2565  1FED                     	;# 
  2566  1FEE                     	;# 
  2567  1FEF                     	;# 
  2568  0000                     	;# 
  2569  0001                     	;# 
  2570  0002                     	;# 
  2571  0003                     	;# 
  2572  0004                     	;# 
  2573  0005                     	;# 
  2574  0006                     	;# 
  2575  0007                     	;# 
  2576  0008                     	;# 
  2577  0009                     	;# 
  2578  000A                     	;# 
  2579  000B                     	;# 
  2580  000C                     	;# 
  2581  000E                     	;# 
  2582  0012                     	;# 
  2583  0014                     	;# 
  2584  0018                     	;# 
  2585  001A                     	;# 
  2586  009B                     	;# 
  2587  009B                     	;# 
  2588  009C                     	;# 
  2589  009D                     	;# 
  2590  009E                     	;# 
  2591  009F                     	;# 
  2592  0119                     	;# 
  2593  0119                     	;# 
  2594  0119                     	;# 
  2595  011A                     	;# 
  2596  011A                     	;# 
  2597  011A                     	;# 
  2598  011B                     	;# 
  2599  011B                     	;# 
  2600  011B                     	;# 
  2601  011B                     	;# 
  2602  011B                     	;# 
  2603  011C                     	;# 
  2604  011C                     	;# 
  2605  011C                     	;# 
  2606  011D                     	;# 
  2607  011D                     	;# 
  2608  011D                     	;# 
  2609  011E                     	;# 
  2610  011E                     	;# 
  2611  011E                     	;# 
  2612  011F                     	;# 
  2613  011F                     	;# 
  2614  011F                     	;# 
  2615  011F                     	;# 
  2616  011F                     	;# 
  2617  018C                     	;# 
  2618  018D                     	;# 
  2619  018E                     	;# 
  2620  018F                     	;# 
  2621  0190                     	;# 
  2622  0191                     	;# 
  2623  0192                     	;# 
  2624  020C                     	;# 
  2625  020C                     	;# 
  2626  020D                     	;# 
  2627  020E                     	;# 
  2628  020F                     	;# 
  2629  020F                     	;# 
  2630  0210                     	;# 
  2631  0210                     	;# 
  2632  0211                     	;# 
  2633  0211                     	;# 
  2634  028C                     	;# 
  2635  028C                     	;# 
  2636  028D                     	;# 
  2637  028D                     	;# 
  2638  028E                     	;# 
  2639  028F                     	;# 
  2640  0290                     	;# 
  2641  0291                     	;# 
  2642  030C                     	;# 
  2643  030C                     	;# 
  2644  030D                     	;# 
  2645  030E                     	;# 
  2646  030F                     	;# 
  2647  0310                     	;# 
  2648  0310                     	;# 
  2649  0311                     	;# 
  2650  0312                     	;# 
  2651  0313                     	;# 
  2652  0314                     	;# 
  2653  0314                     	;# 
  2654  0315                     	;# 
  2655  0316                     	;# 
  2656  0318                     	;# 
  2657  0318                     	;# 
  2658  0319                     	;# 
  2659  031A                     	;# 
  2660  031C                     	;# 
  2661  031C                     	;# 
  2662  031D                     	;# 
  2663  031E                     	;# 
  2664  038C                     	;# 
  2665  038C                     	;# 
  2666  038D                     	;# 
  2667  038E                     	;# 
  2668  058C                     	;# 
  2669  058C                     	;# 
  2670  058D                     	;# 
  2671  058E                     	;# 
  2672  058F                     	;# 
  2673  058F                     	;# 
  2674  0590                     	;# 
  2675  0591                     	;# 
  2676  0592                     	;# 
  2677  0593                     	;# 
  2678  059C                     	;# 
  2679  059C                     	;# 
  2680  059D                     	;# 
  2681  059D                     	;# 
  2682  059E                     	;# 
  2683  059F                     	;# 
  2684  060C                     	;# 
  2685  060D                     	;# 
  2686  060E                     	;# 
  2687  060F                     	;# 
  2688  0610                     	;# 
  2689  0611                     	;# 
  2690  0612                     	;# 
  2691  0613                     	;# 
  2692  0614                     	;# 
  2693  070C                     	;# 
  2694  070D                     	;# 
  2695  070E                     	;# 
  2696  070F                     	;# 
  2697  0710                     	;# 
  2698  0711                     	;# 
  2699  0712                     	;# 
  2700  0713                     	;# 
  2701  0716                     	;# 
  2702  0717                     	;# 
  2703  0718                     	;# 
  2704  0719                     	;# 
  2705  071A                     	;# 
  2706  071B                     	;# 
  2707  071C                     	;# 
  2708  071D                     	;# 
  2709  0796                     	;# 
  2710  0797                     	;# 
  2711  0798                     	;# 
  2712  0799                     	;# 
  2713  079A                     	;# 
  2714  079B                     	;# 
  2715  080C                     	;# 
  2716  080D                     	;# 
  2717  080E                     	;# 
  2718  080F                     	;# 
  2719  0810                     	;# 
  2720  0811                     	;# 
  2721  0812                     	;# 
  2722  0813                     	;# 
  2723  0814                     	;# 
  2724  081A                     	;# 
  2725  081A                     	;# 
  2726  081B                     	;# 
  2727  081C                     	;# 
  2728  081C                     	;# 
  2729  081D                     	;# 
  2730  081E                     	;# 
  2731  081F                     	;# 
  2732  088C                     	;# 
  2733  088D                     	;# 
  2734  088E                     	;# 
  2735  088F                     	;# 
  2736  0890                     	;# 
  2737  0891                     	;# 
  2738  0892                     	;# 
  2739  0893                     	;# 
  2740  0895                     	;# 
  2741  0896                     	;# 
  2742  090C                     	;# 
  2743  090E                     	;# 
  2744  090F                     	;# 
  2745  091F                     	;# 
  2746  098F                     	;# 
  2747  098F                     	;# 
  2748  0990                     	;# 
  2749  0991                     	;# 
  2750  0992                     	;# 
  2751  0993                     	;# 
  2752  0994                     	;# 
  2753  0995                     	;# 
  2754  0996                     	;# 
  2755  0997                     	;# 
  2756  0A19                     	;# 
  2757  0A19                     	;# 
  2758  0A1A                     	;# 
  2759  0A1A                     	;# 
  2760  0A1B                     	;# 
  2761  0A1B                     	;# 
  2762  0A1B                     	;# 
  2763  0A1C                     	;# 
  2764  0A1C                     	;# 
  2765  0A1D                     	;# 
  2766  0A1D                     	;# 
  2767  0A1E                     	;# 
  2768  0A1E                     	;# 
  2769  0A1F                     	;# 
  2770  0A1F                     	;# 
  2771  0A1F                     	;# 
  2772  1E0F                     	;# 
  2773  1E10                     	;# 
  2774  1E11                     	;# 
  2775  1E12                     	;# 
  2776  1E13                     	;# 
  2777  1E14                     	;# 
  2778  1E15                     	;# 
  2779  1E16                     	;# 
  2780  1E17                     	;# 
  2781  1E18                     	;# 
  2782  1E19                     	;# 
  2783  1E1A                     	;# 
  2784  1E1B                     	;# 
  2785  1E1C                     	;# 
  2786  1E1D                     	;# 
  2787  1E1E                     	;# 
  2788  1E1F                     	;# 
  2789  1E20                     	;# 
  2790  1E21                     	;# 
  2791  1E22                     	;# 
  2792  1E23                     	;# 
  2793  1E24                     	;# 
  2794  1E25                     	;# 
  2795  1E26                     	;# 
  2796  1E27                     	;# 
  2797  1E28                     	;# 
  2798  1E29                     	;# 
  2799  1E2A                     	;# 
  2800  1E2B                     	;# 
  2801  1E2C                     	;# 
  2802  1E2D                     	;# 
  2803  1E2E                     	;# 
  2804  1E2F                     	;# 
  2805  1E30                     	;# 
  2806  1E31                     	;# 
  2807  1E32                     	;# 
  2808  1E33                     	;# 
  2809  1E34                     	;# 
  2810  1E35                     	;# 
  2811  1E36                     	;# 
  2812  1E37                     	;# 
  2813  1E8F                     	;# 
  2814  1E90                     	;# 
  2815  1E91                     	;# 
  2816  1E92                     	;# 
  2817  1E93                     	;# 
  2818  1E9C                     	;# 
  2819  1EA1                     	;# 
  2820  1EA2                     	;# 
  2821  1EB1                     	;# 
  2822  1EBB                     	;# 
  2823  1EBC                     	;# 
  2824  1EBD                     	;# 
  2825  1EBE                     	;# 
  2826  1EC3                     	;# 
  2827  1EC5                     	;# 
  2828  1EC6                     	;# 
  2829  1EC7                     	;# 
  2830  1ECB                     	;# 
  2831  1ECC                     	;# 
  2832  1ECD                     	;# 
  2833  1ECE                     	;# 
  2834  1F10                     	;# 
  2835  1F11                     	;# 
  2836  1F12                     	;# 
  2837  1F13                     	;# 
  2838  1F14                     	;# 
  2839  1F15                     	;# 
  2840  1F20                     	;# 
  2841  1F21                     	;# 
  2842  1F22                     	;# 
  2843  1F23                     	;# 
  2844  1F24                     	;# 
  2845  1F25                     	;# 
  2846  1F38                     	;# 
  2847  1F39                     	;# 
  2848  1F3A                     	;# 
  2849  1F3B                     	;# 
  2850  1F3C                     	;# 
  2851  1F3D                     	;# 
  2852  1F3E                     	;# 
  2853  1F3F                     	;# 
  2854  1F4E                     	;# 
  2855  1F4F                     	;# 
  2856  1F50                     	;# 
  2857  1F51                     	;# 
  2858  1F52                     	;# 
  2859  1F53                     	;# 
  2860  1F54                     	;# 
  2861  1F55                     	;# 
  2862  1FE4                     	;# 
  2863  1FE5                     	;# 
  2864  1FE6                     	;# 
  2865  1FE7                     	;# 
  2866  1FE8                     	;# 
  2867  1FE8                     	;# 
  2868  1FE9                     	;# 
  2869  1FEA                     	;# 
  2870  1FEA                     	;# 
  2871  1FEB                     	;# 
  2872  1FED                     	;# 
  2873  1FEE                     	;# 
  2874  1FEF                     	;# 
  2875  0000                     	;# 
  2876  0001                     	;# 
  2877  0002                     	;# 
  2878  0003                     	;# 
  2879  0004                     	;# 
  2880  0005                     	;# 
  2881  0006                     	;# 
  2882  0007                     	;# 
  2883  0008                     	;# 
  2884  0009                     	;# 
  2885  000A                     	;# 
  2886  000B                     	;# 
  2887  000C                     	;# 
  2888  000E                     	;# 
  2889  0012                     	;# 
  2890  0014                     	;# 
  2891  0018                     	;# 
  2892  001A                     	;# 
  2893  009B                     	;# 
  2894  009B                     	;# 
  2895  009C                     	;# 
  2896  009D                     	;# 
  2897  009E                     	;# 
  2898  009F                     	;# 
  2899  0119                     	;# 
  2900  0119                     	;# 
  2901  0119                     	;# 
  2902  011A                     	;# 
  2903  011A                     	;# 
  2904  011A                     	;# 
  2905  011B                     	;# 
  2906  011B                     	;# 
  2907  011B                     	;# 
  2908  011B                     	;# 
  2909  011B                     	;# 
  2910  011C                     	;# 
  2911  011C                     	;# 
  2912  011C                     	;# 
  2913  011D                     	;# 
  2914  011D                     	;# 
  2915  011D                     	;# 
  2916  011E                     	;# 
  2917  011E                     	;# 
  2918  011E                     	;# 
  2919  011F                     	;# 
  2920  011F                     	;# 
  2921  011F                     	;# 
  2922  011F                     	;# 
  2923  011F                     	;# 
  2924  018C                     	;# 
  2925  018D                     	;# 
  2926  018E                     	;# 
  2927  018F                     	;# 
  2928  0190                     	;# 
  2929  0191                     	;# 
  2930  0192                     	;# 
  2931  020C                     	;# 
  2932  020C                     	;# 
  2933  020D                     	;# 
  2934  020E                     	;# 
  2935  020F                     	;# 
  2936  020F                     	;# 
  2937  0210                     	;# 
  2938  0210                     	;# 
  2939  0211                     	;# 
  2940  0211                     	;# 
  2941  028C                     	;# 
  2942  028C                     	;# 
  2943  028D                     	;# 
  2944  028D                     	;# 
  2945  028E                     	;# 
  2946  028F                     	;# 
  2947  0290                     	;# 
  2948  0291                     	;# 
  2949  030C                     	;# 
  2950  030C                     	;# 
  2951  030D                     	;# 
  2952  030E                     	;# 
  2953  030F                     	;# 
  2954  0310                     	;# 
  2955  0310                     	;# 
  2956  0311                     	;# 
  2957  0312                     	;# 
  2958  0313                     	;# 
  2959  0314                     	;# 
  2960  0314                     	;# 
  2961  0315                     	;# 
  2962  0316                     	;# 
  2963  0318                     	;# 
  2964  0318                     	;# 
  2965  0319                     	;# 
  2966  031A                     	;# 
  2967  031C                     	;# 
  2968  031C                     	;# 
  2969  031D                     	;# 
  2970  031E                     	;# 
  2971  038C                     	;# 
  2972  038C                     	;# 
  2973  038D                     	;# 
  2974  038E                     	;# 
  2975  058C                     	;# 
  2976  058C                     	;# 
  2977  058D                     	;# 
  2978  058E                     	;# 
  2979  058F                     	;# 
  2980  058F                     	;# 
  2981  0590                     	;# 
  2982  0591                     	;# 
  2983  0592                     	;# 
  2984  0593                     	;# 
  2985  059C                     	;# 
  2986  059C                     	;# 
  2987  059D                     	;# 
  2988  059D                     	;# 
  2989  059E                     	;# 
  2990  059F                     	;# 
  2991  060C                     	;# 
  2992  060D                     	;# 
  2993  060E                     	;# 
  2994  060F                     	;# 
  2995  0610                     	;# 
  2996  0611                     	;# 
  2997  0612                     	;# 
  2998  0613                     	;# 
  2999  0614                     	;# 
  3000  070C                     	;# 
  3001  070D                     	;# 
  3002  070E                     	;# 
  3003  070F                     	;# 
  3004  0710                     	;# 
  3005  0711                     	;# 
  3006  0712                     	;# 
  3007  0713                     	;# 
  3008  0716                     	;# 
  3009  0717                     	;# 
  3010  0718                     	;# 
  3011  0719                     	;# 
  3012  071A                     	;# 
  3013  071B                     	;# 
  3014  071C                     	;# 
  3015  071D                     	;# 
  3016  0796                     	;# 
  3017  0797                     	;# 
  3018  0798                     	;# 
  3019  0799                     	;# 
  3020  079A                     	;# 
  3021  079B                     	;# 
  3022  080C                     	;# 
  3023  080D                     	;# 
  3024  080E                     	;# 
  3025  080F                     	;# 
  3026  0810                     	;# 
  3027  0811                     	;# 
  3028  0812                     	;# 
  3029  0813                     	;# 
  3030  0814                     	;# 
  3031  081A                     	;# 
  3032  081A                     	;# 
  3033  081B                     	;# 
  3034  081C                     	;# 
  3035  081C                     	;# 
  3036  081D                     	;# 
  3037  081E                     	;# 
  3038  081F                     	;# 
  3039  088C                     	;# 
  3040  088D                     	;# 
  3041  088E                     	;# 
  3042  088F                     	;# 
  3043  0890                     	;# 
  3044  0891                     	;# 
  3045  0892                     	;# 
  3046  0893                     	;# 
  3047  0895                     	;# 
  3048  0896                     	;# 
  3049  090C                     	;# 
  3050  090E                     	;# 
  3051  090F                     	;# 
  3052  091F                     	;# 
  3053  098F                     	;# 
  3054  098F                     	;# 
  3055  0990                     	;# 
  3056  0991                     	;# 
  3057  0992                     	;# 
  3058  0993                     	;# 
  3059  0994                     	;# 
  3060  0995                     	;# 
  3061  0996                     	;# 
  3062  0997                     	;# 
  3063  0A19                     	;# 
  3064  0A19                     	;# 
  3065  0A1A                     	;# 
  3066  0A1A                     	;# 
  3067  0A1B                     	;# 
  3068  0A1B                     	;# 
  3069  0A1B                     	;# 
  3070  0A1C                     	;# 
  3071  0A1C                     	;# 
  3072  0A1D                     	;# 
  3073  0A1D                     	;# 
  3074  0A1E                     	;# 
  3075  0A1E                     	;# 
  3076  0A1F                     	;# 
  3077  0A1F                     	;# 
  3078  0A1F                     	;# 
  3079  1E0F                     	;# 
  3080  1E10                     	;# 
  3081  1E11                     	;# 
  3082  1E12                     	;# 
  3083  1E13                     	;# 
  3084  1E14                     	;# 
  3085  1E15                     	;# 
  3086  1E16                     	;# 
  3087  1E17                     	;# 
  3088  1E18                     	;# 
  3089  1E19                     	;# 
  3090  1E1A                     	;# 
  3091  1E1B                     	;# 
  3092  1E1C                     	;# 
  3093  1E1D                     	;# 
  3094  1E1E                     	;# 
  3095  1E1F                     	;# 
  3096  1E20                     	;# 
  3097  1E21                     	;# 
  3098  1E22                     	;# 
  3099  1E23                     	;# 
  3100  1E24                     	;# 
  3101  1E25                     	;# 
  3102  1E26                     	;# 
  3103  1E27                     	;# 
  3104  1E28                     	;# 
  3105  1E29                     	;# 
  3106  1E2A                     	;# 
  3107  1E2B                     	;# 
  3108  1E2C                     	;# 
  3109  1E2D                     	;# 
  3110  1E2E                     	;# 
  3111  1E2F                     	;# 
  3112  1E30                     	;# 
  3113  1E31                     	;# 
  3114  1E32                     	;# 
  3115  1E33                     	;# 
  3116  1E34                     	;# 
  3117  1E35                     	;# 
  3118  1E36                     	;# 
  3119  1E37                     	;# 
  3120  1E8F                     	;# 
  3121  1E90                     	;# 
  3122  1E91                     	;# 
  3123  1E92                     	;# 
  3124  1E93                     	;# 
  3125  1E9C                     	;# 
  3126  1EA1                     	;# 
  3127  1EA2                     	;# 
  3128  1EB1                     	;# 
  3129  1EBB                     	;# 
  3130  1EBC                     	;# 
  3131  1EBD                     	;# 
  3132  1EBE                     	;# 
  3133  1EC3                     	;# 
  3134  1EC5                     	;# 
  3135  1EC6                     	;# 
  3136  1EC7                     	;# 
  3137  1ECB                     	;# 
  3138  1ECC                     	;# 
  3139  1ECD                     	;# 
  3140  1ECE                     	;# 
  3141  1F10                     	;# 
  3142  1F11                     	;# 
  3143  1F12                     	;# 
  3144  1F13                     	;# 
  3145  1F14                     	;# 
  3146  1F15                     	;# 
  3147  1F20                     	;# 
  3148  1F21                     	;# 
  3149  1F22                     	;# 
  3150  1F23                     	;# 
  3151  1F24                     	;# 
  3152  1F25                     	;# 
  3153  1F38                     	;# 
  3154  1F39                     	;# 
  3155  1F3A                     	;# 
  3156  1F3B                     	;# 
  3157  1F3C                     	;# 
  3158  1F3D                     	;# 
  3159  1F3E                     	;# 
  3160  1F3F                     	;# 
  3161  1F4E                     	;# 
  3162  1F4F                     	;# 
  3163  1F50                     	;# 
  3164  1F51                     	;# 
  3165  1F52                     	;# 
  3166  1F53                     	;# 
  3167  1F54                     	;# 
  3168  1F55                     	;# 
  3169  1FE4                     	;# 
  3170  1FE5                     	;# 
  3171  1FE6                     	;# 
  3172  1FE7                     	;# 
  3173  1FE8                     	;# 
  3174  1FE8                     	;# 
  3175  1FE9                     	;# 
  3176  1FEA                     	;# 
  3177  1FEA                     	;# 
  3178  1FEB                     	;# 
  3179  1FED                     	;# 
  3180  1FEE                     	;# 
  3181  1FEF                     	;# 
  3182  0000                     	;# 
  3183  0001                     	;# 
  3184  0002                     	;# 
  3185  0003                     	;# 
  3186  0004                     	;# 
  3187  0005                     	;# 
  3188  0006                     	;# 
  3189  0007                     	;# 
  3190  0008                     	;# 
  3191  0009                     	;# 
  3192  000A                     	;# 
  3193  000B                     	;# 
  3194  000C                     	;# 
  3195  000E                     	;# 
  3196  0012                     	;# 
  3197  0014                     	;# 
  3198  0018                     	;# 
  3199  001A                     	;# 
  3200  009B                     	;# 
  3201  009B                     	;# 
  3202  009C                     	;# 
  3203  009D                     	;# 
  3204  009E                     	;# 
  3205  009F                     	;# 
  3206  0119                     	;# 
  3207  0119                     	;# 
  3208  0119                     	;# 
  3209  011A                     	;# 
  3210  011A                     	;# 
  3211  011A                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011B                     	;# 
  3216  011B                     	;# 
  3217  011C                     	;# 
  3218  011C                     	;# 
  3219  011C                     	;# 
  3220  011D                     	;# 
  3221  011D                     	;# 
  3222  011D                     	;# 
  3223  011E                     	;# 
  3224  011E                     	;# 
  3225  011E                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  011F                     	;# 
  3230  011F                     	;# 
  3231  018C                     	;# 
  3232  018D                     	;# 
  3233  018E                     	;# 
  3234  018F                     	;# 
  3235  0190                     	;# 
  3236  0191                     	;# 
  3237  0192                     	;# 
  3238  020C                     	;# 
  3239  020C                     	;# 
  3240  020D                     	;# 
  3241  020E                     	;# 
  3242  020F                     	;# 
  3243  020F                     	;# 
  3244  0210                     	;# 
  3245  0210                     	;# 
  3246  0211                     	;# 
  3247  0211                     	;# 
  3248  028C                     	;# 
  3249  028C                     	;# 
  3250  028D                     	;# 
  3251  028D                     	;# 
  3252  028E                     	;# 
  3253  028F                     	;# 
  3254  0290                     	;# 
  3255  0291                     	;# 
  3256  030C                     	;# 
  3257  030C                     	;# 
  3258  030D                     	;# 
  3259  030E                     	;# 
  3260  030F                     	;# 
  3261  0310                     	;# 
  3262  0310                     	;# 
  3263  0311                     	;# 
  3264  0312                     	;# 
  3265  0313                     	;# 
  3266  0314                     	;# 
  3267  0314                     	;# 
  3268  0315                     	;# 
  3269  0316                     	;# 
  3270  0318                     	;# 
  3271  0318                     	;# 
  3272  0319                     	;# 
  3273  031A                     	;# 
  3274  031C                     	;# 
  3275  031C                     	;# 
  3276  031D                     	;# 
  3277  031E                     	;# 
  3278  038C                     	;# 
  3279  038C                     	;# 
  3280  038D                     	;# 
  3281  038E                     	;# 
  3282  058C                     	;# 
  3283  058C                     	;# 
  3284  058D                     	;# 
  3285  058E                     	;# 
  3286  058F                     	;# 
  3287  058F                     	;# 
  3288  0590                     	;# 
  3289  0591                     	;# 
  3290  0592                     	;# 
  3291  0593                     	;# 
  3292  059C                     	;# 
  3293  059C                     	;# 
  3294  059D                     	;# 
  3295  059D                     	;# 
  3296  059E                     	;# 
  3297  059F                     	;# 
  3298  060C                     	;# 
  3299  060D                     	;# 
  3300  060E                     	;# 
  3301  060F                     	;# 
  3302  0610                     	;# 
  3303  0611                     	;# 
  3304  0612                     	;# 
  3305  0613                     	;# 
  3306  0614                     	;# 
  3307  070C                     	;# 
  3308  070D                     	;# 
  3309  070E                     	;# 
  3310  070F                     	;# 
  3311  0710                     	;# 
  3312  0711                     	;# 
  3313  0712                     	;# 
  3314  0713                     	;# 
  3315  0716                     	;# 
  3316  0717                     	;# 
  3317  0718                     	;# 
  3318  0719                     	;# 
  3319  071A                     	;# 
  3320  071B                     	;# 
  3321  071C                     	;# 
  3322  071D                     	;# 
  3323  0796                     	;# 
  3324  0797                     	;# 
  3325  0798                     	;# 
  3326  0799                     	;# 
  3327  079A                     	;# 
  3328  079B                     	;# 
  3329  080C                     	;# 
  3330  080D                     	;# 
  3331  080E                     	;# 
  3332  080F                     	;# 
  3333  0810                     	;# 
  3334  0811                     	;# 
  3335  0812                     	;# 
  3336  0813                     	;# 
  3337  0814                     	;# 
  3338  081A                     	;# 
  3339  081A                     	;# 
  3340  081B                     	;# 
  3341  081C                     	;# 
  3342  081C                     	;# 
  3343  081D                     	;# 
  3344  081E                     	;# 
  3345  081F                     	;# 
  3346  088C                     	;# 
  3347  088D                     	;# 
  3348  088E                     	;# 
  3349  088F                     	;# 
  3350  0890                     	;# 
  3351  0891                     	;# 
  3352  0892                     	;# 
  3353  0893                     	;# 
  3354  0895                     	;# 
  3355  0896                     	;# 
  3356  090C                     	;# 
  3357  090E                     	;# 
  3358  090F                     	;# 
  3359  091F                     	;# 
  3360  098F                     	;# 
  3361  098F                     	;# 
  3362  0990                     	;# 
  3363  0991                     	;# 
  3364  0992                     	;# 
  3365  0993                     	;# 
  3366  0994                     	;# 
  3367  0995                     	;# 
  3368  0996                     	;# 
  3369  0997                     	;# 
  3370  0A19                     	;# 
  3371  0A19                     	;# 
  3372  0A1A                     	;# 
  3373  0A1A                     	;# 
  3374  0A1B                     	;# 
  3375  0A1B                     	;# 
  3376  0A1B                     	;# 
  3377  0A1C                     	;# 
  3378  0A1C                     	;# 
  3379  0A1D                     	;# 
  3380  0A1D                     	;# 
  3381  0A1E                     	;# 
  3382  0A1E                     	;# 
  3383  0A1F                     	;# 
  3384  0A1F                     	;# 
  3385  0A1F                     	;# 
  3386  1E0F                     	;# 
  3387  1E10                     	;# 
  3388  1E11                     	;# 
  3389  1E12                     	;# 
  3390  1E13                     	;# 
  3391  1E14                     	;# 
  3392  1E15                     	;# 
  3393  1E16                     	;# 
  3394  1E17                     	;# 
  3395  1E18                     	;# 
  3396  1E19                     	;# 
  3397  1E1A                     	;# 
  3398  1E1B                     	;# 
  3399  1E1C                     	;# 
  3400  1E1D                     	;# 
  3401  1E1E                     	;# 
  3402  1E1F                     	;# 
  3403  1E20                     	;# 
  3404  1E21                     	;# 
  3405  1E22                     	;# 
  3406  1E23                     	;# 
  3407  1E24                     	;# 
  3408  1E25                     	;# 
  3409  1E26                     	;# 
  3410  1E27                     	;# 
  3411  1E28                     	;# 
  3412  1E29                     	;# 
  3413  1E2A                     	;# 
  3414  1E2B                     	;# 
  3415  1E2C                     	;# 
  3416  1E2D                     	;# 
  3417  1E2E                     	;# 
  3418  1E2F                     	;# 
  3419  1E30                     	;# 
  3420  1E31                     	;# 
  3421  1E32                     	;# 
  3422  1E33                     	;# 
  3423  1E34                     	;# 
  3424  1E35                     	;# 
  3425  1E36                     	;# 
  3426  1E37                     	;# 
  3427  1E8F                     	;# 
  3428  1E90                     	;# 
  3429  1E91                     	;# 
  3430  1E92                     	;# 
  3431  1E93                     	;# 
  3432  1E9C                     	;# 
  3433  1EA1                     	;# 
  3434  1EA2                     	;# 
  3435  1EB1                     	;# 
  3436  1EBB                     	;# 
  3437  1EBC                     	;# 
  3438  1EBD                     	;# 
  3439  1EBE                     	;# 
  3440  1EC3                     	;# 
  3441  1EC5                     	;# 
  3442  1EC6                     	;# 
  3443  1EC7                     	;# 
  3444  1ECB                     	;# 
  3445  1ECC                     	;# 
  3446  1ECD                     	;# 
  3447  1ECE                     	;# 
  3448  1F10                     	;# 
  3449  1F11                     	;# 
  3450  1F12                     	;# 
  3451  1F13                     	;# 
  3452  1F14                     	;# 
  3453  1F15                     	;# 
  3454  1F20                     	;# 
  3455  1F21                     	;# 
  3456  1F22                     	;# 
  3457  1F23                     	;# 
  3458  1F24                     	;# 
  3459  1F25                     	;# 
  3460  1F38                     	;# 
  3461  1F39                     	;# 
  3462  1F3A                     	;# 
  3463  1F3B                     	;# 
  3464  1F3C                     	;# 
  3465  1F3D                     	;# 
  3466  1F3E                     	;# 
  3467  1F3F                     	;# 
  3468  1F4E                     	;# 
  3469  1F4F                     	;# 
  3470  1F50                     	;# 
  3471  1F51                     	;# 
  3472  1F52                     	;# 
  3473  1F53                     	;# 
  3474  1F54                     	;# 
  3475  1F55                     	;# 
  3476  1FE4                     	;# 
  3477  1FE5                     	;# 
  3478  1FE6                     	;# 
  3479  1FE7                     	;# 
  3480  1FE8                     	;# 
  3481  1FE8                     	;# 
  3482  1FE9                     	;# 
  3483  1FEA                     	;# 
  3484  1FEA                     	;# 
  3485  1FEB                     	;# 
  3486  1FED                     	;# 
  3487  1FEE                     	;# 
  3488  1FEF                     	;# 
  3489                           
  3490                           	psect	idataBANK0
  3491  0003                     __pidataBANK0:	
  3492                           
  3493                           ;initializer for _mode
  3494  0003  3402               	retlw	2
  3495                           
  3496                           	psect	idataBANK1
  3497  0A96                     __pidataBANK1:	
  3498                           
  3499                           ;initializer for _BOOST_FREQ
  3500  0A96  3401               	retlw	1
  3501                           
  3502                           ;initializer for _VINDPM_OS
  3503  0A97  3406               	retlw	6
  3504                           
  3505                           ;initializer for _INILIM
  3506  0A98  343A               	retlw	58
  3507                           
  3508                           ;initializer for _EN_ILIM
  3509  0A99  3401               	retlw	1
  3510                           
  3511                           	psect	idataBANK2
  3512  0B0B                     __pidataBANK2:	
  3513                           
  3514                           ;initializer for _TREG
  3515  0B0B  3401               	retlw	1
  3516                           
  3517                           ;initializer for _CHG_TIMER
  3518  0B0C  340A               	retlw	10
  3519                           
  3520                           ;initializer for _EN_TIMER
  3521  0B0D  3401               	retlw	1
  3522                           
  3523                           ;initializer for _STAT_DIS
  3524  0B0E  3401               	retlw	1
  3525                           
  3526                           ;initializer for _EN_TERM
  3527  0B0F  3401               	retlw	1
  3528                           
  3529                           ;initializer for _VREG
  3530  0B10  3416               	retlw	22
  3531                           
  3532                           ;initializer for _ITERM
  3533  0B11  3403               	retlw	3
  3534                           
  3535                           ;initializer for _IPRECHG
  3536  0B12  3401               	retlw	1
  3537                           
  3538                           ;initializer for _ICHG
  3539  0B13  3460               	retlw	96
  3540                           
  3541                           ;initializer for _SYS_MIN
  3542  0B14  3405               	retlw	5
  3543                           
  3544                           ;initializer for _CHG_CONFIG
  3545  0B15  3401               	retlw	1
  3546                           
  3547                           ;initializer for _AUTO_DPDM_EN
  3548  0B16  3401               	retlw	1
  3549                           
  3550                           ;initializer for _MAXC_EN
  3551  0B17  3401               	retlw	1
  3552                           
  3553                           ;initializer for _ICO_EN
  3554  0B18  3401               	retlw	1
  3555                           
  3556                           	psect	stringtext1
  3557  07F7                     __pstringtext1:	
  3558  07F7                     _nvm_config:	
  3559  07F7  3400               	retlw	0
  3560  07F8  3400               	retlw	0
  3561  07F9  34B0               	retlw	176
  3562  07FA  34AA               	retlw	170
  3563  07FB  3400               	retlw	0
  3564  07FC  3445               	retlw	69
  3565  07FD  3400               	retlw	0
  3566  07FE  3400               	retlw	0
  3567  07FF  3410               	retlw	16
  3568  0800  3440               	retlw	64
  3569  0801  349C               	retlw	156
  3570  0802  341C               	retlw	28
  3571  0803  34FF               	retlw	255
  3572  0804  3401               	retlw	1
  3573  0805  343C               	retlw	60
  3574  0806  34DF               	retlw	223
  3575  0807  3402               	retlw	2
  3576  0808  3440               	retlw	64
  3577  0809  340F               	retlw	15
  3578  080A  3400               	retlw	0
  3579  080B  3432               	retlw	50
  3580  080C  3400               	retlw	0
  3581  080D  34FC               	retlw	252
  3582  080E  34F1               	retlw	241
  3583  080F  3400               	retlw	0
  3584  0810  3419               	retlw	25
  3585  0811  3456               	retlw	86
  3586  0812  34AF               	retlw	175
  3587  0813  34FB               	retlw	251
  3588  0814  3475               	retlw	117
  3589  0815  345F               	retlw	95
  3590  0816  3400               	retlw	0
  3591  0817  3400               	retlw	0
  3592  0818  342D               	retlw	45
  3593  0819  34F0               	retlw	240
  3594  081A  3420               	retlw	32
  3595  081B  3443               	retlw	67
  3596  081C  3400               	retlw	0
  3597  081D  3450               	retlw	80
  3598  081E  34FB               	retlw	251
  3599  081F                     __end_of_nvm_config:	
  3600  0012                     _TRISAbits	set	18
  3601  0014                     _TRISCbits	set	20
  3602  000B                     _INTCONbits	set	11
  3603  0014                     _TRISC	set	20
  3604  0012                     _TRISA	set	18
  3605  0070                     _RC0	set	112
  3606  0071                     _RC1	set	113
  3607  0074                     _RC4	set	116
  3608  0073                     _RC3	set	115
  3609  0072                     _RC2	set	114
  3610  0075                     _RC5	set	117
  3611  0062                     _RA2	set	98
  3612  0065                     _RA5	set	101
  3613  009C                     _ADRESH	set	156
  3614  009D                     _ADCON0bits	set	157
  3615  009D                     _ADCON0	set	157
  3616  009E                     _ADCON1	set	158
  3617  0192                     _SSP1CON3	set	402
  3618  018C                     _SSP1BUF	set	396
  3619  0191                     _SSP1CON2bits	set	401
  3620  018F                     _SSP1STAT	set	399
  3621  018D                     _SSP1ADD	set	397
  3622  0191                     _SSP1CON2	set	401
  3623  0190                     _SSP1CON1	set	400
  3624  020C                     _TMR1	set	524
  3625  0211                     _T1CLK	set	529
  3626  020F                     _T1GCONbits	set	527
  3627  020E                     _T1CONbits	set	526
  3628  028C                     _TMR2	set	652
  3629  0290                     _T2CLKCON	set	656
  3630  028D                     _PR2	set	653
  3631  1473                     _T2OUTPS3	set	5235
  3632  1472                     _T2OUTPS2	set	5234
  3633  1471                     _T2OUTPS1	set	5233
  3634  1470                     _T2OUTPS0	set	5232
  3635  1476                     _T2CKPS2	set	5238
  3636  1475                     _T2CKPS1	set	5237
  3637  1474                     _T2CKPS0	set	5236
  3638  1477                     _TMR2ON	set	5239
  3639  031E                     _PWM5CONbits	set	798
  3640  031A                     _PWM4CONbits	set	794
  3641  0316                     _PWM3CONbits	set	790
  3642  031C                     _PWM5DCL	set	796
  3643  031D                     _PWM5DCH	set	797
  3644  031E                     _PWM5CON	set	798
  3645  0318                     _PWM4DCL	set	792
  3646  0319                     _PWM4DCH	set	793
  3647  031A                     _PWM4CON	set	794
  3648  0314                     _PWM3DCL	set	788
  3649  0315                     _PWM3DCH	set	789
  3650  0316                     _PWM3CON	set	790
  3651  0716                     _PIE0bits	set	1814
  3652  071A                     _PIE4bits	set	1818
  3653  3881                     _TMR2IF	set	14465
  3654  3880                     _TMR1IF	set	14464
  3655  081F                     _NVMCON2	set	2079
  3656  081C                     _NVMDATL	set	2076
  3657  081A                     _NVMADRL	set	2074
  3658  081B                     _NVMADRH	set	2075
  3659  081E                     _NVMCON1bits	set	2078
  3660  0812                     _VREGCON	set	2066
  3661  088C                     _CPUDOZEbits	set	2188
  3662  1E8F                     _PPSLOCK	set	7823
  3663  1EC5                     _SSP1CLKPPS	set	7877
  3664  1EC6                     _SSP1DATPPS	set	7878
  3665  1F24                     _RC4PPS	set	7972
  3666  1F23                     _RC3PPS	set	7971
  3667  1F22                     _RC2PPS	set	7970
  3668  1F20                     _RC0PPS	set	7968
  3669  1F21                     _RC1PPS	set	7969
  3670  1F3F                     _IOCAF	set	7999
  3671  1F3E                     _IOCAN	set	7998
  3672  1F3D                     _IOCAP	set	7997
  3673  1F39                     _WPUA	set	7993
  3674  1F38                     _ANSELAbits	set	7992
  3675  1F4E                     _ANSELC	set	8014
  3676  1F38                     _ANSELA	set	7992
  3677  F9FD                     _IOCAF5	set	63997
  3678                           
  3679                           ; #config settings
  3680  0000                     
  3681                           	psect	cinit
  3682  006D                     start_initialization:	
  3683  006D                     __initialization:	
  3684                           
  3685                           ; Initialize objects allocated to BANK0
  3686  006D  3180  2003  3180   	fcall	__pidataBANK0	;fetch initializer
  3687  0070  00EF               	movwf	__pdataBANK0& (0+127)
  3688                           
  3689                           ; Initialize objects allocated to BANK1
  3690  0071  3096               	movlw	low __pidataBANK1
  3691  0072  0084               	movwf	4
  3692  0073  308A               	movlw	(high __pidataBANK1)| (0+128)
  3693  0074  0085               	movwf	5
  3694  0075  30EC               	movlw	low __pdataBANK1
  3695  0076  0086               	movwf	6
  3696  0077  3000               	movlw	high __pdataBANK1
  3697  0078  0087               	movwf	7
  3698  0079  3004               	movlw	4
  3699  007A  318A  22BE  3180   	fcall	init_ram
  3700                           
  3701                           ; Initialize objects allocated to BANK2
  3702  007D  300B               	movlw	low __pidataBANK2
  3703  007E  0084               	movwf	4
  3704  007F  308B               	movlw	(high __pidataBANK2)| (0+128)
  3705  0080  0085               	movwf	5
  3706  0081  3045               	movlw	low __pdataBANK2
  3707  0082  0086               	movwf	6
  3708  0083  3001               	movlw	high __pdataBANK2
  3709  0084  0087               	movwf	7
  3710  0085  300E               	movlw	14
  3711  0086  318A  22BE  3180   	fcall	init_ram
  3712                           
  3713                           ; Clear objects allocated to COMMON
  3714  0089  01F8               	clrf	__pbssCOMMON& (0+127)
  3715  008A  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  3716  008B  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  3717  008C  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  3718  008D  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  3719  008E  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  3720                           
  3721                           ; Clear objects allocated to BANK0
  3722  008F  3060               	movlw	low __pbssBANK0
  3723  0090  0084               	movwf	4
  3724  0091  3000               	movlw	high __pbssBANK0
  3725  0092  0085               	movwf	5
  3726  0093  300F               	movlw	15
  3727  0094  318A  22B8  3180   	fcall	clear_ram0
  3728                           
  3729                           ; Clear objects allocated to BANK1
  3730  0097  30E3               	movlw	low __pbssBANK1
  3731  0098  0084               	movwf	4
  3732  0099  3000               	movlw	high __pbssBANK1
  3733  009A  0085               	movwf	5
  3734  009B  3009               	movlw	9
  3735  009C  318A  22B8  3180   	fcall	clear_ram0
  3736                           
  3737                           ; Clear objects allocated to BANK2
  3738  009F  3020               	movlw	low __pbssBANK2
  3739  00A0  0084               	movwf	4
  3740  00A1  3001               	movlw	high __pbssBANK2
  3741  00A2  0085               	movwf	5
  3742  00A3  3025               	movlw	37
  3743  00A4  318A  22B8  3180   	fcall	clear_ram0
  3744  00A7                     end_of_initialization:	
  3745                           ;End of C runtime variable initialization code
  3746                           
  3747  00A7                     __end_of__initialization:	
  3748  00A7  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3749  00A8  0140               	movlb	0
  3750  00A9  3182  2A02         	ljmp	_main	;jump to C main() function
  3751                           
  3752                           	psect	bssCOMMON
  3753  0078                     __pbssCOMMON:	
  3754  0078                     _REG08_config:	
  3755  0078                     	ds	1
  3756  0079                     _REG07_config:	
  3757  0079                     	ds	1
  3758  007A                     _REG06_config:	
  3759  007A                     	ds	1
  3760  007B                     _REG05_config:	
  3761  007B                     	ds	1
  3762  007C                     _REG04_config:	
  3763  007C                     	ds	1
  3764  007D                     _btn_is_pressed:	
  3765  007D                     	ds	1
  3766                           
  3767                           	psect	bssBANK0
  3768  0060                     __pbssBANK0:	
  3769  0060                     _flash_state:	
  3770  0060                     	ds	1
  3771  0061                     _dir:	
  3772  0061                     	ds	1
  3773  0062                     _color:	
  3774  0062                     	ds	1
  3775  0063                     _c:	
  3776  0063                     	ds	1
  3777  0064                     _i:	
  3778  0064                     	ds	1
  3779  0065                     _REG03_config:	
  3780  0065                     	ds	1
  3781  0066                     _REG02_config:	
  3782  0066                     	ds	1
  3783  0067                     _REG01_config:	
  3784  0067                     	ds	1
  3785  0068                     _REG00_config:	
  3786  0068                     	ds	1
  3787  0069                     _set_stusb4500:	
  3788  0069                     	ds	1
  3789  006A                     _btn_is_debounced:	
  3790  006A                     	ds	1
  3791  006B                     _SYS_ENABLE:	
  3792  006B                     	ds	1
  3793  006C                     _BQ_adc_state:	
  3794  006C                     	ds	1
  3795  006D                     _BATTERY_VOLTAGE:	
  3796  006D                     	ds	1
  3797  006E                     _VBUS_CHRG_STATE:	
  3798  006E                     	ds	1
  3799                           
  3800                           	psect	dataBANK0
  3801  006F                     __pdataBANK0:	
  3802  006F                     _mode:	
  3803  006F                     	ds	1
  3804                           
  3805                           	psect	bssBANK1
  3806  00E3                     __pbssBANK1:	
  3807  00E3                     _timer_counter:	
  3808  00E3                     	ds	4
  3809  00E7                     _CONV_RATE:	
  3810  00E7                     	ds	1
  3811  00E8                     _CONV_START:	
  3812  00E8                     	ds	1
  3813  00E9                     _BCOLD:	
  3814  00E9                     	ds	1
  3815  00EA                     _BHOT:	
  3816  00EA                     	ds	1
  3817  00EB                     _EN_HIZ:	
  3818  00EB                     	ds	1
  3819                           
  3820                           	psect	dataBANK1
  3821  00EC                     __pdataBANK1:	
  3822  00EC                     _BOOST_FREQ:	
  3823  00EC                     	ds	1
  3824  00ED                     _VINDPM_OS:	
  3825  00ED                     	ds	1
  3826  00EE                     _INILIM:	
  3827  00EE                     	ds	1
  3828  00EF                     _EN_ILIM:	
  3829  00EF                     	ds	1
  3830                           
  3831                           	psect	bssBANK2
  3832  0120                     __pbssBANK2:	
  3833  0120                     _flash_time:	
  3834  0120                     	ds	4
  3835  0124                     _chrg_delay:	
  3836  0124                     	ds	4
  3837  0128                     _rgb_delay:	
  3838  0128                     	ds	4
  3839  012C                     _BQ_adc_time:	
  3840  012C                     	ds	4
  3841  0130                     _stusb4500_timeout:	
  3842  0130                     	ds	4
  3843  0134                     _btn_time:	
  3844  0134                     	ds	4
  3845  0138                     _btn_time_start:	
  3846  0138                     	ds	4
  3847  013C                     _VCLAMP:	
  3848  013C                     	ds	1
  3849  013D                     _BAT_COMP:	
  3850  013D                     	ds	1
  3851  013E                     _WATCHDOG:	
  3852  013E                     	ds	1
  3853  013F                     _VRECHG:	
  3854  013F                     	ds	1
  3855  0140                     _BATLOWV:	
  3856  0140                     	ds	1
  3857  0141                     _OTG_CONFIG:	
  3858  0141                     	ds	1
  3859  0142                     _WD_RST:	
  3860  0142                     	ds	1
  3861  0143                     _FORCE_DPDM:	
  3862  0143                     	ds	1
  3863  0144                     _HVDCP_EN:	
  3864  0144                     	ds	1
  3865                           
  3866                           	psect	dataBANK2
  3867  0145                     __pdataBANK2:	
  3868  0145                     _TREG:	
  3869  0145                     	ds	1
  3870  0146                     _CHG_TIMER:	
  3871  0146                     	ds	1
  3872  0147                     _EN_TIMER:	
  3873  0147                     	ds	1
  3874  0148                     _STAT_DIS:	
  3875  0148                     	ds	1
  3876  0149                     _EN_TERM:	
  3877  0149                     	ds	1
  3878  014A                     _VREG:	
  3879  014A                     	ds	1
  3880  014B                     _ITERM:	
  3881  014B                     	ds	1
  3882  014C                     _IPRECHG:	
  3883  014C                     	ds	1
  3884  014D                     _ICHG:	
  3885  014D                     	ds	1
  3886  014E                     _SYS_MIN:	
  3887  014E                     	ds	1
  3888  014F                     _CHG_CONFIG:	
  3889  014F                     	ds	1
  3890  0150                     _AUTO_DPDM_EN:	
  3891  0150                     	ds	1
  3892  0151                     _MAXC_EN:	
  3893  0151                     	ds	1
  3894  0152                     _ICO_EN:	
  3895  0152                     	ds	1
  3896                           
  3897                           	psect	inittext
  3898  0ABE                     init_ram:	
  3899  0ABE  00FE               	movwf	btemp
  3900  0ABF                     initloop:	
  3901  0ABF  0012               	moviw fsr0++
  3902  0AC0  001E               	movwi fsr1++
  3903  0AC1  0BFE               	decfsz	btemp,f
  3904  0AC2  2ABF               	goto	initloop
  3905  0AC3  3400               	retlw	0
  3906                           
  3907                           	psect	clrtext
  3908  0AB8                     clear_ram0:	
  3909                           ;	Called with FSR0 containing the base address, and
  3910                           ;	WREG with the size to clear
  3911                           
  3912  0AB8  0064               	clrwdt	;clear the watchdog before getting into this loop
  3913  0AB9                     clrloop0:	
  3914  0AB9  0180               	clrf	0	;clear RAM location pointed to by FSR
  3915  0ABA  3101               	addfsr 0,1
  3916  0ABB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3917  0ABC  2AB9               	goto	clrloop0	;have we reached the end yet?
  3918  0ABD  3400               	retlw	0	;all done for this memory range, return
  3919                           
  3920                           	psect	cstackBANK1
  3921  00A0                     __pcstackBANK1:	
  3922  00A0                     negotiate_optimal_pdo@opt_pdo_power:	
  3923                           
  3924                           ; 4 bytes @ 0x0
  3925  00A0                     	ds	4
  3926  00A4                     negotiate_optimal_pdo@opt_pdo_current:	
  3927                           
  3928                           ; 2 bytes @ 0x4
  3929  00A4                     	ds	2
  3930  00A6                     negotiate_optimal_pdo@opt_pdo_voltage:	
  3931                           
  3932                           ; 2 bytes @ 0x6
  3933  00A6                     	ds	2
  3934  00A8                     negotiate_optimal_pdo@src_pdos:	
  3935                           
  3936                           ; 1 bytes @ 0x8
  3937  00A8                     	ds	1
  3938  00A9                     negotiate_optimal_pdo@pdo_power:	
  3939                           
  3940                           ; 4 bytes @ 0x9
  3941  00A9                     	ds	4
  3942  00AD                     negotiate_optimal_pdo@pdo_current:	
  3943                           
  3944                           ; 2 bytes @ 0xD
  3945  00AD                     	ds	2
  3946  00AF                     negotiate_optimal_pdo@i:	
  3947                           
  3948                           ; 2 bytes @ 0xF
  3949  00AF                     	ds	2
  3950  00B1                     negotiate_optimal_pdo@ok:	
  3951                           
  3952                           ; 2 bytes @ 0x11
  3953  00B1                     	ds	2
  3954  00B3                     negotiate_optimal_pdo@pdo:	
  3955                           
  3956                           ; 4 bytes @ 0x13
  3957  00B3                     	ds	4
  3958  00B7                     negotiate_optimal_pdo@pdo_voltage:	
  3959                           
  3960                           ; 2 bytes @ 0x17
  3961  00B7                     	ds	2
  3962  00B9                     stusb_negotiate@buffer:	
  3963                           
  3964                           ; 40 bytes @ 0x19
  3965  00B9                     	ds	40
  3966  00E1                     stusb_negotiate@header:	
  3967                           
  3968                           ; 2 bytes @ 0x41
  3969  00E1                     	ds	2
  3970                           
  3971                           	psect	cstackCOMMON
  3972  0070                     __pcstackCOMMON:	
  3973  0070                     ?_I2C_bus_reset:	
  3974  0070                     ?_PPS_unlock:	
  3975                           ; 1 bytes @ 0x0
  3976                           
  3977  0070                     ?_PPS_lock:	
  3978                           ; 1 bytes @ 0x0
  3979                           
  3980  0070                     ?_BQ_CONFIG_INIT:	
  3981                           ; 1 bytes @ 0x0
  3982                           
  3983  0070                     ?_BQ_INIT:	
  3984                           ; 1 bytes @ 0x0
  3985                           
  3986  0070                     ?_PWM_INIT:	
  3987                           ; 1 bytes @ 0x0
  3988                           
  3989  0070                     ?_BQ_UPDATE:	
  3990                           ; 1 bytes @ 0x0
  3991                           
  3992  0070                     ?_led_modes:	
  3993                           ; 1 bytes @ 0x0
  3994                           
  3995  0070                     ?_chrg_led:	
  3996                           ; 1 bytes @ 0x0
  3997                           
  3998  0070                     ?_PWM_power_down:	
  3999                           ; 1 bytes @ 0x0
  4000                           
  4001  0070                     ?_BQ_get_chrg_state:	
  4002                           ; 1 bytes @ 0x0
  4003                           
  4004  0070                     ?_PIC_SETUP:	
  4005                           ; 1 bytes @ 0x0
  4006                           
  4007  0070                     ?_ISR:	
  4008                           ; 1 bytes @ 0x0
  4009                           
  4010  0070                     ?_thermal_protection:	
  4011                           ; 1 bytes @ 0x0
  4012                           
  4013  0070                     ?_main:	
  4014                           ; 1 bytes @ 0x0
  4015                           
  4016  0070                     ?_I2C_Master_Wait:	
  4017                           ; 1 bytes @ 0x0
  4018                           
  4019  0070                     ?_I2C_Master_Start:	
  4020                           ; 1 bytes @ 0x0
  4021                           
  4022  0070                     ?_I2C_Master_Stop:	
  4023                           ; 1 bytes @ 0x0
  4024                           
  4025  0070                     ?_I2C_Master_Write:	
  4026                           ; 1 bytes @ 0x0
  4027                           
  4028  0070                     ?_I2C_Master_Ack:	
  4029                           ; 1 bytes @ 0x0
  4030                           
  4031  0070                     ?_I2C_Master_nAck:	
  4032                           ; 1 bytes @ 0x0
  4033                           
  4034  0070                     ?_I2C_Master_Read:	
  4035                           ; 1 bytes @ 0x0
  4036                           
  4037  0070                     ?_RGB_fade:	
  4038                           ; 1 bytes @ 0x0
  4039                           
  4040  0070                     ?_battery_fade:	
  4041                           ; 1 bytes @ 0x0
  4042                           
  4043  0070                     ?_flash_led:	
  4044                           ; 1 bytes @ 0x0
  4045                           
  4046  0070                     ?_i2c_master_wait:	
  4047                           ; 1 bytes @ 0x0
  4048                           
  4049  0070                     ?_i2c_master_start:	
  4050                           ; 1 bytes @ 0x0
  4051                           
  4052  0070                     ?_i2c_master_repeat_start:	
  4053                           ; 1 bytes @ 0x0
  4054                           
  4055  0070                     ?_i2c_master_stop:	
  4056                           ; 1 bytes @ 0x0
  4057                           
  4058  0070                     ?_i2c_master_receive_byte:	
  4059                           ; 1 bytes @ 0x0
  4060                           
  4061  0070                     ?_stusb_negotiate:	
  4062                           ; 1 bytes @ 0x0
  4063                           
  4064  0070                     ?i1_get_time:	
  4065                           ; 2 bytes @ 0x0
  4066                           
  4067  0070                     ?i1_timer_diff:	
  4068                           ; 4 bytes @ 0x0
  4069                           
  4070  0070                     i1timer_diff@t:	
  4071                           ; 4 bytes @ 0x0
  4072                           
  4073                           
  4074                           ; 4 bytes @ 0x0
  4075  0070                     	ds	4
  4076  0074                     ??i1_get_time:	
  4077  0074                     ??i1_timer_diff:	
  4078                           ; 1 bytes @ 0x4
  4079                           
  4080                           
  4081                           ; 1 bytes @ 0x4
  4082  0074                     	ds	4
  4083  0078                     ??_ISR:	
  4084                           
  4085                           	psect	cstackBANK0
  4086  0021                     __pcstackBANK0:	
  4087                           ; 1 bytes @ 0x8
  4088                           
  4089  0021                     ??_I2C_bus_reset:	
  4090  0021                     ??_PPS_unlock:	
  4091                           ; 1 bytes @ 0x0
  4092                           
  4093  0021                     ??_PPS_lock:	
  4094                           ; 1 bytes @ 0x0
  4095                           
  4096  0021                     ??_BQ_CONFIG_INIT:	
  4097                           ; 1 bytes @ 0x0
  4098                           
  4099  0021                     ??_PWM_INIT:	
  4100                           ; 1 bytes @ 0x0
  4101                           
  4102  0021                     ??_PWM_power_down:	
  4103                           ; 1 bytes @ 0x0
  4104                           
  4105  0021                     ??_PIC_SETUP:	
  4106                           ; 1 bytes @ 0x0
  4107                           
  4108  0021                     ??_I2C_Master_Wait:	
  4109                           ; 1 bytes @ 0x0
  4110                           
  4111  0021                     ??_I2C_Master_Start:	
  4112                           ; 1 bytes @ 0x0
  4113                           
  4114  0021                     ??_I2C_Master_Stop:	
  4115                           ; 1 bytes @ 0x0
  4116                           
  4117  0021                     ??_I2C_Master_Write:	
  4118                           ; 1 bytes @ 0x0
  4119                           
  4120  0021                     ??_I2C_Master_Ack:	
  4121                           ; 1 bytes @ 0x0
  4122                           
  4123  0021                     ??_I2C_Master_nAck:	
  4124                           ; 1 bytes @ 0x0
  4125                           
  4126  0021                     ??_I2C_Master_Read:	
  4127                           ; 1 bytes @ 0x0
  4128                           
  4129  0021                     ??_i2c_master_wait:	
  4130                           ; 1 bytes @ 0x0
  4131                           
  4132  0021                     ??_i2c_master_start:	
  4133                           ; 1 bytes @ 0x0
  4134                           
  4135  0021                     ??_i2c_master_repeat_start:	
  4136                           ; 1 bytes @ 0x0
  4137                           
  4138  0021                     ??_i2c_master_stop:	
  4139                           ; 1 bytes @ 0x0
  4140                           
  4141  0021                     ??_i2c_master_receive_byte:	
  4142                           ; 1 bytes @ 0x0
  4143                           
  4144  0021                     ?_readADC:	
  4145                           ; 1 bytes @ 0x0
  4146                           
  4147  0021                     ?_i2c_master_send_byte:	
  4148                           ; 2 bytes @ 0x0
  4149                           
  4150  0021                     ?___wmul:	
  4151                           ; 2 bytes @ 0x0
  4152                           
  4153  0021                     ?___lwdiv:	
  4154                           ; 2 bytes @ 0x0
  4155                           
  4156  0021                     ?_get_time:	
  4157                           ; 2 bytes @ 0x0
  4158                           
  4159  0021                     ?_timer_diff:	
  4160                           ; 4 bytes @ 0x0
  4161                           
  4162  0021                     ?___lmul:	
  4163                           ; 4 bytes @ 0x0
  4164                           
  4165  0021                     I2C_Master_Write@data:	
  4166                           ; 4 bytes @ 0x0
  4167                           
  4168  0021                     ___wmul@multiplier:	
  4169                           ; 1 bytes @ 0x0
  4170                           
  4171  0021                     ___lwdiv@divisor:	
  4172                           ; 2 bytes @ 0x0
  4173                           
  4174  0021                     timer_diff@t:	
  4175                           ; 2 bytes @ 0x0
  4176                           
  4177  0021                     ___lmul@multiplier:	
  4178                           ; 4 bytes @ 0x0
  4179                           
  4180                           
  4181                           ; 4 bytes @ 0x0
  4182  0021                     	ds	1
  4183  0022                     ?_BQ_Write:	
  4184  0022                     I2C_bus_reset@i:	
  4185                           ; 1 bytes @ 0x1
  4186                           
  4187  0022                     I2C_Master_Read@ack:	
  4188                           ; 1 bytes @ 0x1
  4189                           
  4190  0022                     BQ_Write@data:	
  4191                           ; 1 bytes @ 0x1
  4192                           
  4193  0022                     i2c_master_receive_byte@ack:	
  4194                           ; 1 bytes @ 0x1
  4195                           
  4196                           
  4197                           ; 1 bytes @ 0x1
  4198  0022                     	ds	1
  4199  0023                     ??_readADC:	
  4200  0023                     ??_BQ_Write:	
  4201                           ; 1 bytes @ 0x2
  4202                           
  4203  0023                     I2C_Master_Read@data:	
  4204                           ; 1 bytes @ 0x2
  4205                           
  4206  0023                     BQ_Write@reg:	
  4207                           ; 1 bytes @ 0x2
  4208                           
  4209  0023                     i2c_master_receive_byte@data:	
  4210                           ; 1 bytes @ 0x2
  4211                           
  4212  0023                     ___wmul@multiplicand:	
  4213                           ; 1 bytes @ 0x2
  4214                           
  4215  0023                     ___lwdiv@dividend:	
  4216                           ; 2 bytes @ 0x2
  4217                           
  4218                           
  4219                           ; 2 bytes @ 0x2
  4220  0023                     	ds	1
  4221  0024                     ??_BQ_INIT:	
  4222  0024                     ??_i2c_master_send_byte:	
  4223                           ; 1 bytes @ 0x3
  4224                           
  4225  0024                     ?_BQ_Read:	
  4226                           ; 1 bytes @ 0x3
  4227                           
  4228  0024                     i2c_master_send_byte@data:	
  4229                           ; 2 bytes @ 0x3
  4230                           
  4231                           
  4232                           ; 1 bytes @ 0x3
  4233  0024                     	ds	1
  4234  0025                     ??_get_time:	
  4235  0025                     ??_timer_diff:	
  4236                           ; 1 bytes @ 0x4
  4237                           
  4238  0025                     ??___wmul:	
  4239                           ; 1 bytes @ 0x4
  4240                           
  4241  0025                     ??___lwdiv:	
  4242                           ; 1 bytes @ 0x4
  4243                           
  4244  0025                     ?_i2c_master_read:	
  4245                           ; 1 bytes @ 0x4
  4246                           
  4247  0025                     ?_i2c_master_write:	
  4248                           ; 2 bytes @ 0x4
  4249                           
  4250  0025                     readADC@channel:	
  4251                           ; 2 bytes @ 0x4
  4252                           
  4253  0025                     i2c_master_write@reg:	
  4254                           ; 1 bytes @ 0x4
  4255                           
  4256  0025                     i2c_master_read@reg:	
  4257                           ; 1 bytes @ 0x4
  4258                           
  4259  0025                     ___wmul@product:	
  4260                           ; 1 bytes @ 0x4
  4261                           
  4262  0025                     ___lmul@multiplicand:	
  4263                           ; 2 bytes @ 0x4
  4264                           
  4265                           
  4266                           ; 4 bytes @ 0x4
  4267  0025                     	ds	1
  4268  0026                     ??_thermal_protection:	
  4269  0026                     ??_BQ_Read:	
  4270                           ; 1 bytes @ 0x5
  4271                           
  4272  0026                     i2c_master_read@buf:	
  4273                           ; 1 bytes @ 0x5
  4274                           
  4275  0026                     i2c_master_write@buf:	
  4276                           ; 1 bytes @ 0x5
  4277                           
  4278  0026                     ___lwdiv@quotient:	
  4279                           ; 2 bytes @ 0x5
  4280                           
  4281                           
  4282                           ; 2 bytes @ 0x5
  4283  0026                     	ds	1
  4284  0027                     ?___awdiv:	
  4285  0027                     i2c_master_read@len:	
  4286                           ; 2 bytes @ 0x6
  4287                           
  4288  0027                     ___awdiv@divisor:	
  4289                           ; 2 bytes @ 0x6
  4290                           
  4291                           
  4292                           ; 2 bytes @ 0x6
  4293  0027                     	ds	1
  4294  0028                     BQ_Read@reg:	
  4295  0028                     ___lwdiv@counter:	
  4296                           ; 1 bytes @ 0x7
  4297                           
  4298  0028                     i2c_master_write@len:	
  4299                           ; 1 bytes @ 0x7
  4300                           
  4301                           
  4302                           ; 2 bytes @ 0x7
  4303  0028                     	ds	1
  4304  0029                     ??_chrg_led:	
  4305  0029                     ??_i2c_master_read:	
  4306                           ; 1 bytes @ 0x8
  4307                           
  4308  0029                     ??_RGB_fade:	
  4309                           ; 1 bytes @ 0x8
  4310                           
  4311  0029                     ??_flash_led:	
  4312                           ; 1 bytes @ 0x8
  4313                           
  4314  0029                     ??___lmul:	
  4315                           ; 1 bytes @ 0x8
  4316                           
  4317  0029                     BQ_Read@data:	
  4318                           ; 1 bytes @ 0x8
  4319                           
  4320  0029                     ___awdiv@dividend:	
  4321                           ; 1 bytes @ 0x8
  4322                           
  4323  0029                     ___lmul@product:	
  4324                           ; 2 bytes @ 0x8
  4325                           
  4326                           
  4327                           ; 4 bytes @ 0x8
  4328  0029                     	ds	1
  4329  002A                     ??_BQ_get_chrg_state:	
  4330  002A                     ??_i2c_master_write:	
  4331                           ; 1 bytes @ 0x9
  4332                           
  4333  002A                     i2c_master_write@device:	
  4334                           ; 1 bytes @ 0x9
  4335                           
  4336  002A                     i2c_master_read@device:	
  4337                           ; 1 bytes @ 0x9
  4338                           
  4339                           
  4340                           ; 1 bytes @ 0x9
  4341  002A                     	ds	1
  4342  002B                     ??___awdiv:	
  4343  002B                     i2c_master_read@data:	
  4344                           ; 1 bytes @ 0xA
  4345                           
  4346  002B                     i2c_master_write@data:	
  4347                           ; 1 bytes @ 0xA
  4348                           
  4349                           
  4350                           ; 2 bytes @ 0xA
  4351  002B                     	ds	1
  4352  002C                     ___awdiv@counter:	
  4353  002C                     BQ_get_chrg_state@data:	
  4354                           ; 1 bytes @ 0xB
  4355                           
  4356  002C                     i2c_master_read@ok:	
  4357                           ; 2 bytes @ 0xB
  4358                           
  4359                           
  4360                           ; 2 bytes @ 0xB
  4361  002C                     	ds	1
  4362  002D                     ?___lldiv:	
  4363  002D                     ___awdiv@sign:	
  4364                           ; 4 bytes @ 0xC
  4365                           
  4366  002D                     i2c_master_write@ok:	
  4367                           ; 1 bytes @ 0xC
  4368                           
  4369  002D                     ___lldiv@divisor:	
  4370                           ; 2 bytes @ 0xC
  4371                           
  4372                           
  4373                           ; 4 bytes @ 0xC
  4374  002D                     	ds	1
  4375  002E                     ?_i2c_master_read_u8:	
  4376  002E                     ?_i2c_master_read_u16:	
  4377                           ; 2 bytes @ 0xD
  4378                           
  4379  002E                     BQ_get_chrg_state@temp:	
  4380                           ; 2 bytes @ 0xD
  4381                           
  4382  002E                     i2c_master_read_u8@reg:	
  4383                           ; 1 bytes @ 0xD
  4384                           
  4385  002E                     i2c_master_read_u16@reg:	
  4386                           ; 1 bytes @ 0xD
  4387                           
  4388  002E                     ___awdiv@quotient:	
  4389                           ; 1 bytes @ 0xD
  4390                           
  4391                           
  4392                           ; 2 bytes @ 0xD
  4393  002E                     	ds	1
  4394  002F                     ??_BQ_UPDATE:	
  4395  002F                     ?_i2c_master_write_u8:	
  4396                           ; 1 bytes @ 0xE
  4397                           
  4398  002F                     ?_i2c_master_write_u32:	
  4399                           ; 2 bytes @ 0xE
  4400                           
  4401  002F                     i2c_master_write_u8@reg:	
  4402                           ; 2 bytes @ 0xE
  4403                           
  4404  002F                     i2c_master_write_u32@reg:	
  4405                           ; 1 bytes @ 0xE
  4406                           
  4407  002F                     i2c_master_read_u8@data:	
  4408                           ; 1 bytes @ 0xE
  4409                           
  4410  002F                     i2c_master_read_u16@data:	
  4411                           ; 1 bytes @ 0xE
  4412                           
  4413                           
  4414                           ; 1 bytes @ 0xE
  4415  002F                     	ds	1
  4416  0030                     ??_i2c_master_read_u8:	
  4417  0030                     ??_i2c_master_read_u16:	
  4418                           ; 1 bytes @ 0xF
  4419                           
  4420  0030                     ?_Map:	
  4421                           ; 1 bytes @ 0xF
  4422                           
  4423  0030                     i2c_master_write_u8@data:	
  4424                           ; 1 bytes @ 0xF
  4425                           
  4426  0030                     Map@x:	
  4427                           ; 1 bytes @ 0xF
  4428                           
  4429  0030                     i2c_master_write_u32@data:	
  4430                           ; 2 bytes @ 0xF
  4431                           
  4432                           
  4433                           ; 4 bytes @ 0xF
  4434  0030                     	ds	1
  4435  0031                     ??_i2c_master_write_u8:	
  4436  0031                     ___lldiv@dividend:	
  4437                           ; 1 bytes @ 0x10
  4438                           
  4439                           
  4440                           ; 4 bytes @ 0x10
  4441  0031                     	ds	1
  4442  0032                     Map@inMin:	
  4443  0032                     i2c_master_write_u8@device:	
  4444                           ; 1 bytes @ 0x11
  4445                           
  4446  0032                     i2c_master_read_u8@device:	
  4447                           ; 1 bytes @ 0x11
  4448                           
  4449  0032                     i2c_master_read_u16@device:	
  4450                           ; 1 bytes @ 0x11
  4451                           
  4452                           
  4453                           ; 1 bytes @ 0x11
  4454  0032                     	ds	1
  4455  0033                     ?_reset:	
  4456  0033                     Map@inMax:	
  4457                           ; 2 bytes @ 0x12
  4458                           
  4459                           
  4460                           ; 1 bytes @ 0x12
  4461  0033                     	ds	1
  4462  0034                     ??_i2c_master_write_u32:	
  4463  0034                     Map@outMin:	
  4464                           ; 1 bytes @ 0x13
  4465                           
  4466                           
  4467                           ; 1 bytes @ 0x13
  4468  0034                     	ds	1
  4469  0035                     ??_reset:	
  4470  0035                     ??___lldiv:	
  4471                           ; 1 bytes @ 0x14
  4472                           
  4473  0035                     Map@outMax:	
  4474                           ; 1 bytes @ 0x14
  4475                           
  4476  0035                     i2c_master_write_u32@device:	
  4477                           ; 1 bytes @ 0x14
  4478                           
  4479                           
  4480                           ; 1 bytes @ 0x14
  4481  0035                     	ds	1
  4482  0036                     ??_Map:	
  4483  0036                     ___lldiv@quotient:	
  4484                           ; 1 bytes @ 0x15
  4485                           
  4486                           
  4487                           ; 4 bytes @ 0x15
  4488  0036                     	ds	1
  4489  0037                     reset@res:	
  4490                           
  4491                           ; 1 bytes @ 0x16
  4492  0037                     	ds	1
  4493  0038                     ??_battery_fade:	
  4494  0038                     reset@ok:	
  4495                           ; 1 bytes @ 0x17
  4496                           
  4497                           
  4498                           ; 2 bytes @ 0x17
  4499  0038                     	ds	2
  4500  003A                     ?_write_pdo:	
  4501  003A                     ___lldiv@counter:	
  4502                           ; 2 bytes @ 0x19
  4503                           
  4504  003A                     write_pdo@current_mA:	
  4505                           ; 1 bytes @ 0x19
  4506                           
  4507                           
  4508                           ; 2 bytes @ 0x19
  4509  003A                     	ds	1
  4510  003B                     ?_I2C_Master_Init:	
  4511  003B                     I2C_Master_Init@clk:	
  4512                           ; 1 bytes @ 0x1A
  4513                           
  4514                           
  4515                           ; 4 bytes @ 0x1A
  4516  003B                     	ds	1
  4517  003C                     write_pdo@voltage_mV:	
  4518                           
  4519                           ; 2 bytes @ 0x1B
  4520  003C                     	ds	2
  4521  003E                     write_pdo@pdo_num:	
  4522                           
  4523                           ; 1 bytes @ 0x1D
  4524  003E                     	ds	1
  4525  003F                     ??_I2C_Master_Init:	
  4526  003F                     ??_write_pdo:	
  4527                           ; 1 bytes @ 0x1E
  4528                           
  4529                           
  4530                           ; 1 bytes @ 0x1E
  4531  003F                     	ds	1
  4532  0040                     battery_fade@v:	
  4533                           
  4534                           ; 1 bytes @ 0x1F
  4535  0040                     	ds	1
  4536  0041                     ??_led_modes:	
  4537                           
  4538                           ; 1 bytes @ 0x20
  4539  0041                     	ds	10
  4540  004B                     write_pdo@pdo:	
  4541                           
  4542                           ; 4 bytes @ 0x2A
  4543  004B                     	ds	4
  4544  004F                     ?_negotiate_optimal_pdo:	
  4545  004F                     negotiate_optimal_pdo@num_pdos:	
  4546                           ; 2 bytes @ 0x2E
  4547                           
  4548                           
  4549                           ; 1 bytes @ 0x2E
  4550  004F                     	ds	2
  4551  0051                     ??_negotiate_optimal_pdo:	
  4552                           
  4553                           ; 1 bytes @ 0x30
  4554  0051                     	ds	8
  4555  0059                     ??_stusb_negotiate:	
  4556                           
  4557                           ; 1 bytes @ 0x38
  4558  0059                     	ds	6
  4559  005F                     ??_main:	
  4560                           
  4561                           ; 1 bytes @ 0x3E
  4562  005F                     	ds	1
  4563                           
  4564                           	psect	maintext
  4565  0202                     __pmaintext:	
  4566 ;;
  4567 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4568 ;;
  4569 ;; *************** function _main *****************
  4570 ;; Defined at:
  4571 ;;		line 115 in file "main.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;		None
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;		None
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1    wreg      void 
  4578 ;; Registers used:
  4579 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4580 ;; Tracked objects:
  4581 ;;		On entry : B3F/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4585 ;;      Params:         0       0       0       0       0       0       0       0
  4586 ;;      Locals:         0       0       0       0       0       0       0       0
  4587 ;;      Temps:          0       1       0       0       0       0       0       0
  4588 ;;      Totals:         0       1       0       0       0       0       0       0
  4589 ;;Total ram usage:        1 bytes
  4590 ;; Hardware stack levels required when called:   10
  4591 ;; This function calls:
  4592 ;;		_BQ_CONFIG_INIT
  4593 ;;		_BQ_INIT
  4594 ;;		_BQ_UPDATE
  4595 ;;		_BQ_Write
  4596 ;;		_I2C_Master_Init
  4597 ;;		_I2C_bus_reset
  4598 ;;		_PIC_SETUP
  4599 ;;		_PPS_lock
  4600 ;;		_PPS_unlock
  4601 ;;		_PWM_INIT
  4602 ;;		_PWM_power_down
  4603 ;;		_chrg_led
  4604 ;;		_get_time
  4605 ;;		_led_modes
  4606 ;;		_stusb_negotiate
  4607 ;;		_thermal_protection
  4608 ;;		_timer_diff
  4609 ;; This function is called by:
  4610 ;;		Startup code after reset
  4611 ;; This function uses a non-reentrant model
  4612 ;;
  4613                           
  4614                           
  4615                           ;psect for function _main
  4616  0202                     _main:	
  4617  0202                     l3937:	
  4618                           ;incstack = 0
  4619                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4620                           
  4621                           
  4622                           ;main.c: 117: PIC_SETUP();
  4623  0202  318D  254C  3182   	fcall	_PIC_SETUP
  4624                           
  4625                           ;main.c: 120: I2C_bus_reset();
  4626  0205  318E  265B  3182   	fcall	_I2C_bus_reset
  4627                           
  4628                           ;main.c: 123: PPS_unlock();
  4629  0208  318A  22C4  3182   	fcall	_PPS_unlock
  4630  020B                     l3939:	
  4631                           
  4632                           ;main.c: 124: SSP1DATPPS = 0x11;
  4633  020B  3011               	movlw	17
  4634  020C  017D               	movlb	61	; select bank61
  4635  020D  00C6               	movwf	70	;volatile
  4636  020E                     l3941:	
  4637                           
  4638                           ;main.c: 125: RC1PPS = 0x16;
  4639  020E  3016               	movlw	22
  4640  020F  017E               	movlb	62	; select bank62
  4641  0210  00A1               	movwf	33	;volatile
  4642  0211                     l3943:	
  4643                           
  4644                           ;main.c: 126: SSP1CLKPPS = 0x10;
  4645  0211  3010               	movlw	16
  4646  0212  017D               	movlb	61	; select bank61
  4647  0213  00C5               	movwf	69	;volatile
  4648  0214                     l3945:	
  4649                           
  4650                           ;main.c: 127: RC0PPS = 0x15;
  4651  0214  3015               	movlw	21
  4652  0215  017E               	movlb	62	; select bank62
  4653  0216  00A0               	movwf	32	;volatile
  4654                           
  4655                           ;main.c: 128: PPS_lock();
  4656  0217  318A  22CB  3182   	fcall	_PPS_lock
  4657                           
  4658                           ;main.c: 129: I2C_Master_Init(350000);
  4659  021A  3000               	movlw	0
  4660  021B  0140               	movlb	0	; select bank0
  4661  021C  00BE               	movwf	I2C_Master_Init@clk+3
  4662  021D  3005               	movlw	5
  4663  021E  00BD               	movwf	I2C_Master_Init@clk+2
  4664  021F  3057               	movlw	87
  4665  0220  00BC               	movwf	I2C_Master_Init@clk+1
  4666  0221  3030               	movlw	48
  4667  0222  00BB               	movwf	I2C_Master_Init@clk
  4668  0223  318D  2577  3182   	fcall	_I2C_Master_Init
  4669                           
  4670                           ;main.c: 131: BQ_CONFIG_INIT();
  4671  0226  318C  2487  3182   	fcall	_BQ_CONFIG_INIT
  4672                           
  4673                           ;main.c: 132: BQ_INIT();
  4674  0229  318E  26F6  3182   	fcall	_BQ_INIT
  4675                           
  4676                           ;main.c: 134: PWM_INIT();
  4677  022C  318E  2617  3182   	fcall	_PWM_INIT
  4678  022F                     l143:	
  4679                           ;main.c: 136: while(1) {
  4680                           
  4681  022F  0064               	clrwdt	;# 
  4682  0230                     l3947:	
  4683                           
  4684                           ;main.c: 140: if(btn_is_debounced) {
  4685  0230  0140               	movlb	0	; select bank0
  4686  0231  086A               	movf	_btn_is_debounced,w
  4687  0232  1903               	btfsc	3,2
  4688  0233  2A35               	goto	u3691
  4689  0234  2A36               	goto	u3690
  4690  0235                     u3691:	
  4691  0235  2A99               	goto	l3973
  4692  0236                     u3690:	
  4693  0236                     l3949:	
  4694                           
  4695                           ;main.c: 141: if(btn_time >= 85) {
  4696  0236  0142               	movlb	2	; select bank2
  4697  0237  0837               	movf	(_btn_time+3)^(0+256),w
  4698  0238  1D03               	btfss	3,2
  4699  0239  2A46               	goto	u3700
  4700  023A  0836               	movf	(_btn_time+2)^(0+256),w
  4701  023B  1D03               	btfss	3,2
  4702  023C  2A46               	goto	u3700
  4703  023D  0835               	movf	(_btn_time+1)^(0+256),w
  4704  023E  1D03               	btfss	3,2
  4705  023F  2A46               	goto	u3700
  4706  0240  3055               	movlw	85
  4707  0241  0234               	subwf	_btn_time^(0+256),w
  4708  0242  1C03               	btfss	3,0
  4709  0243  2A45               	goto	u3701
  4710  0244  2A46               	goto	u3700
  4711  0245                     u3701:	
  4712  0245  2A69               	goto	l3959
  4713  0246                     u3700:	
  4714  0246                     l3951:	
  4715                           
  4716                           ;main.c: 142: SYS_ENABLE = !SYS_ENABLE;
  4717  0246  0140               	movlb	0	; select bank0
  4718  0247  086B               	movf	_SYS_ENABLE,w
  4719  0248  1903               	btfsc	3,2
  4720  0249  2A4B               	goto	u3711
  4721  024A  2A4D               	goto	u3710
  4722  024B                     u3711:	
  4723  024B  3001               	movlw	1
  4724  024C  2A4E               	goto	u3720
  4725  024D                     u3710:	
  4726  024D  3000               	movlw	0
  4727  024E                     u3720:	
  4728  024E  00DF               	movwf	??_main
  4729  024F  085F               	movf	??_main,w
  4730  0250  00EB               	movwf	_SYS_ENABLE
  4731                           
  4732                           ;main.c: 143: if(SYS_ENABLE) {
  4733  0251  086B               	movf	_SYS_ENABLE,w
  4734  0252  1903               	btfsc	3,2
  4735  0253  2A55               	goto	u3731
  4736  0254  2A56               	goto	u3730
  4737  0255                     u3731:	
  4738  0255  2A59               	goto	l146
  4739  0256                     u3730:	
  4740  0256                     l3953:	
  4741                           
  4742                           ;main.c: 144: TRISCbits.TRISC5 = 0;
  4743  0256  1294               	bcf	20,5	;volatile
  4744                           
  4745                           ;main.c: 145: RC5 = 1;
  4746  0257  168E               	bsf	14,5	;volatile
  4747                           
  4748                           ;main.c: 148: }
  4749  0258  2A97               	goto	l3971
  4750  0259                     l146:	
  4751                           
  4752                           ;main.c: 149: else {;main.c: 150: TRISCbits.TRISC5 = 1;
  4753  0259  1694               	bsf	20,5	;volatile
  4754  025A                     l3955:	
  4755                           
  4756                           ;main.c: 151: if(mode == 3) {
  4757  025A  3003               	movlw	3
  4758  025B  066F               	xorwf	_mode,w
  4759  025C  1D03               	btfss	3,2
  4760  025D  2A5F               	goto	u3741
  4761  025E  2A60               	goto	u3740
  4762  025F                     u3741:	
  4763  025F  2A97               	goto	l3971
  4764  0260                     u3740:	
  4765  0260                     l3957:	
  4766                           
  4767                           ;main.c: 152: BQ_Write(0x09, 0b01100100);
  4768  0260  3064               	movlw	100
  4769  0261  00DF               	movwf	??_main
  4770  0262  085F               	movf	??_main,w
  4771  0263  00A2               	movwf	BQ_Write@data
  4772  0264  3009               	movlw	9
  4773  0265  318B  2340  3182   	fcall	_BQ_Write
  4774  0268  2A97               	goto	l3971
  4775  0269                     l3959:	
  4776                           
  4777                           ;main.c: 156: else if(SYS_ENABLE && btn_time<=50 && !VBUS_CHRG_STATE[1]) {
  4778  0269  0140               	movlb	0	; select bank0
  4779  026A  086B               	movf	_SYS_ENABLE,w
  4780  026B  1903               	btfsc	3,2
  4781  026C  2A6E               	goto	u3751
  4782  026D  2A6F               	goto	u3750
  4783  026E                     u3751:	
  4784  026E  2A97               	goto	l3971
  4785  026F                     u3750:	
  4786  026F                     l3961:	
  4787  026F  0142               	movlb	2	; select bank2
  4788  0270  0837               	movf	(_btn_time+3)^(0+256),w
  4789  0271  1D03               	btfss	3,2
  4790  0272  2A7E               	goto	u3761
  4791  0273  0836               	movf	(_btn_time+2)^(0+256),w
  4792  0274  1D03               	btfss	3,2
  4793  0275  2A7E               	goto	u3761
  4794  0276  0835               	movf	(_btn_time+1)^(0+256),w
  4795  0277  1D03               	btfss	3,2
  4796  0278  2A7E               	goto	u3761
  4797  0279  3033               	movlw	51
  4798  027A  0234               	subwf	_btn_time^(0+256),w
  4799  027B  1803               	btfsc	3,0
  4800  027C  2A7E               	goto	u3761
  4801  027D  2A7F               	goto	u3760
  4802  027E                     u3761:	
  4803  027E  2A97               	goto	l3971
  4804  027F                     u3760:	
  4805  027F                     l3963:	
  4806  027F  0140               	movlb	0	; select bank0
  4807  0280  0A6E               	incf	_VBUS_CHRG_STATE,w
  4808  0281  0086               	movwf	6
  4809  0282  0187               	clrf	7
  4810  0283  0801               	movf	1,w
  4811  0284  1D03               	btfss	3,2
  4812  0285  2A87               	goto	u3771
  4813  0286  2A88               	goto	u3770
  4814  0287                     u3771:	
  4815  0287  2A97               	goto	l3971
  4816  0288                     u3770:	
  4817  0288                     l3965:	
  4818                           
  4819                           ;main.c: 159: if(BATTERY_VOLTAGE <= 50) {
  4820  0288  3033               	movlw	51
  4821  0289  026D               	subwf	_BATTERY_VOLTAGE,w
  4822  028A  1803               	skipnc
  4823  028B  2A8D               	goto	u3781
  4824  028C  2A8E               	goto	u3780
  4825  028D                     u3781:	
  4826  028D  2A93               	goto	l3969
  4827  028E                     u3780:	
  4828  028E                     l3967:	
  4829                           
  4830                           ;main.c: 160: mode = 2;
  4831  028E  3002               	movlw	2
  4832  028F  00DF               	movwf	??_main
  4833  0290  085F               	movf	??_main,w
  4834  0291  00EF               	movwf	_mode
  4835                           
  4836                           ;main.c: 161: }
  4837  0292  2A97               	goto	l3971
  4838  0293                     l3969:	
  4839                           
  4840                           ;main.c: 162: else {;main.c: 163: mode++;
  4841  0293  3001               	movlw	1
  4842  0294  00DF               	movwf	??_main
  4843  0295  085F               	movf	??_main,w
  4844  0296  07EF               	addwf	_mode,f
  4845  0297                     l3971:	
  4846                           
  4847                           ;main.c: 164: };main.c: 165: };main.c: 166: btn_is_debounced = 0;
  4848  0297  0140               	movlb	0	; select bank0
  4849  0298  01EA               	clrf	_btn_is_debounced
  4850  0299                     l3973:	
  4851                           
  4852                           ;main.c: 167: };main.c: 169: BQ_UPDATE();
  4853  0299  3184  241C  3182   	fcall	_BQ_UPDATE
  4854  029C                     l3975:	
  4855                           
  4856                           ;main.c: 171: thermal_protection();
  4857  029C  318B  23CE  3182   	fcall	_thermal_protection
  4858  029F                     l3977:	
  4859                           
  4860                           ;main.c: 174: if(VBUS_CHRG_STATE[1] == 0) {
  4861  029F  0140               	movlb	0	; select bank0
  4862  02A0  0A6E               	incf	_VBUS_CHRG_STATE,w
  4863  02A1  0086               	movwf	6
  4864  02A2  0187               	clrf	7
  4865  02A3  0801               	movf	1,w
  4866  02A4  1D03               	btfss	3,2
  4867  02A5  2AA7               	goto	u3791
  4868  02A6  2AA8               	goto	u3790
  4869  02A7                     u3791:	
  4870  02A7  2AD4               	goto	l3985
  4871  02A8                     u3790:	
  4872  02A8                     l3979:	
  4873                           
  4874                           ;main.c: 175: if(SYS_ENABLE) {
  4875  02A8  086B               	movf	_SYS_ENABLE,w
  4876  02A9  1903               	btfsc	3,2
  4877  02AA  2AAC               	goto	u3801
  4878  02AB  2AAD               	goto	u3800
  4879  02AC                     u3801:	
  4880  02AC  2AB0               	goto	l154
  4881  02AD                     u3800:	
  4882  02AD                     l3981:	
  4883                           
  4884                           ;main.c: 176: led_modes();
  4885  02AD  318D  2522  3182   	fcall	_led_modes
  4886  02B0                     l154:	
  4887                           
  4888                           ;main.c: 177: };main.c: 178: if(timer_diff(stusb4500_timeout) >= 500) {
  4889  02B0  0142               	movlb	2	; select bank2
  4890  02B1  0833               	movf	(_stusb4500_timeout+3)^(0+256),w
  4891  02B2  0140               	movlb	0	; select bank0
  4892  02B3  00A4               	movwf	timer_diff@t+3
  4893  02B4  0142               	movlb	2	; select bank2
  4894  02B5  0832               	movf	(_stusb4500_timeout+2)^(0+256),w
  4895  02B6  0140               	movlb	0	; select bank0
  4896  02B7  00A3               	movwf	timer_diff@t+2
  4897  02B8  0142               	movlb	2	; select bank2
  4898  02B9  0831               	movf	(_stusb4500_timeout+1)^(0+256),w
  4899  02BA  0140               	movlb	0	; select bank0
  4900  02BB  00A2               	movwf	timer_diff@t+1
  4901  02BC  0142               	movlb	2	; select bank2
  4902  02BD  0830               	movf	_stusb4500_timeout^(0+256),w
  4903  02BE  0140               	movlb	0	; select bank0
  4904  02BF  00A1               	movwf	timer_diff@t
  4905  02C0  318B  23E7  3182   	fcall	_timer_diff
  4906  02C3  0140               	movlb	0	; select bank0
  4907  02C4  0824               	movf	?_timer_diff+3,w
  4908  02C5  1D03               	btfss	3,2
  4909  02C6  2AD2               	goto	u3810
  4910  02C7  0823               	movf	?_timer_diff+2,w
  4911  02C8  1D03               	btfss	3,2
  4912  02C9  2AD2               	goto	u3810
  4913  02CA  30F4               	movlw	244
  4914  02CB  0221               	subwf	?_timer_diff,w
  4915  02CC  3001               	movlw	1
  4916  02CD  3B22               	subwfb	?_timer_diff+1,w
  4917  02CE  1C03               	btfss	3,0
  4918  02CF  2AD1               	goto	u3811
  4919  02D0  2AD2               	goto	u3810
  4920  02D1                     u3811:	
  4921  02D1  2AF6               	goto	l3995
  4922  02D2                     u3810:	
  4923  02D2                     l3983:	
  4924                           
  4925                           ;main.c: 179: set_stusb4500 = 0;
  4926  02D2  01E9               	clrf	_set_stusb4500
  4927  02D3  2AF6               	goto	l3995
  4928  02D4                     l3985:	
  4929                           
  4930                           ;main.c: 182: else {;main.c: 183: chrg_led();
  4931  02D4  3184  24BD  3182   	fcall	_chrg_led
  4932  02D7                     l3987:	
  4933                           
  4934                           ;main.c: 184: if(!set_stusb4500) {
  4935  02D7  0140               	movlb	0	; select bank0
  4936  02D8  0869               	movf	_set_stusb4500,w
  4937  02D9  1D03               	btfss	3,2
  4938  02DA  2ADC               	goto	u3821
  4939  02DB  2ADD               	goto	u3820
  4940  02DC                     u3821:	
  4941  02DC  2AF6               	goto	l3995
  4942  02DD                     u3820:	
  4943  02DD                     l3989:	
  4944                           
  4945                           ;main.c: 185: stusb_negotiate();
  4946  02DD  3183  2320  3182   	fcall	_stusb_negotiate
  4947  02E0                     l3991:	
  4948                           
  4949                           ;main.c: 186: set_stusb4500 = 1;
  4950  02E0  0140               	movlb	0	; select bank0
  4951  02E1  01E9               	clrf	_set_stusb4500
  4952  02E2  0AE9               	incf	_set_stusb4500,f
  4953  02E3                     l3993:	
  4954                           
  4955                           ;main.c: 187: stusb4500_timeout = get_time();
  4956  02E3  318B  2319  3182   	fcall	_get_time
  4957  02E6  0140               	movlb	0	; select bank0
  4958  02E7  0824               	movf	?_get_time+3,w
  4959  02E8  0142               	movlb	2	; select bank2
  4960  02E9  00B3               	movwf	(_stusb4500_timeout+3)^(0+256)
  4961  02EA  0140               	movlb	0	; select bank0
  4962  02EB  0823               	movf	?_get_time+2,w
  4963  02EC  0142               	movlb	2	; select bank2
  4964  02ED  00B2               	movwf	(_stusb4500_timeout+2)^(0+256)
  4965  02EE  0140               	movlb	0	; select bank0
  4966  02EF  0822               	movf	?_get_time+1,w
  4967  02F0  0142               	movlb	2	; select bank2
  4968  02F1  00B1               	movwf	(_stusb4500_timeout+1)^(0+256)
  4969  02F2  0140               	movlb	0	; select bank0
  4970  02F3  0821               	movf	?_get_time,w
  4971  02F4  0142               	movlb	2	; select bank2
  4972  02F5  00B0               	movwf	_stusb4500_timeout^(0+256)
  4973  02F6                     l3995:	
  4974                           
  4975                           ;main.c: 188: };main.c: 189: };main.c: 192: if(!SYS_ENABLE && VBUS_CHRG_STATE[1]==0 && !
      +                          btn_is_debounced && RA5 && BQ_adc_state==0 && !set_stusb4500) {
  4976  02F6  0140               	movlb	0	; select bank0
  4977  02F7  086B               	movf	_SYS_ENABLE,w
  4978  02F8  1D03               	btfss	3,2
  4979  02F9  2AFB               	goto	u3831
  4980  02FA  2AFC               	goto	u3830
  4981  02FB                     u3831:	
  4982  02FB  2A2F               	goto	l143
  4983  02FC                     u3830:	
  4984  02FC                     l3997:	
  4985  02FC  0A6E               	incf	_VBUS_CHRG_STATE,w
  4986  02FD  0086               	movwf	6
  4987  02FE  0187               	clrf	7
  4988  02FF  0801               	movf	1,w
  4989  0300  1D03               	btfss	3,2
  4990  0301  2B03               	goto	u3841
  4991  0302  2B04               	goto	u3840
  4992  0303                     u3841:	
  4993  0303  2A2F               	goto	l143
  4994  0304                     u3840:	
  4995  0304                     l3999:	
  4996  0304  086A               	movf	_btn_is_debounced,w
  4997  0305  1D03               	btfss	3,2
  4998  0306  2B08               	goto	u3851
  4999  0307  2B09               	goto	u3850
  5000  0308                     u3851:	
  5001  0308  2A2F               	goto	l143
  5002  0309                     u3850:	
  5003  0309                     l4001:	
  5004  0309  1E8C               	btfss	12,5	;volatile
  5005  030A  2B0C               	goto	u3861
  5006  030B  2B0D               	goto	u3860
  5007  030C                     u3861:	
  5008  030C  2A2F               	goto	l143
  5009  030D                     u3860:	
  5010  030D                     l4003:	
  5011  030D  086C               	movf	_BQ_adc_state,w
  5012  030E  1D03               	btfss	3,2
  5013  030F  2B11               	goto	u3871
  5014  0310  2B12               	goto	u3870
  5015  0311                     u3871:	
  5016  0311  2A2F               	goto	l143
  5017  0312                     u3870:	
  5018  0312                     l4005:	
  5019  0312  0869               	movf	_set_stusb4500,w
  5020  0313  1D03               	btfss	3,2
  5021  0314  2B16               	goto	u3881
  5022  0315  2B17               	goto	u3880
  5023  0316                     u3881:	
  5024  0316  2A2F               	goto	l143
  5025  0317                     u3880:	
  5026  0317                     l4007:	
  5027                           
  5028                           ;main.c: 193: PWM_power_down();
  5029  0317  318A  22F3  3182   	fcall	_PWM_power_down
  5030  031A  0064               	clrwdt	;# 
  5031  031B  0063               	sleep	;# 
  5032  031C  0001               	reset	;# 
  5033  031D  2A2F               	goto	l143
  5034  031E  3180  2868         	ljmp	start
  5035  0320                     __end_of_main:	
  5036                           
  5037                           	psect	text1
  5038  0BCE                     __ptext1:	
  5039 ;; *************** function _thermal_protection *****************
  5040 ;; Defined at:
  5041 ;;		line 93 in file "main.c"
  5042 ;; Parameters:    Size  Location     Type
  5043 ;;		None
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;		None
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  1    wreg      void 
  5048 ;; Registers used:
  5049 ;;		wreg, status,2, status,0, pclath, cstack
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5055 ;;      Params:         0       0       0       0       0       0       0       0
  5056 ;;      Locals:         0       0       0       0       0       0       0       0
  5057 ;;      Temps:          0       1       0       0       0       0       0       0
  5058 ;;      Totals:         0       1       0       0       0       0       0       0
  5059 ;;Total ram usage:        1 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; Hardware stack levels required when called:    5
  5062 ;; This function calls:
  5063 ;;		_BQ_Write
  5064 ;;		_readADC
  5065 ;; This function is called by:
  5066 ;;		_main
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           
  5071                           ;psect for function _thermal_protection
  5072  0BCE                     _thermal_protection:	
  5073  0BCE                     l3421:	
  5074                           ;incstack = 0
  5075                           ; Regs used in _thermal_protection: [wreg+status,2+status,0+pclath+cstack]
  5076                           
  5077                           
  5078                           ;main.c: 96: if(readADC(0b000100) >= 222) {
  5079  0BCE  3004               	movlw	4
  5080  0BCF  318C  24F9  318B   	fcall	_readADC
  5081  0BD2  3000               	movlw	0
  5082  0BD3  0140               	movlb	0	; select bank0
  5083  0BD4  0222               	subwf	?_readADC+1,w
  5084  0BD5  30DE               	movlw	222
  5085  0BD6  1903               	skipnz
  5086  0BD7  0221               	subwf	?_readADC,w
  5087  0BD8  1C03               	skipc
  5088  0BD9  2BDB               	goto	u2961
  5089  0BDA  2BDC               	goto	u2960
  5090  0BDB                     u2961:	
  5091  0BDB  2BE6               	goto	l131
  5092  0BDC                     u2960:	
  5093  0BDC                     l3423:	
  5094                           
  5095                           ;main.c: 97: SYS_ENABLE = 0;
  5096  0BDC  01EB               	clrf	_SYS_ENABLE
  5097  0BDD                     l3425:	
  5098                           
  5099                           ;main.c: 98: TRISCbits.TRISC5 = 1;
  5100  0BDD  1694               	bsf	20,5	;volatile
  5101  0BDE                     l3427:	
  5102                           
  5103                           ;main.c: 99: BQ_Write(0x09, 0b01100100);
  5104  0BDE  3064               	movlw	100
  5105  0BDF  00A6               	movwf	??_thermal_protection
  5106  0BE0  0826               	movf	??_thermal_protection,w
  5107  0BE1  00A2               	movwf	BQ_Write@data
  5108  0BE2  3009               	movlw	9
  5109  0BE3  318B  2340  318B   	fcall	_BQ_Write
  5110  0BE6                     l131:	
  5111  0BE6  0008               	return
  5112  0BE7                     __end_of_thermal_protection:	
  5113                           
  5114                           	psect	text2
  5115  0CF9                     __ptext2:	
  5116 ;; *************** function _readADC *****************
  5117 ;; Defined at:
  5118 ;;		line 11 in file "ADC.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;  channel         1    wreg     unsigned char 
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;  channel         1    4[BANK0 ] unsigned char 
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  2    0[BANK0 ] unsigned int 
  5125 ;; Registers used:
  5126 ;;		wreg, status,2, status,0
  5127 ;; Tracked objects:
  5128 ;;		On entry : 0/0
  5129 ;;		On exit  : 0/0
  5130 ;;		Unchanged: 0/0
  5131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5132 ;;      Params:         0       2       0       0       0       0       0       0
  5133 ;;      Locals:         0       1       0       0       0       0       0       0
  5134 ;;      Temps:          0       2       0       0       0       0       0       0
  5135 ;;      Totals:         0       5       0       0       0       0       0       0
  5136 ;;Total ram usage:        5 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; Hardware stack levels required when called:    2
  5139 ;; This function calls:
  5140 ;;		Nothing
  5141 ;; This function is called by:
  5142 ;;		_thermal_protection
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           
  5146                           
  5147                           ;psect for function _readADC
  5148  0CF9                     _readADC:	
  5149                           
  5150                           ;incstack = 0
  5151                           ; Regs used in _readADC: [wreg+status,2+status,0]
  5152                           ;readADC@channel stored from wreg
  5153  0CF9  0140               	movlb	0	; select bank0
  5154  0CFA  00A5               	movwf	readADC@channel
  5155  0CFB                     l3117:	
  5156                           
  5157                           ;ADC.c: 13: ADCON1 = 0b01100000;
  5158  0CFB  3060               	movlw	96
  5159  0CFC  0141               	movlb	1	; select bank1
  5160  0CFD  009E               	movwf	30	;volatile
  5161  0CFE                     l3119:	
  5162                           
  5163                           ;ADC.c: 14: ADCON0 = (channel << 2) | 0b1;
  5164  0CFE  0140               	movlb	0	; select bank0
  5165  0CFF  0825               	movf	readADC@channel,w
  5166  0D00  00A3               	movwf	??_readADC
  5167  0D01  3001               	movlw	1
  5168  0D02                     u2565:	
  5169  0D02  35A3               	lslf	??_readADC,f
  5170  0D03  3EFF               	addlw	-1
  5171  0D04  1D03               	skipz
  5172  0D05  2D02               	goto	u2565
  5173  0D06  3523               	lslf	??_readADC,w
  5174  0D07  3801               	iorlw	1
  5175  0D08  0141               	movlb	1	; select bank1
  5176  0D09  009D               	movwf	29	;volatile
  5177  0D0A                     l3121:	
  5178                           
  5179                           ;ADC.c: 16: _delay((unsigned long)((5)*(32000000/4000.0)));
  5180  0D0A  3034               	movlw	52
  5181  0D0B  0140               	movlb	0	; select bank0
  5182  0D0C  00A3               	movwf	??_readADC
  5183  0D0D  30F1               	movlw	241
  5184  0D0E                     u3997:	
  5185  0D0E  0B89               	decfsz	9,f
  5186  0D0F  2D0E               	goto	u3997
  5187  0D10  0BA3               	decfsz	??_readADC,f
  5188  0D11  2D0E               	goto	u3997
  5189  0D12  3200               	nop2
  5190  0D13                     l3123:	
  5191                           
  5192                           ;ADC.c: 18: ADCON0bits.GOnDONE = 1;
  5193  0D13  0141               	movlb	1	; select bank1
  5194  0D14  149D               	bsf	29,1	;volatile
  5195  0D15                     l454:	
  5196                           ;ADC.c: 19: while (ADCON0bits.GOnDONE);
  5197                           
  5198  0D15  189D               	btfsc	29,1	;volatile
  5199  0D16  2D18               	goto	u2571
  5200  0D17  2D19               	goto	u2570
  5201  0D18                     u2571:	
  5202  0D18  2D15               	goto	l454
  5203  0D19                     u2570:	
  5204  0D19                     l3125:	
  5205                           
  5206                           ;ADC.c: 22: return ADRESH;
  5207  0D19  081C               	movf	28,w	;volatile
  5208  0D1A  0140               	movlb	0	; select bank0
  5209  0D1B  00A3               	movwf	??_readADC
  5210  0D1C  01A4               	clrf	??_readADC+1
  5211  0D1D  0823               	movf	??_readADC,w
  5212  0D1E  00A1               	movwf	?_readADC
  5213  0D1F  0824               	movf	??_readADC+1,w
  5214  0D20  00A2               	movwf	?_readADC+1
  5215  0D21                     l457:	
  5216  0D21  0008               	return
  5217  0D22                     __end_of_readADC:	
  5218                           
  5219                           	psect	text3
  5220  0320                     __ptext3:	
  5221 ;; *************** function _stusb_negotiate *****************
  5222 ;; Defined at:
  5223 ;;		line 143 in file "stusb4500.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;		None
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;  buffer         40   25[BANK1 ] unsigned char [40]
  5228 ;;  header          2   65[BANK1 ] unsigned int 
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  2   98[None  ] int 
  5231 ;; Registers used:
  5232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5238 ;;      Params:         0       0       0       0       0       0       0       0
  5239 ;;      Locals:         0       0      42       0       0       0       0       0
  5240 ;;      Temps:          0       6       0       0       0       0       0       0
  5241 ;;      Totals:         0       6      42       0       0       0       0       0
  5242 ;;Total ram usage:       48 bytes
  5243 ;; Hardware stack levels used:    1
  5244 ;; Hardware stack levels required when called:    9
  5245 ;; This function calls:
  5246 ;;		_i2c_master_read
  5247 ;;		_i2c_master_read_u16
  5248 ;;		_i2c_master_read_u8
  5249 ;;		_negotiate_optimal_pdo
  5250 ;;		_reset
  5251 ;; This function is called by:
  5252 ;;		_main
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256                           
  5257                           ;psect for function _stusb_negotiate
  5258  0320                     _stusb_negotiate:	
  5259  0320                     l3619:	
  5260                           ;incstack = 0
  5261                           ; Regs used in _stusb_negotiate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5262                           
  5263                           
  5264                           ;stusb4500.c: 144: uint8_t buffer[40];;stusb4500.c: 145: uint16_t header;;stusb4500.c: 1
      +                          48: if (;stusb4500.c: 149: i2c_master_read_u8(0x28, 0x0E, buffer) != 0 ||;stusb4500.c: 1
      +                          50: !(buffer[0] & 0x01))
  5265  0320  300E               	movlw	14
  5266  0321  0140               	movlb	0	; select bank0
  5267  0322  00D9               	movwf	??_stusb_negotiate
  5268  0323  0859               	movf	??_stusb_negotiate,w
  5269  0324  00AE               	movwf	i2c_master_read_u8@reg
  5270  0325  30B9               	movlw	(low (stusb_negotiate@buffer| 0))& (0+255)
  5271  0326  00DA               	movwf	??_stusb_negotiate+1
  5272  0327  085A               	movf	??_stusb_negotiate+1,w
  5273  0328  00AF               	movwf	i2c_master_read_u8@data
  5274  0329  3028               	movlw	40
  5275  032A  318B  239E  3183   	fcall	_i2c_master_read_u8
  5276  032D  0140               	movlb	0	; select bank0
  5277  032E  082E               	movf	?_i2c_master_read_u8,w
  5278  032F  042F               	iorwf	?_i2c_master_read_u8+1,w
  5279  0330  1D03               	btfss	3,2
  5280  0331  2B33               	goto	u3161
  5281  0332  2B34               	goto	u3160
  5282  0333                     u3161:	
  5283  0333  2C1B               	goto	l625
  5284  0334                     u3160:	
  5285  0334                     l3621:	
  5286  0334  0141               	movlb	1	; select bank1
  5287  0335  1839               	btfsc	stusb_negotiate@buffer^(0+128),0
  5288  0336  2B38               	goto	u3171
  5289  0337  2B39               	goto	u3170
  5290  0338                     u3171:	
  5291  0338  2B3A               	goto	l3623
  5292  0339                     u3170:	
  5293  0339  2C1B               	goto	l625
  5294  033A                     l3623:	
  5295                           
  5296                           ;stusb4500.c: 154: if (reset() != 0) return -1;
  5297  033A  3187  2728  3183   	fcall	_reset
  5298  033D  0140               	movlb	0	; select bank0
  5299  033E  0833               	movf	?_reset,w
  5300  033F  0434               	iorwf	?_reset+1,w
  5301  0340  1903               	btfsc	3,2
  5302  0341  2B43               	goto	u3181
  5303  0342  2B44               	goto	u3180
  5304  0343                     u3181:	
  5305  0343  2B45               	goto	l3627
  5306  0344                     u3180:	
  5307  0344  2C1B               	goto	l625
  5308  0345                     l3627:	
  5309                           
  5310                           ;stusb4500.c: 158: if (i2c_master_read_u8(0x28, 0x16, buffer) != 0)
  5311  0345  3016               	movlw	22
  5312  0346  0140               	movlb	0	; select bank0
  5313  0347  00D9               	movwf	??_stusb_negotiate
  5314  0348  0859               	movf	??_stusb_negotiate,w
  5315  0349  00AE               	movwf	i2c_master_read_u8@reg
  5316  034A  30B9               	movlw	(low (stusb_negotiate@buffer| 0))& (0+255)
  5317  034B  00DA               	movwf	??_stusb_negotiate+1
  5318  034C  085A               	movf	??_stusb_negotiate+1,w
  5319  034D  00AF               	movwf	i2c_master_read_u8@data
  5320  034E  3028               	movlw	40
  5321  034F  318B  239E  3183   	fcall	_i2c_master_read_u8
  5322  0352  0140               	movlb	0	; select bank0
  5323  0353  082E               	movf	?_i2c_master_read_u8,w
  5324  0354  042F               	iorwf	?_i2c_master_read_u8+1,w
  5325  0355  1903               	btfsc	3,2
  5326  0356  2B58               	goto	u3191
  5327  0357  2B59               	goto	u3190
  5328  0358                     u3191:	
  5329  0358  2B5A               	goto	l628
  5330  0359                     u3190:	
  5331  0359  2C1B               	goto	l625
  5332  035A                     l628:	
  5333                           
  5334                           ;stusb4500.c: 162: if (!(buffer[0] & 0x04)) continue;
  5335  035A  0141               	movlb	1	; select bank1
  5336  035B  1939               	btfsc	stusb_negotiate@buffer^(0+128),2
  5337  035C  2B5E               	goto	u3201
  5338  035D  2B5F               	goto	u3200
  5339  035E                     u3201:	
  5340  035E  2B60               	goto	l3633
  5341  035F                     u3200:	
  5342  035F  2B45               	goto	l3627
  5343  0360                     l3633:	
  5344                           
  5345                           ;stusb4500.c: 165: if (i2c_master_read_u16(0x28, 0x31, &header) != 0)
  5346  0360  3031               	movlw	49
  5347  0361  0140               	movlb	0	; select bank0
  5348  0362  00D9               	movwf	??_stusb_negotiate
  5349  0363  0859               	movf	??_stusb_negotiate,w
  5350  0364  00AE               	movwf	i2c_master_read_u16@reg
  5351  0365  30E1               	movlw	(low (stusb_negotiate@header| 0))& (0+255)
  5352  0366  00DA               	movwf	??_stusb_negotiate+1
  5353  0367  085A               	movf	??_stusb_negotiate+1,w
  5354  0368  00AF               	movwf	i2c_master_read_u16@data
  5355  0369  3028               	movlw	40
  5356  036A  318B  236E  3183   	fcall	_i2c_master_read_u16
  5357  036D  0140               	movlb	0	; select bank0
  5358  036E  082E               	movf	?_i2c_master_read_u16,w
  5359  036F  042F               	iorwf	?_i2c_master_read_u16+1,w
  5360  0370  1903               	btfsc	3,2
  5361  0371  2B73               	goto	u3211
  5362  0372  2B74               	goto	u3210
  5363  0373                     u3211:	
  5364  0373  2B75               	goto	l3637
  5365  0374                     u3210:	
  5366  0374  2C1B               	goto	l625
  5367  0375                     l3637:	
  5368                           
  5369                           ;stusb4500.c: 169: if (;stusb4500.c: 170: !((header >> 12) & 0x07) ||;stusb4500.c: 171: 
      +                          (header & 0x0F) != 0x01)
  5370  0375  0141               	movlb	1	; select bank1
  5371  0376  0862               	movf	(stusb_negotiate@header+1)^(0+128),w
  5372  0377  0140               	movlb	0	; select bank0
  5373  0378  00DA               	movwf	??_stusb_negotiate+1
  5374  0379  0141               	movlb	1	; select bank1
  5375  037A  0861               	movf	stusb_negotiate@header^(0+128),w
  5376  037B  0140               	movlb	0	; select bank0
  5377  037C  00D9               	movwf	??_stusb_negotiate
  5378  037D  0E5A               	swapf	??_stusb_negotiate+1,w
  5379  037E  390F               	andlw	15
  5380  037F  00D9               	movwf	??_stusb_negotiate
  5381  0380  01DA               	clrf	??_stusb_negotiate+1
  5382  0381  3007               	movlw	7
  5383  0382  0559               	andwf	??_stusb_negotiate,w
  5384  0383  00DB               	movwf	??_stusb_negotiate+2
  5385  0384  3000               	movlw	0
  5386  0385  055A               	andwf	??_stusb_negotiate+1,w
  5387  0386  00DC               	movwf	??_stusb_negotiate+3
  5388  0387  085B               	movf	??_stusb_negotiate+2,w
  5389  0388  045C               	iorwf	??_stusb_negotiate+3,w
  5390  0389  1903               	btfsc	3,2
  5391  038A  2B8C               	goto	u3221
  5392  038B  2B8D               	goto	u3220
  5393  038C                     u3221:	
  5394  038C  2B45               	goto	l3627
  5395  038D                     u3220:	
  5396  038D                     l3639:	
  5397  038D  300F               	movlw	15
  5398  038E  0141               	movlb	1	; select bank1
  5399  038F  0561               	andwf	stusb_negotiate@header^(0+128),w
  5400  0390  0140               	movlb	0	; select bank0
  5401  0391  00D9               	movwf	??_stusb_negotiate
  5402  0392  3000               	movlw	0
  5403  0393  0141               	movlb	1	; select bank1
  5404  0394  0562               	andwf	(stusb_negotiate@header+1)^(0+128),w
  5405  0395  0140               	movlb	0	; select bank0
  5406  0396  00DA               	movwf	??_stusb_negotiate+1
  5407  0397  0359               	decf	??_stusb_negotiate,w
  5408  0398  045A               	iorwf	??_stusb_negotiate+1,w
  5409  0399  1903               	btfsc	3,2
  5410  039A  2B9C               	goto	u3231
  5411  039B  2B9D               	goto	u3230
  5412  039C                     u3231:	
  5413  039C  2B9E               	goto	l3641
  5414  039D                     u3230:	
  5415  039D  2B45               	goto	l3627
  5416  039E                     l3641:	
  5417                           
  5418                           ;stusb4500.c: 175: if (i2c_master_read_u8(0x28, 0x30, buffer) != 0)
  5419  039E  3030               	movlw	48
  5420  039F  00D9               	movwf	??_stusb_negotiate
  5421  03A0  0859               	movf	??_stusb_negotiate,w
  5422  03A1  00AE               	movwf	i2c_master_read_u8@reg
  5423  03A2  30B9               	movlw	(low (stusb_negotiate@buffer| 0))& (0+255)
  5424  03A3  00DA               	movwf	??_stusb_negotiate+1
  5425  03A4  085A               	movf	??_stusb_negotiate+1,w
  5426  03A5  00AF               	movwf	i2c_master_read_u8@data
  5427  03A6  3028               	movlw	40
  5428  03A7  318B  239E  3183   	fcall	_i2c_master_read_u8
  5429  03AA  0140               	movlb	0	; select bank0
  5430  03AB  082E               	movf	?_i2c_master_read_u8,w
  5431  03AC  042F               	iorwf	?_i2c_master_read_u8+1,w
  5432  03AD  1903               	btfsc	3,2
  5433  03AE  2BB0               	goto	u3241
  5434  03AF  2BB1               	goto	u3240
  5435  03B0                     u3241:	
  5436  03B0  2BB2               	goto	l3645
  5437  03B1                     u3240:	
  5438  03B1  2C1B               	goto	l625
  5439  03B2                     l3645:	
  5440                           
  5441                           ;stusb4500.c: 179: if (buffer[0] != ((header >> 12) & 0x07) * 4)
  5442  03B2  0141               	movlb	1	; select bank1
  5443  03B3  0862               	movf	(stusb_negotiate@header+1)^(0+128),w
  5444  03B4  0140               	movlb	0	; select bank0
  5445  03B5  00DA               	movwf	??_stusb_negotiate+1
  5446  03B6  0141               	movlb	1	; select bank1
  5447  03B7  0861               	movf	stusb_negotiate@header^(0+128),w
  5448  03B8  0140               	movlb	0	; select bank0
  5449  03B9  00D9               	movwf	??_stusb_negotiate
  5450  03BA  0E5A               	swapf	??_stusb_negotiate+1,w
  5451  03BB  390F               	andlw	15
  5452  03BC  00D9               	movwf	??_stusb_negotiate
  5453  03BD  01DA               	clrf	??_stusb_negotiate+1
  5454  03BE  3007               	movlw	7
  5455  03BF  0559               	andwf	??_stusb_negotiate,w
  5456  03C0  00DB               	movwf	??_stusb_negotiate+2
  5457  03C1  3000               	movlw	0
  5458  03C2  055A               	andwf	??_stusb_negotiate+1,w
  5459  03C3  00DC               	movwf	??_stusb_negotiate+3
  5460  03C4  35DB               	lslf	??_stusb_negotiate+2,f
  5461  03C5  0DDC               	rlf	??_stusb_negotiate+3,f
  5462  03C6  35DB               	lslf	??_stusb_negotiate+2,f
  5463  03C7  0DDC               	rlf	??_stusb_negotiate+3,f
  5464  03C8  0141               	movlb	1	; select bank1
  5465  03C9  0839               	movf	stusb_negotiate@buffer^(0+128),w
  5466  03CA  0140               	movlb	0	; select bank0
  5467  03CB  00DD               	movwf	??_stusb_negotiate+4
  5468  03CC  01DE               	clrf	??_stusb_negotiate+5
  5469  03CD  085C               	movf	??_stusb_negotiate+3,w
  5470  03CE  065E               	xorwf	??_stusb_negotiate+5,w
  5471  03CF  1D03               	skipz
  5472  03D0  2BD3               	goto	u3255
  5473  03D1  085B               	movf	??_stusb_negotiate+2,w
  5474  03D2  065D               	xorwf	??_stusb_negotiate+4,w
  5475  03D3                     u3255:	
  5476  03D3  1903               	skipnz
  5477  03D4  2BD6               	goto	u3251
  5478  03D5  2BD7               	goto	u3250
  5479  03D6                     u3251:	
  5480  03D6  2BD8               	goto	l3649
  5481  03D7                     u3250:	
  5482  03D7  2C1B               	goto	l625
  5483  03D8                     l3649:	
  5484                           
  5485                           ;stusb4500.c: 183: };stusb4500.c: 189: if (;stusb4500.c: 190: i2c_master_read(;stusb4500
      +                          .c: 191: 0x28, 0x33, buffer, ((header >> 12) & 0x07) * 4) !=;stusb4500.c: 192: 0)
  5486  03D8  3033               	movlw	51
  5487  03D9  00D9               	movwf	??_stusb_negotiate
  5488  03DA  0859               	movf	??_stusb_negotiate,w
  5489  03DB  00A5               	movwf	i2c_master_read@reg
  5490  03DC  30B9               	movlw	(low (stusb_negotiate@buffer| 0))& (0+255)
  5491  03DD  00DA               	movwf	??_stusb_negotiate+1
  5492  03DE  085A               	movf	??_stusb_negotiate+1,w
  5493  03DF  00A6               	movwf	i2c_master_read@buf
  5494  03E0  0141               	movlb	1	; select bank1
  5495  03E1  0862               	movf	(stusb_negotiate@header+1)^(0+128),w
  5496  03E2  0140               	movlb	0	; select bank0
  5497  03E3  00DC               	movwf	??_stusb_negotiate+3
  5498  03E4  0141               	movlb	1	; select bank1
  5499  03E5  0861               	movf	stusb_negotiate@header^(0+128),w
  5500  03E6  0140               	movlb	0	; select bank0
  5501  03E7  00DB               	movwf	??_stusb_negotiate+2
  5502  03E8  0E5C               	swapf	??_stusb_negotiate+3,w
  5503  03E9  390F               	andlw	15
  5504  03EA  00DB               	movwf	??_stusb_negotiate+2
  5505  03EB  01DC               	clrf	??_stusb_negotiate+3
  5506  03EC  3007               	movlw	7
  5507  03ED  055B               	andwf	??_stusb_negotiate+2,w
  5508  03EE  00DD               	movwf	??_stusb_negotiate+4
  5509  03EF  3000               	movlw	0
  5510  03F0  055C               	andwf	??_stusb_negotiate+3,w
  5511  03F1  00DE               	movwf	??_stusb_negotiate+5
  5512  03F2  35DD               	lslf	??_stusb_negotiate+4,f
  5513  03F3  0DDE               	rlf	??_stusb_negotiate+5,f
  5514  03F4  35DD               	lslf	??_stusb_negotiate+4,f
  5515  03F5  0DDE               	rlf	??_stusb_negotiate+5,f
  5516  03F6  085D               	movf	??_stusb_negotiate+4,w
  5517  03F7  00A7               	movwf	i2c_master_read@len
  5518  03F8  085E               	movf	??_stusb_negotiate+5,w
  5519  03F9  00A8               	movwf	i2c_master_read@len+1
  5520  03FA  3028               	movlw	40
  5521  03FB  3185  25BC  3183   	fcall	_i2c_master_read
  5522  03FE  0140               	movlb	0	; select bank0
  5523  03FF  0825               	movf	?_i2c_master_read,w
  5524  0400  0426               	iorwf	?_i2c_master_read+1,w
  5525  0401  1903               	btfsc	3,2
  5526  0402  2C04               	goto	u3261
  5527  0403  2C05               	goto	u3260
  5528  0404                     u3261:	
  5529  0404  2C06               	goto	l3653
  5530  0405                     u3260:	
  5531  0405  2C1B               	goto	l625
  5532  0406                     l3653:	
  5533                           
  5534                           ;stusb4500.c: 196: return negotiate_optimal_pdo(;stusb4500.c: 197: (uint32_t*)buffer, ((
      +                          header >> 12) & 0x07));;	Return value of _stusb_negotiate is never used
  5535  0406  0141               	movlb	1	; select bank1
  5536  0407  0862               	movf	(stusb_negotiate@header+1)^(0+128),w
  5537  0408  0140               	movlb	0	; select bank0
  5538  0409  00DA               	movwf	??_stusb_negotiate+1
  5539  040A  0141               	movlb	1	; select bank1
  5540  040B  0861               	movf	stusb_negotiate@header^(0+128),w
  5541  040C  0140               	movlb	0	; select bank0
  5542  040D  00D9               	movwf	??_stusb_negotiate
  5543  040E  0E5A               	swapf	??_stusb_negotiate+1,w
  5544  040F  390F               	andlw	15
  5545  0410  00D9               	movwf	??_stusb_negotiate
  5546  0411  01DA               	clrf	??_stusb_negotiate+1
  5547  0412  0859               	movf	??_stusb_negotiate,w
  5548  0413  3907               	andlw	7
  5549  0414  00DB               	movwf	??_stusb_negotiate+2
  5550  0415  085B               	movf	??_stusb_negotiate+2,w
  5551  0416  00CF               	movwf	negotiate_optimal_pdo@num_pdos
  5552  0417  30B9               	movlw	(low (stusb_negotiate@buffer| 0))& (0+255)
  5553  0418  3180  20AB  3183   	fcall	_negotiate_optimal_pdo
  5554  041B                     l625:	
  5555  041B  0008               	return
  5556  041C                     __end_of_stusb_negotiate:	
  5557                           
  5558                           	psect	text4
  5559  00AB                     __ptext4:	
  5560 ;; *************** function _negotiate_optimal_pdo *****************
  5561 ;; Defined at:
  5562 ;;		line 109 in file "stusb4500.c"
  5563 ;; Parameters:    Size  Location     Type
  5564 ;;  src_pdos        1    wreg     PTR unsigned long 
  5565 ;;		 -> stusb_negotiate@buffer(40), 
  5566 ;;  num_pdos        1   46[BANK0 ] unsigned char 
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;  src_pdos        1    8[BANK1 ] PTR unsigned long 
  5569 ;;		 -> stusb_negotiate@buffer(40), 
  5570 ;;  pdo             4   19[BANK1 ] unsigned long 
  5571 ;;  pdo_power       4    9[BANK1 ] unsigned long 
  5572 ;;  pdo_voltage     2   23[BANK1 ] unsigned int 
  5573 ;;  pdo_current     2   13[BANK1 ] unsigned int 
  5574 ;;  i               2   15[BANK1 ] int 
  5575 ;;  opt_pdo_powe    4    0[BANK1 ] unsigned long 
  5576 ;;  ok              2   17[BANK1 ] int 
  5577 ;;  opt_pdo_volt    2    6[BANK1 ] unsigned int 
  5578 ;;  opt_pdo_curr    2    4[BANK1 ] unsigned int 
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  2   46[BANK0 ] int 
  5581 ;; Registers used:
  5582 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5583 ;; Tracked objects:
  5584 ;;		On entry : 0/0
  5585 ;;		On exit  : 0/0
  5586 ;;		Unchanged: 0/0
  5587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5588 ;;      Params:         0       2       0       0       0       0       0       0
  5589 ;;      Locals:         0       0      25       0       0       0       0       0
  5590 ;;      Temps:          0       8       0       0       0       0       0       0
  5591 ;;      Totals:         0      10      25       0       0       0       0       0
  5592 ;;Total ram usage:       35 bytes
  5593 ;; Hardware stack levels used:    1
  5594 ;; Hardware stack levels required when called:    8
  5595 ;; This function calls:
  5596 ;;		___lldiv
  5597 ;;		___lmul
  5598 ;;		___wmul
  5599 ;;		_write_pdo
  5600 ;; This function is called by:
  5601 ;;		_stusb_negotiate
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           
  5606                           ;psect for function _negotiate_optimal_pdo
  5607  00AB                     _negotiate_optimal_pdo:	
  5608                           
  5609                           ;incstack = 0
  5610                           ; Regs used in _negotiate_optimal_pdo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5611                           ;negotiate_optimal_pdo@src_pdos stored from wreg
  5612  00AB  0141               	movlb	1	; select bank1
  5613  00AC  00A8               	movwf	negotiate_optimal_pdo@src_pdos^(0+128)
  5614  00AD                     l3229:	
  5615                           
  5616                           ;stusb4500.c: 110: int ok = -1;
  5617  00AD  30FF               	movlw	255
  5618  00AE  00B1               	movwf	negotiate_optimal_pdo@ok^(0+128)
  5619  00AF  30FF               	movlw	255
  5620  00B0  00B2               	movwf	(negotiate_optimal_pdo@ok^(0+128)+1)
  5621  00B1                     l3231:	
  5622                           
  5623                           ;stusb4500.c: 112: uint16_t opt_pdo_current = 0;
  5624  00B1  01A4               	clrf	negotiate_optimal_pdo@opt_pdo_current^(0+128)
  5625  00B2  01A5               	clrf	(negotiate_optimal_pdo@opt_pdo_current+1)^(0+128)
  5626                           
  5627                           ;stusb4500.c: 113: uint16_t opt_pdo_voltage = 0;
  5628  00B3  01A6               	clrf	negotiate_optimal_pdo@opt_pdo_voltage^(0+128)
  5629  00B4  01A7               	clrf	(negotiate_optimal_pdo@opt_pdo_voltage+1)^(0+128)
  5630  00B5                     l3233:	
  5631                           
  5632                           ;stusb4500.c: 114: uint32_t opt_pdo_power = 0;
  5633  00B5  3000               	movlw	0
  5634  00B6  00A3               	movwf	(negotiate_optimal_pdo@opt_pdo_power+3)^(0+128)
  5635  00B7  3000               	movlw	0
  5636  00B8  00A2               	movwf	(negotiate_optimal_pdo@opt_pdo_power+2)^(0+128)
  5637  00B9  3000               	movlw	0
  5638  00BA  00A1               	movwf	(negotiate_optimal_pdo@opt_pdo_power+1)^(0+128)
  5639  00BB  3000               	movlw	0
  5640  00BC  00A0               	movwf	negotiate_optimal_pdo@opt_pdo_power^(0+128)
  5641  00BD                     l3235:	
  5642                           
  5643                           ;stusb4500.c: 117: for (int i = 0; i < num_pdos; i++) {
  5644  00BD  01AF               	clrf	negotiate_optimal_pdo@i^(0+128)
  5645  00BE  01B0               	clrf	(negotiate_optimal_pdo@i+1)^(0+128)
  5646  00BF  29C6               	goto	l3259
  5647  00C0                     l3237:	
  5648                           
  5649                           ;stusb4500.c: 118: uint32_t pdo = src_pdos[i];
  5650  00C0  0141               	movlb	1	; select bank1
  5651  00C1  082F               	movf	negotiate_optimal_pdo@i^(0+128),w
  5652  00C2  0140               	movlb	0	; select bank0
  5653  00C3  00D1               	movwf	??_negotiate_optimal_pdo
  5654  00C4  3001               	movlw	1
  5655  00C5                     u2735:	
  5656  00C5  35D1               	lslf	??_negotiate_optimal_pdo,f
  5657  00C6  3EFF               	addlw	-1
  5658  00C7  1D03               	skipz
  5659  00C8  28C5               	goto	u2735
  5660  00C9  3551               	lslf	??_negotiate_optimal_pdo,w
  5661  00CA  0141               	movlb	1	; select bank1
  5662  00CB  0728               	addwf	negotiate_optimal_pdo@src_pdos^(0+128),w
  5663  00CC  0140               	movlb	0	; select bank0
  5664  00CD  00D2               	movwf	??_negotiate_optimal_pdo+1
  5665  00CE  0852               	movf	??_negotiate_optimal_pdo+1,w
  5666  00CF  0086               	movwf	6
  5667  00D0  0187               	clrf	7
  5668  00D1  3F40               	moviw [0]fsr1
  5669  00D2  0141               	movlb	1	; select bank1
  5670  00D3  00B3               	movwf	negotiate_optimal_pdo@pdo^(0+128)
  5671  00D4  3F41               	moviw [1]fsr1
  5672  00D5  00B4               	movwf	(negotiate_optimal_pdo@pdo+1)^(0+128)
  5673  00D6  3F42               	moviw [2]fsr1
  5674  00D7  00B5               	movwf	(negotiate_optimal_pdo@pdo+2)^(0+128)
  5675  00D8  3F43               	moviw [3]fsr1
  5676  00D9  00B6               	movwf	(negotiate_optimal_pdo@pdo+3)^(0+128)
  5677  00DA                     l3239:	
  5678                           
  5679                           ;stusb4500.c: 121: uint16_t pdo_current = ((pdo & 0x03FF) * 10);
  5680  00DA  30FF               	movlw	255
  5681  00DB  0533               	andwf	negotiate_optimal_pdo@pdo^(0+128),w
  5682  00DC  0140               	movlb	0	; select bank0
  5683  00DD  00A1               	movwf	___wmul@multiplier
  5684  00DE  3003               	movlw	3
  5685  00DF  0141               	movlb	1	; select bank1
  5686  00E0  0534               	andwf	(negotiate_optimal_pdo@pdo+1)^(0+128),w
  5687  00E1  0140               	movlb	0	; select bank0
  5688  00E2  00A2               	movwf	___wmul@multiplier+1
  5689  00E3  300A               	movlw	10
  5690  00E4  00A3               	movwf	___wmul@multiplicand
  5691  00E5  3000               	movlw	0
  5692  00E6  00A4               	movwf	___wmul@multiplicand+1
  5693  00E7  318C  2423  3180   	fcall	___wmul
  5694  00EA  0140               	movlb	0	; select bank0
  5695  00EB  0822               	movf	?___wmul+1,w
  5696  00EC  0141               	movlb	1	; select bank1
  5697  00ED  00AE               	movwf	(negotiate_optimal_pdo@pdo_current+1)^(0+128)
  5698  00EE  0140               	movlb	0	; select bank0
  5699  00EF  0821               	movf	?___wmul,w
  5700  00F0  0141               	movlb	1	; select bank1
  5701  00F1  00AD               	movwf	negotiate_optimal_pdo@pdo_current^(0+128)
  5702  00F2                     l3241:	
  5703                           
  5704                           ;stusb4500.c: 122: uint16_t pdo_voltage = (((pdo >> 10) & 0x03FF) * 50);
  5705  00F2  0833               	movf	negotiate_optimal_pdo@pdo^(0+128),w
  5706  00F3  0140               	movlb	0	; select bank0
  5707  00F4  00D1               	movwf	??_negotiate_optimal_pdo
  5708  00F5  0141               	movlb	1	; select bank1
  5709  00F6  0834               	movf	(negotiate_optimal_pdo@pdo+1)^(0+128),w
  5710  00F7  0140               	movlb	0	; select bank0
  5711  00F8  00D2               	movwf	??_negotiate_optimal_pdo+1
  5712  00F9  0141               	movlb	1	; select bank1
  5713  00FA  0835               	movf	(negotiate_optimal_pdo@pdo+2)^(0+128),w
  5714  00FB  0140               	movlb	0	; select bank0
  5715  00FC  00D3               	movwf	??_negotiate_optimal_pdo+2
  5716  00FD  0141               	movlb	1	; select bank1
  5717  00FE  0836               	movf	(negotiate_optimal_pdo@pdo+3)^(0+128),w
  5718  00FF  0140               	movlb	0	; select bank0
  5719  0100  00D4               	movwf	??_negotiate_optimal_pdo+3
  5720  0101  300A               	movlw	10
  5721  0102                     u2745:	
  5722  0102  36D4               	lsrf	??_negotiate_optimal_pdo+3,f
  5723  0103  0CD3               	rrf	??_negotiate_optimal_pdo+2,f
  5724  0104  0CD2               	rrf	??_negotiate_optimal_pdo+1,f
  5725  0105  0CD1               	rrf	??_negotiate_optimal_pdo,f
  5726  0106                     u2740:	
  5727  0106  0B89               	decfsz	9,f
  5728  0107  2902               	goto	u2745
  5729  0108  30FF               	movlw	255
  5730  0109  0551               	andwf	??_negotiate_optimal_pdo,w
  5731  010A  00A1               	movwf	___wmul@multiplier
  5732  010B  3003               	movlw	3
  5733  010C  0552               	andwf	??_negotiate_optimal_pdo+1,w
  5734  010D  00A2               	movwf	___wmul@multiplier+1
  5735  010E  3032               	movlw	50
  5736  010F  00A3               	movwf	___wmul@multiplicand
  5737  0110  3000               	movlw	0
  5738  0111  00A4               	movwf	___wmul@multiplicand+1
  5739  0112  318C  2423  3180   	fcall	___wmul
  5740  0115  0140               	movlb	0	; select bank0
  5741  0116  0822               	movf	?___wmul+1,w
  5742  0117  0141               	movlb	1	; select bank1
  5743  0118  00B8               	movwf	(negotiate_optimal_pdo@pdo_voltage+1)^(0+128)
  5744  0119  0140               	movlb	0	; select bank0
  5745  011A  0821               	movf	?___wmul,w
  5746  011B  0141               	movlb	1	; select bank1
  5747  011C  00B7               	movwf	negotiate_optimal_pdo@pdo_voltage^(0+128)
  5748  011D                     l3243:	
  5749                           
  5750                           ;stusb4500.c: 123: uint32_t pdo_power = (uint32_t)pdo_current * pdo_voltage / 1000;
  5751  011D  3000               	movlw	0
  5752  011E  0140               	movlb	0	; select bank0
  5753  011F  00B0               	movwf	___lldiv@divisor+3
  5754  0120  3000               	movlw	0
  5755  0121  00AF               	movwf	___lldiv@divisor+2
  5756  0122  3003               	movlw	3
  5757  0123  00AE               	movwf	___lldiv@divisor+1
  5758  0124  30E8               	movlw	232
  5759  0125  00AD               	movwf	___lldiv@divisor
  5760  0126  0141               	movlb	1	; select bank1
  5761  0127  082D               	movf	negotiate_optimal_pdo@pdo_current^(0+128),w
  5762  0128  0140               	movlb	0	; select bank0
  5763  0129  00A1               	movwf	___lmul@multiplier
  5764  012A  0141               	movlb	1	; select bank1
  5765  012B  082E               	movf	(negotiate_optimal_pdo@pdo_current+1)^(0+128),w
  5766  012C  0140               	movlb	0	; select bank0
  5767  012D  00A2               	movwf	___lmul@multiplier+1
  5768  012E  01A3               	clrf	___lmul@multiplier+2
  5769  012F  01A4               	clrf	___lmul@multiplier+3
  5770  0130  0141               	movlb	1	; select bank1
  5771  0131  0837               	movf	negotiate_optimal_pdo@pdo_voltage^(0+128),w
  5772  0132  0140               	movlb	0	; select bank0
  5773  0133  00A5               	movwf	___lmul@multiplicand
  5774  0134  0141               	movlb	1	; select bank1
  5775  0135  0838               	movf	(negotiate_optimal_pdo@pdo_voltage+1)^(0+128),w
  5776  0136  0140               	movlb	0	; select bank0
  5777  0137  00A6               	movwf	___lmul@multiplicand+1
  5778  0138  01A7               	clrf	___lmul@multiplicand+2
  5779  0139  01A8               	clrf	___lmul@multiplicand+3
  5780  013A  318D  25A6  3180   	fcall	___lmul
  5781  013D  0140               	movlb	0	; select bank0
  5782  013E  0824               	movf	?___lmul+3,w
  5783  013F  00B4               	movwf	___lldiv@dividend+3
  5784  0140  0823               	movf	?___lmul+2,w
  5785  0141  00B3               	movwf	___lldiv@dividend+2
  5786  0142  0822               	movf	?___lmul+1,w
  5787  0143  00B2               	movwf	___lldiv@dividend+1
  5788  0144  0821               	movf	?___lmul,w
  5789  0145  00B1               	movwf	___lldiv@dividend
  5790  0146  318F  2748  3180   	fcall	___lldiv
  5791  0149  0140               	movlb	0	; select bank0
  5792  014A  0830               	movf	?___lldiv+3,w
  5793  014B  0141               	movlb	1	; select bank1
  5794  014C  00AC               	movwf	(negotiate_optimal_pdo@pdo_power+3)^(0+128)
  5795  014D  0140               	movlb	0	; select bank0
  5796  014E  082F               	movf	?___lldiv+2,w
  5797  014F  0141               	movlb	1	; select bank1
  5798  0150  00AB               	movwf	(negotiate_optimal_pdo@pdo_power+2)^(0+128)
  5799  0151  0140               	movlb	0	; select bank0
  5800  0152  082E               	movf	?___lldiv+1,w
  5801  0153  0141               	movlb	1	; select bank1
  5802  0154  00AA               	movwf	(negotiate_optimal_pdo@pdo_power+1)^(0+128)
  5803  0155  0140               	movlb	0	; select bank0
  5804  0156  082D               	movf	?___lldiv,w
  5805  0157  0141               	movlb	1	; select bank1
  5806  0158  00A9               	movwf	negotiate_optimal_pdo@pdo_power^(0+128)
  5807  0159                     l3245:	
  5808                           
  5809                           ;stusb4500.c: 125: if (;stusb4500.c: 126: ((pdo >> 30) & 0x03) != 0x00 || pdo_current < 
      +                          0 ||;stusb4500.c: 127: pdo_voltage < 5000 || pdo_voltage > 12000)
  5810  0159  3003               	movlw	3
  5811  015A  0140               	movlb	0	; select bank0
  5812  015B  00D1               	movwf	??_negotiate_optimal_pdo
  5813  015C  3000               	movlw	0
  5814  015D  00D2               	movwf	??_negotiate_optimal_pdo+1
  5815  015E  3000               	movlw	0
  5816  015F  00D3               	movwf	??_negotiate_optimal_pdo+2
  5817  0160  3000               	movlw	0
  5818  0161  00D4               	movwf	??_negotiate_optimal_pdo+3
  5819  0162  0141               	movlb	1	; select bank1
  5820  0163  0833               	movf	negotiate_optimal_pdo@pdo^(0+128),w
  5821  0164  0140               	movlb	0	; select bank0
  5822  0165  00D5               	movwf	??_negotiate_optimal_pdo+4
  5823  0166  0141               	movlb	1	; select bank1
  5824  0167  0834               	movf	(negotiate_optimal_pdo@pdo+1)^(0+128),w
  5825  0168  0140               	movlb	0	; select bank0
  5826  0169  00D6               	movwf	??_negotiate_optimal_pdo+5
  5827  016A  0141               	movlb	1	; select bank1
  5828  016B  0835               	movf	(negotiate_optimal_pdo@pdo+2)^(0+128),w
  5829  016C  0140               	movlb	0	; select bank0
  5830  016D  00D7               	movwf	??_negotiate_optimal_pdo+6
  5831  016E  0141               	movlb	1	; select bank1
  5832  016F  0836               	movf	(negotiate_optimal_pdo@pdo+3)^(0+128),w
  5833  0170  0140               	movlb	0	; select bank0
  5834  0171  00D8               	movwf	??_negotiate_optimal_pdo+7
  5835  0172  301E               	movlw	30
  5836  0173                     u2755:	
  5837  0173  36D8               	lsrf	??_negotiate_optimal_pdo+7,f
  5838  0174  0CD7               	rrf	??_negotiate_optimal_pdo+6,f
  5839  0175  0CD6               	rrf	??_negotiate_optimal_pdo+5,f
  5840  0176  0CD5               	rrf	??_negotiate_optimal_pdo+4,f
  5841  0177                     u2750:	
  5842  0177  0B89               	decfsz	9,f
  5843  0178  2973               	goto	u2755
  5844  0179  0855               	movf	??_negotiate_optimal_pdo+4,w
  5845  017A  05D1               	andwf	??_negotiate_optimal_pdo,f
  5846  017B  0856               	movf	??_negotiate_optimal_pdo+5,w
  5847  017C  05D2               	andwf	??_negotiate_optimal_pdo+1,f
  5848  017D  0857               	movf	??_negotiate_optimal_pdo+6,w
  5849  017E  05D3               	andwf	??_negotiate_optimal_pdo+2,f
  5850  017F  0858               	movf	??_negotiate_optimal_pdo+7,w
  5851  0180  05D4               	andwf	??_negotiate_optimal_pdo+3,f
  5852  0181  0854               	movf	??_negotiate_optimal_pdo+3,w
  5853  0182  0453               	iorwf	??_negotiate_optimal_pdo+2,w
  5854  0183  0452               	iorwf	??_negotiate_optimal_pdo+1,w
  5855  0184  0451               	iorwf	??_negotiate_optimal_pdo,w
  5856  0185  1D03               	skipz
  5857  0186  2988               	goto	u2761
  5858  0187  2989               	goto	u2760
  5859  0188                     u2761:	
  5860  0188  29C1               	goto	l3257
  5861  0189                     u2760:	
  5862  0189                     l3247:	
  5863  0189  3013               	movlw	19
  5864  018A  0141               	movlb	1	; select bank1
  5865  018B  0238               	subwf	(negotiate_optimal_pdo@pdo_voltage+1)^(0+128),w
  5866  018C  3088               	movlw	136
  5867  018D  1903               	skipnz
  5868  018E  0237               	subwf	negotiate_optimal_pdo@pdo_voltage^(0+128),w
  5869  018F  1C03               	skipc
  5870  0190  2992               	goto	u2771
  5871  0191  2993               	goto	u2770
  5872  0192                     u2771:	
  5873  0192  29C1               	goto	l3257
  5874  0193                     u2770:	
  5875  0193                     l3249:	
  5876  0193  302E               	movlw	46
  5877  0194  0238               	subwf	(negotiate_optimal_pdo@pdo_voltage+1)^(0+128),w
  5878  0195  30E1               	movlw	225
  5879  0196  1903               	skipnz
  5880  0197  0237               	subwf	negotiate_optimal_pdo@pdo_voltage^(0+128),w
  5881  0198  1C03               	skipc
  5882  0199  299B               	goto	u2781
  5883  019A  299C               	goto	u2780
  5884  019B                     u2781:	
  5885  019B  299D               	goto	l3251
  5886  019C                     u2780:	
  5887  019C  29C1               	goto	l3257
  5888  019D                     l3251:	
  5889                           
  5890                           ;stusb4500.c: 129: if (pdo_power > opt_pdo_power) {
  5891  019D  082C               	movf	(negotiate_optimal_pdo@pdo_power+3)^(0+128),w
  5892  019E  0223               	subwf	(negotiate_optimal_pdo@opt_pdo_power+3)^(0+128),w
  5893  019F  1D03               	skipz
  5894  01A0  29AB               	goto	u2795
  5895  01A1  082B               	movf	(negotiate_optimal_pdo@pdo_power+2)^(0+128),w
  5896  01A2  0222               	subwf	(negotiate_optimal_pdo@opt_pdo_power+2)^(0+128),w
  5897  01A3  1D03               	skipz
  5898  01A4  29AB               	goto	u2795
  5899  01A5  082A               	movf	(negotiate_optimal_pdo@pdo_power+1)^(0+128),w
  5900  01A6  0221               	subwf	(negotiate_optimal_pdo@opt_pdo_power+1)^(0+128),w
  5901  01A7  1D03               	skipz
  5902  01A8  29AB               	goto	u2795
  5903  01A9  0829               	movf	negotiate_optimal_pdo@pdo_power^(0+128),w
  5904  01AA  0220               	subwf	negotiate_optimal_pdo@opt_pdo_power^(0+128),w
  5905  01AB                     u2795:	
  5906  01AB  1803               	skipnc
  5907  01AC  29AE               	goto	u2791
  5908  01AD  29AF               	goto	u2790
  5909  01AE                     u2791:	
  5910  01AE  29C1               	goto	l3257
  5911  01AF                     u2790:	
  5912  01AF                     l3253:	
  5913                           
  5914                           ;stusb4500.c: 130: opt_pdo_current = pdo_current;
  5915  01AF  082E               	movf	(negotiate_optimal_pdo@pdo_current+1)^(0+128),w
  5916  01B0  00A5               	movwf	(negotiate_optimal_pdo@opt_pdo_current+1)^(0+128)
  5917  01B1  082D               	movf	negotiate_optimal_pdo@pdo_current^(0+128),w
  5918  01B2  00A4               	movwf	negotiate_optimal_pdo@opt_pdo_current^(0+128)
  5919                           
  5920                           ;stusb4500.c: 131: opt_pdo_voltage = pdo_voltage;
  5921  01B3  0838               	movf	(negotiate_optimal_pdo@pdo_voltage+1)^(0+128),w
  5922  01B4  00A7               	movwf	(negotiate_optimal_pdo@opt_pdo_voltage+1)^(0+128)
  5923  01B5  0837               	movf	negotiate_optimal_pdo@pdo_voltage^(0+128),w
  5924  01B6  00A6               	movwf	negotiate_optimal_pdo@opt_pdo_voltage^(0+128)
  5925                           
  5926                           ;stusb4500.c: 132: opt_pdo_power = pdo_power;
  5927  01B7  082C               	movf	(negotiate_optimal_pdo@pdo_power+3)^(0+128),w
  5928  01B8  00A3               	movwf	(negotiate_optimal_pdo@opt_pdo_power+3)^(0+128)
  5929  01B9  082B               	movf	(negotiate_optimal_pdo@pdo_power+2)^(0+128),w
  5930  01BA  00A2               	movwf	(negotiate_optimal_pdo@opt_pdo_power+2)^(0+128)
  5931  01BB  082A               	movf	(negotiate_optimal_pdo@pdo_power+1)^(0+128),w
  5932  01BC  00A1               	movwf	(negotiate_optimal_pdo@opt_pdo_power+1)^(0+128)
  5933  01BD  0829               	movf	negotiate_optimal_pdo@pdo_power^(0+128),w
  5934  01BE  00A0               	movwf	negotiate_optimal_pdo@opt_pdo_power^(0+128)
  5935  01BF                     l3255:	
  5936                           
  5937                           ;stusb4500.c: 133: ok = 0;
  5938  01BF  01B1               	clrf	negotiate_optimal_pdo@ok^(0+128)
  5939  01C0  01B2               	clrf	(negotiate_optimal_pdo@ok+1)^(0+128)
  5940  01C1                     l3257:	
  5941  01C1  3001               	movlw	1
  5942  01C2  0141               	movlb	1	; select bank1
  5943  01C3  07AF               	addwf	negotiate_optimal_pdo@i^(0+128),f
  5944  01C4  3000               	movlw	0
  5945  01C5  3DB0               	addwfc	(negotiate_optimal_pdo@i+1)^(0+128),f
  5946  01C6                     l3259:	
  5947  01C6  0830               	movf	(negotiate_optimal_pdo@i+1)^(0+128),w
  5948  01C7  3A80               	xorlw	128
  5949  01C8  0140               	movlb	0	; select bank0
  5950  01C9  00D1               	movwf	??_negotiate_optimal_pdo
  5951  01CA  3080               	movlw	128
  5952  01CB  0251               	subwf	??_negotiate_optimal_pdo,w
  5953  01CC  1D03               	skipz
  5954  01CD  29D1               	goto	u2805
  5955  01CE  084F               	movf	negotiate_optimal_pdo@num_pdos,w
  5956  01CF  0141               	movlb	1	; select bank1
  5957  01D0  022F               	subwf	negotiate_optimal_pdo@i^(0+128),w
  5958  01D1                     u2805:	
  5959  01D1  1C03               	skipc
  5960  01D2  29D4               	goto	u2801
  5961  01D3  29D5               	goto	u2800
  5962  01D4                     u2801:	
  5963  01D4  28C0               	goto	l3237
  5964  01D5                     u2800:	
  5965  01D5                     l3261:	
  5966                           
  5967                           ;stusb4500.c: 134: };stusb4500.c: 135: };stusb4500.c: 138: if (ok == 0) ok = write_pdo(o
      +                          pt_pdo_current, opt_pdo_voltage, 3);
  5968  01D5  0141               	movlb	1	; select bank1
  5969  01D6  0831               	movf	negotiate_optimal_pdo@ok^(0+128),w
  5970  01D7  0432               	iorwf	(negotiate_optimal_pdo@ok+1)^(0+128),w
  5971  01D8  1D03               	btfss	3,2
  5972  01D9  29DB               	goto	u2811
  5973  01DA  29DC               	goto	u2810
  5974  01DB                     u2811:	
  5975  01DB  29FA               	goto	l3265
  5976  01DC                     u2810:	
  5977  01DC                     l3263:	
  5978  01DC  0825               	movf	(negotiate_optimal_pdo@opt_pdo_current+1)^(0+128),w
  5979  01DD  0140               	movlb	0	; select bank0
  5980  01DE  00BB               	movwf	write_pdo@current_mA+1
  5981  01DF  0141               	movlb	1	; select bank1
  5982  01E0  0824               	movf	negotiate_optimal_pdo@opt_pdo_current^(0+128),w
  5983  01E1  0140               	movlb	0	; select bank0
  5984  01E2  00BA               	movwf	write_pdo@current_mA
  5985  01E3  0141               	movlb	1	; select bank1
  5986  01E4  0827               	movf	(negotiate_optimal_pdo@opt_pdo_voltage+1)^(0+128),w
  5987  01E5  0140               	movlb	0	; select bank0
  5988  01E6  00BD               	movwf	write_pdo@voltage_mV+1
  5989  01E7  0141               	movlb	1	; select bank1
  5990  01E8  0826               	movf	negotiate_optimal_pdo@opt_pdo_voltage^(0+128),w
  5991  01E9  0140               	movlb	0	; select bank0
  5992  01EA  00BC               	movwf	write_pdo@voltage_mV
  5993  01EB  3003               	movlw	3
  5994  01EC  00D1               	movwf	??_negotiate_optimal_pdo
  5995  01ED  0851               	movf	??_negotiate_optimal_pdo,w
  5996  01EE  00BE               	movwf	write_pdo@pdo_num
  5997  01EF  3185  253F  3180   	fcall	_write_pdo
  5998  01F2  0140               	movlb	0	; select bank0
  5999  01F3  083B               	movf	?_write_pdo+1,w
  6000  01F4  0141               	movlb	1	; select bank1
  6001  01F5  00B2               	movwf	(negotiate_optimal_pdo@ok+1)^(0+128)
  6002  01F6  0140               	movlb	0	; select bank0
  6003  01F7  083A               	movf	?_write_pdo,w
  6004  01F8  0141               	movlb	1	; select bank1
  6005  01F9  00B1               	movwf	negotiate_optimal_pdo@ok^(0+128)
  6006  01FA                     l3265:	
  6007                           
  6008                           ;stusb4500.c: 140: return ok;
  6009  01FA  0832               	movf	(negotiate_optimal_pdo@ok+1)^(0+128),w
  6010  01FB  0140               	movlb	0	; select bank0
  6011  01FC  00D0               	movwf	?_negotiate_optimal_pdo+1
  6012  01FD  0141               	movlb	1	; select bank1
  6013  01FE  0831               	movf	negotiate_optimal_pdo@ok^(0+128),w
  6014  01FF  0140               	movlb	0	; select bank0
  6015  0200  00CF               	movwf	?_negotiate_optimal_pdo
  6016  0201                     l619:	
  6017  0201  0008               	return
  6018  0202                     __end_of_negotiate_optimal_pdo:	
  6019                           
  6020                           	psect	text5
  6021  053F                     __ptext5:	
  6022 ;; *************** function _write_pdo *****************
  6023 ;; Defined at:
  6024 ;;		line 92 in file "stusb4500.c"
  6025 ;; Parameters:    Size  Location     Type
  6026 ;;  current_mA      2   25[BANK0 ] unsigned int 
  6027 ;;  voltage_mV      2   27[BANK0 ] unsigned int 
  6028 ;;  pdo_num         1   29[BANK0 ] unsigned char 
  6029 ;; Auto vars:     Size  Location     Type
  6030 ;;  pdo             4   42[BANK0 ] unsigned long 
  6031 ;; Return value:  Size  Location     Type
  6032 ;;                  2   25[BANK0 ] int 
  6033 ;; Registers used:
  6034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6035 ;; Tracked objects:
  6036 ;;		On entry : 0/0
  6037 ;;		On exit  : 0/0
  6038 ;;		Unchanged: 0/0
  6039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6040 ;;      Params:         0       5       0       0       0       0       0       0
  6041 ;;      Locals:         0       4       0       0       0       0       0       0
  6042 ;;      Temps:          0      12       0       0       0       0       0       0
  6043 ;;      Totals:         0      21       0       0       0       0       0       0
  6044 ;;Total ram usage:       21 bytes
  6045 ;; Hardware stack levels used:    1
  6046 ;; Hardware stack levels required when called:    7
  6047 ;; This function calls:
  6048 ;;		___lwdiv
  6049 ;;		_i2c_master_write_u32
  6050 ;;		_reset
  6051 ;; This function is called by:
  6052 ;;		_negotiate_optimal_pdo
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           
  6057                           ;psect for function _write_pdo
  6058  053F                     _write_pdo:	
  6059  053F                     l3059:	
  6060                           ;incstack = 0
  6061                           ; Regs used in _write_pdo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6062                           
  6063                           
  6064                           ;stusb4500.c: 93: if (pdo_num < 1 || pdo_num > 3) return -1;
  6065  053F  0140               	movlb	0	; select bank0
  6066  0540  083E               	movf	write_pdo@pdo_num,w
  6067  0541  1903               	btfsc	3,2
  6068  0542  2D44               	goto	u2401
  6069  0543  2D45               	goto	u2400
  6070  0544                     u2401:	
  6071  0544  2D4B               	goto	l3063
  6072  0545                     u2400:	
  6073  0545                     l3061:	
  6074  0545  3004               	movlw	4
  6075  0546  023E               	subwf	write_pdo@pdo_num,w
  6076  0547  1C03               	skipc
  6077  0548  2D4A               	goto	u2411
  6078  0549  2D4B               	goto	u2410
  6079  054A                     u2411:	
  6080  054A  2D50               	goto	l3067
  6081  054B                     u2410:	
  6082  054B                     l3063:	
  6083  054B  30FF               	movlw	255
  6084  054C  00BA               	movwf	?_write_pdo
  6085  054D  30FF               	movlw	255
  6086  054E  00BB               	movwf	?_write_pdo+1
  6087  054F  2DBB               	goto	l606
  6088  0550                     l3067:	
  6089                           
  6090                           ;stusb4500.c: 96: uint32_t pdo =;stusb4500.c: 97: 0x00000000 | ((current_mA / 10) & 0x03
      +                          FF) | ((uint32_t)((voltage_mV / 50) & 0x03FF) << 10);
  6091  0550  3032               	movlw	50
  6092  0551  00A1               	movwf	___lwdiv@divisor
  6093  0552  3000               	movlw	0
  6094  0553  00A2               	movwf	___lwdiv@divisor+1
  6095  0554  083D               	movf	write_pdo@voltage_mV+1,w
  6096  0555  00A4               	movwf	___lwdiv@dividend+1
  6097  0556  083C               	movf	write_pdo@voltage_mV,w
  6098  0557  00A3               	movwf	___lwdiv@dividend
  6099  0558  318D  25DA  3185   	fcall	___lwdiv
  6100  055B  30FF               	movlw	255
  6101  055C  0140               	movlb	0	; select bank0
  6102  055D  0521               	andwf	?___lwdiv,w
  6103  055E  00BF               	movwf	??_write_pdo
  6104  055F  3003               	movlw	3
  6105  0560  0522               	andwf	?___lwdiv+1,w
  6106  0561  00C0               	movwf	??_write_pdo+1
  6107  0562  083F               	movf	??_write_pdo,w
  6108  0563  00C1               	movwf	??_write_pdo+2
  6109  0564  0840               	movf	??_write_pdo+1,w
  6110  0565  00C2               	movwf	??_write_pdo+3
  6111  0566  01C3               	clrf	??_write_pdo+4
  6112  0567  01C4               	clrf	??_write_pdo+5
  6113  0568  300A               	movlw	10
  6114  0569                     u2425:	
  6115  0569  35C1               	lslf	??_write_pdo+2,f
  6116  056A  0DC2               	rlf	??_write_pdo+3,f
  6117  056B  0DC3               	rlf	??_write_pdo+4,f
  6118  056C  0DC4               	rlf	??_write_pdo+5,f
  6119  056D                     u2420:	
  6120  056D  0B89               	decfsz	9,f
  6121  056E  2D69               	goto	u2425
  6122  056F  300A               	movlw	10
  6123  0570  00A1               	movwf	___lwdiv@divisor
  6124  0571  3000               	movlw	0
  6125  0572  00A2               	movwf	___lwdiv@divisor+1
  6126  0573  083B               	movf	write_pdo@current_mA+1,w
  6127  0574  00A4               	movwf	___lwdiv@dividend+1
  6128  0575  083A               	movf	write_pdo@current_mA,w
  6129  0576  00A3               	movwf	___lwdiv@dividend
  6130  0577  318D  25DA  3185   	fcall	___lwdiv
  6131  057A  30FF               	movlw	255
  6132  057B  0140               	movlb	0	; select bank0
  6133  057C  0521               	andwf	?___lwdiv,w
  6134  057D  00C5               	movwf	??_write_pdo+6
  6135  057E  3003               	movlw	3
  6136  057F  0522               	andwf	?___lwdiv+1,w
  6137  0580  00C6               	movwf	??_write_pdo+7
  6138  0581  0845               	movf	??_write_pdo+6,w
  6139  0582  00C7               	movwf	??_write_pdo+8
  6140  0583  0846               	movf	??_write_pdo+7,w
  6141  0584  00C8               	movwf	??_write_pdo+9
  6142  0585  01C9               	clrf	??_write_pdo+10
  6143  0586  01CA               	clrf	??_write_pdo+11
  6144  0587  0841               	movf	??_write_pdo+2,w
  6145  0588  0447               	iorwf	??_write_pdo+8,w
  6146  0589  00CB               	movwf	write_pdo@pdo
  6147  058A  0842               	movf	??_write_pdo+3,w
  6148  058B  0448               	iorwf	??_write_pdo+9,w
  6149  058C  00CC               	movwf	write_pdo@pdo+1
  6150  058D  0843               	movf	??_write_pdo+4,w
  6151  058E  0449               	iorwf	??_write_pdo+10,w
  6152  058F  00CD               	movwf	write_pdo@pdo+2
  6153  0590  0844               	movf	??_write_pdo+5,w
  6154  0591  044A               	iorwf	??_write_pdo+11,w
  6155  0592  00CE               	movwf	write_pdo@pdo+3
  6156  0593                     l3069:	
  6157                           
  6158                           ;stusb4500.c: 100: if (;stusb4500.c: 101: i2c_master_write_u32(0x28, 0x85 + 4 * (pdo_num
      +                           - 1), pdo) !=;stusb4500.c: 102: 0)
  6159  0593  083E               	movf	write_pdo@pdo_num,w
  6160  0594  00BF               	movwf	??_write_pdo
  6161  0595  3001               	movlw	1
  6162  0596                     u2435:	
  6163  0596  35BF               	lslf	??_write_pdo,f
  6164  0597  3EFF               	addlw	-1
  6165  0598  1D03               	skipz
  6166  0599  2D96               	goto	u2435
  6167  059A  353F               	lslf	??_write_pdo,w
  6168  059B  3E81               	addlw	129
  6169  059C  00C0               	movwf	??_write_pdo+1
  6170  059D  0840               	movf	??_write_pdo+1,w
  6171  059E  00AF               	movwf	i2c_master_write_u32@reg
  6172  059F  084E               	movf	write_pdo@pdo+3,w
  6173  05A0  00B3               	movwf	i2c_master_write_u32@data+3
  6174  05A1  084D               	movf	write_pdo@pdo+2,w
  6175  05A2  00B2               	movwf	i2c_master_write_u32@data+2
  6176  05A3  084C               	movf	write_pdo@pdo+1,w
  6177  05A4  00B1               	movwf	i2c_master_write_u32@data+1
  6178  05A5  084B               	movf	write_pdo@pdo,w
  6179  05A6  00B0               	movwf	i2c_master_write_u32@data
  6180  05A7  3028               	movlw	40
  6181  05A8  318B  2386  3185   	fcall	_i2c_master_write_u32
  6182  05AB  0140               	movlb	0	; select bank0
  6183  05AC  082F               	movf	?_i2c_master_write_u32,w
  6184  05AD  0430               	iorwf	?_i2c_master_write_u32+1,w
  6185  05AE  1903               	btfsc	3,2
  6186  05AF  2DB1               	goto	u2441
  6187  05B0  2DB2               	goto	u2440
  6188  05B1                     u2441:	
  6189  05B1  2DB3               	goto	l3075
  6190  05B2                     u2440:	
  6191  05B2  2D4B               	goto	l3063
  6192  05B3                     l3075:	
  6193                           
  6194                           ;stusb4500.c: 106: return reset();
  6195  05B3  3187  2728  3185   	fcall	_reset
  6196  05B6  0140               	movlb	0	; select bank0
  6197  05B7  0834               	movf	?_reset+1,w
  6198  05B8  00BB               	movwf	?_write_pdo+1
  6199  05B9  0833               	movf	?_reset,w
  6200  05BA  00BA               	movwf	?_write_pdo
  6201  05BB                     l606:	
  6202  05BB  0008               	return
  6203  05BC                     __end_of_write_pdo:	
  6204                           
  6205                           	psect	text6
  6206  0728                     __ptext6:	
  6207 ;; *************** function _reset *****************
  6208 ;; Defined at:
  6209 ;;		line 66 in file "stusb4500.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;		None
  6212 ;; Auto vars:     Size  Location     Type
  6213 ;;  res             1   22[BANK0 ] unsigned char 
  6214 ;;  ok              2   23[BANK0 ] int 
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  2   18[BANK0 ] int 
  6217 ;; Registers used:
  6218 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6219 ;; Tracked objects:
  6220 ;;		On entry : 0/0
  6221 ;;		On exit  : 0/0
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6224 ;;      Params:         0       2       0       0       0       0       0       0
  6225 ;;      Locals:         0       3       0       0       0       0       0       0
  6226 ;;      Temps:          0       2       0       0       0       0       0       0
  6227 ;;      Totals:         0       7       0       0       0       0       0       0
  6228 ;;Total ram usage:        7 bytes
  6229 ;; Hardware stack levels used:    1
  6230 ;; Hardware stack levels required when called:    6
  6231 ;; This function calls:
  6232 ;;		_i2c_master_read_u8
  6233 ;;		_i2c_master_write_u8
  6234 ;; This function is called by:
  6235 ;;		_write_pdo
  6236 ;;		_stusb_negotiate
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           
  6241                           ;psect for function _reset
  6242  0728                     _reset:	
  6243  0728                     l2921:	
  6244                           ;incstack = 0
  6245                           ; Regs used in _reset: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6246                           
  6247  0728                     l2923:	
  6248  0728                     l2925:	
  6249                           ;stusb4500.c: 70: if (ok == 0)
  6250                           
  6251                           
  6252                           ;stusb4500.c: 71: ok = i2c_master_write_u8(0x28, 0x23, 0x01);
  6253  0728  3023               	movlw	35
  6254  0729  0140               	movlb	0	; select bank0
  6255  072A  00B5               	movwf	??_reset
  6256  072B  0835               	movf	??_reset,w
  6257  072C  00AF               	movwf	i2c_master_write_u8@reg
  6258  072D  01B0               	clrf	i2c_master_write_u8@data
  6259  072E  0AB0               	incf	i2c_master_write_u8@data,f
  6260  072F  3028               	movlw	40
  6261  0730  318B  23B6  3187   	fcall	_i2c_master_write_u8
  6262  0733  0140               	movlb	0	; select bank0
  6263  0734  0830               	movf	?_i2c_master_write_u8+1,w
  6264  0735  00B9               	movwf	reset@ok+1
  6265  0736  082F               	movf	?_i2c_master_write_u8,w
  6266  0737  00B8               	movwf	reset@ok
  6267  0738                     l2927:	
  6268                           
  6269                           ;stusb4500.c: 74: if (ok == 0) {
  6270  0738  0838               	movf	reset@ok,w
  6271  0739  0439               	iorwf	reset@ok+1,w
  6272  073A  1D03               	btfss	3,2
  6273  073B  2F3D               	goto	u2121
  6274  073C  2F3E               	goto	u2120
  6275  073D                     u2121:	
  6276  073D  2F61               	goto	l2937
  6277  073E                     u2120:	
  6278  073E                     l2929:	
  6279                           
  6280                           ;stusb4500.c: 77: ok = i2c_master_read_u8(0x28, 0x2F, &res);
  6281  073E  302F               	movlw	47
  6282  073F  00B5               	movwf	??_reset
  6283  0740  0835               	movf	??_reset,w
  6284  0741  00AE               	movwf	i2c_master_read_u8@reg
  6285  0742  3037               	movlw	(low (reset@res| 0))& (0+255)
  6286  0743  00B6               	movwf	??_reset+1
  6287  0744  0836               	movf	??_reset+1,w
  6288  0745  00AF               	movwf	i2c_master_read_u8@data
  6289  0746  3028               	movlw	40
  6290  0747  318B  239E  3187   	fcall	_i2c_master_read_u8
  6291  074A  0140               	movlb	0	; select bank0
  6292  074B  082F               	movf	?_i2c_master_read_u8+1,w
  6293  074C  00B9               	movwf	reset@ok+1
  6294  074D  082E               	movf	?_i2c_master_read_u8,w
  6295  074E  00B8               	movwf	reset@ok
  6296  074F                     l2931:	
  6297                           
  6298                           ;stusb4500.c: 78: } while (ok == 0 && res != 0x25 && res != 0x21);
  6299  074F  0838               	movf	reset@ok,w
  6300  0750  0439               	iorwf	reset@ok+1,w
  6301  0751  1D03               	btfss	3,2
  6302  0752  2F54               	goto	u2131
  6303  0753  2F55               	goto	u2130
  6304  0754                     u2131:	
  6305  0754  2F61               	goto	l2937
  6306  0755                     u2130:	
  6307  0755                     l2933:	
  6308  0755  3025               	movlw	37
  6309  0756  0637               	xorwf	reset@res,w
  6310  0757  1903               	btfsc	3,2
  6311  0758  2F5A               	goto	u2141
  6312  0759  2F5B               	goto	u2140
  6313  075A                     u2141:	
  6314  075A  2F61               	goto	l2937
  6315  075B                     u2140:	
  6316  075B                     l2935:	
  6317  075B  3021               	movlw	33
  6318  075C  0637               	xorwf	reset@res,w
  6319  075D  1D03               	btfss	3,2
  6320  075E  2F60               	goto	u2151
  6321  075F  2F61               	goto	u2150
  6322  0760                     u2151:	
  6323  0760  2F3E               	goto	l2929
  6324  0761                     u2150:	
  6325  0761                     l2937:	
  6326                           
  6327                           ;stusb4500.c: 79: };stusb4500.c: 82: if (ok == 0) _delay((unsigned long)((27)*(32000000/
      +                          4000.0)));
  6328  0761  0838               	movf	reset@ok,w
  6329  0762  0439               	iorwf	reset@ok+1,w
  6330  0763  1D03               	btfss	3,2
  6331  0764  2F66               	goto	u2161
  6332  0765  2F67               	goto	u2160
  6333  0766                     u2161:	
  6334  0766  2F74               	goto	l2941
  6335  0767                     u2160:	
  6336  0767                     l2939:	
  6337  0767  3002               	movlw	2
  6338  0768  0140               	movlb	0	; select bank0
  6339  0769  00B6               	movwf	??_reset+1
  6340  076A  3019               	movlw	25
  6341  076B  00B5               	movwf	??_reset
  6342  076C  3081               	movlw	129
  6343  076D                     u4007:	
  6344  076D  0B89               	decfsz	9,f
  6345  076E  2F6D               	goto	u4007
  6346  076F  0BB5               	decfsz	??_reset,f
  6347  0770  2F6D               	goto	u4007
  6348  0771  0BB6               	decfsz	??_reset+1,f
  6349  0772  2F6D               	goto	u4007
  6350  0773  3200               	nop2
  6351  0774                     l2941:	
  6352                           
  6353                           ;stusb4500.c: 85: if (ok == 0)
  6354  0774  0140               	movlb	0	; select bank0
  6355  0775  0838               	movf	reset@ok,w
  6356  0776  0439               	iorwf	reset@ok+1,w
  6357  0777  1D03               	btfss	3,2
  6358  0778  2F7A               	goto	u2171
  6359  0779  2F7B               	goto	u2170
  6360  077A                     u2171:	
  6361  077A  2F89               	goto	l2945
  6362  077B                     u2170:	
  6363  077B                     l2943:	
  6364                           
  6365                           ;stusb4500.c: 86: ok = i2c_master_write_u8(0x28, 0x23, 0x00);
  6366  077B  3023               	movlw	35
  6367  077C  00B5               	movwf	??_reset
  6368  077D  0835               	movf	??_reset,w
  6369  077E  00AF               	movwf	i2c_master_write_u8@reg
  6370  077F  01B0               	clrf	i2c_master_write_u8@data
  6371  0780  3028               	movlw	40
  6372  0781  318B  23B6  3187   	fcall	_i2c_master_write_u8
  6373  0784  0140               	movlb	0	; select bank0
  6374  0785  0830               	movf	?_i2c_master_write_u8+1,w
  6375  0786  00B9               	movwf	reset@ok+1
  6376  0787  082F               	movf	?_i2c_master_write_u8,w
  6377  0788  00B8               	movwf	reset@ok
  6378  0789                     l2945:	
  6379                           
  6380                           ;stusb4500.c: 88: return (ok == 0) ? 0 : -1;
  6381  0789  0838               	movf	reset@ok,w
  6382  078A  0439               	iorwf	reset@ok+1,w
  6383  078B  1903               	btfsc	3,2
  6384  078C  2F8E               	goto	u2181
  6385  078D  2F8F               	goto	u2180
  6386  078E                     u2181:	
  6387  078E  2F94               	goto	l2949
  6388  078F                     u2180:	
  6389  078F                     l2947:	
  6390  078F  30FF               	movlw	255
  6391  0790  00B3               	movwf	?_reset
  6392  0791  30FF               	movlw	255
  6393  0792  00B4               	movwf	?_reset+1
  6394  0793  2F96               	goto	l600
  6395  0794                     l2949:	
  6396  0794  01B3               	clrf	?_reset
  6397  0795  01B4               	clrf	?_reset+1
  6398  0796                     l600:	
  6399  0796  0008               	return
  6400  0797                     __end_of_reset:	
  6401                           
  6402                           	psect	text7
  6403  0BB6                     __ptext7:	
  6404 ;; *************** function _i2c_master_write_u8 *****************
  6405 ;; Defined at:
  6406 ;;		line 73 in file "i2c_driver_stusb4500.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;  device          1    wreg     const unsigned char 
  6409 ;;  reg             1   14[BANK0 ] const unsigned char 
  6410 ;;  data            1   15[BANK0 ] const unsigned char 
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;  device          1   17[BANK0 ] const unsigned char 
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  2   14[BANK0 ] int 
  6415 ;; Registers used:
  6416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6422 ;;      Params:         0       2       0       0       0       0       0       0
  6423 ;;      Locals:         0       1       0       0       0       0       0       0
  6424 ;;      Temps:          0       1       0       0       0       0       0       0
  6425 ;;      Totals:         0       4       0       0       0       0       0       0
  6426 ;;Total ram usage:        4 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:    5
  6429 ;; This function calls:
  6430 ;;		_i2c_master_write
  6431 ;; This function is called by:
  6432 ;;		_reset
  6433 ;;		_send_pd_message
  6434 ;;		_enter_write_mode
  6435 ;;		_enter_read_mode
  6436 ;;		_read_sector
  6437 ;;		_write_sector
  6438 ;;		_exit_rw_mode
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           
  6443                           ;psect for function _i2c_master_write_u8
  6444  0BB6                     _i2c_master_write_u8:	
  6445                           
  6446                           ;incstack = 0
  6447                           ; Regs used in _i2c_master_write_u8: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6448                           ;i2c_master_write_u8@device stored from wreg
  6449  0BB6  0140               	movlb	0	; select bank0
  6450  0BB7  00B2               	movwf	i2c_master_write_u8@device
  6451  0BB8                     l2883:	
  6452                           
  6453                           ;i2c_driver_stusb4500.c: 75: return i2c_master_write(device, reg, &data, 1);
  6454  0BB8  082F               	movf	i2c_master_write_u8@reg,w
  6455  0BB9  00B1               	movwf	??_i2c_master_write_u8
  6456  0BBA  0831               	movf	??_i2c_master_write_u8,w
  6457  0BBB  00A5               	movwf	i2c_master_write@reg
  6458  0BBC  3030               	movlw	low i2c_master_write_u8@data
  6459  0BBD  00A6               	movwf	i2c_master_write@buf
  6460  0BBE  3000               	movlw	high i2c_master_write_u8@data
  6461  0BBF  00A7               	movwf	i2c_master_write@buf+1
  6462  0BC0  3001               	movlw	1
  6463  0BC1  00A8               	movwf	i2c_master_write@len
  6464  0BC2  3000               	movlw	0
  6465  0BC3  00A9               	movwf	i2c_master_write@len+1
  6466  0BC4  0832               	movf	i2c_master_write_u8@device,w
  6467  0BC5  318F  27A3  318B   	fcall	_i2c_master_write
  6468  0BC8  0140               	movlb	0	; select bank0
  6469  0BC9  0826               	movf	?_i2c_master_write+1,w
  6470  0BCA  00B0               	movwf	?_i2c_master_write_u8+1
  6471  0BCB  0825               	movf	?_i2c_master_write,w
  6472  0BCC  00AF               	movwf	?_i2c_master_write_u8
  6473  0BCD                     l694:	
  6474  0BCD  0008               	return
  6475  0BCE                     __end_of_i2c_master_write_u8:	
  6476                           
  6477                           	psect	text8
  6478  0B9E                     __ptext8:	
  6479 ;; *************** function _i2c_master_read_u8 *****************
  6480 ;; Defined at:
  6481 ;;		line 111 in file "i2c_driver_stusb4500.c"
  6482 ;; Parameters:    Size  Location     Type
  6483 ;;  device          1    wreg     const unsigned char 
  6484 ;;  reg             1   13[BANK0 ] const unsigned char 
  6485 ;;  data            1   14[BANK0 ] PTR unsigned char 
  6486 ;;		 -> write_sector@buffer(1), read_sector@buffer(1), enter_write_mode@buffer(1), stusb_negotiate@buffer(40), 
  6487 ;;		 -> reset@res(1), 
  6488 ;; Auto vars:     Size  Location     Type
  6489 ;;  device          1   17[BANK0 ] const unsigned char 
  6490 ;; Return value:  Size  Location     Type
  6491 ;;                  2   13[BANK0 ] int 
  6492 ;; Registers used:
  6493 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6494 ;; Tracked objects:
  6495 ;;		On entry : 0/0
  6496 ;;		On exit  : 0/0
  6497 ;;		Unchanged: 0/0
  6498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6499 ;;      Params:         0       2       0       0       0       0       0       0
  6500 ;;      Locals:         0       1       0       0       0       0       0       0
  6501 ;;      Temps:          0       2       0       0       0       0       0       0
  6502 ;;      Totals:         0       5       0       0       0       0       0       0
  6503 ;;Total ram usage:        5 bytes
  6504 ;; Hardware stack levels used:    1
  6505 ;; Hardware stack levels required when called:    5
  6506 ;; This function calls:
  6507 ;;		_i2c_master_read
  6508 ;; This function is called by:
  6509 ;;		_reset
  6510 ;;		_stusb_negotiate
  6511 ;;		_enter_write_mode
  6512 ;;		_read_sector
  6513 ;;		_write_sector
  6514 ;; This function uses a non-reentrant model
  6515 ;;
  6516                           
  6517                           
  6518                           ;psect for function _i2c_master_read_u8
  6519  0B9E                     _i2c_master_read_u8:	
  6520                           
  6521                           ;incstack = 0
  6522                           ; Regs used in _i2c_master_read_u8: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6523                           ;i2c_master_read_u8@device stored from wreg
  6524  0B9E  0140               	movlb	0	; select bank0
  6525  0B9F  00B2               	movwf	i2c_master_read_u8@device
  6526  0BA0                     l2887:	
  6527                           
  6528                           ;i2c_driver_stusb4500.c: 112: return i2c_master_read(device, reg, data, 1);
  6529  0BA0  082E               	movf	i2c_master_read_u8@reg,w
  6530  0BA1  00B0               	movwf	??_i2c_master_read_u8
  6531  0BA2  0830               	movf	??_i2c_master_read_u8,w
  6532  0BA3  00A5               	movwf	i2c_master_read@reg
  6533  0BA4  082F               	movf	i2c_master_read_u8@data,w
  6534  0BA5  00B1               	movwf	??_i2c_master_read_u8+1
  6535  0BA6  0831               	movf	??_i2c_master_read_u8+1,w
  6536  0BA7  00A6               	movwf	i2c_master_read@buf
  6537  0BA8  3001               	movlw	1
  6538  0BA9  00A7               	movwf	i2c_master_read@len
  6539  0BAA  3000               	movlw	0
  6540  0BAB  00A8               	movwf	i2c_master_read@len+1
  6541  0BAC  0832               	movf	i2c_master_read_u8@device,w
  6542  0BAD  3185  25BC  318B   	fcall	_i2c_master_read
  6543  0BB0  0140               	movlb	0	; select bank0
  6544  0BB1  0826               	movf	?_i2c_master_read+1,w
  6545  0BB2  00AF               	movwf	?_i2c_master_read_u8+1
  6546  0BB3  0825               	movf	?_i2c_master_read,w
  6547  0BB4  00AE               	movwf	?_i2c_master_read_u8
  6548  0BB5                     l715:	
  6549  0BB5  0008               	return
  6550  0BB6                     __end_of_i2c_master_read_u8:	
  6551                           
  6552                           	psect	text9
  6553  0B86                     __ptext9:	
  6554 ;; *************** function _i2c_master_write_u32 *****************
  6555 ;; Defined at:
  6556 ;;		line 83 in file "i2c_driver_stusb4500.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;  device          1    wreg     const unsigned char 
  6559 ;;  reg             1   14[BANK0 ] const unsigned char 
  6560 ;;  data            4   15[BANK0 ] const unsigned long 
  6561 ;; Auto vars:     Size  Location     Type
  6562 ;;  device          1   20[BANK0 ] const unsigned char 
  6563 ;; Return value:  Size  Location     Type
  6564 ;;                  2   14[BANK0 ] int 
  6565 ;; Registers used:
  6566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6567 ;; Tracked objects:
  6568 ;;		On entry : 0/0
  6569 ;;		On exit  : 0/0
  6570 ;;		Unchanged: 0/0
  6571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6572 ;;      Params:         0       5       0       0       0       0       0       0
  6573 ;;      Locals:         0       1       0       0       0       0       0       0
  6574 ;;      Temps:          0       1       0       0       0       0       0       0
  6575 ;;      Totals:         0       7       0       0       0       0       0       0
  6576 ;;Total ram usage:        7 bytes
  6577 ;; Hardware stack levels used:    1
  6578 ;; Hardware stack levels required when called:    5
  6579 ;; This function calls:
  6580 ;;		_i2c_master_write
  6581 ;; This function is called by:
  6582 ;;		_write_pdo
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           
  6587                           ;psect for function _i2c_master_write_u32
  6588  0B86                     _i2c_master_write_u32:	
  6589                           
  6590                           ;incstack = 0
  6591                           ; Regs used in _i2c_master_write_u32: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6592                           ;i2c_master_write_u32@device stored from wreg
  6593  0B86  0140               	movlb	0	; select bank0
  6594  0B87  00B5               	movwf	i2c_master_write_u32@device
  6595  0B88                     l2953:	
  6596                           
  6597                           ;i2c_driver_stusb4500.c: 85: return i2c_master_write(device, reg, &data, 4);
  6598  0B88  082F               	movf	i2c_master_write_u32@reg,w
  6599  0B89  00B4               	movwf	??_i2c_master_write_u32
  6600  0B8A  0834               	movf	??_i2c_master_write_u32,w
  6601  0B8B  00A5               	movwf	i2c_master_write@reg
  6602  0B8C  3030               	movlw	low i2c_master_write_u32@data
  6603  0B8D  00A6               	movwf	i2c_master_write@buf
  6604  0B8E  3000               	movlw	high i2c_master_write_u32@data
  6605  0B8F  00A7               	movwf	i2c_master_write@buf+1
  6606  0B90  3004               	movlw	4
  6607  0B91  00A8               	movwf	i2c_master_write@len
  6608  0B92  3000               	movlw	0
  6609  0B93  00A9               	movwf	i2c_master_write@len+1
  6610  0B94  0835               	movf	i2c_master_write_u32@device,w
  6611  0B95  318F  27A3  318B   	fcall	_i2c_master_write
  6612  0B98  0140               	movlb	0	; select bank0
  6613  0B99  0826               	movf	?_i2c_master_write+1,w
  6614  0B9A  00B0               	movwf	?_i2c_master_write_u32+1
  6615  0B9B  0825               	movf	?_i2c_master_write,w
  6616  0B9C  00AF               	movwf	?_i2c_master_write_u32
  6617  0B9D                     l700:	
  6618  0B9D  0008               	return
  6619  0B9E                     __end_of_i2c_master_write_u32:	
  6620                           
  6621                           	psect	text10
  6622  0FA3                     __ptext10:	
  6623 ;; *************** function _i2c_master_write *****************
  6624 ;; Defined at:
  6625 ;;		line 54 in file "i2c_driver_stusb4500.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;  device          1    wreg     const unsigned char 
  6628 ;;  reg             1    4[BANK0 ] const unsigned char 
  6629 ;;  buf             2    5[BANK0 ] PTR const void 
  6630 ;;		 -> nvm_config(40), i2c_master_write_u32@data(4), i2c_master_write_u16@data(2), i2c_master_write_u8@data(1), 
  6631 ;;  len             2    7[BANK0 ] unsigned int 
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;  device          1    9[BANK0 ] const unsigned char 
  6634 ;;  ok              2   12[BANK0 ] int 
  6635 ;;  data            2   10[BANK0 ] PTR unsigned char 
  6636 ;;		 -> nvm_config(40), i2c_master_write_u32@data(4), i2c_master_write_u16@data(2), i2c_master_write_u8@data(1), 
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  2    4[BANK0 ] int 
  6639 ;; Registers used:
  6640 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6646 ;;      Params:         0       5       0       0       0       0       0       0
  6647 ;;      Locals:         0       5       0       0       0       0       0       0
  6648 ;;      Temps:          0       0       0       0       0       0       0       0
  6649 ;;      Totals:         0      10       0       0       0       0       0       0
  6650 ;;Total ram usage:       10 bytes
  6651 ;; Hardware stack levels used:    1
  6652 ;; Hardware stack levels required when called:    4
  6653 ;; This function calls:
  6654 ;;		_i2c_master_send_byte
  6655 ;;		_i2c_master_start
  6656 ;;		_i2c_master_stop
  6657 ;;		_i2c_master_wait
  6658 ;; This function is called by:
  6659 ;;		_i2c_master_write_u8
  6660 ;;		_i2c_master_write_u32
  6661 ;;		_i2c_master_write_u16
  6662 ;;		_write_sector
  6663 ;; This function uses a non-reentrant model
  6664 ;;
  6665                           
  6666                           
  6667                           ;psect for function _i2c_master_write
  6668  0FA3                     _i2c_master_write:	
  6669                           
  6670                           ;incstack = 0
  6671                           ; Regs used in _i2c_master_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6672                           ;i2c_master_write@device stored from wreg
  6673  0FA3  0140               	movlb	0	; select bank0
  6674  0FA4  00AA               	movwf	i2c_master_write@device
  6675  0FA5                     l2839:	
  6676                           
  6677                           ;i2c_driver_stusb4500.c: 56: uint8_t* data = (uint8_t*)buf;
  6678  0FA5  0827               	movf	i2c_master_write@buf+1,w
  6679  0FA6  00AC               	movwf	i2c_master_write@data+1
  6680  0FA7  0826               	movf	i2c_master_write@buf,w
  6681  0FA8  00AB               	movwf	i2c_master_write@data
  6682  0FA9                     l2841:	
  6683                           
  6684                           ;i2c_driver_stusb4500.c: 57: if (!data) return -1;
  6685  0FA9  082B               	movf	i2c_master_write@data,w
  6686  0FAA  042C               	iorwf	i2c_master_write@data+1,w
  6687  0FAB  1D03               	btfss	3,2
  6688  0FAC  2FAE               	goto	u2051
  6689  0FAD  2FAF               	goto	u2050
  6690  0FAE                     u2051:	
  6691  0FAE  2FB4               	goto	l2847
  6692  0FAF                     u2050:	
  6693  0FAF                     l2843:	
  6694  0FAF  30FF               	movlw	255
  6695  0FB0  00A5               	movwf	?_i2c_master_write
  6696  0FB1  30FF               	movlw	255
  6697  0FB2  00A6               	movwf	?_i2c_master_write+1
  6698  0FB3  2FFF               	goto	l684
  6699  0FB4                     l2847:	
  6700  0FB4                     l2849:	
  6701                           
  6702                           ;i2c_driver_stusb4500.c: 61: i2c_master_wait();
  6703  0FB4  318A  22FF  318F   	fcall	_i2c_master_wait
  6704  0FB7                     l2851:	
  6705                           
  6706                           ;i2c_driver_stusb4500.c: 62: i2c_master_start();
  6707  0FB7  318A  22AC  318F   	fcall	_i2c_master_start
  6708  0FBA                     l2853:	
  6709  0FBA                     l2855:	
  6710                           ;i2c_driver_stusb4500.c: 63: if (ok == 0) ok = i2c_master_send_byte((device << 1) | 0);
  6711                           
  6712  0FBA  0140               	movlb	0	; select bank0
  6713  0FBB  352A               	lslf	i2c_master_write@device,w
  6714  0FBC  318B  2357  318F   	fcall	_i2c_master_send_byte
  6715  0FBF  0140               	movlb	0	; select bank0
  6716  0FC0  0822               	movf	?_i2c_master_send_byte+1,w
  6717  0FC1  00AE               	movwf	i2c_master_write@ok+1
  6718  0FC2  0821               	movf	?_i2c_master_send_byte,w
  6719  0FC3  00AD               	movwf	i2c_master_write@ok
  6720  0FC4                     l2857:	
  6721                           
  6722                           ;i2c_driver_stusb4500.c: 64: if (ok == 0) ok = i2c_master_send_byte(reg);
  6723  0FC4  082D               	movf	i2c_master_write@ok,w
  6724  0FC5  042E               	iorwf	i2c_master_write@ok+1,w
  6725  0FC6  1D03               	btfss	3,2
  6726  0FC7  2FC9               	goto	u2061
  6727  0FC8  2FCA               	goto	u2060
  6728  0FC9                     u2061:	
  6729  0FC9  2FE5               	goto	l2865
  6730  0FCA                     u2060:	
  6731  0FCA                     l2859:	
  6732  0FCA  0825               	movf	i2c_master_write@reg,w
  6733  0FCB  318B  2357  318F   	fcall	_i2c_master_send_byte
  6734  0FCE  0140               	movlb	0	; select bank0
  6735  0FCF  0822               	movf	?_i2c_master_send_byte+1,w
  6736  0FD0  00AE               	movwf	i2c_master_write@ok+1
  6737  0FD1  0821               	movf	?_i2c_master_send_byte,w
  6738  0FD2  00AD               	movwf	i2c_master_write@ok
  6739  0FD3  2FE5               	goto	l2865
  6740  0FD4                     l2861:	
  6741                           
  6742                           ;i2c_driver_stusb4500.c: 66: ok = i2c_master_send_byte(*data++);
  6743  0FD4  082B               	movf	i2c_master_write@data,w
  6744  0FD5  0084               	movwf	4
  6745  0FD6  082C               	movf	i2c_master_write@data+1,w
  6746  0FD7  0085               	movwf	5
  6747  0FD8  0800               	movf	0,w	;code access
  6748  0FD9  318B  2357  318F   	fcall	_i2c_master_send_byte
  6749  0FDC  0140               	movlb	0	; select bank0
  6750  0FDD  0822               	movf	?_i2c_master_send_byte+1,w
  6751  0FDE  00AE               	movwf	i2c_master_write@ok+1
  6752  0FDF  0821               	movf	?_i2c_master_send_byte,w
  6753  0FE0  00AD               	movwf	i2c_master_write@ok
  6754  0FE1                     l2863:	
  6755  0FE1  3001               	movlw	1
  6756  0FE2  07AB               	addwf	i2c_master_write@data,f
  6757  0FE3  3000               	movlw	0
  6758  0FE4  3DAC               	addwfc	i2c_master_write@data+1,f
  6759  0FE5                     l2865:	
  6760  0FE5  082D               	movf	i2c_master_write@ok,w
  6761  0FE6  042E               	iorwf	i2c_master_write@ok+1,w
  6762  0FE7  1D03               	btfss	3,2
  6763  0FE8  2FEA               	goto	u2071
  6764  0FE9  2FEB               	goto	u2070
  6765  0FEA                     u2071:	
  6766  0FEA  2FF7               	goto	l2869
  6767  0FEB                     u2070:	
  6768  0FEB                     l2867:	
  6769  0FEB  3001               	movlw	1
  6770  0FEC  02A8               	subwf	i2c_master_write@len,f
  6771  0FED  3000               	movlw	0
  6772  0FEE  3BA9               	subwfb	i2c_master_write@len+1,f
  6773  0FEF  0A28               	incf	i2c_master_write@len,w
  6774  0FF0  1D03               	skipz
  6775  0FF1  2FF6               	goto	u2081
  6776  0FF2  0A29               	incf	i2c_master_write@len+1,w
  6777  0FF3  1D03               	btfss	3,2
  6778  0FF4  2FF6               	goto	u2081
  6779  0FF5  2FF7               	goto	u2080
  6780  0FF6                     u2081:	
  6781  0FF6  2FD4               	goto	l2861
  6782  0FF7                     u2080:	
  6783  0FF7                     l2869:	
  6784                           
  6785                           ;i2c_driver_stusb4500.c: 67: };i2c_driver_stusb4500.c: 68: i2c_master_stop();
  6786  0FF7  318A  22B2  318F   	fcall	_i2c_master_stop
  6787  0FFA                     l2871:	
  6788                           
  6789                           ;i2c_driver_stusb4500.c: 70: return ok;
  6790  0FFA  0140               	movlb	0	; select bank0
  6791  0FFB  082E               	movf	i2c_master_write@ok+1,w
  6792  0FFC  00A6               	movwf	?_i2c_master_write+1
  6793  0FFD  082D               	movf	i2c_master_write@ok,w
  6794  0FFE  00A5               	movwf	?_i2c_master_write
  6795  0FFF                     l684:	
  6796  0FFF  0008               	return
  6797  1000                     __end_of_i2c_master_write:	
  6798                           
  6799                           	psect	text11
  6800  0DDA                     __ptext11:	
  6801 ;; *************** function ___lwdiv *****************
  6802 ;; Defined at:
  6803 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;  divisor         2    0[BANK0 ] unsigned int 
  6806 ;;  dividend        2    2[BANK0 ] unsigned int 
  6807 ;; Auto vars:     Size  Location     Type
  6808 ;;  quotient        2    5[BANK0 ] unsigned int 
  6809 ;;  counter         1    7[BANK0 ] unsigned char 
  6810 ;; Return value:  Size  Location     Type
  6811 ;;                  2    0[BANK0 ] unsigned int 
  6812 ;; Registers used:
  6813 ;;		wreg, status,2, status,0
  6814 ;; Tracked objects:
  6815 ;;		On entry : 0/0
  6816 ;;		On exit  : 0/0
  6817 ;;		Unchanged: 0/0
  6818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6819 ;;      Params:         0       4       0       0       0       0       0       0
  6820 ;;      Locals:         0       3       0       0       0       0       0       0
  6821 ;;      Temps:          0       1       0       0       0       0       0       0
  6822 ;;      Totals:         0       8       0       0       0       0       0       0
  6823 ;;Total ram usage:        8 bytes
  6824 ;; Hardware stack levels used:    1
  6825 ;; Hardware stack levels required when called:    2
  6826 ;; This function calls:
  6827 ;;		Nothing
  6828 ;; This function is called by:
  6829 ;;		_write_pdo
  6830 ;; This function uses a non-reentrant model
  6831 ;;
  6832                           
  6833                           
  6834                           ;psect for function ___lwdiv
  6835  0DDA                     ___lwdiv:	
  6836  0DDA                     l3015:	
  6837                           ;incstack = 0
  6838                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6839                           
  6840  0DDA  0140               	movlb	0	; select bank0
  6841  0DDB  01A6               	clrf	___lwdiv@quotient
  6842  0DDC  01A7               	clrf	___lwdiv@quotient+1
  6843  0DDD                     l3017:	
  6844  0DDD  0821               	movf	___lwdiv@divisor,w
  6845  0DDE  0422               	iorwf	___lwdiv@divisor+1,w
  6846  0DDF  1903               	btfsc	3,2
  6847  0DE0  2DE2               	goto	u2331
  6848  0DE1  2DE3               	goto	u2330
  6849  0DE2                     u2331:	
  6850  0DE2  2E12               	goto	l3037
  6851  0DE3                     u2330:	
  6852  0DE3                     l3019:	
  6853  0DE3  01A8               	clrf	___lwdiv@counter
  6854  0DE4  0AA8               	incf	___lwdiv@counter,f
  6855  0DE5  2DEF               	goto	l3025
  6856  0DE6                     l3021:	
  6857  0DE6  3001               	movlw	1
  6858  0DE7                     u2345:	
  6859  0DE7  35A1               	lslf	___lwdiv@divisor,f
  6860  0DE8  0DA2               	rlf	___lwdiv@divisor+1,f
  6861  0DE9  0B89               	decfsz	9,f
  6862  0DEA  2DE7               	goto	u2345
  6863  0DEB                     l3023:	
  6864  0DEB  3001               	movlw	1
  6865  0DEC  00A5               	movwf	??___lwdiv
  6866  0DED  0825               	movf	??___lwdiv,w
  6867  0DEE  07A8               	addwf	___lwdiv@counter,f
  6868  0DEF                     l3025:	
  6869  0DEF  1FA2               	btfss	___lwdiv@divisor+1,7
  6870  0DF0  2DF2               	goto	u2351
  6871  0DF1  2DF3               	goto	u2350
  6872  0DF2                     u2351:	
  6873  0DF2  2DE6               	goto	l3021
  6874  0DF3                     u2350:	
  6875  0DF3                     l3027:	
  6876  0DF3  3001               	movlw	1
  6877  0DF4                     u2365:	
  6878  0DF4  35A6               	lslf	___lwdiv@quotient,f
  6879  0DF5  0DA7               	rlf	___lwdiv@quotient+1,f
  6880  0DF6  0B89               	decfsz	9,f
  6881  0DF7  2DF4               	goto	u2365
  6882  0DF8  0822               	movf	___lwdiv@divisor+1,w
  6883  0DF9  0224               	subwf	___lwdiv@dividend+1,w
  6884  0DFA  1D03               	skipz
  6885  0DFB  2DFE               	goto	u2375
  6886  0DFC  0821               	movf	___lwdiv@divisor,w
  6887  0DFD  0223               	subwf	___lwdiv@dividend,w
  6888  0DFE                     u2375:	
  6889  0DFE  1C03               	skipc
  6890  0DFF  2E01               	goto	u2371
  6891  0E00  2E02               	goto	u2370
  6892  0E01                     u2371:	
  6893  0E01  2E07               	goto	l3033
  6894  0E02                     u2370:	
  6895  0E02                     l3029:	
  6896  0E02  0821               	movf	___lwdiv@divisor,w
  6897  0E03  02A3               	subwf	___lwdiv@dividend,f
  6898  0E04  0822               	movf	___lwdiv@divisor+1,w
  6899  0E05  3BA4               	subwfb	___lwdiv@dividend+1,f
  6900  0E06                     l3031:	
  6901  0E06  1426               	bsf	___lwdiv@quotient,0
  6902  0E07                     l3033:	
  6903  0E07  3001               	movlw	1
  6904  0E08                     u2385:	
  6905  0E08  36A2               	lsrf	___lwdiv@divisor+1,f
  6906  0E09  0CA1               	rrf	___lwdiv@divisor,f
  6907  0E0A  0B89               	decfsz	9,f
  6908  0E0B  2E08               	goto	u2385
  6909  0E0C                     l3035:	
  6910  0E0C  3001               	movlw	1
  6911  0E0D  02A8               	subwf	___lwdiv@counter,f
  6912  0E0E  1D03               	btfss	3,2
  6913  0E0F  2E11               	goto	u2391
  6914  0E10  2E12               	goto	u2390
  6915  0E11                     u2391:	
  6916  0E11  2DF3               	goto	l3027
  6917  0E12                     u2390:	
  6918  0E12                     l3037:	
  6919  0E12  0827               	movf	___lwdiv@quotient+1,w
  6920  0E13  00A2               	movwf	?___lwdiv+1
  6921  0E14  0826               	movf	___lwdiv@quotient,w
  6922  0E15  00A1               	movwf	?___lwdiv
  6923  0E16                     l1171:	
  6924  0E16  0008               	return
  6925  0E17                     __end_of___lwdiv:	
  6926                           
  6927                           	psect	text12
  6928  0DA6                     __ptext12:	
  6929 ;; *************** function ___lmul *****************
  6930 ;; Defined at:
  6931 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;  multiplier      4    0[BANK0 ] unsigned long 
  6934 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;  product         4    8[BANK0 ] unsigned long 
  6937 ;; Return value:  Size  Location     Type
  6938 ;;                  4    0[BANK0 ] unsigned long 
  6939 ;; Registers used:
  6940 ;;		wreg, status,2, status,0
  6941 ;; Tracked objects:
  6942 ;;		On entry : 0/0
  6943 ;;		On exit  : 0/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6946 ;;      Params:         0       8       0       0       0       0       0       0
  6947 ;;      Locals:         0       4       0       0       0       0       0       0
  6948 ;;      Temps:          0       0       0       0       0       0       0       0
  6949 ;;      Totals:         0      12       0       0       0       0       0       0
  6950 ;;Total ram usage:       12 bytes
  6951 ;; Hardware stack levels used:    1
  6952 ;; Hardware stack levels required when called:    2
  6953 ;; This function calls:
  6954 ;;		Nothing
  6955 ;; This function is called by:
  6956 ;;		_negotiate_optimal_pdo
  6957 ;; This function uses a non-reentrant model
  6958 ;;
  6959                           
  6960                           
  6961                           ;psect for function ___lmul
  6962  0DA6                     ___lmul:	
  6963  0DA6                     l3079:	
  6964                           ;incstack = 0
  6965                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6966                           
  6967  0DA6  3000               	movlw	0
  6968  0DA7  0140               	movlb	0	; select bank0
  6969  0DA8  00AC               	movwf	___lmul@product+3
  6970  0DA9  3000               	movlw	0
  6971  0DAA  00AB               	movwf	___lmul@product+2
  6972  0DAB  3000               	movlw	0
  6973  0DAC  00AA               	movwf	___lmul@product+1
  6974  0DAD  3000               	movlw	0
  6975  0DAE  00A9               	movwf	___lmul@product
  6976  0DAF                     l3081:	
  6977  0DAF  1C21               	btfss	___lmul@multiplier,0
  6978  0DB0  2DB2               	goto	u2451
  6979  0DB1  2DB3               	goto	u2450
  6980  0DB2                     u2451:	
  6981  0DB2  2DBB               	goto	l3085
  6982  0DB3                     u2450:	
  6983  0DB3                     l3083:	
  6984  0DB3  0825               	movf	___lmul@multiplicand,w
  6985  0DB4  07A9               	addwf	___lmul@product,f
  6986  0DB5  0826               	movf	___lmul@multiplicand+1,w
  6987  0DB6  3DAA               	addwfc	___lmul@product+1,f
  6988  0DB7  0827               	movf	___lmul@multiplicand+2,w
  6989  0DB8  3DAB               	addwfc	___lmul@product+2,f
  6990  0DB9  0828               	movf	___lmul@multiplicand+3,w
  6991  0DBA  3DAC               	addwfc	___lmul@product+3,f
  6992  0DBB                     l3085:	
  6993  0DBB  3001               	movlw	1
  6994  0DBC                     u2465:	
  6995  0DBC  35A5               	lslf	___lmul@multiplicand,f
  6996  0DBD  0DA6               	rlf	___lmul@multiplicand+1,f
  6997  0DBE  0DA7               	rlf	___lmul@multiplicand+2,f
  6998  0DBF  0DA8               	rlf	___lmul@multiplicand+3,f
  6999  0DC0  0B89               	decfsz	9,f
  7000  0DC1  2DBC               	goto	u2465
  7001  0DC2                     l3087:	
  7002  0DC2  3001               	movlw	1
  7003  0DC3                     u2475:	
  7004  0DC3  36A4               	lsrf	___lmul@multiplier+3,f
  7005  0DC4  0CA3               	rrf	___lmul@multiplier+2,f
  7006  0DC5  0CA2               	rrf	___lmul@multiplier+1,f
  7007  0DC6  0CA1               	rrf	___lmul@multiplier,f
  7008  0DC7  0B89               	decfsz	9,f
  7009  0DC8  2DC3               	goto	u2475
  7010  0DC9  0824               	movf	___lmul@multiplier+3,w
  7011  0DCA  0423               	iorwf	___lmul@multiplier+2,w
  7012  0DCB  0422               	iorwf	___lmul@multiplier+1,w
  7013  0DCC  0421               	iorwf	___lmul@multiplier,w
  7014  0DCD  1D03               	skipz
  7015  0DCE  2DD0               	goto	u2481
  7016  0DCF  2DD1               	goto	u2480
  7017  0DD0                     u2481:	
  7018  0DD0  2DAF               	goto	l3081
  7019  0DD1                     u2480:	
  7020  0DD1                     l3089:	
  7021  0DD1  082C               	movf	___lmul@product+3,w
  7022  0DD2  00A4               	movwf	?___lmul+3
  7023  0DD3  082B               	movf	___lmul@product+2,w
  7024  0DD4  00A3               	movwf	?___lmul+2
  7025  0DD5  082A               	movf	___lmul@product+1,w
  7026  0DD6  00A2               	movwf	?___lmul+1
  7027  0DD7  0829               	movf	___lmul@product,w
  7028  0DD8  00A1               	movwf	?___lmul
  7029  0DD9                     l913:	
  7030  0DD9  0008               	return
  7031  0DDA                     __end_of___lmul:	
  7032                           
  7033                           	psect	text13
  7034  0B6E                     __ptext13:	
  7035 ;; *************** function _i2c_master_read_u16 *****************
  7036 ;; Defined at:
  7037 ;;		line 115 in file "i2c_driver_stusb4500.c"
  7038 ;; Parameters:    Size  Location     Type
  7039 ;;  device          1    wreg     const unsigned char 
  7040 ;;  reg             1   13[BANK0 ] const unsigned char 
  7041 ;;  data            1   14[BANK0 ] PTR unsigned int 
  7042 ;;		 -> stusb_negotiate@header(2), 
  7043 ;; Auto vars:     Size  Location     Type
  7044 ;;  device          1   17[BANK0 ] const unsigned char 
  7045 ;; Return value:  Size  Location     Type
  7046 ;;                  2   13[BANK0 ] int 
  7047 ;; Registers used:
  7048 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7049 ;; Tracked objects:
  7050 ;;		On entry : 0/0
  7051 ;;		On exit  : 0/0
  7052 ;;		Unchanged: 0/0
  7053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7054 ;;      Params:         0       2       0       0       0       0       0       0
  7055 ;;      Locals:         0       1       0       0       0       0       0       0
  7056 ;;      Temps:          0       2       0       0       0       0       0       0
  7057 ;;      Totals:         0       5       0       0       0       0       0       0
  7058 ;;Total ram usage:        5 bytes
  7059 ;; Hardware stack levels used:    1
  7060 ;; Hardware stack levels required when called:    5
  7061 ;; This function calls:
  7062 ;;		_i2c_master_read
  7063 ;; This function is called by:
  7064 ;;		_stusb_negotiate
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           
  7068                           
  7069                           ;psect for function _i2c_master_read_u16
  7070  0B6E                     _i2c_master_read_u16:	
  7071                           
  7072                           ;incstack = 0
  7073                           ; Regs used in _i2c_master_read_u16: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7074                           ;i2c_master_read_u16@device stored from wreg
  7075  0B6E  0140               	movlb	0	; select bank0
  7076  0B6F  00B2               	movwf	i2c_master_read_u16@device
  7077  0B70                     l3269:	
  7078                           
  7079                           ;i2c_driver_stusb4500.c: 117: return i2c_master_read(device, reg, (uint8_t*)data, 2);
  7080  0B70  082E               	movf	i2c_master_read_u16@reg,w
  7081  0B71  00B0               	movwf	??_i2c_master_read_u16
  7082  0B72  0830               	movf	??_i2c_master_read_u16,w
  7083  0B73  00A5               	movwf	i2c_master_read@reg
  7084  0B74  082F               	movf	i2c_master_read_u16@data,w
  7085  0B75  00B1               	movwf	??_i2c_master_read_u16+1
  7086  0B76  0831               	movf	??_i2c_master_read_u16+1,w
  7087  0B77  00A6               	movwf	i2c_master_read@buf
  7088  0B78  3002               	movlw	2
  7089  0B79  00A7               	movwf	i2c_master_read@len
  7090  0B7A  3000               	movlw	0
  7091  0B7B  00A8               	movwf	i2c_master_read@len+1
  7092  0B7C  0832               	movf	i2c_master_read_u16@device,w
  7093  0B7D  3185  25BC  318B   	fcall	_i2c_master_read
  7094  0B80  0140               	movlb	0	; select bank0
  7095  0B81  0826               	movf	?_i2c_master_read+1,w
  7096  0B82  00AF               	movwf	?_i2c_master_read_u16+1
  7097  0B83  0825               	movf	?_i2c_master_read,w
  7098  0B84  00AE               	movwf	?_i2c_master_read_u16
  7099  0B85                     l718:	
  7100  0B85  0008               	return
  7101  0B86                     __end_of_i2c_master_read_u16:	
  7102                           
  7103                           	psect	text14
  7104  05BC                     __ptext14:	
  7105 ;; *************** function _i2c_master_read *****************
  7106 ;; Defined at:
  7107 ;;		line 88 in file "i2c_driver_stusb4500.c"
  7108 ;; Parameters:    Size  Location     Type
  7109 ;;  device          1    wreg     const unsigned char 
  7110 ;;  reg             1    4[BANK0 ] const unsigned char 
  7111 ;;  buf             1    5[BANK0 ] PTR void 
  7112 ;;		 -> nvm_read@sectors(40), write_sector@buffer(1), read_sector@buffer(1), enter_write_mode@buffer(1), 
  7113 ;;		 -> stusb_negotiate@header(2), stusb_negotiate@buffer(40), reset@res(1), 
  7114 ;;  len             2    6[BANK0 ] unsigned int 
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;  device          1    9[BANK0 ] const unsigned char 
  7117 ;;  ok              2   11[BANK0 ] int 
  7118 ;;  data            1   10[BANK0 ] PTR unsigned char 
  7119 ;;		 -> nvm_read@sectors(40), write_sector@buffer(1), read_sector@buffer(1), enter_write_mode@buffer(1), 
  7120 ;;		 -> stusb_negotiate@header(2), stusb_negotiate@buffer(40), reset@res(1), 
  7121 ;; Return value:  Size  Location     Type
  7122 ;;                  2    4[BANK0 ] int 
  7123 ;; Registers used:
  7124 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7125 ;; Tracked objects:
  7126 ;;		On entry : 0/0
  7127 ;;		On exit  : 0/0
  7128 ;;		Unchanged: 0/0
  7129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7130 ;;      Params:         0       4       0       0       0       0       0       0
  7131 ;;      Locals:         0       4       0       0       0       0       0       0
  7132 ;;      Temps:          0       1       0       0       0       0       0       0
  7133 ;;      Totals:         0       9       0       0       0       0       0       0
  7134 ;;Total ram usage:        9 bytes
  7135 ;; Hardware stack levels used:    1
  7136 ;; Hardware stack levels required when called:    4
  7137 ;; This function calls:
  7138 ;;		_i2c_master_receive_byte
  7139 ;;		_i2c_master_repeat_start
  7140 ;;		_i2c_master_send_byte
  7141 ;;		_i2c_master_start
  7142 ;;		_i2c_master_stop
  7143 ;;		_i2c_master_wait
  7144 ;; This function is called by:
  7145 ;;		_stusb_negotiate
  7146 ;;		_i2c_master_read_u8
  7147 ;;		_i2c_master_read_u16
  7148 ;;		_i2c_master_read_u32
  7149 ;;		_read_sector
  7150 ;; This function uses a non-reentrant model
  7151 ;;
  7152                           
  7153                           
  7154                           ;psect for function _i2c_master_read
  7155  05BC                     _i2c_master_read:	
  7156                           
  7157                           ;incstack = 0
  7158                           ; Regs used in _i2c_master_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7159                           ;i2c_master_read@device stored from wreg
  7160  05BC  0140               	movlb	0	; select bank0
  7161  05BD  00AA               	movwf	i2c_master_read@device
  7162  05BE                     l2793:	
  7163                           
  7164                           ;i2c_driver_stusb4500.c: 90: uint8_t* data = (uint8_t*)buf;
  7165  05BE  0826               	movf	i2c_master_read@buf,w
  7166  05BF  00A9               	movwf	??_i2c_master_read
  7167  05C0  0829               	movf	??_i2c_master_read,w
  7168  05C1  00AB               	movwf	i2c_master_read@data
  7169  05C2                     l2795:	
  7170                           
  7171                           ;i2c_driver_stusb4500.c: 91: if (!data) return -1;
  7172  05C2  082B               	movf	i2c_master_read@data,w
  7173  05C3  1D03               	btfss	3,2
  7174  05C4  2DC6               	goto	u1971
  7175  05C5  2DC7               	goto	u1970
  7176  05C6                     u1971:	
  7177  05C6  2DCC               	goto	l2801
  7178  05C7                     u1970:	
  7179  05C7                     l2797:	
  7180  05C7  30FF               	movlw	255
  7181  05C8  00A5               	movwf	?_i2c_master_read
  7182  05C9  30FF               	movlw	255
  7183  05CA  00A6               	movwf	?_i2c_master_read+1
  7184  05CB  2E36               	goto	l704
  7185  05CC                     l2801:	
  7186  05CC                     l2803:	
  7187                           
  7188                           ;i2c_driver_stusb4500.c: 95: i2c_master_wait();
  7189  05CC  318A  22FF  3185   	fcall	_i2c_master_wait
  7190  05CF                     l2805:	
  7191                           
  7192                           ;i2c_driver_stusb4500.c: 96: i2c_master_start();
  7193  05CF  318A  22AC  3185   	fcall	_i2c_master_start
  7194  05D2                     l2807:	
  7195  05D2                     l2809:	
  7196                           ;i2c_driver_stusb4500.c: 97: if (ok == 0) ok = i2c_master_send_byte((device << 1) | 0);
  7197                           
  7198  05D2  0140               	movlb	0	; select bank0
  7199  05D3  352A               	lslf	i2c_master_read@device,w
  7200  05D4  318B  2357  3185   	fcall	_i2c_master_send_byte
  7201  05D7  0140               	movlb	0	; select bank0
  7202  05D8  0822               	movf	?_i2c_master_send_byte+1,w
  7203  05D9  00AD               	movwf	i2c_master_read@ok+1
  7204  05DA  0821               	movf	?_i2c_master_send_byte,w
  7205  05DB  00AC               	movwf	i2c_master_read@ok
  7206  05DC                     l2811:	
  7207                           
  7208                           ;i2c_driver_stusb4500.c: 98: if (ok == 0) ok = i2c_master_send_byte(reg);
  7209  05DC  082C               	movf	i2c_master_read@ok,w
  7210  05DD  042D               	iorwf	i2c_master_read@ok+1,w
  7211  05DE  1D03               	btfss	3,2
  7212  05DF  2DE1               	goto	u1981
  7213  05E0  2DE2               	goto	u1980
  7214  05E1                     u1981:	
  7215  05E1  2DEB               	goto	l2815
  7216  05E2                     u1980:	
  7217  05E2                     l2813:	
  7218  05E2  0825               	movf	i2c_master_read@reg,w
  7219  05E3  318B  2357  3185   	fcall	_i2c_master_send_byte
  7220  05E6  0140               	movlb	0	; select bank0
  7221  05E7  0822               	movf	?_i2c_master_send_byte+1,w
  7222  05E8  00AD               	movwf	i2c_master_read@ok+1
  7223  05E9  0821               	movf	?_i2c_master_send_byte,w
  7224  05EA  00AC               	movwf	i2c_master_read@ok
  7225  05EB                     l2815:	
  7226                           
  7227                           ;i2c_driver_stusb4500.c: 99: if (ok == 0) i2c_master_repeat_start();
  7228  05EB  082C               	movf	i2c_master_read@ok,w
  7229  05EC  042D               	iorwf	i2c_master_read@ok+1,w
  7230  05ED  1D03               	btfss	3,2
  7231  05EE  2DF0               	goto	u1991
  7232  05EF  2DF1               	goto	u1990
  7233  05F0                     u1991:	
  7234  05F0  2DF4               	goto	l2819
  7235  05F1                     u1990:	
  7236  05F1                     l2817:	
  7237  05F1  318A  22A6  3185   	fcall	_i2c_master_repeat_start
  7238  05F4                     l2819:	
  7239                           
  7240                           ;i2c_driver_stusb4500.c: 100: if (ok == 0) ok = i2c_master_send_byte((device << 1) | 1);
  7241  05F4  0140               	movlb	0	; select bank0
  7242  05F5  082C               	movf	i2c_master_read@ok,w
  7243  05F6  042D               	iorwf	i2c_master_read@ok+1,w
  7244  05F7  1D03               	btfss	3,2
  7245  05F8  2DFA               	goto	u2001
  7246  05F9  2DFB               	goto	u2000
  7247  05FA                     u2001:	
  7248  05FA  2E05               	goto	l2823
  7249  05FB                     u2000:	
  7250  05FB                     l2821:	
  7251  05FB  1403               	setc
  7252  05FC  0D2A               	rlf	i2c_master_read@device,w
  7253  05FD  318B  2357  3185   	fcall	_i2c_master_send_byte
  7254  0600  0140               	movlb	0	; select bank0
  7255  0601  0822               	movf	?_i2c_master_send_byte+1,w
  7256  0602  00AD               	movwf	i2c_master_read@ok+1
  7257  0603  0821               	movf	?_i2c_master_send_byte,w
  7258  0604  00AC               	movwf	i2c_master_read@ok
  7259  0605                     l2823:	
  7260                           
  7261                           ;i2c_driver_stusb4500.c: 101: if (ok == 0) {
  7262  0605  082C               	movf	i2c_master_read@ok,w
  7263  0606  042D               	iorwf	i2c_master_read@ok+1,w
  7264  0607  1D03               	btfss	3,2
  7265  0608  2E0A               	goto	u2011
  7266  0609  2E0B               	goto	u2010
  7267  060A                     u2011:	
  7268  060A  2E2E               	goto	l2833
  7269  060B                     u2010:	
  7270  060B  2E22               	goto	l2831
  7271  060C                     l2827:	
  7272                           
  7273                           ;i2c_driver_stusb4500.c: 103: *data++ = i2c_master_receive_byte(len ? 0 : 1);
  7274  060C  0827               	movf	i2c_master_read@len,w
  7275  060D  0428               	iorwf	i2c_master_read@len+1,w
  7276  060E  1903               	btfsc	3,2
  7277  060F  2E11               	goto	u2021
  7278  0610  2E13               	goto	u2020
  7279  0611                     u2021:	
  7280  0611  3001               	movlw	1
  7281  0612  2E14               	goto	u2030
  7282  0613                     u2020:	
  7283  0613  3000               	movlw	0
  7284  0614                     u2030:	
  7285  0614  318C  2405  3185   	fcall	_i2c_master_receive_byte
  7286  0617  0140               	movlb	0	; select bank0
  7287  0618  00A9               	movwf	??_i2c_master_read
  7288  0619  082B               	movf	i2c_master_read@data,w
  7289  061A  0086               	movwf	6
  7290  061B  0187               	clrf	7
  7291  061C  0829               	movf	??_i2c_master_read,w
  7292  061D  0081               	movwf	1
  7293  061E                     l2829:	
  7294  061E  3001               	movlw	1
  7295  061F  00A9               	movwf	??_i2c_master_read
  7296  0620  0829               	movf	??_i2c_master_read,w
  7297  0621  07AB               	addwf	i2c_master_read@data,f
  7298  0622                     l2831:	
  7299  0622  3001               	movlw	1
  7300  0623  02A7               	subwf	i2c_master_read@len,f
  7301  0624  3000               	movlw	0
  7302  0625  3BA8               	subwfb	i2c_master_read@len+1,f
  7303  0626  0A27               	incf	i2c_master_read@len,w
  7304  0627  1D03               	skipz
  7305  0628  2E2D               	goto	u2041
  7306  0629  0A28               	incf	i2c_master_read@len+1,w
  7307  062A  1D03               	btfss	3,2
  7308  062B  2E2D               	goto	u2041
  7309  062C  2E2E               	goto	u2040
  7310  062D                     u2041:	
  7311  062D  2E0C               	goto	l2827
  7312  062E                     u2040:	
  7313  062E                     l2833:	
  7314                           
  7315                           ;i2c_driver_stusb4500.c: 104: };i2c_driver_stusb4500.c: 105: };i2c_driver_stusb4500.c: 1
      +                          06: i2c_master_stop();
  7316  062E  318A  22B2  3185   	fcall	_i2c_master_stop
  7317  0631                     l2835:	
  7318                           
  7319                           ;i2c_driver_stusb4500.c: 108: return ok;
  7320  0631  0140               	movlb	0	; select bank0
  7321  0632  082D               	movf	i2c_master_read@ok+1,w
  7322  0633  00A6               	movwf	?_i2c_master_read+1
  7323  0634  082C               	movf	i2c_master_read@ok,w
  7324  0635  00A5               	movwf	?_i2c_master_read
  7325  0636                     l704:	
  7326  0636  0008               	return
  7327  0637                     __end_of_i2c_master_read:	
  7328                           
  7329                           	psect	text15
  7330  0AB2                     __ptext15:	
  7331 ;; *************** function _i2c_master_stop *****************
  7332 ;; Defined at:
  7333 ;;		line 22 in file "i2c_driver_stusb4500.c"
  7334 ;; Parameters:    Size  Location     Type
  7335 ;;		None
  7336 ;; Auto vars:     Size  Location     Type
  7337 ;;		None
  7338 ;; Return value:  Size  Location     Type
  7339 ;;                  1    wreg      void 
  7340 ;; Registers used:
  7341 ;;		wreg, status,2, status,0, pclath, cstack
  7342 ;; Tracked objects:
  7343 ;;		On entry : 0/0
  7344 ;;		On exit  : 0/0
  7345 ;;		Unchanged: 0/0
  7346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7347 ;;      Params:         0       0       0       0       0       0       0       0
  7348 ;;      Locals:         0       0       0       0       0       0       0       0
  7349 ;;      Temps:          0       0       0       0       0       0       0       0
  7350 ;;      Totals:         0       0       0       0       0       0       0       0
  7351 ;;Total ram usage:        0 bytes
  7352 ;; Hardware stack levels used:    1
  7353 ;; Hardware stack levels required when called:    3
  7354 ;; This function calls:
  7355 ;;		_i2c_master_wait
  7356 ;; This function is called by:
  7357 ;;		_i2c_master_write
  7358 ;;		_i2c_master_read
  7359 ;; This function uses a non-reentrant model
  7360 ;;
  7361                           
  7362                           
  7363                           ;psect for function _i2c_master_stop
  7364  0AB2                     _i2c_master_stop:	
  7365  0AB2                     l2759:	
  7366                           ;incstack = 0
  7367                           ; Regs used in _i2c_master_stop: [wreg+status,2+status,0+pclath+cstack]
  7368                           
  7369                           
  7370                           ;i2c_driver_stusb4500.c: 23: SSP1CON2bits.PEN = 1;
  7371  0AB2  0143               	movlb	3	; select bank3
  7372  0AB3  1511               	bsf	17,2	;volatile
  7373  0AB4                     l2761:	
  7374                           
  7375                           ;i2c_driver_stusb4500.c: 24: i2c_master_wait();
  7376  0AB4  318A  22FF  318A   	fcall	_i2c_master_wait
  7377  0AB7                     l667:	
  7378  0AB7  0008               	return
  7379  0AB8                     __end_of_i2c_master_stop:	
  7380                           
  7381                           	psect	text16
  7382  0AAC                     __ptext16:	
  7383 ;; *************** function _i2c_master_start *****************
  7384 ;; Defined at:
  7385 ;;		line 12 in file "i2c_driver_stusb4500.c"
  7386 ;; Parameters:    Size  Location     Type
  7387 ;;		None
  7388 ;; Auto vars:     Size  Location     Type
  7389 ;;		None
  7390 ;; Return value:  Size  Location     Type
  7391 ;;                  1    wreg      void 
  7392 ;; Registers used:
  7393 ;;		wreg, status,2, status,0, pclath, cstack
  7394 ;; Tracked objects:
  7395 ;;		On entry : 0/0
  7396 ;;		On exit  : 0/0
  7397 ;;		Unchanged: 0/0
  7398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7399 ;;      Params:         0       0       0       0       0       0       0       0
  7400 ;;      Locals:         0       0       0       0       0       0       0       0
  7401 ;;      Temps:          0       0       0       0       0       0       0       0
  7402 ;;      Totals:         0       0       0       0       0       0       0       0
  7403 ;;Total ram usage:        0 bytes
  7404 ;; Hardware stack levels used:    1
  7405 ;; Hardware stack levels required when called:    3
  7406 ;; This function calls:
  7407 ;;		_i2c_master_wait
  7408 ;; This function is called by:
  7409 ;;		_i2c_master_write
  7410 ;;		_i2c_master_read
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           
  7415                           ;psect for function _i2c_master_start
  7416  0AAC                     _i2c_master_start:	
  7417  0AAC                     l2751:	
  7418                           ;incstack = 0
  7419                           ; Regs used in _i2c_master_start: [wreg+status,2+status,0+pclath+cstack]
  7420                           
  7421                           
  7422                           ;i2c_driver_stusb4500.c: 13: SSP1CON2bits.SEN = 1;
  7423  0AAC  0143               	movlb	3	; select bank3
  7424  0AAD  1411               	bsf	17,0	;volatile
  7425  0AAE                     l2753:	
  7426                           
  7427                           ;i2c_driver_stusb4500.c: 14: i2c_master_wait();
  7428  0AAE  318A  22FF  318A   	fcall	_i2c_master_wait
  7429  0AB1                     l661:	
  7430  0AB1  0008               	return
  7431  0AB2                     __end_of_i2c_master_start:	
  7432                           
  7433                           	psect	text17
  7434  0B57                     __ptext17:	
  7435 ;; *************** function _i2c_master_send_byte *****************
  7436 ;; Defined at:
  7437 ;;		line 27 in file "i2c_driver_stusb4500.c"
  7438 ;; Parameters:    Size  Location     Type
  7439 ;;  data            1    wreg     const unsigned char 
  7440 ;; Auto vars:     Size  Location     Type
  7441 ;;  data            1    3[BANK0 ] const unsigned char 
  7442 ;; Return value:  Size  Location     Type
  7443 ;;                  2    0[BANK0 ] int 
  7444 ;; Registers used:
  7445 ;;		wreg, status,2, status,0, pclath, cstack
  7446 ;; Tracked objects:
  7447 ;;		On entry : 0/0
  7448 ;;		On exit  : 0/0
  7449 ;;		Unchanged: 0/0
  7450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7451 ;;      Params:         0       3       0       0       0       0       0       0
  7452 ;;      Locals:         0       1       0       0       0       0       0       0
  7453 ;;      Temps:          0       0       0       0       0       0       0       0
  7454 ;;      Totals:         0       4       0       0       0       0       0       0
  7455 ;;Total ram usage:        4 bytes
  7456 ;; Hardware stack levels used:    1
  7457 ;; Hardware stack levels required when called:    3
  7458 ;; This function calls:
  7459 ;;		_i2c_master_wait
  7460 ;; This function is called by:
  7461 ;;		_i2c_master_write
  7462 ;;		_i2c_master_read
  7463 ;; This function uses a non-reentrant model
  7464 ;;
  7465                           
  7466                           
  7467                           ;psect for function _i2c_master_send_byte
  7468  0B57                     _i2c_master_send_byte:	
  7469                           
  7470                           ;incstack = 0
  7471                           ; Regs used in _i2c_master_send_byte: [wreg+status,2+status,0+pclath+cstack]
  7472                           ;i2c_master_send_byte@data stored from wreg
  7473  0B57  0140               	movlb	0	; select bank0
  7474  0B58  00A4               	movwf	i2c_master_send_byte@data
  7475  0B59                     l2763:	
  7476                           
  7477                           ;i2c_driver_stusb4500.c: 28: SSP1BUF = data;
  7478  0B59  0824               	movf	i2c_master_send_byte@data,w
  7479  0B5A  0143               	movlb	3	; select bank3
  7480  0B5B  008C               	movwf	12	;volatile
  7481  0B5C                     l2765:	
  7482                           
  7483                           ;i2c_driver_stusb4500.c: 29: i2c_master_wait();
  7484  0B5C  318A  22FF  318B   	fcall	_i2c_master_wait
  7485  0B5F                     l2767:	
  7486                           
  7487                           ;i2c_driver_stusb4500.c: 31: return SSP1CON2bits.ACKSTAT ? -1 : 0;
  7488  0B5F  0143               	movlb	3	; select bank3
  7489  0B60  1B11               	btfsc	17,6	;volatile
  7490  0B61  2B63               	goto	u1961
  7491  0B62  2B64               	goto	u1960
  7492  0B63                     u1961:	
  7493  0B63  2B68               	goto	l2771
  7494  0B64                     u1960:	
  7495  0B64                     l2769:	
  7496  0B64  0140               	movlb	0	; select bank0
  7497  0B65  01A1               	clrf	?_i2c_master_send_byte
  7498  0B66  01A2               	clrf	?_i2c_master_send_byte+1
  7499  0B67  2B6D               	goto	l674
  7500  0B68                     l2771:	
  7501  0B68  30FF               	movlw	255
  7502  0B69  0140               	movlb	0	; select bank0
  7503  0B6A  00A1               	movwf	?_i2c_master_send_byte
  7504  0B6B  30FF               	movlw	255
  7505  0B6C  00A2               	movwf	?_i2c_master_send_byte+1
  7506  0B6D                     l674:	
  7507  0B6D  0008               	return
  7508  0B6E                     __end_of_i2c_master_send_byte:	
  7509                           
  7510                           	psect	text18
  7511  0AA6                     __ptext18:	
  7512 ;; *************** function _i2c_master_repeat_start *****************
  7513 ;; Defined at:
  7514 ;;		line 17 in file "i2c_driver_stusb4500.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;		None
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;		None
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  1    wreg      void 
  7521 ;; Registers used:
  7522 ;;		wreg, status,2, status,0, pclath, cstack
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7528 ;;      Params:         0       0       0       0       0       0       0       0
  7529 ;;      Locals:         0       0       0       0       0       0       0       0
  7530 ;;      Temps:          0       0       0       0       0       0       0       0
  7531 ;;      Totals:         0       0       0       0       0       0       0       0
  7532 ;;Total ram usage:        0 bytes
  7533 ;; Hardware stack levels used:    1
  7534 ;; Hardware stack levels required when called:    3
  7535 ;; This function calls:
  7536 ;;		_i2c_master_wait
  7537 ;; This function is called by:
  7538 ;;		_i2c_master_read
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           
  7543                           ;psect for function _i2c_master_repeat_start
  7544  0AA6                     _i2c_master_repeat_start:	
  7545  0AA6                     l2755:	
  7546                           ;incstack = 0
  7547                           ; Regs used in _i2c_master_repeat_start: [wreg+status,2+status,0+pclath+cstack]
  7548                           
  7549                           
  7550                           ;i2c_driver_stusb4500.c: 18: SSP1CON2bits.RSEN = 1;
  7551  0AA6  0143               	movlb	3	; select bank3
  7552  0AA7  1491               	bsf	17,1	;volatile
  7553  0AA8                     l2757:	
  7554                           
  7555                           ;i2c_driver_stusb4500.c: 19: i2c_master_wait();
  7556  0AA8  318A  22FF  318A   	fcall	_i2c_master_wait
  7557  0AAB                     l664:	
  7558  0AAB  0008               	return
  7559  0AAC                     __end_of_i2c_master_repeat_start:	
  7560                           
  7561                           	psect	text19
  7562  0C05                     __ptext19:	
  7563 ;; *************** function _i2c_master_receive_byte *****************
  7564 ;; Defined at:
  7565 ;;		line 34 in file "i2c_driver_stusb4500.c"
  7566 ;; Parameters:    Size  Location     Type
  7567 ;;  ack             1    wreg     const unsigned char 
  7568 ;; Auto vars:     Size  Location     Type
  7569 ;;  ack             1    1[BANK0 ] const unsigned char 
  7570 ;;  data            1    2[BANK0 ] unsigned char 
  7571 ;; Return value:  Size  Location     Type
  7572 ;;                  1    wreg      unsigned char 
  7573 ;; Registers used:
  7574 ;;		wreg, status,2, status,0, pclath, cstack
  7575 ;; Tracked objects:
  7576 ;;		On entry : 0/0
  7577 ;;		On exit  : 0/0
  7578 ;;		Unchanged: 0/0
  7579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7580 ;;      Params:         0       0       0       0       0       0       0       0
  7581 ;;      Locals:         0       2       0       0       0       0       0       0
  7582 ;;      Temps:          0       1       0       0       0       0       0       0
  7583 ;;      Totals:         0       3       0       0       0       0       0       0
  7584 ;;Total ram usage:        3 bytes
  7585 ;; Hardware stack levels used:    1
  7586 ;; Hardware stack levels required when called:    3
  7587 ;; This function calls:
  7588 ;;		_i2c_master_wait
  7589 ;; This function is called by:
  7590 ;;		_i2c_master_read
  7591 ;; This function uses a non-reentrant model
  7592 ;;
  7593                           
  7594                           
  7595                           ;psect for function _i2c_master_receive_byte
  7596  0C05                     _i2c_master_receive_byte:	
  7597                           
  7598                           ;incstack = 0
  7599                           ; Regs used in _i2c_master_receive_byte: [wreg+status,2+status,0+pclath+cstack]
  7600                           ;i2c_master_receive_byte@ack stored from wreg
  7601  0C05  0140               	movlb	0	; select bank0
  7602  0C06  00A2               	movwf	i2c_master_receive_byte@ack
  7603  0C07                     l2775:	
  7604                           
  7605                           ;i2c_driver_stusb4500.c: 35: SSP1CON2bits.RCEN = 1;
  7606  0C07  0143               	movlb	3	; select bank3
  7607  0C08  1591               	bsf	17,3	;volatile
  7608  0C09                     l2777:	
  7609                           
  7610                           ;i2c_driver_stusb4500.c: 36: i2c_master_wait();
  7611  0C09  318A  22FF  318C   	fcall	_i2c_master_wait
  7612  0C0C                     l2779:	
  7613                           
  7614                           ;i2c_driver_stusb4500.c: 37: uint8_t data = SSP1BUF;
  7615  0C0C  0143               	movlb	3	; select bank3
  7616  0C0D  080C               	movf	12,w	;volatile
  7617  0C0E  0140               	movlb	0	; select bank0
  7618  0C0F  00A1               	movwf	??_i2c_master_receive_byte
  7619  0C10  0821               	movf	??_i2c_master_receive_byte,w
  7620  0C11  00A3               	movwf	i2c_master_receive_byte@data
  7621  0C12                     l2781:	
  7622                           
  7623                           ;i2c_driver_stusb4500.c: 38: i2c_master_wait();
  7624  0C12  318A  22FF  318C   	fcall	_i2c_master_wait
  7625  0C15                     l2783:	
  7626                           
  7627                           ;i2c_driver_stusb4500.c: 39: SSP1CON2bits.ACKDT = ack;
  7628  0C15  0140               	movlb	0	; select bank0
  7629  0C16  0C22               	rrf	i2c_master_receive_byte@ack,w
  7630  0C17  0143               	movlb	3	; select bank3
  7631  0C18  1C03               	skipc
  7632  0C19  1291               	bcf	17,5	;volatile
  7633  0C1A  1803               	skipnc
  7634  0C1B  1691               	bsf	17,5	;volatile
  7635  0C1C                     l2785:	
  7636                           
  7637                           ;i2c_driver_stusb4500.c: 40: SSP1CON2bits.ACKEN = 1;
  7638  0C1C  1611               	bsf	17,4	;volatile
  7639  0C1D                     l2787:	
  7640                           
  7641                           ;i2c_driver_stusb4500.c: 41: i2c_master_wait();
  7642  0C1D  318A  22FF  318C   	fcall	_i2c_master_wait
  7643  0C20                     l2789:	
  7644                           
  7645                           ;i2c_driver_stusb4500.c: 43: return data;
  7646  0C20  0140               	movlb	0	; select bank0
  7647  0C21  0823               	movf	i2c_master_receive_byte@data,w
  7648  0C22                     l677:	
  7649  0C22  0008               	return
  7650  0C23                     __end_of_i2c_master_receive_byte:	
  7651                           
  7652                           	psect	text20
  7653  0AFF                     __ptext20:	
  7654 ;; *************** function _i2c_master_wait *****************
  7655 ;; Defined at:
  7656 ;;		line 7 in file "i2c_driver_stusb4500.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;		None
  7659 ;; Auto vars:     Size  Location     Type
  7660 ;;		None
  7661 ;; Return value:  Size  Location     Type
  7662 ;;                  1    wreg      void 
  7663 ;; Registers used:
  7664 ;;		wreg, status,2
  7665 ;; Tracked objects:
  7666 ;;		On entry : 0/0
  7667 ;;		On exit  : 0/0
  7668 ;;		Unchanged: 0/0
  7669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7670 ;;      Params:         0       0       0       0       0       0       0       0
  7671 ;;      Locals:         0       0       0       0       0       0       0       0
  7672 ;;      Temps:          0       0       0       0       0       0       0       0
  7673 ;;      Totals:         0       0       0       0       0       0       0       0
  7674 ;;Total ram usage:        0 bytes
  7675 ;; Hardware stack levels used:    1
  7676 ;; Hardware stack levels required when called:    2
  7677 ;; This function calls:
  7678 ;;		Nothing
  7679 ;; This function is called by:
  7680 ;;		_i2c_master_start
  7681 ;;		_i2c_master_repeat_start
  7682 ;;		_i2c_master_stop
  7683 ;;		_i2c_master_send_byte
  7684 ;;		_i2c_master_receive_byte
  7685 ;;		_i2c_master_write
  7686 ;;		_i2c_master_read
  7687 ;; This function uses a non-reentrant model
  7688 ;;
  7689                           
  7690                           
  7691                           ;psect for function _i2c_master_wait
  7692  0AFF                     _i2c_master_wait:	
  7693  0AFF                     l2747:	
  7694                           ;incstack = 0
  7695                           ; Regs used in _i2c_master_wait: [wreg+status,2]
  7696                           
  7697  0AFF                     l655:	
  7698                           ;i2c_driver_stusb4500.c: 9: ;
  7699                           
  7700  0AFF  0143               	movlb	3	; select bank3
  7701  0B00  190F               	btfsc	15,2	;volatile
  7702  0B01  2B03               	goto	u1941
  7703  0B02  2B04               	goto	u1940
  7704  0B03                     u1941:	
  7705  0B03  2AFF               	goto	l655
  7706  0B04                     u1940:	
  7707  0B04                     l2749:	
  7708  0B04  0811               	movf	17,w	;volatile
  7709  0B05  391F               	andlw	31
  7710  0B06  1D03               	btfss	3,2
  7711  0B07  2B09               	goto	u1951
  7712  0B08  2B0A               	goto	u1950
  7713  0B09                     u1951:	
  7714  0B09  2AFF               	goto	l655
  7715  0B0A                     u1950:	
  7716  0B0A                     l658:	
  7717  0B0A  0008               	return
  7718  0B0B                     __end_of_i2c_master_wait:	
  7719                           
  7720                           	psect	text21
  7721  0D22                     __ptext21:	
  7722 ;; *************** function _led_modes *****************
  7723 ;; Defined at:
  7724 ;;		line 156 in file "LED_INTERFACE.c"
  7725 ;; Parameters:    Size  Location     Type
  7726 ;;		None
  7727 ;; Auto vars:     Size  Location     Type
  7728 ;;		None
  7729 ;; Return value:  Size  Location     Type
  7730 ;;                  1    wreg      void 
  7731 ;; Registers used:
  7732 ;;		wreg, status,2, status,0, pclath, cstack
  7733 ;; Tracked objects:
  7734 ;;		On entry : 0/0
  7735 ;;		On exit  : 0/0
  7736 ;;		Unchanged: 0/0
  7737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7738 ;;      Params:         0       0       0       0       0       0       0       0
  7739 ;;      Locals:         0       0       0       0       0       0       0       0
  7740 ;;      Temps:          0       0       0       0       0       0       0       0
  7741 ;;      Totals:         0       0       0       0       0       0       0       0
  7742 ;;Total ram usage:        0 bytes
  7743 ;; Hardware stack levels used:    1
  7744 ;; Hardware stack levels required when called:    5
  7745 ;; This function calls:
  7746 ;;		_RGB_fade
  7747 ;;		_battery_fade
  7748 ;;		_flash_led
  7749 ;; This function is called by:
  7750 ;;		_main
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           
  7755                           ;psect for function _led_modes
  7756  0D22                     _led_modes:	
  7757  0D22                     l3561:	
  7758                           ;incstack = 0
  7759                           ; Regs used in _led_modes: [wreg+status,2+status,0+pclath+cstack]
  7760                           
  7761                           
  7762                           ;LED_INTERFACE.c: 158: if(mode == 0) {
  7763  0D22  0140               	movlb	0	; select bank0
  7764  0D23  086F               	movf	_mode,w
  7765  0D24  1D03               	btfss	3,2
  7766  0D25  2D27               	goto	u3071
  7767  0D26  2D28               	goto	u3070
  7768  0D27                     u3071:	
  7769  0D27  2D2D               	goto	l3565
  7770  0D28                     u3070:	
  7771  0D28                     l3563:	
  7772                           
  7773                           ;LED_INTERFACE.c: 159: PWM3DCH = 0;
  7774  0D28  0146               	movlb	6	; select bank6
  7775  0D29  0195               	clrf	21	;volatile
  7776                           
  7777                           ;LED_INTERFACE.c: 160: PWM4DCH = 0;
  7778  0D2A  0199               	clrf	25	;volatile
  7779                           
  7780                           ;LED_INTERFACE.c: 161: PWM5DCH = 0;
  7781  0D2B  019D               	clrf	29	;volatile
  7782                           
  7783                           ;LED_INTERFACE.c: 162: }
  7784  0D2C  2D4B               	goto	l541
  7785  0D2D                     l3565:	
  7786                           
  7787                           ;LED_INTERFACE.c: 163: else if(mode == 1) {
  7788  0D2D  036F               	decf	_mode,w
  7789  0D2E  1D03               	btfss	3,2
  7790  0D2F  2D31               	goto	u3081
  7791  0D30  2D32               	goto	u3080
  7792  0D31                     u3081:	
  7793  0D31  2D36               	goto	l3569
  7794  0D32                     u3080:	
  7795  0D32                     l3567:	
  7796                           
  7797                           ;LED_INTERFACE.c: 164: RGB_fade();
  7798  0D32  3186  2637  318D   	fcall	_RGB_fade
  7799                           
  7800                           ;LED_INTERFACE.c: 165: }
  7801  0D35  2D4B               	goto	l541
  7802  0D36                     l3569:	
  7803                           
  7804                           ;LED_INTERFACE.c: 166: else if(mode == 2) {
  7805  0D36  3002               	movlw	2
  7806  0D37  066F               	xorwf	_mode,w
  7807  0D38  1D03               	btfss	3,2
  7808  0D39  2D3B               	goto	u3091
  7809  0D3A  2D3C               	goto	u3090
  7810  0D3B                     u3091:	
  7811  0D3B  2D40               	goto	l3573
  7812  0D3C                     u3090:	
  7813  0D3C                     l3571:	
  7814                           
  7815                           ;LED_INTERFACE.c: 167: battery_fade();
  7816  0D3C  3186  26B0  318D   	fcall	_battery_fade
  7817                           
  7818                           ;LED_INTERFACE.c: 168: }
  7819  0D3F  2D4B               	goto	l541
  7820  0D40                     l3573:	
  7821                           
  7822                           ;LED_INTERFACE.c: 169: else if(mode == 3) {
  7823  0D40  3003               	movlw	3
  7824  0D41  066F               	xorwf	_mode,w
  7825  0D42  1D03               	btfss	3,2
  7826  0D43  2D45               	goto	u3101
  7827  0D44  2D46               	goto	u3100
  7828  0D45                     u3101:	
  7829  0D45  2D4A               	goto	l3577
  7830  0D46                     u3100:	
  7831  0D46                     l3575:	
  7832                           
  7833                           ;LED_INTERFACE.c: 170: flash_led();
  7834  0D46  318E  26A5  318D   	fcall	_flash_led
  7835                           
  7836                           ;LED_INTERFACE.c: 171: }
  7837  0D49  2D4B               	goto	l541
  7838  0D4A                     l3577:	
  7839                           
  7840                           ;LED_INTERFACE.c: 172: else {;LED_INTERFACE.c: 173: mode = 0;
  7841  0D4A  01EF               	clrf	_mode
  7842  0D4B                     l541:	
  7843  0D4B  0008               	return
  7844  0D4C                     __end_of_led_modes:	
  7845                           
  7846                           	psect	text22
  7847  0EA5                     __ptext22:	
  7848 ;; *************** function _flash_led *****************
  7849 ;; Defined at:
  7850 ;;		line 137 in file "LED_INTERFACE.c"
  7851 ;; Parameters:    Size  Location     Type
  7852 ;;		None
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;		None
  7855 ;; Return value:  Size  Location     Type
  7856 ;;                  1    wreg      void 
  7857 ;; Registers used:
  7858 ;;		wreg, status,2, status,0, pclath, cstack
  7859 ;; Tracked objects:
  7860 ;;		On entry : 0/0
  7861 ;;		On exit  : 0/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7864 ;;      Params:         0       0       0       0       0       0       0       0
  7865 ;;      Locals:         0       0       0       0       0       0       0       0
  7866 ;;      Temps:          0       1       0       0       0       0       0       0
  7867 ;;      Totals:         0       1       0       0       0       0       0       0
  7868 ;;Total ram usage:        1 bytes
  7869 ;; Hardware stack levels used:    1
  7870 ;; Hardware stack levels required when called:    3
  7871 ;; This function calls:
  7872 ;;		_get_time
  7873 ;;		_timer_diff
  7874 ;; This function is called by:
  7875 ;;		_led_modes
  7876 ;; This function uses a non-reentrant model
  7877 ;;
  7878                           
  7879                           
  7880                           ;psect for function _flash_led
  7881  0EA5                     _flash_led:	
  7882  0EA5                     l3215:	
  7883                           ;incstack = 0
  7884                           ; Regs used in _flash_led: [wreg+status,2+status,0+pclath+cstack]
  7885                           
  7886                           
  7887                           ;LED_INTERFACE.c: 138: if(timer_diff(flash_time) >= 50) {
  7888  0EA5  0142               	movlb	2	; select bank2
  7889  0EA6  0823               	movf	(_flash_time+3)^(0+256),w
  7890  0EA7  0140               	movlb	0	; select bank0
  7891  0EA8  00A4               	movwf	timer_diff@t+3
  7892  0EA9  0142               	movlb	2	; select bank2
  7893  0EAA  0822               	movf	(_flash_time+2)^(0+256),w
  7894  0EAB  0140               	movlb	0	; select bank0
  7895  0EAC  00A3               	movwf	timer_diff@t+2
  7896  0EAD  0142               	movlb	2	; select bank2
  7897  0EAE  0821               	movf	(_flash_time+1)^(0+256),w
  7898  0EAF  0140               	movlb	0	; select bank0
  7899  0EB0  00A2               	movwf	timer_diff@t+1
  7900  0EB1  0142               	movlb	2	; select bank2
  7901  0EB2  0820               	movf	_flash_time^(0+256),w
  7902  0EB3  0140               	movlb	0	; select bank0
  7903  0EB4  00A1               	movwf	timer_diff@t
  7904  0EB5  318B  23E7  318E   	fcall	_timer_diff
  7905  0EB8  0140               	movlb	0	; select bank0
  7906  0EB9  0824               	movf	?_timer_diff+3,w
  7907  0EBA  1D03               	btfss	3,2
  7908  0EBB  2EC8               	goto	u2690
  7909  0EBC  0823               	movf	?_timer_diff+2,w
  7910  0EBD  1D03               	btfss	3,2
  7911  0EBE  2EC8               	goto	u2690
  7912  0EBF  0822               	movf	?_timer_diff+1,w
  7913  0EC0  1D03               	btfss	3,2
  7914  0EC1  2EC8               	goto	u2690
  7915  0EC2  3032               	movlw	50
  7916  0EC3  0221               	subwf	?_timer_diff,w
  7917  0EC4  1C03               	btfss	3,0
  7918  0EC5  2EC7               	goto	u2691
  7919  0EC6  2EC8               	goto	u2690
  7920  0EC7                     u2691:	
  7921  0EC7  2EE5               	goto	l3221
  7922  0EC8                     u2690:	
  7923  0EC8                     l3217:	
  7924                           
  7925                           ;LED_INTERFACE.c: 139: flash_state = !flash_state;
  7926  0EC8  0860               	movf	_flash_state,w
  7927  0EC9  1903               	btfsc	3,2
  7928  0ECA  2ECC               	goto	u2701
  7929  0ECB  2ECE               	goto	u2700
  7930  0ECC                     u2701:	
  7931  0ECC  3001               	movlw	1
  7932  0ECD  2ECF               	goto	u2710
  7933  0ECE                     u2700:	
  7934  0ECE  3000               	movlw	0
  7935  0ECF                     u2710:	
  7936  0ECF  00A9               	movwf	??_flash_led
  7937  0ED0  0829               	movf	??_flash_led,w
  7938  0ED1  00E0               	movwf	_flash_state
  7939  0ED2                     l3219:	
  7940                           
  7941                           ;LED_INTERFACE.c: 140: flash_time = get_time();
  7942  0ED2  318B  2319  318E   	fcall	_get_time
  7943  0ED5  0140               	movlb	0	; select bank0
  7944  0ED6  0824               	movf	?_get_time+3,w
  7945  0ED7  0142               	movlb	2	; select bank2
  7946  0ED8  00A3               	movwf	(_flash_time+3)^(0+256)
  7947  0ED9  0140               	movlb	0	; select bank0
  7948  0EDA  0823               	movf	?_get_time+2,w
  7949  0EDB  0142               	movlb	2	; select bank2
  7950  0EDC  00A2               	movwf	(_flash_time+2)^(0+256)
  7951  0EDD  0140               	movlb	0	; select bank0
  7952  0EDE  0822               	movf	?_get_time+1,w
  7953  0EDF  0142               	movlb	2	; select bank2
  7954  0EE0  00A1               	movwf	(_flash_time+1)^(0+256)
  7955  0EE1  0140               	movlb	0	; select bank0
  7956  0EE2  0821               	movf	?_get_time,w
  7957  0EE3  0142               	movlb	2	; select bank2
  7958  0EE4  00A0               	movwf	_flash_time^(0+256)
  7959  0EE5                     l3221:	
  7960                           
  7961                           ;LED_INTERFACE.c: 141: };LED_INTERFACE.c: 142: if(flash_state) {
  7962  0EE5  0140               	movlb	0	; select bank0
  7963  0EE6  0860               	movf	_flash_state,w
  7964  0EE7  1903               	btfsc	3,2
  7965  0EE8  2EEA               	goto	u2721
  7966  0EE9  2EEB               	goto	u2720
  7967  0EEA                     u2721:	
  7968  0EEA  2EF1               	goto	l3227
  7969  0EEB                     u2720:	
  7970  0EEB                     l3223:	
  7971                           
  7972                           ;LED_INTERFACE.c: 143: PWM3DCH = 0;
  7973  0EEB  0146               	movlb	6	; select bank6
  7974  0EEC  0195               	clrf	21	;volatile
  7975                           
  7976                           ;LED_INTERFACE.c: 144: PWM4DCH = 0;
  7977  0EED  0199               	clrf	25	;volatile
  7978  0EEE                     l3225:	
  7979                           
  7980                           ;LED_INTERFACE.c: 145: PWM5DCH = 255;
  7981  0EEE  30FF               	movlw	255
  7982  0EEF  009D               	movwf	29	;volatile
  7983                           
  7984                           ;LED_INTERFACE.c: 146: }
  7985  0EF0  2EF5               	goto	l528
  7986  0EF1                     l3227:	
  7987                           
  7988                           ;LED_INTERFACE.c: 147: else {;LED_INTERFACE.c: 148: PWM3DCH = 0;
  7989  0EF1  0146               	movlb	6	; select bank6
  7990  0EF2  0195               	clrf	21	;volatile
  7991                           
  7992                           ;LED_INTERFACE.c: 149: PWM4DCH = 0;
  7993  0EF3  0199               	clrf	25	;volatile
  7994                           
  7995                           ;LED_INTERFACE.c: 150: PWM5DCH = 0;
  7996  0EF4  019D               	clrf	29	;volatile
  7997  0EF5                     l528:	
  7998  0EF5  0008               	return
  7999  0EF6                     __end_of_flash_led:	
  8000                           
  8001                           	psect	text23
  8002  06B0                     __ptext23:	
  8003 ;; *************** function _battery_fade *****************
  8004 ;; Defined at:
  8005 ;;		line 53 in file "LED_INTERFACE.c"
  8006 ;; Parameters:    Size  Location     Type
  8007 ;;		None
  8008 ;; Auto vars:     Size  Location     Type
  8009 ;;  v               1   31[BANK0 ] unsigned char 
  8010 ;;  battery_max     1    0        unsigned char 
  8011 ;;  battery_min     1    0        unsigned char 
  8012 ;; Return value:  Size  Location     Type
  8013 ;;                  1    wreg      void 
  8014 ;; Registers used:
  8015 ;;		wreg, status,2, status,0, pclath, cstack
  8016 ;; Tracked objects:
  8017 ;;		On entry : 0/0
  8018 ;;		On exit  : 0/0
  8019 ;;		Unchanged: 0/0
  8020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8021 ;;      Params:         0       0       0       0       0       0       0       0
  8022 ;;      Locals:         0       3       0       0       0       0       0       0
  8023 ;;      Temps:          0       6       0       0       0       0       0       0
  8024 ;;      Totals:         0       9       0       0       0       0       0       0
  8025 ;;Total ram usage:        9 bytes
  8026 ;; Hardware stack levels used:    1
  8027 ;; Hardware stack levels required when called:    4
  8028 ;; This function calls:
  8029 ;;		_Map
  8030 ;; This function is called by:
  8031 ;;		_led_modes
  8032 ;; This function uses a non-reentrant model
  8033 ;;
  8034                           
  8035                           
  8036                           ;psect for function _battery_fade
  8037  06B0                     _battery_fade:	
  8038  06B0                     l3181:	
  8039                           ;incstack = 0
  8040                           ; Regs used in _battery_fade: [wreg+status,2+status,0+pclath+cstack]
  8041                           
  8042                           
  8043                           ;LED_INTERFACE.c: 56: char v = BATTERY_VOLTAGE;
  8044  06B0  0140               	movlb	0	; select bank0
  8045  06B1  086D               	movf	_BATTERY_VOLTAGE,w
  8046  06B2  00B8               	movwf	??_battery_fade
  8047  06B3  0838               	movf	??_battery_fade,w
  8048  06B4  00C0               	movwf	battery_fade@v
  8049  06B5                     l3183:	
  8050  06B5                     l3185:	
  8051  06B5                     l3187:	
  8052                           
  8053                           ;LED_INTERFACE.c: 62: if (v > battery_max) {
  8054  06B5  3063               	movlw	99
  8055  06B6  0240               	subwf	battery_fade@v,w
  8056  06B7  1C03               	skipc
  8057  06B8  2EBA               	goto	u2661
  8058  06B9  2EBB               	goto	u2660
  8059  06BA                     u2661:	
  8060  06BA  2EBF               	goto	l3193
  8061  06BB                     u2660:	
  8062  06BB                     l3189:	
  8063                           
  8064                           ;LED_INTERFACE.c: 63: v = battery_max;
  8065  06BB  3062               	movlw	98
  8066  06BC  00B8               	movwf	??_battery_fade
  8067  06BD  0838               	movf	??_battery_fade,w
  8068  06BE  00C0               	movwf	battery_fade@v
  8069  06BF                     l3193:	
  8070                           
  8071                           ;LED_INTERFACE.c: 67: };LED_INTERFACE.c: 69: v = Map(v, battery_min, battery_max, 0, 127
      +                          );
  8072  06BF  0840               	movf	battery_fade@v,w
  8073  06C0  00B8               	movwf	??_battery_fade
  8074  06C1  01B9               	clrf	??_battery_fade+1
  8075  06C2  0838               	movf	??_battery_fade,w
  8076  06C3  00B0               	movwf	Map@x
  8077  06C4  0839               	movf	??_battery_fade+1,w
  8078  06C5  00B1               	movwf	Map@x+1
  8079  06C6  01B2               	clrf	Map@inMin
  8080  06C7  3062               	movlw	98
  8081  06C8  00BA               	movwf	??_battery_fade+2
  8082  06C9  083A               	movf	??_battery_fade+2,w
  8083  06CA  00B3               	movwf	Map@inMax
  8084  06CB  01B4               	clrf	Map@outMin
  8085  06CC  307F               	movlw	127
  8086  06CD  00BB               	movwf	??_battery_fade+3
  8087  06CE  083B               	movf	??_battery_fade+3,w
  8088  06CF  00B5               	movwf	Map@outMax
  8089  06D0  318C  24AB  3186   	fcall	_Map
  8090  06D3  0140               	movlb	0	; select bank0
  8091  06D4  00BC               	movwf	??_battery_fade+4
  8092  06D5  083C               	movf	??_battery_fade+4,w
  8093  06D6  00C0               	movwf	battery_fade@v
  8094  06D7                     l3195:	
  8095                           
  8096                           ;LED_INTERFACE.c: 72: if (v <= 63) {
  8097  06D7  3040               	movlw	64
  8098  06D8  0240               	subwf	battery_fade@v,w
  8099  06D9  1803               	skipnc
  8100  06DA  2EDC               	goto	u2671
  8101  06DB  2EDD               	goto	u2670
  8102  06DC                     u2671:	
  8103  06DC  2EFE               	goto	l3205
  8104  06DD                     u2670:	
  8105  06DD                     l3197:	
  8106                           
  8107                           ;LED_INTERFACE.c: 73: v = Map(v, 0, 63, 0, 255);
  8108  06DD  0840               	movf	battery_fade@v,w
  8109  06DE  00B8               	movwf	??_battery_fade
  8110  06DF  01B9               	clrf	??_battery_fade+1
  8111  06E0  0838               	movf	??_battery_fade,w
  8112  06E1  00B0               	movwf	Map@x
  8113  06E2  0839               	movf	??_battery_fade+1,w
  8114  06E3  00B1               	movwf	Map@x+1
  8115  06E4  01B2               	clrf	Map@inMin
  8116  06E5  303F               	movlw	63
  8117  06E6  00BA               	movwf	??_battery_fade+2
  8118  06E7  083A               	movf	??_battery_fade+2,w
  8119  06E8  00B3               	movwf	Map@inMax
  8120  06E9  01B4               	clrf	Map@outMin
  8121  06EA  30FF               	movlw	255
  8122  06EB  00BB               	movwf	??_battery_fade+3
  8123  06EC  083B               	movf	??_battery_fade+3,w
  8124  06ED  00B5               	movwf	Map@outMax
  8125  06EE  318C  24AB  3186   	fcall	_Map
  8126  06F1  0140               	movlb	0	; select bank0
  8127  06F2  00BC               	movwf	??_battery_fade+4
  8128  06F3  083C               	movf	??_battery_fade+4,w
  8129  06F4  00C0               	movwf	battery_fade@v
  8130  06F5                     l3199:	
  8131                           
  8132                           ;LED_INTERFACE.c: 74: PWM3DCH = 0;
  8133  06F5  0146               	movlb	6	; select bank6
  8134  06F6  0195               	clrf	21	;volatile
  8135  06F7                     l3201:	
  8136                           
  8137                           ;LED_INTERFACE.c: 75: PWM4DCH = v;
  8138  06F7  0140               	movlb	0	; select bank0
  8139  06F8  0840               	movf	battery_fade@v,w
  8140  06F9  0146               	movlb	6	; select bank6
  8141  06FA  0099               	movwf	25	;volatile
  8142  06FB                     l3203:	
  8143                           
  8144                           ;LED_INTERFACE.c: 76: PWM5DCH = 255;
  8145  06FB  30FF               	movlw	255
  8146  06FC  009D               	movwf	29	;volatile
  8147                           
  8148                           ;LED_INTERFACE.c: 77: }
  8149  06FD  2F27               	goto	l499
  8150  06FE                     l3205:	
  8151                           
  8152                           ;LED_INTERFACE.c: 79: else if (v >= 63) {
  8153  06FE  303F               	movlw	63
  8154  06FF  0240               	subwf	battery_fade@v,w
  8155  0700  1C03               	skipc
  8156  0701  2F03               	goto	u2681
  8157  0702  2F04               	goto	u2680
  8158  0703                     u2681:	
  8159  0703  2F27               	goto	l499
  8160  0704                     u2680:	
  8161  0704                     l3207:	
  8162                           
  8163                           ;LED_INTERFACE.c: 80: v = Map(v, 63, 127, 0, 255);
  8164  0704  0840               	movf	battery_fade@v,w
  8165  0705  00B8               	movwf	??_battery_fade
  8166  0706  01B9               	clrf	??_battery_fade+1
  8167  0707  0838               	movf	??_battery_fade,w
  8168  0708  00B0               	movwf	Map@x
  8169  0709  0839               	movf	??_battery_fade+1,w
  8170  070A  00B1               	movwf	Map@x+1
  8171  070B  303F               	movlw	63
  8172  070C  00BA               	movwf	??_battery_fade+2
  8173  070D  083A               	movf	??_battery_fade+2,w
  8174  070E  00B2               	movwf	Map@inMin
  8175  070F  307F               	movlw	127
  8176  0710  00BB               	movwf	??_battery_fade+3
  8177  0711  083B               	movf	??_battery_fade+3,w
  8178  0712  00B3               	movwf	Map@inMax
  8179  0713  01B4               	clrf	Map@outMin
  8180  0714  30FF               	movlw	255
  8181  0715  00BC               	movwf	??_battery_fade+4
  8182  0716  083C               	movf	??_battery_fade+4,w
  8183  0717  00B5               	movwf	Map@outMax
  8184  0718  318C  24AB  3186   	fcall	_Map
  8185  071B  0140               	movlb	0	; select bank0
  8186  071C  00BD               	movwf	??_battery_fade+5
  8187  071D  083D               	movf	??_battery_fade+5,w
  8188  071E  00C0               	movwf	battery_fade@v
  8189  071F                     l3209:	
  8190                           
  8191                           ;LED_INTERFACE.c: 81: PWM3DCH = 0;
  8192  071F  0146               	movlb	6	; select bank6
  8193  0720  0195               	clrf	21	;volatile
  8194  0721                     l3211:	
  8195                           
  8196                           ;LED_INTERFACE.c: 82: PWM4DCH = 255;
  8197  0721  30FF               	movlw	255
  8198  0722  0099               	movwf	25	;volatile
  8199  0723                     l3213:	
  8200                           
  8201                           ;LED_INTERFACE.c: 83: PWM5DCH = 255 - v;
  8202  0723  0140               	movlb	0	; select bank0
  8203  0724  0940               	comf	battery_fade@v,w
  8204  0725  0146               	movlb	6	; select bank6
  8205  0726  009D               	movwf	29	;volatile
  8206  0727                     l499:	
  8207  0727  0008               	return
  8208  0728                     __end_of_battery_fade:	
  8209                           
  8210                           	psect	text24
  8211  0CAB                     __ptext24:	
  8212 ;; *************** function _Map *****************
  8213 ;; Defined at:
  8214 ;;		line 48 in file "LED_INTERFACE.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;  x               2   15[BANK0 ] int 
  8217 ;;  inMin           1   17[BANK0 ] unsigned char 
  8218 ;;  inMax           1   18[BANK0 ] unsigned char 
  8219 ;;  outMin          1   19[BANK0 ] unsigned char 
  8220 ;;  outMax          1   20[BANK0 ] unsigned char 
  8221 ;; Auto vars:     Size  Location     Type
  8222 ;;		None
  8223 ;; Return value:  Size  Location     Type
  8224 ;;                  1    wreg      unsigned char 
  8225 ;; Registers used:
  8226 ;;		wreg, status,2, status,0, pclath, cstack
  8227 ;; Tracked objects:
  8228 ;;		On entry : 0/0
  8229 ;;		On exit  : 0/0
  8230 ;;		Unchanged: 0/0
  8231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8232 ;;      Params:         0       6       0       0       0       0       0       0
  8233 ;;      Locals:         0       0       0       0       0       0       0       0
  8234 ;;      Temps:          0       2       0       0       0       0       0       0
  8235 ;;      Totals:         0       8       0       0       0       0       0       0
  8236 ;;Total ram usage:        8 bytes
  8237 ;; Hardware stack levels used:    1
  8238 ;; Hardware stack levels required when called:    3
  8239 ;; This function calls:
  8240 ;;		___awdiv
  8241 ;;		___wmul
  8242 ;; This function is called by:
  8243 ;;		_battery_fade
  8244 ;; This function uses a non-reentrant model
  8245 ;;
  8246                           
  8247                           
  8248                           ;psect for function _Map
  8249  0CAB                     _Map:	
  8250  0CAB                     l3055:	
  8251                           ;incstack = 0
  8252                           ; Regs used in _Map: [wreg+status,2+status,0+pclath+cstack]
  8253                           
  8254                           
  8255                           ;LED_INTERFACE.c: 50: return (((x - inMin) * (outMax - outMin)) / (inMax - inMin)) +outM
      +                          in;
  8256  0CAB  0140               	movlb	0	; select bank0
  8257  0CAC  0832               	movf	Map@inMin,w
  8258  0CAD  0233               	subwf	Map@inMax,w
  8259  0CAE  00A7               	movwf	___awdiv@divisor
  8260  0CAF  01A8               	clrf	___awdiv@divisor+1
  8261  0CB0  1C03               	skipc
  8262  0CB1  03A8               	decf	___awdiv@divisor+1,f
  8263  0CB2  0832               	movf	Map@inMin,w
  8264  0CB3  00B6               	movwf	??_Map
  8265  0CB4  01B7               	clrf	??_Map+1
  8266  0CB5  0836               	movf	??_Map,w
  8267  0CB6  0230               	subwf	Map@x,w
  8268  0CB7  00A1               	movwf	___wmul@multiplier
  8269  0CB8  0837               	movf	??_Map+1,w
  8270  0CB9  3B31               	subwfb	Map@x+1,w
  8271  0CBA  00A2               	movwf	___wmul@multiplier+1
  8272  0CBB  0834               	movf	Map@outMin,w
  8273  0CBC  0235               	subwf	Map@outMax,w
  8274  0CBD  00A3               	movwf	___wmul@multiplicand
  8275  0CBE  01A4               	clrf	___wmul@multiplicand+1
  8276  0CBF  1C03               	skipc
  8277  0CC0  03A4               	decf	___wmul@multiplicand+1,f
  8278  0CC1  318C  2423  318C   	fcall	___wmul
  8279  0CC4  0140               	movlb	0	; select bank0
  8280  0CC5  0822               	movf	?___wmul+1,w
  8281  0CC6  00AA               	movwf	___awdiv@dividend+1
  8282  0CC7  0821               	movf	?___wmul,w
  8283  0CC8  00A9               	movwf	___awdiv@dividend
  8284  0CC9  3187  2797  318C   	fcall	___awdiv
  8285  0CCC  0140               	movlb	0	; select bank0
  8286  0CCD  0827               	movf	?___awdiv,w
  8287  0CCE  0734               	addwf	Map@outMin,w
  8288  0CCF                     l491:	
  8289  0CCF  0008               	return
  8290  0CD0                     __end_of_Map:	
  8291                           
  8292                           	psect	text25
  8293  0C23                     __ptext25:	
  8294 ;; *************** function ___wmul *****************
  8295 ;; Defined at:
  8296 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  8297 ;; Parameters:    Size  Location     Type
  8298 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8299 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8300 ;; Auto vars:     Size  Location     Type
  8301 ;;  product         2    4[BANK0 ] unsigned int 
  8302 ;; Return value:  Size  Location     Type
  8303 ;;                  2    0[BANK0 ] unsigned int 
  8304 ;; Registers used:
  8305 ;;		wreg, status,2, status,0
  8306 ;; Tracked objects:
  8307 ;;		On entry : 0/0
  8308 ;;		On exit  : 0/0
  8309 ;;		Unchanged: 0/0
  8310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8311 ;;      Params:         0       4       0       0       0       0       0       0
  8312 ;;      Locals:         0       2       0       0       0       0       0       0
  8313 ;;      Temps:          0       0       0       0       0       0       0       0
  8314 ;;      Totals:         0       6       0       0       0       0       0       0
  8315 ;;Total ram usage:        6 bytes
  8316 ;; Hardware stack levels used:    1
  8317 ;; Hardware stack levels required when called:    2
  8318 ;; This function calls:
  8319 ;;		Nothing
  8320 ;; This function is called by:
  8321 ;;		_Map
  8322 ;;		_negotiate_optimal_pdo
  8323 ;; This function uses a non-reentrant model
  8324 ;;
  8325                           
  8326                           
  8327                           ;psect for function ___wmul
  8328  0C23                     ___wmul:	
  8329  0C23                     l2957:	
  8330                           ;incstack = 0
  8331                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8332                           
  8333  0C23  0140               	movlb	0	; select bank0
  8334  0C24  01A5               	clrf	___wmul@product
  8335  0C25  01A6               	clrf	___wmul@product+1
  8336  0C26                     l2959:	
  8337  0C26  1C21               	btfss	___wmul@multiplier,0
  8338  0C27  2C29               	goto	u2191
  8339  0C28  2C2A               	goto	u2190
  8340  0C29                     u2191:	
  8341  0C29  2C2E               	goto	l899
  8342  0C2A                     u2190:	
  8343  0C2A                     l2961:	
  8344  0C2A  0823               	movf	___wmul@multiplicand,w
  8345  0C2B  07A5               	addwf	___wmul@product,f
  8346  0C2C  0824               	movf	___wmul@multiplicand+1,w
  8347  0C2D  3DA6               	addwfc	___wmul@product+1,f
  8348  0C2E                     l899:	
  8349  0C2E  3001               	movlw	1
  8350  0C2F                     u2205:	
  8351  0C2F  35A3               	lslf	___wmul@multiplicand,f
  8352  0C30  0DA4               	rlf	___wmul@multiplicand+1,f
  8353  0C31  0B89               	decfsz	9,f
  8354  0C32  2C2F               	goto	u2205
  8355  0C33                     l2963:	
  8356  0C33  3001               	movlw	1
  8357  0C34                     u2215:	
  8358  0C34  36A2               	lsrf	___wmul@multiplier+1,f
  8359  0C35  0CA1               	rrf	___wmul@multiplier,f
  8360  0C36  0B89               	decfsz	9,f
  8361  0C37  2C34               	goto	u2215
  8362  0C38                     l2965:	
  8363  0C38  0821               	movf	___wmul@multiplier,w
  8364  0C39  0422               	iorwf	___wmul@multiplier+1,w
  8365  0C3A  1D03               	btfss	3,2
  8366  0C3B  2C3D               	goto	u2221
  8367  0C3C  2C3E               	goto	u2220
  8368  0C3D                     u2221:	
  8369  0C3D  2C26               	goto	l2959
  8370  0C3E                     u2220:	
  8371  0C3E                     l2967:	
  8372  0C3E  0826               	movf	___wmul@product+1,w
  8373  0C3F  00A2               	movwf	?___wmul+1
  8374  0C40  0825               	movf	___wmul@product,w
  8375  0C41  00A1               	movwf	?___wmul
  8376  0C42                     l901:	
  8377  0C42  0008               	return
  8378  0C43                     __end_of___wmul:	
  8379                           
  8380                           	psect	text26
  8381  0797                     __ptext26:	
  8382 ;; *************** function ___awdiv *****************
  8383 ;; Defined at:
  8384 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  8385 ;; Parameters:    Size  Location     Type
  8386 ;;  divisor         2    6[BANK0 ] int 
  8387 ;;  dividend        2    8[BANK0 ] int 
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;  quotient        2   13[BANK0 ] int 
  8390 ;;  sign            1   12[BANK0 ] unsigned char 
  8391 ;;  counter         1   11[BANK0 ] unsigned char 
  8392 ;; Return value:  Size  Location     Type
  8393 ;;                  2    6[BANK0 ] int 
  8394 ;; Registers used:
  8395 ;;		wreg, status,2, status,0
  8396 ;; Tracked objects:
  8397 ;;		On entry : 0/0
  8398 ;;		On exit  : 0/0
  8399 ;;		Unchanged: 0/0
  8400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8401 ;;      Params:         0       4       0       0       0       0       0       0
  8402 ;;      Locals:         0       4       0       0       0       0       0       0
  8403 ;;      Temps:          0       1       0       0       0       0       0       0
  8404 ;;      Totals:         0       9       0       0       0       0       0       0
  8405 ;;Total ram usage:        9 bytes
  8406 ;; Hardware stack levels used:    1
  8407 ;; Hardware stack levels required when called:    2
  8408 ;; This function calls:
  8409 ;;		Nothing
  8410 ;; This function is called by:
  8411 ;;		_Map
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           
  8415                           
  8416                           ;psect for function ___awdiv
  8417  0797                     ___awdiv:	
  8418  0797                     l2971:	
  8419                           ;incstack = 0
  8420                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8421                           
  8422  0797  0140               	movlb	0	; select bank0
  8423  0798  01AD               	clrf	___awdiv@sign
  8424  0799                     l2973:	
  8425  0799  1FA8               	btfss	___awdiv@divisor+1,7
  8426  079A  2F9C               	goto	u2231
  8427  079B  2F9D               	goto	u2230
  8428  079C                     u2231:	
  8429  079C  2FA4               	goto	l2979
  8430  079D                     u2230:	
  8431  079D                     l2975:	
  8432  079D  09A7               	comf	___awdiv@divisor,f
  8433  079E  09A8               	comf	___awdiv@divisor+1,f
  8434  079F  0AA7               	incf	___awdiv@divisor,f
  8435  07A0  1903               	skipnz
  8436  07A1  0AA8               	incf	___awdiv@divisor+1,f
  8437  07A2                     l2977:	
  8438  07A2  01AD               	clrf	___awdiv@sign
  8439  07A3  0AAD               	incf	___awdiv@sign,f
  8440  07A4                     l2979:	
  8441  07A4  1FAA               	btfss	___awdiv@dividend+1,7
  8442  07A5  2FA7               	goto	u2241
  8443  07A6  2FA8               	goto	u2240
  8444  07A7                     u2241:	
  8445  07A7  2FB1               	goto	l2985
  8446  07A8                     u2240:	
  8447  07A8                     l2981:	
  8448  07A8  09A9               	comf	___awdiv@dividend,f
  8449  07A9  09AA               	comf	___awdiv@dividend+1,f
  8450  07AA  0AA9               	incf	___awdiv@dividend,f
  8451  07AB  1903               	skipnz
  8452  07AC  0AAA               	incf	___awdiv@dividend+1,f
  8453  07AD                     l2983:	
  8454  07AD  3001               	movlw	1
  8455  07AE  00AB               	movwf	??___awdiv
  8456  07AF  082B               	movf	??___awdiv,w
  8457  07B0  06AD               	xorwf	___awdiv@sign,f
  8458  07B1                     l2985:	
  8459  07B1  01AE               	clrf	___awdiv@quotient
  8460  07B2  01AF               	clrf	___awdiv@quotient+1
  8461  07B3                     l2987:	
  8462  07B3  0827               	movf	___awdiv@divisor,w
  8463  07B4  0428               	iorwf	___awdiv@divisor+1,w
  8464  07B5  1903               	btfsc	3,2
  8465  07B6  2FB8               	goto	u2251
  8466  07B7  2FB9               	goto	u2250
  8467  07B8                     u2251:	
  8468  07B8  2FE8               	goto	l3007
  8469  07B9                     u2250:	
  8470  07B9                     l2989:	
  8471  07B9  01AC               	clrf	___awdiv@counter
  8472  07BA  0AAC               	incf	___awdiv@counter,f
  8473  07BB  2FC5               	goto	l2995
  8474  07BC                     l2991:	
  8475  07BC  3001               	movlw	1
  8476  07BD                     u2265:	
  8477  07BD  35A7               	lslf	___awdiv@divisor,f
  8478  07BE  0DA8               	rlf	___awdiv@divisor+1,f
  8479  07BF  0B89               	decfsz	9,f
  8480  07C0  2FBD               	goto	u2265
  8481  07C1                     l2993:	
  8482  07C1  3001               	movlw	1
  8483  07C2  00AB               	movwf	??___awdiv
  8484  07C3  082B               	movf	??___awdiv,w
  8485  07C4  07AC               	addwf	___awdiv@counter,f
  8486  07C5                     l2995:	
  8487  07C5  1FA8               	btfss	___awdiv@divisor+1,7
  8488  07C6  2FC8               	goto	u2271
  8489  07C7  2FC9               	goto	u2270
  8490  07C8                     u2271:	
  8491  07C8  2FBC               	goto	l2991
  8492  07C9                     u2270:	
  8493  07C9                     l2997:	
  8494  07C9  3001               	movlw	1
  8495  07CA                     u2285:	
  8496  07CA  35AE               	lslf	___awdiv@quotient,f
  8497  07CB  0DAF               	rlf	___awdiv@quotient+1,f
  8498  07CC  0B89               	decfsz	9,f
  8499  07CD  2FCA               	goto	u2285
  8500  07CE  0828               	movf	___awdiv@divisor+1,w
  8501  07CF  022A               	subwf	___awdiv@dividend+1,w
  8502  07D0  1D03               	skipz
  8503  07D1  2FD4               	goto	u2295
  8504  07D2  0827               	movf	___awdiv@divisor,w
  8505  07D3  0229               	subwf	___awdiv@dividend,w
  8506  07D4                     u2295:	
  8507  07D4  1C03               	skipc
  8508  07D5  2FD7               	goto	u2291
  8509  07D6  2FD8               	goto	u2290
  8510  07D7                     u2291:	
  8511  07D7  2FDD               	goto	l3003
  8512  07D8                     u2290:	
  8513  07D8                     l2999:	
  8514  07D8  0827               	movf	___awdiv@divisor,w
  8515  07D9  02A9               	subwf	___awdiv@dividend,f
  8516  07DA  0828               	movf	___awdiv@divisor+1,w
  8517  07DB  3BAA               	subwfb	___awdiv@dividend+1,f
  8518  07DC                     l3001:	
  8519  07DC  142E               	bsf	___awdiv@quotient,0
  8520  07DD                     l3003:	
  8521  07DD  3001               	movlw	1
  8522  07DE                     u2305:	
  8523  07DE  36A8               	lsrf	___awdiv@divisor+1,f
  8524  07DF  0CA7               	rrf	___awdiv@divisor,f
  8525  07E0  0B89               	decfsz	9,f
  8526  07E1  2FDE               	goto	u2305
  8527  07E2                     l3005:	
  8528  07E2  3001               	movlw	1
  8529  07E3  02AC               	subwf	___awdiv@counter,f
  8530  07E4  1D03               	btfss	3,2
  8531  07E5  2FE7               	goto	u2311
  8532  07E6  2FE8               	goto	u2310
  8533  07E7                     u2311:	
  8534  07E7  2FC9               	goto	l2997
  8535  07E8                     u2310:	
  8536  07E8                     l3007:	
  8537  07E8  082D               	movf	___awdiv@sign,w
  8538  07E9  1903               	btfsc	3,2
  8539  07EA  2FEC               	goto	u2321
  8540  07EB  2FED               	goto	u2320
  8541  07EC                     u2321:	
  8542  07EC  2FF2               	goto	l3011
  8543  07ED                     u2320:	
  8544  07ED                     l3009:	
  8545  07ED  09AE               	comf	___awdiv@quotient,f
  8546  07EE  09AF               	comf	___awdiv@quotient+1,f
  8547  07EF  0AAE               	incf	___awdiv@quotient,f
  8548  07F0  1903               	skipnz
  8549  07F1  0AAF               	incf	___awdiv@quotient+1,f
  8550  07F2                     l3011:	
  8551  07F2  082F               	movf	___awdiv@quotient+1,w
  8552  07F3  00A8               	movwf	?___awdiv+1
  8553  07F4  082E               	movf	___awdiv@quotient,w
  8554  07F5  00A7               	movwf	?___awdiv
  8555  07F6                     l1052:	
  8556  07F6  0008               	return
  8557  07F7                     __end_of___awdiv:	
  8558                           
  8559                           	psect	text27
  8560  0637                     __ptext27:	
  8561 ;; *************** function _RGB_fade *****************
  8562 ;; Defined at:
  8563 ;;		line 18 in file "LED_INTERFACE.c"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;		None
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;		None
  8568 ;; Return value:  Size  Location     Type
  8569 ;;                  1    wreg      void 
  8570 ;; Registers used:
  8571 ;;		wreg, status,2, status,0, pclath, cstack
  8572 ;; Tracked objects:
  8573 ;;		On entry : 0/0
  8574 ;;		On exit  : 0/0
  8575 ;;		Unchanged: 0/0
  8576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8577 ;;      Params:         0       0       0       0       0       0       0       0
  8578 ;;      Locals:         0       0       0       0       0       0       0       0
  8579 ;;      Temps:          0       1       0       0       0       0       0       0
  8580 ;;      Totals:         0       1       0       0       0       0       0       0
  8581 ;;Total ram usage:        1 bytes
  8582 ;; Hardware stack levels used:    1
  8583 ;; Hardware stack levels required when called:    3
  8584 ;; This function calls:
  8585 ;;		_get_time
  8586 ;;		_timer_diff
  8587 ;; This function is called by:
  8588 ;;		_led_modes
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           
  8593                           ;psect for function _RGB_fade
  8594  0637                     _RGB_fade:	
  8595  0637                     l3147:	
  8596                           ;incstack = 0
  8597                           ; Regs used in _RGB_fade: [wreg+status,2+status,0+pclath+cstack]
  8598                           
  8599                           
  8600                           ;LED_INTERFACE.c: 20: if(timer_diff(rgb_delay) >= 2) {
  8601  0637  0142               	movlb	2	; select bank2
  8602  0638  082B               	movf	(_rgb_delay+3)^(0+256),w
  8603  0639  0140               	movlb	0	; select bank0
  8604  063A  00A4               	movwf	timer_diff@t+3
  8605  063B  0142               	movlb	2	; select bank2
  8606  063C  082A               	movf	(_rgb_delay+2)^(0+256),w
  8607  063D  0140               	movlb	0	; select bank0
  8608  063E  00A3               	movwf	timer_diff@t+2
  8609  063F  0142               	movlb	2	; select bank2
  8610  0640  0829               	movf	(_rgb_delay+1)^(0+256),w
  8611  0641  0140               	movlb	0	; select bank0
  8612  0642  00A2               	movwf	timer_diff@t+1
  8613  0643  0142               	movlb	2	; select bank2
  8614  0644  0828               	movf	_rgb_delay^(0+256),w
  8615  0645  0140               	movlb	0	; select bank0
  8616  0646  00A1               	movwf	timer_diff@t
  8617  0647  318B  23E7  3186   	fcall	_timer_diff
  8618  064A  0140               	movlb	0	; select bank0
  8619  064B  0824               	movf	?_timer_diff+3,w
  8620  064C  1D03               	btfss	3,2
  8621  064D  2E5A               	goto	u2600
  8622  064E  0823               	movf	?_timer_diff+2,w
  8623  064F  1D03               	btfss	3,2
  8624  0650  2E5A               	goto	u2600
  8625  0651  0822               	movf	?_timer_diff+1,w
  8626  0652  1D03               	btfss	3,2
  8627  0653  2E5A               	goto	u2600
  8628  0654  3002               	movlw	2
  8629  0655  0221               	subwf	?_timer_diff,w
  8630  0656  1C03               	btfss	3,0
  8631  0657  2E59               	goto	u2601
  8632  0658  2E5A               	goto	u2600
  8633  0659                     u2601:	
  8634  0659  2EAF               	goto	l488
  8635  065A                     u2600:	
  8636  065A                     l3149:	
  8637                           
  8638                           ;LED_INTERFACE.c: 21: rgb_delay = get_time();
  8639  065A  318B  2319  3186   	fcall	_get_time
  8640  065D  0140               	movlb	0	; select bank0
  8641  065E  0824               	movf	?_get_time+3,w
  8642  065F  0142               	movlb	2	; select bank2
  8643  0660  00AB               	movwf	(_rgb_delay+3)^(0+256)
  8644  0661  0140               	movlb	0	; select bank0
  8645  0662  0823               	movf	?_get_time+2,w
  8646  0663  0142               	movlb	2	; select bank2
  8647  0664  00AA               	movwf	(_rgb_delay+2)^(0+256)
  8648  0665  0140               	movlb	0	; select bank0
  8649  0666  0822               	movf	?_get_time+1,w
  8650  0667  0142               	movlb	2	; select bank2
  8651  0668  00A9               	movwf	(_rgb_delay+1)^(0+256)
  8652  0669  0140               	movlb	0	; select bank0
  8653  066A  0821               	movf	?_get_time,w
  8654  066B  0142               	movlb	2	; select bank2
  8655  066C  00A8               	movwf	_rgb_delay^(0+256)
  8656  066D                     l3151:	
  8657                           
  8658                           ;LED_INTERFACE.c: 22: if (i >= 255) {
  8659  066D  0140               	movlb	0	; select bank0
  8660  066E  0A64               	incf	_i,w
  8661  066F  1D03               	btfss	3,2
  8662  0670  2E72               	goto	u2611
  8663  0671  2E73               	goto	u2610
  8664  0672                     u2611:	
  8665  0672  2E7F               	goto	l3161
  8666  0673                     u2610:	
  8667  0673                     l3153:	
  8668                           
  8669                           ;LED_INTERFACE.c: 23: i = 0;
  8670  0673  01E4               	clrf	_i
  8671  0674                     l3155:	
  8672                           
  8673                           ;LED_INTERFACE.c: 24: color++;
  8674  0674  3001               	movlw	1
  8675  0675  00A9               	movwf	??_RGB_fade
  8676  0676  0829               	movf	??_RGB_fade,w
  8677  0677  07E2               	addwf	_color,f
  8678  0678                     l3157:	
  8679                           
  8680                           ;LED_INTERFACE.c: 25: if (color > 2) {
  8681  0678  3003               	movlw	3
  8682  0679  0262               	subwf	_color,w
  8683  067A  1C03               	skipc
  8684  067B  2E7D               	goto	u2621
  8685  067C  2E7E               	goto	u2620
  8686  067D                     u2621:	
  8687  067D  2E7F               	goto	l3161
  8688  067E                     u2620:	
  8689  067E                     l3159:	
  8690                           
  8691                           ;LED_INTERFACE.c: 26: color = 0;
  8692  067E  01E2               	clrf	_color
  8693  067F                     l3161:	
  8694                           
  8695                           ;LED_INTERFACE.c: 27: };LED_INTERFACE.c: 28: };LED_INTERFACE.c: 29: i++;
  8696  067F  3001               	movlw	1
  8697  0680  00A9               	movwf	??_RGB_fade
  8698  0681  0829               	movf	??_RGB_fade,w
  8699  0682  07E4               	addwf	_i,f
  8700  0683                     l3163:	
  8701                           
  8702                           ;LED_INTERFACE.c: 30: if (color == 0) {
  8703  0683  0862               	movf	_color,w
  8704  0684  1D03               	btfss	3,2
  8705  0685  2E87               	goto	u2631
  8706  0686  2E88               	goto	u2630
  8707  0687                     u2631:	
  8708  0687  2E90               	goto	l3169
  8709  0688                     u2630:	
  8710  0688                     l3165:	
  8711                           
  8712                           ;LED_INTERFACE.c: 31: PWM3DCH = 255 - i;
  8713  0688  0964               	comf	_i,w
  8714  0689  0146               	movlb	6	; select bank6
  8715  068A  0095               	movwf	21	;volatile
  8716  068B                     l3167:	
  8717                           
  8718                           ;LED_INTERFACE.c: 32: PWM4DCH = i;
  8719  068B  0140               	movlb	0	; select bank0
  8720  068C  0864               	movf	_i,w
  8721  068D  0146               	movlb	6	; select bank6
  8722  068E  0099               	movwf	25	;volatile
  8723                           
  8724                           ;LED_INTERFACE.c: 33: PWM5DCH = 0;
  8725  068F  019D               	clrf	29	;volatile
  8726  0690                     l3169:	
  8727                           
  8728                           ;LED_INTERFACE.c: 34: };LED_INTERFACE.c: 35: if (color == 1) {
  8729  0690  0140               	movlb	0	; select bank0
  8730  0691  0362               	decf	_color,w
  8731  0692  1D03               	btfss	3,2
  8732  0693  2E95               	goto	u2641
  8733  0694  2E96               	goto	u2640
  8734  0695                     u2641:	
  8735  0695  2EA0               	goto	l3175
  8736  0696                     u2640:	
  8737  0696                     l3171:	
  8738                           
  8739                           ;LED_INTERFACE.c: 36: PWM3DCH = 0;
  8740  0696  0146               	movlb	6	; select bank6
  8741  0697  0195               	clrf	21	;volatile
  8742  0698                     l3173:	
  8743                           
  8744                           ;LED_INTERFACE.c: 37: PWM4DCH = 255 - i;
  8745  0698  0140               	movlb	0	; select bank0
  8746  0699  0964               	comf	_i,w
  8747  069A  0146               	movlb	6	; select bank6
  8748  069B  0099               	movwf	25	;volatile
  8749                           
  8750                           ;LED_INTERFACE.c: 38: PWM5DCH = i;
  8751  069C  0140               	movlb	0	; select bank0
  8752  069D  0864               	movf	_i,w
  8753  069E  0146               	movlb	6	; select bank6
  8754  069F  009D               	movwf	29	;volatile
  8755  06A0                     l3175:	
  8756                           
  8757                           ;LED_INTERFACE.c: 39: };LED_INTERFACE.c: 40: if (color == 2) {
  8758  06A0  3002               	movlw	2
  8759  06A1  0140               	movlb	0	; select bank0
  8760  06A2  0662               	xorwf	_color,w
  8761  06A3  1D03               	btfss	3,2
  8762  06A4  2EA6               	goto	u2651
  8763  06A5  2EA7               	goto	u2650
  8764  06A6                     u2651:	
  8765  06A6  2EAF               	goto	l488
  8766  06A7                     u2650:	
  8767  06A7                     l3177:	
  8768                           
  8769                           ;LED_INTERFACE.c: 41: PWM3DCH = i;
  8770  06A7  0864               	movf	_i,w
  8771  06A8  0146               	movlb	6	; select bank6
  8772  06A9  0095               	movwf	21	;volatile
  8773  06AA                     l3179:	
  8774                           
  8775                           ;LED_INTERFACE.c: 42: PWM4DCH = 0;
  8776  06AA  0199               	clrf	25	;volatile
  8777                           
  8778                           ;LED_INTERFACE.c: 43: PWM5DCH = 255 - i;
  8779  06AB  0140               	movlb	0	; select bank0
  8780  06AC  0964               	comf	_i,w
  8781  06AD  0146               	movlb	6	; select bank6
  8782  06AE  009D               	movwf	29	;volatile
  8783  06AF                     l488:	
  8784  06AF  0008               	return
  8785  06B0                     __end_of_RGB_fade:	
  8786                           
  8787                           	psect	text28
  8788  04BD                     __ptext28:	
  8789 ;; *************** function _chrg_led *****************
  8790 ;; Defined at:
  8791 ;;		line 90 in file "LED_INTERFACE.c"
  8792 ;; Parameters:    Size  Location     Type
  8793 ;;		None
  8794 ;; Auto vars:     Size  Location     Type
  8795 ;;		None
  8796 ;; Return value:  Size  Location     Type
  8797 ;;                  1    wreg      void 
  8798 ;; Registers used:
  8799 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8800 ;; Tracked objects:
  8801 ;;		On entry : 0/0
  8802 ;;		On exit  : 0/0
  8803 ;;		Unchanged: 0/0
  8804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8805 ;;      Params:         0       0       0       0       0       0       0       0
  8806 ;;      Locals:         0       0       0       0       0       0       0       0
  8807 ;;      Temps:          0       1       0       0       0       0       0       0
  8808 ;;      Totals:         0       1       0       0       0       0       0       0
  8809 ;;Total ram usage:        1 bytes
  8810 ;; Hardware stack levels used:    1
  8811 ;; Hardware stack levels required when called:    3
  8812 ;; This function calls:
  8813 ;;		_get_time
  8814 ;;		_timer_diff
  8815 ;; This function is called by:
  8816 ;;		_main
  8817 ;; This function uses a non-reentrant model
  8818 ;;
  8819                           
  8820                           
  8821                           ;psect for function _chrg_led
  8822  04BD                     _chrg_led:	
  8823  04BD                     l3579:	
  8824                           ;incstack = 0
  8825                           ; Regs used in _chrg_led: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8826                           
  8827                           
  8828                           ;LED_INTERFACE.c: 92: if(timer_diff(chrg_delay) >= 2) {
  8829  04BD  0142               	movlb	2	; select bank2
  8830  04BE  0827               	movf	(_chrg_delay+3)^(0+256),w
  8831  04BF  0140               	movlb	0	; select bank0
  8832  04C0  00A4               	movwf	timer_diff@t+3
  8833  04C1  0142               	movlb	2	; select bank2
  8834  04C2  0826               	movf	(_chrg_delay+2)^(0+256),w
  8835  04C3  0140               	movlb	0	; select bank0
  8836  04C4  00A3               	movwf	timer_diff@t+2
  8837  04C5  0142               	movlb	2	; select bank2
  8838  04C6  0825               	movf	(_chrg_delay+1)^(0+256),w
  8839  04C7  0140               	movlb	0	; select bank0
  8840  04C8  00A2               	movwf	timer_diff@t+1
  8841  04C9  0142               	movlb	2	; select bank2
  8842  04CA  0824               	movf	_chrg_delay^(0+256),w
  8843  04CB  0140               	movlb	0	; select bank0
  8844  04CC  00A1               	movwf	timer_diff@t
  8845  04CD  318B  23E7  3184   	fcall	_timer_diff
  8846  04D0  0140               	movlb	0	; select bank0
  8847  04D1  0824               	movf	?_timer_diff+3,w
  8848  04D2  1D03               	btfss	3,2
  8849  04D3  2CE0               	goto	u3110
  8850  04D4  0823               	movf	?_timer_diff+2,w
  8851  04D5  1D03               	btfss	3,2
  8852  04D6  2CE0               	goto	u3110
  8853  04D7  0822               	movf	?_timer_diff+1,w
  8854  04D8  1D03               	btfss	3,2
  8855  04D9  2CE0               	goto	u3110
  8856  04DA  3002               	movlw	2
  8857  04DB  0221               	subwf	?_timer_diff,w
  8858  04DC  1C03               	btfss	3,0
  8859  04DD  2CDF               	goto	u3111
  8860  04DE  2CE0               	goto	u3110
  8861  04DF                     u3111:	
  8862  04DF  2D3E               	goto	l518
  8863  04E0                     u3110:	
  8864  04E0                     l3581:	
  8865                           
  8866                           ;LED_INTERFACE.c: 93: chrg_delay = get_time();
  8867  04E0  318B  2319  3184   	fcall	_get_time
  8868  04E3  0140               	movlb	0	; select bank0
  8869  04E4  0824               	movf	?_get_time+3,w
  8870  04E5  0142               	movlb	2	; select bank2
  8871  04E6  00A7               	movwf	(_chrg_delay+3)^(0+256)
  8872  04E7  0140               	movlb	0	; select bank0
  8873  04E8  0823               	movf	?_get_time+2,w
  8874  04E9  0142               	movlb	2	; select bank2
  8875  04EA  00A6               	movwf	(_chrg_delay+2)^(0+256)
  8876  04EB  0140               	movlb	0	; select bank0
  8877  04EC  0822               	movf	?_get_time+1,w
  8878  04ED  0142               	movlb	2	; select bank2
  8879  04EE  00A5               	movwf	(_chrg_delay+1)^(0+256)
  8880  04EF  0140               	movlb	0	; select bank0
  8881  04F0  0821               	movf	?_get_time,w
  8882  04F1  0142               	movlb	2	; select bank2
  8883  04F2  00A4               	movwf	_chrg_delay^(0+256)
  8884  04F3                     l3583:	
  8885                           
  8886                           ;LED_INTERFACE.c: 94: if(c >= 255) {
  8887  04F3  0140               	movlb	0	; select bank0
  8888  04F4  0A63               	incf	_c,w
  8889  04F5  1D03               	btfss	3,2
  8890  04F6  2CF8               	goto	u3121
  8891  04F7  2CF9               	goto	u3120
  8892  04F8                     u3121:	
  8893  04F8  2CFA               	goto	l3587
  8894  04F9                     u3120:	
  8895  04F9                     l3585:	
  8896                           
  8897                           ;LED_INTERFACE.c: 95: dir = 0;
  8898  04F9  01E1               	clrf	_dir
  8899  04FA                     l3587:	
  8900                           
  8901                           ;LED_INTERFACE.c: 96: };LED_INTERFACE.c: 97: if(c <= 1) {
  8902  04FA  3002               	movlw	2
  8903  04FB  0263               	subwf	_c,w
  8904  04FC  1803               	skipnc
  8905  04FD  2CFF               	goto	u3131
  8906  04FE  2D00               	goto	u3130
  8907  04FF                     u3131:	
  8908  04FF  2D02               	goto	l3591
  8909  0500                     u3130:	
  8910  0500                     l3589:	
  8911                           
  8912                           ;LED_INTERFACE.c: 98: dir = 1;
  8913  0500  01E1               	clrf	_dir
  8914  0501  0AE1               	incf	_dir,f
  8915  0502                     l3591:	
  8916                           
  8917                           ;LED_INTERFACE.c: 99: };LED_INTERFACE.c: 100: if(dir == 1) {
  8918  0502  0361               	decf	_dir,w
  8919  0503  1D03               	btfss	3,2
  8920  0504  2D06               	goto	u3141
  8921  0505  2D07               	goto	u3140
  8922  0506                     u3141:	
  8923  0506  2D0C               	goto	l3595
  8924  0507                     u3140:	
  8925  0507                     l3593:	
  8926                           
  8927                           ;LED_INTERFACE.c: 101: c++;
  8928  0507  3001               	movlw	1
  8929  0508  00A9               	movwf	??_chrg_led
  8930  0509  0829               	movf	??_chrg_led,w
  8931  050A  07E3               	addwf	_c,f
  8932                           
  8933                           ;LED_INTERFACE.c: 102: }
  8934  050B  2D30               	goto	l3617
  8935  050C                     l3595:	
  8936                           
  8937                           ;LED_INTERFACE.c: 103: else if(dir == 0) {
  8938  050C  0861               	movf	_dir,w
  8939  050D  1D03               	btfss	3,2
  8940  050E  2D10               	goto	u3151
  8941  050F  2D11               	goto	u3150
  8942  0510                     u3151:	
  8943  0510  2D30               	goto	l3617
  8944  0511                     u3150:	
  8945  0511                     l3597:	
  8946                           
  8947                           ;LED_INTERFACE.c: 104: c--;
  8948  0511  3001               	movlw	1
  8949  0512  02E3               	subwf	_c,f
  8950  0513  2D30               	goto	l3617
  8951  0514                     l3599:	
  8952                           
  8953                           ;LED_INTERFACE.c: 110: PWM3DCH = 0;
  8954  0514  0146               	movlb	6	; select bank6
  8955  0515  0195               	clrf	21	;volatile
  8956                           
  8957                           ;LED_INTERFACE.c: 111: PWM4DCH = 0;
  8958  0516  0199               	clrf	25	;volatile
  8959  0517                     l3601:	
  8960                           
  8961                           ;LED_INTERFACE.c: 112: PWM5DCH = c;
  8962  0517  0140               	movlb	0	; select bank0
  8963  0518  0863               	movf	_c,w
  8964  0519  0146               	movlb	6	; select bank6
  8965  051A  009D               	movwf	29	;volatile
  8966                           
  8967                           ;LED_INTERFACE.c: 113: break;
  8968  051B  2D3E               	goto	l518
  8969  051C                     l3603:	
  8970                           
  8971                           ;LED_INTERFACE.c: 116: PWM3DCH = 0;
  8972  051C  0146               	movlb	6	; select bank6
  8973  051D  0195               	clrf	21	;volatile
  8974  051E                     l3605:	
  8975                           
  8976                           ;LED_INTERFACE.c: 117: PWM4DCH = c;
  8977  051E  0140               	movlb	0	; select bank0
  8978  051F  0863               	movf	_c,w
  8979  0520  0146               	movlb	6	; select bank6
  8980  0521  0099               	movwf	25	;volatile
  8981  0522  2D17               	goto	l3601
  8982  0523                     l3609:	
  8983                           
  8984                           ;LED_INTERFACE.c: 122: PWM3DCH = 0;
  8985  0523  0146               	movlb	6	; select bank6
  8986  0524  0195               	clrf	21	;volatile
  8987  0525                     l3611:	
  8988                           
  8989                           ;LED_INTERFACE.c: 123: PWM4DCH = c;
  8990  0525  0140               	movlb	0	; select bank0
  8991  0526  0863               	movf	_c,w
  8992  0527  0146               	movlb	6	; select bank6
  8993  0528  0099               	movwf	25	;volatile
  8994  0529                     l3613:	
  8995                           
  8996                           ;LED_INTERFACE.c: 124: PWM5DCH = 0;
  8997  0529  019D               	clrf	29	;volatile
  8998                           
  8999                           ;LED_INTERFACE.c: 125: break;
  9000  052A  2D3E               	goto	l518
  9001  052B                     l3615:	
  9002                           
  9003                           ;LED_INTERFACE.c: 127: PWM3DCH = 0;
  9004  052B  0146               	movlb	6	; select bank6
  9005  052C  0195               	clrf	21	;volatile
  9006                           
  9007                           ;LED_INTERFACE.c: 128: PWM4DCH = 0;
  9008  052D  0199               	clrf	25	;volatile
  9009                           
  9010                           ;LED_INTERFACE.c: 129: PWM5DCH = 0;
  9011  052E  019D               	clrf	29	;volatile
  9012                           
  9013                           ;LED_INTERFACE.c: 130: }
  9014  052F  2D3E               	goto	l518
  9015  0530                     l3617:	
  9016  0530  0A6E               	incf	_VBUS_CHRG_STATE,w
  9017  0531  0086               	movwf	6
  9018  0532  0187               	clrf	7
  9019  0533  0801               	movf	1,w
  9020                           
  9021                           ; Switch size 1, requested type "simple"
  9022                           ; Number of cases is 3, Range of values is 1 to 3
  9023                           ; switch strategies available:
  9024                           ; Name         Instructions Cycles
  9025                           ; simple_byte           10     6 (average)
  9026                           ; direct_byte           15     9 (fixed)
  9027                           ; jumptable            263     9 (fixed)
  9028                           ;	Chosen strategy is simple_byte
  9029  0534  3A01               	xorlw	1	; case 1
  9030  0535  1903               	skipnz
  9031  0536  2D14               	goto	l3599
  9032  0537  3A03               	xorlw	3	; case 2
  9033  0538  1903               	skipnz
  9034  0539  2D1C               	goto	l3603
  9035  053A  3A01               	xorlw	1	; case 3
  9036  053B  1903               	skipnz
  9037  053C  2D23               	goto	l3609
  9038  053D  2D2B               	goto	l3615
  9039  053E                     l518:	
  9040  053E  0008               	return
  9041  053F                     __end_of_chrg_led:	
  9042                           
  9043                           	psect	text29
  9044  0AF3                     __ptext29:	
  9045 ;; *************** function _PWM_power_down *****************
  9046 ;; Defined at:
  9047 ;;		line 59 in file "PWM.c"
  9048 ;; Parameters:    Size  Location     Type
  9049 ;;		None
  9050 ;; Auto vars:     Size  Location     Type
  9051 ;;		None
  9052 ;; Return value:  Size  Location     Type
  9053 ;;                  1    wreg      void 
  9054 ;; Registers used:
  9055 ;;		status,2
  9056 ;; Tracked objects:
  9057 ;;		On entry : 0/0
  9058 ;;		On exit  : 0/0
  9059 ;;		Unchanged: 0/0
  9060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9061 ;;      Params:         0       0       0       0       0       0       0       0
  9062 ;;      Locals:         0       0       0       0       0       0       0       0
  9063 ;;      Temps:          0       0       0       0       0       0       0       0
  9064 ;;      Totals:         0       0       0       0       0       0       0       0
  9065 ;;Total ram usage:        0 bytes
  9066 ;; Hardware stack levels used:    1
  9067 ;; Hardware stack levels required when called:    2
  9068 ;; This function calls:
  9069 ;;		Nothing
  9070 ;; This function is called by:
  9071 ;;		_main
  9072 ;; This function uses a non-reentrant model
  9073 ;;
  9074                           
  9075                           
  9076                           ;psect for function _PWM_power_down
  9077  0AF3                     _PWM_power_down:	
  9078  0AF3                     l3657:	
  9079                           ;incstack = 0
  9080                           ; Regs used in _PWM_power_down: [status,2]
  9081                           
  9082                           
  9083                           ;PWM.c: 61: PWM3DCH = 0;
  9084  0AF3  0146               	movlb	6	; select bank6
  9085  0AF4  0195               	clrf	21	;volatile
  9086                           
  9087                           ;PWM.c: 62: PWM4DCH = 0;
  9088  0AF5  0199               	clrf	25	;volatile
  9089                           
  9090                           ;PWM.c: 63: PWM5DCH = 0;
  9091  0AF6  019D               	clrf	29	;volatile
  9092  0AF7                     l3659:	
  9093                           
  9094                           ;PWM.c: 64: PWM3CONbits.EN = 0;
  9095  0AF7  1396               	bcf	22,7	;volatile
  9096  0AF8                     l3661:	
  9097                           
  9098                           ;PWM.c: 65: PWM4CONbits.EN = 0;
  9099  0AF8  139A               	bcf	26,7	;volatile
  9100  0AF9                     l3663:	
  9101                           
  9102                           ;PWM.c: 66: PWM5CONbits.EN = 0;
  9103  0AF9  139E               	bcf	30,7	;volatile
  9104  0AFA                     l3665:	
  9105                           
  9106                           ;PWM.c: 67: RC2 = 0;
  9107  0AFA  0140               	movlb	0	; select bank0
  9108  0AFB  110E               	bcf	14,2	;volatile
  9109  0AFC                     l3667:	
  9110                           
  9111                           ;PWM.c: 68: RC3 = 0;
  9112  0AFC  118E               	bcf	14,3	;volatile
  9113  0AFD                     l3669:	
  9114                           
  9115                           ;PWM.c: 69: RC4 = 0;
  9116  0AFD  120E               	bcf	14,4	;volatile
  9117  0AFE                     l233:	
  9118  0AFE  0008               	return
  9119  0AFF                     __end_of_PWM_power_down:	
  9120                           
  9121                           	psect	text30
  9122  0E17                     __ptext30:	
  9123 ;; *************** function _PWM_INIT *****************
  9124 ;; Defined at:
  9125 ;;		line 11 in file "PWM.c"
  9126 ;; Parameters:    Size  Location     Type
  9127 ;;		None
  9128 ;; Auto vars:     Size  Location     Type
  9129 ;;		None
  9130 ;; Return value:  Size  Location     Type
  9131 ;;                  1    wreg      void 
  9132 ;; Registers used:
  9133 ;;		wreg, status,2, status,0, pclath, cstack
  9134 ;; Tracked objects:
  9135 ;;		On entry : 0/0
  9136 ;;		On exit  : 0/0
  9137 ;;		Unchanged: 0/0
  9138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9139 ;;      Params:         0       0       0       0       0       0       0       0
  9140 ;;      Locals:         0       0       0       0       0       0       0       0
  9141 ;;      Temps:          0       0       0       0       0       0       0       0
  9142 ;;      Totals:         0       0       0       0       0       0       0       0
  9143 ;;Total ram usage:        0 bytes
  9144 ;; Hardware stack levels used:    1
  9145 ;; Hardware stack levels required when called:    3
  9146 ;; This function calls:
  9147 ;;		_PPS_lock
  9148 ;;		_PPS_unlock
  9149 ;; This function is called by:
  9150 ;;		_main
  9151 ;; This function uses a non-reentrant model
  9152 ;;
  9153                           
  9154                           
  9155                           ;psect for function _PWM_INIT
  9156  0E17                     _PWM_INIT:	
  9157  0E17                     l3471:	
  9158                           ;incstack = 0
  9159                           ; Regs used in _PWM_INIT: [wreg+status,2+status,0+pclath+cstack]
  9160                           
  9161                           
  9162                           ;PWM.c: 13: PPS_unlock();
  9163  0E17  318A  22C4  318E   	fcall	_PPS_unlock
  9164  0E1A                     l3473:	
  9165                           
  9166                           ;PWM.c: 14: RC2PPS = 0x0B;
  9167  0E1A  300B               	movlw	11
  9168  0E1B  017E               	movlb	62	; select bank62
  9169  0E1C  00A2               	movwf	34	;volatile
  9170  0E1D                     l3475:	
  9171                           
  9172                           ;PWM.c: 15: RC3PPS = 0x0C;
  9173  0E1D  300C               	movlw	12
  9174  0E1E  00A3               	movwf	35	;volatile
  9175  0E1F                     l3477:	
  9176                           
  9177                           ;PWM.c: 16: RC4PPS = 0x0D;
  9178  0E1F  300D               	movlw	13
  9179  0E20  00A4               	movwf	36	;volatile
  9180  0E21                     l3479:	
  9181                           
  9182                           ;PWM.c: 17: PPS_lock();
  9183  0E21  318A  22CB  318E   	fcall	_PPS_lock
  9184  0E24                     l3481:	
  9185                           
  9186                           ;PWM.c: 19: PWM3CON = 0;
  9187  0E24  0146               	movlb	6	; select bank6
  9188  0E25  0196               	clrf	22	;volatile
  9189  0E26                     l3483:	
  9190                           
  9191                           ;PWM.c: 20: PR2 = 255;
  9192  0E26  30FF               	movlw	255
  9193  0E27  0145               	movlb	5	; select bank5
  9194  0E28  008D               	movwf	13	;volatile
  9195                           
  9196                           ;PWM.c: 21: PWM3DCH = 0;
  9197  0E29  0146               	movlb	6	; select bank6
  9198  0E2A  0195               	clrf	21	;volatile
  9199  0E2B                     l3485:	
  9200                           
  9201                           ;PWM.c: 22: PWM3DCL = 0b00111111;
  9202  0E2B  303F               	movlw	63
  9203  0E2C  0094               	movwf	20	;volatile
  9204  0E2D                     l3487:	
  9205                           
  9206                           ;PWM.c: 23: PWM3CON = 0b10000000;
  9207  0E2D  3080               	movlw	128
  9208  0E2E  0096               	movwf	22	;volatile
  9209  0E2F                     l3489:	
  9210                           
  9211                           ;PWM.c: 24: TRISCbits.TRISC2 = 0;
  9212  0E2F  0140               	movlb	0	; select bank0
  9213  0E30  1114               	bcf	20,2	;volatile
  9214  0E31                     l3491:	
  9215                           
  9216                           ;PWM.c: 25: PWM3CON = 0b11100000;
  9217  0E31  30E0               	movlw	224
  9218  0E32  0146               	movlb	6	; select bank6
  9219  0E33  0096               	movwf	22	;volatile
  9220  0E34                     l3493:	
  9221                           
  9222                           ;PWM.c: 27: PWM4CON = 0;
  9223  0E34  019A               	clrf	26	;volatile
  9224  0E35                     l3495:	
  9225                           
  9226                           ;PWM.c: 28: PWM4DCH = 0;
  9227  0E35  0199               	clrf	25	;volatile
  9228  0E36                     l3497:	
  9229                           
  9230                           ;PWM.c: 29: PWM4DCL = 0b00111111;
  9231  0E36  303F               	movlw	63
  9232  0E37  0098               	movwf	24	;volatile
  9233  0E38                     l3499:	
  9234                           
  9235                           ;PWM.c: 30: PWM4CON = 0b10000000;
  9236  0E38  3080               	movlw	128
  9237  0E39  009A               	movwf	26	;volatile
  9238  0E3A                     l3501:	
  9239                           
  9240                           ;PWM.c: 31: TRISCbits.TRISC3 = 0;
  9241  0E3A  0140               	movlb	0	; select bank0
  9242  0E3B  1194               	bcf	20,3	;volatile
  9243  0E3C                     l3503:	
  9244                           
  9245                           ;PWM.c: 32: PWM4CON = 0b11100000;
  9246  0E3C  30E0               	movlw	224
  9247  0E3D  0146               	movlb	6	; select bank6
  9248  0E3E  009A               	movwf	26	;volatile
  9249                           
  9250                           ;PWM.c: 34: PWM5CON = 0;
  9251  0E3F  019E               	clrf	30	;volatile
  9252                           
  9253                           ;PWM.c: 35: PWM5DCH = 0;
  9254  0E40  019D               	clrf	29	;volatile
  9255  0E41                     l3505:	
  9256                           
  9257                           ;PWM.c: 36: PWM5DCL = 0b00111111;
  9258  0E41  303F               	movlw	63
  9259  0E42  009C               	movwf	28	;volatile
  9260  0E43                     l3507:	
  9261                           
  9262                           ;PWM.c: 37: PWM5CON = 0b10000000;
  9263  0E43  3080               	movlw	128
  9264  0E44  009E               	movwf	30	;volatile
  9265  0E45                     l3509:	
  9266                           
  9267                           ;PWM.c: 38: TRISCbits.TRISC4 = 0;
  9268  0E45  0140               	movlb	0	; select bank0
  9269  0E46  1214               	bcf	20,4	;volatile
  9270  0E47                     l3511:	
  9271                           
  9272                           ;PWM.c: 39: PWM5CON = 0b11100000;
  9273  0E47  30E0               	movlw	224
  9274  0E48  0146               	movlb	6	; select bank6
  9275  0E49  009E               	movwf	30	;volatile
  9276  0E4A                     l3513:	
  9277                           
  9278                           ;PWM.c: 42: T2CLKCON = 0b00000011;
  9279  0E4A  3003               	movlw	3
  9280  0E4B  0145               	movlb	5	; select bank5
  9281  0E4C  0090               	movwf	16	;volatile
  9282  0E4D                     l3515:	
  9283                           
  9284                           ;PWM.c: 43: TMR2ON = 1;
  9285  0E4D  178E               	bsf	14,7	;volatile
  9286  0E4E                     l3517:	
  9287                           
  9288                           ;PWM.c: 44: T2CKPS0 = 0;
  9289  0E4E  120E               	bcf	14,4	;volatile
  9290  0E4F                     l3519:	
  9291                           
  9292                           ;PWM.c: 45: T2CKPS1 = 0;
  9293  0E4F  128E               	bcf	14,5	;volatile
  9294  0E50                     l3521:	
  9295                           
  9296                           ;PWM.c: 46: T2CKPS2 = 1;
  9297  0E50  170E               	bsf	14,6	;volatile
  9298  0E51                     l3523:	
  9299                           
  9300                           ;PWM.c: 48: T2OUTPS0 = 1;
  9301  0E51  140E               	bsf	14,0	;volatile
  9302  0E52                     l3525:	
  9303                           
  9304                           ;PWM.c: 49: T2OUTPS1 = 1;
  9305  0E52  148E               	bsf	14,1	;volatile
  9306  0E53                     l3527:	
  9307                           
  9308                           ;PWM.c: 50: T2OUTPS2 = 1;
  9309  0E53  150E               	bsf	14,2	;volatile
  9310  0E54                     l3529:	
  9311                           
  9312                           ;PWM.c: 51: T2OUTPS3 = 1;
  9313  0E54  158E               	bsf	14,3	;volatile
  9314                           
  9315                           ;PWM.c: 53: TMR2 = 0;
  9316  0E55  018C               	clrf	12	;volatile
  9317  0E56                     l3531:	
  9318                           
  9319                           ;PWM.c: 54: PR2 = 255;
  9320  0E56  30FF               	movlw	255
  9321  0E57  008D               	movwf	13	;volatile
  9322  0E58                     l3533:	
  9323                           
  9324                           ;PWM.c: 55: TMR2IF = 0;
  9325  0E58  014E               	movlb	14	; select bank14
  9326  0E59  1090               	bcf	16,1	;volatile
  9327  0E5A                     l230:	
  9328  0E5A  0008               	return
  9329  0E5B                     __end_of_PWM_INIT:	
  9330                           
  9331                           	psect	text31
  9332  0AC4                     __ptext31:	
  9333 ;; *************** function _PPS_unlock *****************
  9334 ;; Defined at:
  9335 ;;		line 11 in file "PPS.c"
  9336 ;; Parameters:    Size  Location     Type
  9337 ;;		None
  9338 ;; Auto vars:     Size  Location     Type
  9339 ;;		None
  9340 ;; Return value:  Size  Location     Type
  9341 ;;                  1    wreg      void 
  9342 ;; Registers used:
  9343 ;;		wreg, status,2
  9344 ;; Tracked objects:
  9345 ;;		On entry : 0/0
  9346 ;;		On exit  : 0/0
  9347 ;;		Unchanged: 0/0
  9348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9349 ;;      Params:         0       0       0       0       0       0       0       0
  9350 ;;      Locals:         0       0       0       0       0       0       0       0
  9351 ;;      Temps:          0       0       0       0       0       0       0       0
  9352 ;;      Totals:         0       0       0       0       0       0       0       0
  9353 ;;Total ram usage:        0 bytes
  9354 ;; Hardware stack levels used:    1
  9355 ;; Hardware stack levels required when called:    2
  9356 ;; This function calls:
  9357 ;;		Nothing
  9358 ;; This function is called by:
  9359 ;;		_main
  9360 ;;		_PWM_INIT
  9361 ;; This function uses a non-reentrant model
  9362 ;;
  9363                           
  9364                           
  9365                           ;psect for function _PPS_unlock
  9366  0AC4                     _PPS_unlock:	
  9367  0AC4                     l3131:	
  9368                           ;incstack = 0
  9369                           ; Regs used in _PPS_unlock: [wreg+status,2]
  9370                           
  9371                           
  9372                           ;PPS.c: 12: PPSLOCK = 0x55;
  9373  0AC4  3055               	movlw	85
  9374  0AC5  017D               	movlb	61	; select bank61
  9375  0AC6  008F               	movwf	15	;volsfr
  9376                           
  9377                           ;PPS.c: 13: PPSLOCK = 0xAA;
  9378  0AC7  30AA               	movlw	170
  9379  0AC8  008F               	movwf	15	;volsfr
  9380  0AC9                     l3133:	
  9381                           
  9382                           ;PPS.c: 14: PPSLOCK = 0;
  9383  0AC9  018F               	clrf	15	;volsfr
  9384  0ACA                     l241:	
  9385  0ACA  0008               	return
  9386  0ACB                     __end_of_PPS_unlock:	
  9387                           
  9388                           	psect	text32
  9389  0ACB                     __ptext32:	
  9390 ;; *************** function _PPS_lock *****************
  9391 ;; Defined at:
  9392 ;;		line 17 in file "PPS.c"
  9393 ;; Parameters:    Size  Location     Type
  9394 ;;		None
  9395 ;; Auto vars:     Size  Location     Type
  9396 ;;		None
  9397 ;; Return value:  Size  Location     Type
  9398 ;;                  1    wreg      void 
  9399 ;; Registers used:
  9400 ;;		wreg
  9401 ;; Tracked objects:
  9402 ;;		On entry : 0/0
  9403 ;;		On exit  : 0/0
  9404 ;;		Unchanged: 0/0
  9405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9406 ;;      Params:         0       0       0       0       0       0       0       0
  9407 ;;      Locals:         0       0       0       0       0       0       0       0
  9408 ;;      Temps:          0       0       0       0       0       0       0       0
  9409 ;;      Totals:         0       0       0       0       0       0       0       0
  9410 ;;Total ram usage:        0 bytes
  9411 ;; Hardware stack levels used:    1
  9412 ;; Hardware stack levels required when called:    2
  9413 ;; This function calls:
  9414 ;;		Nothing
  9415 ;; This function is called by:
  9416 ;;		_main
  9417 ;;		_PWM_INIT
  9418 ;; This function uses a non-reentrant model
  9419 ;;
  9420                           
  9421                           
  9422                           ;psect for function _PPS_lock
  9423  0ACB                     _PPS_lock:	
  9424  0ACB                     l3135:	
  9425                           ;incstack = 0
  9426                           ; Regs used in _PPS_lock: [wreg]
  9427                           
  9428                           
  9429                           ;PPS.c: 18: PPSLOCK = 0x55;
  9430  0ACB  3055               	movlw	85
  9431  0ACC  017D               	movlb	61	; select bank61
  9432  0ACD  008F               	movwf	15	;volsfr
  9433                           
  9434                           ;PPS.c: 19: PPSLOCK = 0xAA;
  9435  0ACE  30AA               	movlw	170
  9436  0ACF  008F               	movwf	15	;volsfr
  9437                           
  9438                           ;PPS.c: 20: PPSLOCK = 1;
  9439  0AD0  3001               	movlw	1
  9440  0AD1  008F               	movwf	15	;volsfr
  9441  0AD2                     l244:	
  9442  0AD2  0008               	return
  9443  0AD3                     __end_of_PPS_lock:	
  9444                           
  9445                           	psect	text33
  9446  0D4C                     __ptext33:	
  9447 ;; *************** function _PIC_SETUP *****************
  9448 ;; Defined at:
  9449 ;;		line 25 in file "main.c"
  9450 ;; Parameters:    Size  Location     Type
  9451 ;;		None
  9452 ;; Auto vars:     Size  Location     Type
  9453 ;;		None
  9454 ;; Return value:  Size  Location     Type
  9455 ;;                  1    wreg      void 
  9456 ;; Registers used:
  9457 ;;		wreg, status,2, status,0
  9458 ;; Tracked objects:
  9459 ;;		On entry : 0/0
  9460 ;;		On exit  : 0/0
  9461 ;;		Unchanged: 0/0
  9462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9463 ;;      Params:         0       0       0       0       0       0       0       0
  9464 ;;      Locals:         0       0       0       0       0       0       0       0
  9465 ;;      Temps:          0       0       0       0       0       0       0       0
  9466 ;;      Totals:         0       0       0       0       0       0       0       0
  9467 ;;Total ram usage:        0 bytes
  9468 ;; Hardware stack levels used:    1
  9469 ;; Hardware stack levels required when called:    2
  9470 ;; This function calls:
  9471 ;;		Nothing
  9472 ;; This function is called by:
  9473 ;;		_main
  9474 ;; This function uses a non-reentrant model
  9475 ;;
  9476                           
  9477                           
  9478                           ;psect for function _PIC_SETUP
  9479  0D4C                     _PIC_SETUP:	
  9480  0D4C                     l3383:	
  9481                           ;incstack = 0
  9482                           ; Regs used in _PIC_SETUP: [wreg+status,2+status,0]
  9483                           
  9484                           
  9485                           ;main.c: 27: CPUDOZEbits.IDLEN = 0;
  9486  0D4C  0151               	movlb	17	; select bank17
  9487  0D4D  138C               	bcf	12,7	;volatile
  9488  0D4E                     l3385:	
  9489                           
  9490                           ;main.c: 28: VREGCON = 0b00000011;
  9491  0D4E  3003               	movlw	3
  9492  0D4F  0150               	movlb	16	; select bank16
  9493  0D50  0092               	movwf	18	;volatile
  9494                           
  9495                           ;main.c: 31: TRISA = 0xFF;
  9496  0D51  30FF               	movlw	255
  9497  0D52  0140               	movlb	0	; select bank0
  9498  0D53  0092               	movwf	18	;volatile
  9499                           
  9500                           ;main.c: 32: TRISC = 0xFF;
  9501  0D54  30FF               	movlw	255
  9502  0D55  0094               	movwf	20	;volatile
  9503  0D56                     l3387:	
  9504                           
  9505                           ;main.c: 33: ANSELA = 0;
  9506  0D56  017E               	movlb	62	; select bank62
  9507  0D57  01B8               	clrf	56	;volatile
  9508  0D58                     l3389:	
  9509                           
  9510                           ;main.c: 34: ANSELC = 0;
  9511  0D58  01CE               	clrf	78	;volatile
  9512  0D59                     l3391:	
  9513                           
  9514                           ;main.c: 35: ANSELAbits.ANSA4 = 1;
  9515  0D59  1638               	bsf	56,4	;volatile
  9516                           
  9517                           ;main.c: 36: WPUA = 0b00100000;
  9518  0D5A  3020               	movlw	32
  9519  0D5B  00B9               	movwf	57	;volatile
  9520  0D5C                     l3393:	
  9521                           
  9522                           ;main.c: 39: T1CONbits.CKPS = 0b00;
  9523  0D5C  30CF               	movlw	-49
  9524  0D5D  0144               	movlb	4	; select bank4
  9525  0D5E  058E               	andwf	14,f	;volatile
  9526  0D5F                     l3395:	
  9527                           
  9528                           ;main.c: 40: T1CONbits.nSYNC = 0;
  9529  0D5F  110E               	bcf	14,2	;volatile
  9530  0D60                     l3397:	
  9531                           
  9532                           ;main.c: 41: T1CONbits.RD16 = 1;
  9533  0D60  148E               	bsf	14,1	;volatile
  9534  0D61                     l3399:	
  9535                           
  9536                           ;main.c: 42: T1GCONbits.GE = 0;
  9537  0D61  138F               	bcf	15,7	;volatile
  9538  0D62                     l3401:	
  9539                           
  9540                           ;main.c: 43: T1CLK = 0b00000100;
  9541  0D62  3004               	movlw	4
  9542  0D63  0091               	movwf	17	;volatile
  9543  0D64                     l3403:	
  9544                           
  9545                           ;main.c: 44: TMR1 = 65228;
  9546  0D64  30FE               	movlw	254
  9547  0D65  008D               	movwf	13	;volatile
  9548  0D66  30CC               	movlw	204
  9549  0D67  008C               	movwf	12	;volatile
  9550  0D68                     l3405:	
  9551                           
  9552                           ;main.c: 45: PIE4bits.TMR1IE = 1;
  9553  0D68  014E               	movlb	14	; select bank14
  9554  0D69  141A               	bsf	26,0	;volatile
  9555  0D6A                     l3407:	
  9556                           
  9557                           ;main.c: 46: T1CONbits.ON = 1;
  9558  0D6A  0144               	movlb	4	; select bank4
  9559  0D6B  140E               	bsf	14,0	;volatile
  9560  0D6C                     l3409:	
  9561                           
  9562                           ;main.c: 49: PIE0bits.IOCIE = 1;
  9563  0D6C  014E               	movlb	14	; select bank14
  9564  0D6D  1616               	bsf	22,4	;volatile
  9565  0D6E                     l3411:	
  9566                           
  9567                           ;main.c: 50: IOCAP = 0b00100000;
  9568  0D6E  3020               	movlw	32
  9569  0D6F  017E               	movlb	62	; select bank62
  9570  0D70  00BD               	movwf	61	;volatile
  9571  0D71                     l3413:	
  9572                           
  9573                           ;main.c: 51: IOCAN = 0b00100000;
  9574  0D71  3020               	movlw	32
  9575  0D72  00BE               	movwf	62	;volatile
  9576  0D73                     l3415:	
  9577                           
  9578                           ;main.c: 52: IOCAF = 0x00;
  9579  0D73  01BF               	clrf	63	;volatile
  9580  0D74                     l3417:	
  9581                           
  9582                           ;main.c: 54: INTCONbits.GIE = 1;
  9583  0D74  178B               	bsf	11,7	;volatile
  9584  0D75                     l3419:	
  9585                           
  9586                           ;main.c: 55: INTCONbits.PEIE = 1;
  9587  0D75  170B               	bsf	11,6	;volatile
  9588  0D76                     l107:	
  9589  0D76  0008               	return
  9590  0D77                     __end_of_PIC_SETUP:	
  9591                           
  9592                           	psect	text34
  9593  0E5B                     __ptext34:	
  9594 ;; *************** function _I2C_bus_reset *****************
  9595 ;; Defined at:
  9596 ;;		line 12 in file "I2C.c"
  9597 ;; Parameters:    Size  Location     Type
  9598 ;;		None
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;  i               1    1[BANK0 ] unsigned char 
  9601 ;; Return value:  Size  Location     Type
  9602 ;;                  1    wreg      void 
  9603 ;; Registers used:
  9604 ;;		wreg, status,2, status,0
  9605 ;; Tracked objects:
  9606 ;;		On entry : 0/0
  9607 ;;		On exit  : 0/0
  9608 ;;		Unchanged: 0/0
  9609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9610 ;;      Params:         0       0       0       0       0       0       0       0
  9611 ;;      Locals:         0       1       0       0       0       0       0       0
  9612 ;;      Temps:          0       1       0       0       0       0       0       0
  9613 ;;      Totals:         0       2       0       0       0       0       0       0
  9614 ;;Total ram usage:        2 bytes
  9615 ;; Hardware stack levels used:    1
  9616 ;; Hardware stack levels required when called:    2
  9617 ;; This function calls:
  9618 ;;		Nothing
  9619 ;; This function is called by:
  9620 ;;		_main
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           
  9625                           ;psect for function _I2C_bus_reset
  9626  0E5B                     _I2C_bus_reset:	
  9627  0E5B                     l3429:	
  9628                           ;incstack = 0
  9629                           ; Regs used in _I2C_bus_reset: [wreg+status,2+status,0]
  9630                           
  9631                           
  9632                           ;I2C.c: 14: TRISCbits.TRISC0 = 1;
  9633  0E5B  0140               	movlb	0	; select bank0
  9634  0E5C  1414               	bsf	20,0	;volatile
  9635                           
  9636                           ;I2C.c: 15: TRISCbits.TRISC1 = 1;
  9637  0E5D  1494               	bsf	20,1	;volatile
  9638  0E5E                     l3431:	
  9639                           
  9640                           ;I2C.c: 17: char i = 0;
  9641  0E5E  01A2               	clrf	I2C_bus_reset@i
  9642                           
  9643                           ;I2C.c: 19: while(i < 10) {
  9644  0E5F  2E9E               	goto	l3455
  9645  0E60                     l3433:	
  9646                           
  9647                           ;I2C.c: 20: i++;
  9648  0E60  3001               	movlw	1
  9649  0E61  00A1               	movwf	??_I2C_bus_reset
  9650  0E62  0821               	movf	??_I2C_bus_reset,w
  9651  0E63  07A2               	addwf	I2C_bus_reset@i,f
  9652  0E64                     l3435:	
  9653                           
  9654                           ;I2C.c: 22: if(!RC1) {
  9655  0E64  188E               	btfsc	14,1	;volatile
  9656  0E65  2E67               	goto	u2971
  9657  0E66  2E68               	goto	u2970
  9658  0E67                     u2971:	
  9659  0E67  2E7E               	goto	l3443
  9660  0E68                     u2970:	
  9661  0E68                     l3437:	
  9662                           
  9663                           ;I2C.c: 24: TRISCbits.TRISC0 = 0;
  9664  0E68  1014               	bcf	20,0	;volatile
  9665                           
  9666                           ;I2C.c: 25: RC0 = 0;
  9667  0E69  100E               	bcf	14,0	;volatile
  9668  0E6A                     l3439:	
  9669                           
  9670                           ;I2C.c: 26: _delay((unsigned long)((1)*(32000000/4000.0)));
  9671  0E6A  300B               	movlw	11
  9672  0E6B  0140               	movlb	0	; select bank0
  9673  0E6C  00A1               	movwf	??_I2C_bus_reset
  9674  0E6D  3062               	movlw	98
  9675  0E6E                     u4017:	
  9676  0E6E  0B89               	decfsz	9,f
  9677  0E6F  2E6E               	goto	u4017
  9678  0E70  0BA1               	decfsz	??_I2C_bus_reset,f
  9679  0E71  2E6E               	goto	u4017
  9680  0E72  0000               	nop
  9681  0E73                     l3441:	
  9682                           
  9683                           ;I2C.c: 27: TRISCbits.TRISC0 = 1;
  9684  0E73  0140               	movlb	0	; select bank0
  9685  0E74  1414               	bsf	20,0	;volatile
  9686                           
  9687                           ;I2C.c: 28: _delay((unsigned long)((1)*(32000000/4000.0)));
  9688  0E75  300B               	movlw	11
  9689  0E76  0140               	movlb	0	; select bank0
  9690  0E77  00A1               	movwf	??_I2C_bus_reset
  9691  0E78  3062               	movlw	98
  9692  0E79                     u4027:	
  9693  0E79  0B89               	decfsz	9,f
  9694  0E7A  2E79               	goto	u4027
  9695  0E7B  0BA1               	decfsz	??_I2C_bus_reset,f
  9696  0E7C  2E79               	goto	u4027
  9697  0E7D  0000               	nop
  9698  0E7E                     l3443:	
  9699                           
  9700                           ;I2C.c: 29: };I2C.c: 30: if(RC1) {
  9701  0E7E  0140               	movlb	0	; select bank0
  9702  0E7F  1C8E               	btfss	14,1	;volatile
  9703  0E80  2E82               	goto	u2981
  9704  0E81  2E83               	goto	u2980
  9705  0E82                     u2981:	
  9706  0E82  2E64               	goto	l3435
  9707  0E83                     u2980:	
  9708  0E83                     l3445:	
  9709                           
  9710                           ;I2C.c: 32: TRISCbits.TRISC1 = 0;
  9711  0E83  1094               	bcf	20,1	;volatile
  9712                           
  9713                           ;I2C.c: 33: RC1 = 0;
  9714  0E84  108E               	bcf	14,1	;volatile
  9715  0E85                     l3447:	
  9716                           
  9717                           ;I2C.c: 34: _delay((unsigned long)((1)*(32000000/4000.0)));
  9718  0E85  300B               	movlw	11
  9719  0E86  0140               	movlb	0	; select bank0
  9720  0E87  00A1               	movwf	??_I2C_bus_reset
  9721  0E88  3062               	movlw	98
  9722  0E89                     u4037:	
  9723  0E89  0B89               	decfsz	9,f
  9724  0E8A  2E89               	goto	u4037
  9725  0E8B  0BA1               	decfsz	??_I2C_bus_reset,f
  9726  0E8C  2E89               	goto	u4037
  9727  0E8D  0000               	nop
  9728  0E8E                     l3449:	
  9729                           
  9730                           ;I2C.c: 35: TRISCbits.TRISC1 = 1;
  9731  0E8E  0140               	movlb	0	; select bank0
  9732  0E8F  1494               	bsf	20,1	;volatile
  9733                           
  9734                           ;I2C.c: 36: _delay((unsigned long)((1)*(32000000/4000.0)));
  9735  0E90  300B               	movlw	11
  9736  0E91  0140               	movlb	0	; select bank0
  9737  0E92  00A1               	movwf	??_I2C_bus_reset
  9738  0E93  3062               	movlw	98
  9739  0E94                     u4047:	
  9740  0E94  0B89               	decfsz	9,f
  9741  0E95  2E94               	goto	u4047
  9742  0E96  0BA1               	decfsz	??_I2C_bus_reset,f
  9743  0E97  2E94               	goto	u4047
  9744  0E98  0000               	nop
  9745  0E99                     l3451:	
  9746                           
  9747                           ;I2C.c: 37: if(RC1) {
  9748  0E99  0140               	movlb	0	; select bank0
  9749  0E9A  1C8E               	btfss	14,1	;volatile
  9750  0E9B  2E9D               	goto	u2991
  9751  0E9C  2E9E               	goto	u2990
  9752  0E9D                     u2991:	
  9753  0E9D  2E64               	goto	l3435
  9754  0E9E                     u2990:	
  9755  0E9E                     l3455:	
  9756  0E9E  300A               	movlw	10
  9757  0E9F  0222               	subwf	I2C_bus_reset@i,w
  9758  0EA0  1C03               	skipc
  9759  0EA1  2EA3               	goto	u3001
  9760  0EA2  2EA4               	goto	u3000
  9761  0EA3                     u3001:	
  9762  0EA3  2E60               	goto	l3433
  9763  0EA4                     u3000:	
  9764  0EA4                     l276:	
  9765  0EA4  0008               	return
  9766  0EA5                     __end_of_I2C_bus_reset:	
  9767                           
  9768                           	psect	text35
  9769  0D77                     __ptext35:	
  9770 ;; *************** function _I2C_Master_Init *****************
  9771 ;; Defined at:
  9772 ;;		line 45 in file "I2C.c"
  9773 ;; Parameters:    Size  Location     Type
  9774 ;;  clk             4   26[BANK0 ] const unsigned long 
  9775 ;; Auto vars:     Size  Location     Type
  9776 ;;		None
  9777 ;; Return value:  Size  Location     Type
  9778 ;;                  1    wreg      void 
  9779 ;; Registers used:
  9780 ;;		wreg, status,2, status,0, pclath, cstack
  9781 ;; Tracked objects:
  9782 ;;		On entry : 0/0
  9783 ;;		On exit  : 0/0
  9784 ;;		Unchanged: 0/0
  9785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9786 ;;      Params:         0       4       0       0       0       0       0       0
  9787 ;;      Locals:         0       0       0       0       0       0       0       0
  9788 ;;      Temps:          0       4       0       0       0       0       0       0
  9789 ;;      Totals:         0       8       0       0       0       0       0       0
  9790 ;;Total ram usage:        8 bytes
  9791 ;; Hardware stack levels used:    1
  9792 ;; Hardware stack levels required when called:    3
  9793 ;; This function calls:
  9794 ;;		___lldiv
  9795 ;; This function is called by:
  9796 ;;		_main
  9797 ;; This function uses a non-reentrant model
  9798 ;;
  9799                           
  9800                           
  9801                           ;psect for function _I2C_Master_Init
  9802  0D77                     _I2C_Master_Init:	
  9803  0D77                     l3457:	
  9804                           ;incstack = 0
  9805                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  9806                           
  9807                           
  9808                           ;I2C.c: 47: SSP1CON1 = 0b00101000;
  9809  0D77  3028               	movlw	40
  9810  0D78  0143               	movlb	3	; select bank3
  9811  0D79  0090               	movwf	16	;volatile
  9812  0D7A                     l3459:	
  9813                           
  9814                           ;I2C.c: 48: SSP1CON2 = 0x00;
  9815  0D7A  0191               	clrf	17	;volatile
  9816  0D7B                     l3461:	
  9817                           
  9818                           ;I2C.c: 49: SSP1ADD = (32000000 / (4*clk)) - 1;
  9819  0D7B  0140               	movlb	0	; select bank0
  9820  0D7C  083B               	movf	I2C_Master_Init@clk,w
  9821  0D7D  00BF               	movwf	??_I2C_Master_Init
  9822  0D7E  083C               	movf	I2C_Master_Init@clk+1,w
  9823  0D7F  00C0               	movwf	??_I2C_Master_Init+1
  9824  0D80  083D               	movf	I2C_Master_Init@clk+2,w
  9825  0D81  00C1               	movwf	??_I2C_Master_Init+2
  9826  0D82  083E               	movf	I2C_Master_Init@clk+3,w
  9827  0D83  00C2               	movwf	??_I2C_Master_Init+3
  9828  0D84  3002               	movlw	2
  9829  0D85                     u3015:	
  9830  0D85  35BF               	lslf	??_I2C_Master_Init,f
  9831  0D86  0DC0               	rlf	??_I2C_Master_Init+1,f
  9832  0D87  0DC1               	rlf	??_I2C_Master_Init+2,f
  9833  0D88  0DC2               	rlf	??_I2C_Master_Init+3,f
  9834  0D89                     u3010:	
  9835  0D89  0B89               	decfsz	9,f
  9836  0D8A  2D85               	goto	u3015
  9837  0D8B  0842               	movf	??_I2C_Master_Init+3,w
  9838  0D8C  00B0               	movwf	___lldiv@divisor+3
  9839  0D8D  0841               	movf	??_I2C_Master_Init+2,w
  9840  0D8E  00AF               	movwf	___lldiv@divisor+2
  9841  0D8F  0840               	movf	??_I2C_Master_Init+1,w
  9842  0D90  00AE               	movwf	___lldiv@divisor+1
  9843  0D91  083F               	movf	??_I2C_Master_Init,w
  9844  0D92  00AD               	movwf	___lldiv@divisor
  9845  0D93  3001               	movlw	1
  9846  0D94  00B4               	movwf	___lldiv@dividend+3
  9847  0D95  30E8               	movlw	232
  9848  0D96  00B3               	movwf	___lldiv@dividend+2
  9849  0D97  3048               	movlw	72
  9850  0D98  00B2               	movwf	___lldiv@dividend+1
  9851  0D99  3000               	movlw	0
  9852  0D9A  00B1               	movwf	___lldiv@dividend
  9853  0D9B  318F  2748  318D   	fcall	___lldiv
  9854  0D9E  0140               	movlb	0	; select bank0
  9855  0D9F  082D               	movf	?___lldiv,w
  9856  0DA0  3EFF               	addlw	255
  9857  0DA1  0143               	movlb	3	; select bank3
  9858  0DA2  008D               	movwf	13	;volatile
  9859  0DA3                     l3463:	
  9860                           
  9861                           ;I2C.c: 50: SSP1STAT = 0b10000000;
  9862  0DA3  3080               	movlw	128
  9863  0DA4  008F               	movwf	15	;volatile
  9864  0DA5                     l279:	
  9865  0DA5  0008               	return
  9866  0DA6                     __end_of_I2C_Master_Init:	
  9867                           
  9868                           	psect	text36
  9869  0F48                     __ptext36:	
  9870 ;; *************** function ___lldiv *****************
  9871 ;; Defined at:
  9872 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  9873 ;; Parameters:    Size  Location     Type
  9874 ;;  divisor         4   12[BANK0 ] unsigned long 
  9875 ;;  dividend        4   16[BANK0 ] unsigned long 
  9876 ;; Auto vars:     Size  Location     Type
  9877 ;;  quotient        4   21[BANK0 ] unsigned long 
  9878 ;;  counter         1   25[BANK0 ] unsigned char 
  9879 ;; Return value:  Size  Location     Type
  9880 ;;                  4   12[BANK0 ] unsigned long 
  9881 ;; Registers used:
  9882 ;;		wreg, status,2, status,0
  9883 ;; Tracked objects:
  9884 ;;		On entry : 0/0
  9885 ;;		On exit  : 0/0
  9886 ;;		Unchanged: 0/0
  9887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9888 ;;      Params:         0       8       0       0       0       0       0       0
  9889 ;;      Locals:         0       5       0       0       0       0       0       0
  9890 ;;      Temps:          0       1       0       0       0       0       0       0
  9891 ;;      Totals:         0      14       0       0       0       0       0       0
  9892 ;;Total ram usage:       14 bytes
  9893 ;; Hardware stack levels used:    1
  9894 ;; Hardware stack levels required when called:    2
  9895 ;; This function calls:
  9896 ;;		Nothing
  9897 ;; This function is called by:
  9898 ;;		_I2C_Master_Init
  9899 ;;		_negotiate_optimal_pdo
  9900 ;;		_i2c_master_init
  9901 ;; This function uses a non-reentrant model
  9902 ;;
  9903                           
  9904                           
  9905                           ;psect for function ___lldiv
  9906  0F48                     ___lldiv:	
  9907  0F48                     l3093:	
  9908                           ;incstack = 0
  9909                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  9910                           
  9911  0F48  3000               	movlw	0
  9912  0F49  0140               	movlb	0	; select bank0
  9913  0F4A  00B9               	movwf	___lldiv@quotient+3
  9914  0F4B  3000               	movlw	0
  9915  0F4C  00B8               	movwf	___lldiv@quotient+2
  9916  0F4D  3000               	movlw	0
  9917  0F4E  00B7               	movwf	___lldiv@quotient+1
  9918  0F4F  3000               	movlw	0
  9919  0F50  00B6               	movwf	___lldiv@quotient
  9920  0F51  0830               	movf	___lldiv@divisor+3,w
  9921  0F52  042F               	iorwf	___lldiv@divisor+2,w
  9922  0F53  042E               	iorwf	___lldiv@divisor+1,w
  9923  0F54  042D               	iorwf	___lldiv@divisor,w
  9924  0F55  1903               	skipnz
  9925  0F56  2F58               	goto	u2491
  9926  0F57  2F59               	goto	u2490
  9927  0F58                     u2491:	
  9928  0F58  2F9A               	goto	l3113
  9929  0F59                     u2490:	
  9930  0F59                     l3095:	
  9931  0F59  01BA               	clrf	___lldiv@counter
  9932  0F5A  0ABA               	incf	___lldiv@counter,f
  9933  0F5B  2F67               	goto	l3099
  9934  0F5C                     l3097:	
  9935  0F5C  3001               	movlw	1
  9936  0F5D                     u2505:	
  9937  0F5D  35AD               	lslf	___lldiv@divisor,f
  9938  0F5E  0DAE               	rlf	___lldiv@divisor+1,f
  9939  0F5F  0DAF               	rlf	___lldiv@divisor+2,f
  9940  0F60  0DB0               	rlf	___lldiv@divisor+3,f
  9941  0F61  0B89               	decfsz	9,f
  9942  0F62  2F5D               	goto	u2505
  9943  0F63  3001               	movlw	1
  9944  0F64  00B5               	movwf	??___lldiv
  9945  0F65  0835               	movf	??___lldiv,w
  9946  0F66  07BA               	addwf	___lldiv@counter,f
  9947  0F67                     l3099:	
  9948  0F67  1FB0               	btfss	___lldiv@divisor+3,7
  9949  0F68  2F6A               	goto	u2511
  9950  0F69  2F6B               	goto	u2510
  9951  0F6A                     u2511:	
  9952  0F6A  2F5C               	goto	l3097
  9953  0F6B                     u2510:	
  9954  0F6B                     l3101:	
  9955  0F6B  3001               	movlw	1
  9956  0F6C                     u2525:	
  9957  0F6C  35B6               	lslf	___lldiv@quotient,f
  9958  0F6D  0DB7               	rlf	___lldiv@quotient+1,f
  9959  0F6E  0DB8               	rlf	___lldiv@quotient+2,f
  9960  0F6F  0DB9               	rlf	___lldiv@quotient+3,f
  9961  0F70  0B89               	decfsz	9,f
  9962  0F71  2F6C               	goto	u2525
  9963  0F72                     l3103:	
  9964  0F72  0830               	movf	___lldiv@divisor+3,w
  9965  0F73  0234               	subwf	___lldiv@dividend+3,w
  9966  0F74  1D03               	skipz
  9967  0F75  2F80               	goto	u2535
  9968  0F76  082F               	movf	___lldiv@divisor+2,w
  9969  0F77  0233               	subwf	___lldiv@dividend+2,w
  9970  0F78  1D03               	skipz
  9971  0F79  2F80               	goto	u2535
  9972  0F7A  082E               	movf	___lldiv@divisor+1,w
  9973  0F7B  0232               	subwf	___lldiv@dividend+1,w
  9974  0F7C  1D03               	skipz
  9975  0F7D  2F80               	goto	u2535
  9976  0F7E  082D               	movf	___lldiv@divisor,w
  9977  0F7F  0231               	subwf	___lldiv@dividend,w
  9978  0F80                     u2535:	
  9979  0F80  1C03               	skipc
  9980  0F81  2F83               	goto	u2531
  9981  0F82  2F84               	goto	u2530
  9982  0F83                     u2531:	
  9983  0F83  2F8D               	goto	l3109
  9984  0F84                     u2530:	
  9985  0F84                     l3105:	
  9986  0F84  082D               	movf	___lldiv@divisor,w
  9987  0F85  02B1               	subwf	___lldiv@dividend,f
  9988  0F86  082E               	movf	___lldiv@divisor+1,w
  9989  0F87  3BB2               	subwfb	___lldiv@dividend+1,f
  9990  0F88  082F               	movf	___lldiv@divisor+2,w
  9991  0F89  3BB3               	subwfb	___lldiv@dividend+2,f
  9992  0F8A  0830               	movf	___lldiv@divisor+3,w
  9993  0F8B  3BB4               	subwfb	___lldiv@dividend+3,f
  9994  0F8C                     l3107:	
  9995  0F8C  1436               	bsf	___lldiv@quotient,0
  9996  0F8D                     l3109:	
  9997  0F8D  3001               	movlw	1
  9998  0F8E                     u2545:	
  9999  0F8E  36B0               	lsrf	___lldiv@divisor+3,f
 10000  0F8F  0CAF               	rrf	___lldiv@divisor+2,f
 10001  0F90  0CAE               	rrf	___lldiv@divisor+1,f
 10002  0F91  0CAD               	rrf	___lldiv@divisor,f
 10003  0F92  0B89               	decfsz	9,f
 10004  0F93  2F8E               	goto	u2545
 10005  0F94                     l3111:	
 10006  0F94  3001               	movlw	1
 10007  0F95  02BA               	subwf	___lldiv@counter,f
 10008  0F96  1D03               	btfss	3,2
 10009  0F97  2F99               	goto	u2551
 10010  0F98  2F9A               	goto	u2550
 10011  0F99                     u2551:	
 10012  0F99  2F6B               	goto	l3101
 10013  0F9A                     u2550:	
 10014  0F9A                     l3113:	
 10015  0F9A  0839               	movf	___lldiv@quotient+3,w
 10016  0F9B  00B0               	movwf	?___lldiv+3
 10017  0F9C  0838               	movf	___lldiv@quotient+2,w
 10018  0F9D  00AF               	movwf	?___lldiv+2
 10019  0F9E  0837               	movf	___lldiv@quotient+1,w
 10020  0F9F  00AE               	movwf	?___lldiv+1
 10021  0FA0  0836               	movf	___lldiv@quotient,w
 10022  0FA1  00AD               	movwf	?___lldiv
 10023  0FA2                     l935:	
 10024  0FA2  0008               	return
 10025  0FA3                     __end_of___lldiv:	
 10026                           
 10027                           	psect	text37
 10028  041C                     __ptext37:	
 10029 ;; *************** function _BQ_UPDATE *****************
 10030 ;; Defined at:
 10031 ;;		line 60 in file "BQ25895M.c"
 10032 ;; Parameters:    Size  Location     Type
 10033 ;;		None
 10034 ;; Auto vars:     Size  Location     Type
 10035 ;;		None
 10036 ;; Return value:  Size  Location     Type
 10037 ;;                  1    wreg      void 
 10038 ;; Registers used:
 10039 ;;		wreg, status,2, status,0, pclath, cstack
 10040 ;; Tracked objects:
 10041 ;;		On entry : 0/0
 10042 ;;		On exit  : 0/0
 10043 ;;		Unchanged: 0/0
 10044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10045 ;;      Params:         0       0       0       0       0       0       0       0
 10046 ;;      Locals:         0       0       0       0       0       0       0       0
 10047 ;;      Temps:          0       1       0       0       0       0       0       0
 10048 ;;      Totals:         0       1       0       0       0       0       0       0
 10049 ;;Total ram usage:        1 bytes
 10050 ;; Hardware stack levels used:    1
 10051 ;; Hardware stack levels required when called:    6
 10052 ;; This function calls:
 10053 ;;		_BQ_Read
 10054 ;;		_BQ_Write
 10055 ;;		_BQ_get_chrg_state
 10056 ;;		_get_time
 10057 ;;		_timer_diff
 10058 ;; This function is called by:
 10059 ;;		_main
 10060 ;; This function uses a non-reentrant model
 10061 ;;
 10062                           
 10063                           
 10064                           ;psect for function _BQ_UPDATE
 10065  041C                     _BQ_UPDATE:	
 10066  041C                     l3535:	
 10067                           ;incstack = 0
 10068                           ; Regs used in _BQ_UPDATE: [wreg+status,2+status,0+pclath+cstack]
 10069                           
 10070                           
 10071                           ;BQ25895M.c: 61: if(BQ_adc_state == 0) {
 10072  041C  0140               	movlb	0	; select bank0
 10073  041D  086C               	movf	_BQ_adc_state,w
 10074  041E  1D03               	btfss	3,2
 10075  041F  2C21               	goto	u3021
 10076  0420  2C22               	goto	u3020
 10077  0421                     u3021:	
 10078  0421  2C48               	goto	l3543
 10079  0422                     u3020:	
 10080  0422                     l3537:	
 10081                           
 10082                           ;BQ25895M.c: 62: VBUS_CHRG_STATE = BQ_get_chrg_state();
 10083  0422  318C  2443  3184   	fcall	_BQ_get_chrg_state
 10084  0425  0140               	movlb	0	; select bank0
 10085  0426  00AF               	movwf	??_BQ_UPDATE
 10086  0427  082F               	movf	??_BQ_UPDATE,w
 10087  0428  00EE               	movwf	_VBUS_CHRG_STATE
 10088                           
 10089                           ;BQ25895M.c: 63: BQ_Write(0x02, 0b10010001);
 10090  0429  3091               	movlw	145
 10091  042A  00AF               	movwf	??_BQ_UPDATE
 10092  042B  082F               	movf	??_BQ_UPDATE,w
 10093  042C  00A2               	movwf	BQ_Write@data
 10094  042D  3002               	movlw	2
 10095  042E  318B  2340  3184   	fcall	_BQ_Write
 10096  0431                     l3539:	
 10097                           
 10098                           ;BQ25895M.c: 64: BQ_adc_time = get_time();
 10099  0431  318B  2319  3184   	fcall	_get_time
 10100  0434  0140               	movlb	0	; select bank0
 10101  0435  0824               	movf	?_get_time+3,w
 10102  0436  0142               	movlb	2	; select bank2
 10103  0437  00AF               	movwf	(_BQ_adc_time+3)^(0+256)
 10104  0438  0140               	movlb	0	; select bank0
 10105  0439  0823               	movf	?_get_time+2,w
 10106  043A  0142               	movlb	2	; select bank2
 10107  043B  00AE               	movwf	(_BQ_adc_time+2)^(0+256)
 10108  043C  0140               	movlb	0	; select bank0
 10109  043D  0822               	movf	?_get_time+1,w
 10110  043E  0142               	movlb	2	; select bank2
 10111  043F  00AD               	movwf	(_BQ_adc_time+1)^(0+256)
 10112  0440  0140               	movlb	0	; select bank0
 10113  0441  0821               	movf	?_get_time,w
 10114  0442  0142               	movlb	2	; select bank2
 10115  0443  00AC               	movwf	_BQ_adc_time^(0+256)
 10116  0444                     l3541:	
 10117                           
 10118                           ;BQ25895M.c: 65: BQ_adc_state = 1;
 10119  0444  0140               	movlb	0	; select bank0
 10120  0445  01EC               	clrf	_BQ_adc_state
 10121  0446  0AEC               	incf	_BQ_adc_state,f
 10122                           
 10123                           ;BQ25895M.c: 66: }
 10124  0447  2CBC               	goto	l353
 10125  0448                     l3543:	
 10126                           
 10127                           ;BQ25895M.c: 67: else if(BQ_adc_state == 1) {
 10128  0448  036C               	decf	_BQ_adc_state,w
 10129  0449  1D03               	btfss	3,2
 10130  044A  2C4C               	goto	u3031
 10131  044B  2C4D               	goto	u3030
 10132  044C                     u3031:	
 10133  044C  2C91               	goto	l3553
 10134  044D                     u3030:	
 10135  044D                     l3545:	
 10136                           
 10137                           ;BQ25895M.c: 68: if(timer_diff(BQ_adc_time) >= 80) {
 10138  044D  0142               	movlb	2	; select bank2
 10139  044E  082F               	movf	(_BQ_adc_time+3)^(0+256),w
 10140  044F  0140               	movlb	0	; select bank0
 10141  0450  00A4               	movwf	timer_diff@t+3
 10142  0451  0142               	movlb	2	; select bank2
 10143  0452  082E               	movf	(_BQ_adc_time+2)^(0+256),w
 10144  0453  0140               	movlb	0	; select bank0
 10145  0454  00A3               	movwf	timer_diff@t+2
 10146  0455  0142               	movlb	2	; select bank2
 10147  0456  082D               	movf	(_BQ_adc_time+1)^(0+256),w
 10148  0457  0140               	movlb	0	; select bank0
 10149  0458  00A2               	movwf	timer_diff@t+1
 10150  0459  0142               	movlb	2	; select bank2
 10151  045A  082C               	movf	_BQ_adc_time^(0+256),w
 10152  045B  0140               	movlb	0	; select bank0
 10153  045C  00A1               	movwf	timer_diff@t
 10154  045D  318B  23E7  3184   	fcall	_timer_diff
 10155  0460  0140               	movlb	0	; select bank0
 10156  0461  0824               	movf	?_timer_diff+3,w
 10157  0462  1D03               	btfss	3,2
 10158  0463  2C70               	goto	u3040
 10159  0464  0823               	movf	?_timer_diff+2,w
 10160  0465  1D03               	btfss	3,2
 10161  0466  2C70               	goto	u3040
 10162  0467  0822               	movf	?_timer_diff+1,w
 10163  0468  1D03               	btfss	3,2
 10164  0469  2C70               	goto	u3040
 10165  046A  3050               	movlw	80
 10166  046B  0221               	subwf	?_timer_diff,w
 10167  046C  1C03               	btfss	3,0
 10168  046D  2C6F               	goto	u3041
 10169  046E  2C70               	goto	u3040
 10170  046F                     u3041:	
 10171  046F  2CBC               	goto	l353
 10172  0470                     u3040:	
 10173  0470                     l3547:	
 10174                           
 10175                           ;BQ25895M.c: 69: BATTERY_VOLTAGE = BQ_Read(0x0E);
 10176  0470  300E               	movlw	14
 10177  0471  318C  24D0  3184   	fcall	_BQ_Read
 10178  0474  0140               	movlb	0	; select bank0
 10179  0475  0824               	movf	?_BQ_Read,w
 10180  0476  00AF               	movwf	??_BQ_UPDATE
 10181  0477  082F               	movf	??_BQ_UPDATE,w
 10182  0478  00ED               	movwf	_BATTERY_VOLTAGE
 10183  0479                     l3549:	
 10184                           
 10185                           ;BQ25895M.c: 70: BQ_adc_state = 2;
 10186  0479  3002               	movlw	2
 10187  047A  00AF               	movwf	??_BQ_UPDATE
 10188  047B  082F               	movf	??_BQ_UPDATE,w
 10189  047C  00EC               	movwf	_BQ_adc_state
 10190  047D                     l3551:	
 10191                           
 10192                           ;BQ25895M.c: 71: BQ_adc_time = get_time();
 10193  047D  318B  2319  3184   	fcall	_get_time
 10194  0480  0140               	movlb	0	; select bank0
 10195  0481  0824               	movf	?_get_time+3,w
 10196  0482  0142               	movlb	2	; select bank2
 10197  0483  00AF               	movwf	(_BQ_adc_time+3)^(0+256)
 10198  0484  0140               	movlb	0	; select bank0
 10199  0485  0823               	movf	?_get_time+2,w
 10200  0486  0142               	movlb	2	; select bank2
 10201  0487  00AE               	movwf	(_BQ_adc_time+2)^(0+256)
 10202  0488  0140               	movlb	0	; select bank0
 10203  0489  0822               	movf	?_get_time+1,w
 10204  048A  0142               	movlb	2	; select bank2
 10205  048B  00AD               	movwf	(_BQ_adc_time+1)^(0+256)
 10206  048C  0140               	movlb	0	; select bank0
 10207  048D  0821               	movf	?_get_time,w
 10208  048E  0142               	movlb	2	; select bank2
 10209  048F  00AC               	movwf	_BQ_adc_time^(0+256)
 10210  0490  2CBC               	goto	l353
 10211  0491                     l3553:	
 10212                           
 10213                           ;BQ25895M.c: 74: else if(BQ_adc_state == 2) {
 10214  0491  3002               	movlw	2
 10215  0492  066C               	xorwf	_BQ_adc_state,w
 10216  0493  1D03               	btfss	3,2
 10217  0494  2C96               	goto	u3051
 10218  0495  2C97               	goto	u3050
 10219  0496                     u3051:	
 10220  0496  2CBA               	goto	l3557
 10221  0497                     u3050:	
 10222  0497                     l3555:	
 10223                           
 10224                           ;BQ25895M.c: 75: if(timer_diff(BQ_adc_time) >= 20) {
 10225  0497  0142               	movlb	2	; select bank2
 10226  0498  082F               	movf	(_BQ_adc_time+3)^(0+256),w
 10227  0499  0140               	movlb	0	; select bank0
 10228  049A  00A4               	movwf	timer_diff@t+3
 10229  049B  0142               	movlb	2	; select bank2
 10230  049C  082E               	movf	(_BQ_adc_time+2)^(0+256),w
 10231  049D  0140               	movlb	0	; select bank0
 10232  049E  00A3               	movwf	timer_diff@t+2
 10233  049F  0142               	movlb	2	; select bank2
 10234  04A0  082D               	movf	(_BQ_adc_time+1)^(0+256),w
 10235  04A1  0140               	movlb	0	; select bank0
 10236  04A2  00A2               	movwf	timer_diff@t+1
 10237  04A3  0142               	movlb	2	; select bank2
 10238  04A4  082C               	movf	_BQ_adc_time^(0+256),w
 10239  04A5  0140               	movlb	0	; select bank0
 10240  04A6  00A1               	movwf	timer_diff@t
 10241  04A7  318B  23E7  3184   	fcall	_timer_diff
 10242  04AA  0140               	movlb	0	; select bank0
 10243  04AB  0824               	movf	?_timer_diff+3,w
 10244  04AC  1D03               	btfss	3,2
 10245  04AD  2CBA               	goto	u3060
 10246  04AE  0823               	movf	?_timer_diff+2,w
 10247  04AF  1D03               	btfss	3,2
 10248  04B0  2CBA               	goto	u3060
 10249  04B1  0822               	movf	?_timer_diff+1,w
 10250  04B2  1D03               	btfss	3,2
 10251  04B3  2CBA               	goto	u3060
 10252  04B4  3014               	movlw	20
 10253  04B5  0221               	subwf	?_timer_diff,w
 10254  04B6  1C03               	btfss	3,0
 10255  04B7  2CB9               	goto	u3061
 10256  04B8  2CBA               	goto	u3060
 10257  04B9                     u3061:	
 10258  04B9  2CBC               	goto	l349
 10259  04BA                     u3060:	
 10260  04BA                     l3557:	
 10261                           
 10262                           ;BQ25895M.c: 76: BQ_adc_state = 0;
 10263  04BA  01EC               	clrf	_BQ_adc_state
 10264  04BB  2CBC               	goto	l353
 10265  04BC                     l349:	
 10266  04BC                     l353:	
 10267  04BC  0008               	return
 10268  04BD                     __end_of_BQ_UPDATE:	
 10269                           
 10270                           	psect	text38
 10271  0BE7                     __ptext38:	
 10272 ;; *************** function _timer_diff *****************
 10273 ;; Defined at:
 10274 ;;		line 17 in file "time.c"
 10275 ;; Parameters:    Size  Location     Type
 10276 ;;  t               4    0[BANK0 ] unsigned long 
 10277 ;; Auto vars:     Size  Location     Type
 10278 ;;		None
 10279 ;; Return value:  Size  Location     Type
 10280 ;;                  4    0[BANK0 ] unsigned long 
 10281 ;; Registers used:
 10282 ;;		wreg
 10283 ;; Tracked objects:
 10284 ;;		On entry : 0/0
 10285 ;;		On exit  : 0/0
 10286 ;;		Unchanged: 0/0
 10287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10288 ;;      Params:         0       4       0       0       0       0       0       0
 10289 ;;      Locals:         0       0       0       0       0       0       0       0
 10290 ;;      Temps:          0       4       0       0       0       0       0       0
 10291 ;;      Totals:         0       8       0       0       0       0       0       0
 10292 ;;Total ram usage:        8 bytes
 10293 ;; Hardware stack levels used:    1
 10294 ;; Hardware stack levels required when called:    2
 10295 ;; This function calls:
 10296 ;;		Nothing
 10297 ;; This function is called by:
 10298 ;;		_main
 10299 ;;		_BQ_UPDATE
 10300 ;;		_RGB_fade
 10301 ;;		_chrg_led
 10302 ;;		_flash_led
 10303 ;; This function uses a non-reentrant model
 10304 ;;
 10305                           
 10306                           
 10307                           ;psect for function _timer_diff
 10308  0BE7                     _timer_diff:	
 10309  0BE7                     l3045:	
 10310                           ;incstack = 0
 10311                           ; Regs used in _timer_diff: [wreg]
 10312                           
 10313                           
 10314                           ;time.c: 18: return timer_counter - t;
 10315  0BE7  0140               	movlb	0	; select bank0
 10316  0BE8  0821               	movf	timer_diff@t,w
 10317  0BE9  0141               	movlb	1	; select bank1
 10318  0BEA  0263               	subwf	_timer_counter^(0+128),w
 10319  0BEB  0140               	movlb	0	; select bank0
 10320  0BEC  00A5               	movwf	??_timer_diff
 10321  0BED  0822               	movf	timer_diff@t+1,w
 10322  0BEE  0141               	movlb	1	; select bank1
 10323  0BEF  3B64               	subwfb	(_timer_counter+1)^(0+128),w
 10324  0BF0  0140               	movlb	0	; select bank0
 10325  0BF1  00A6               	movwf	??_timer_diff+1
 10326  0BF2  0823               	movf	timer_diff@t+2,w
 10327  0BF3  0141               	movlb	1	; select bank1
 10328  0BF4  3B65               	subwfb	(_timer_counter+2)^(0+128),w
 10329  0BF5  0140               	movlb	0	; select bank0
 10330  0BF6  00A7               	movwf	??_timer_diff+2
 10331  0BF7  0824               	movf	timer_diff@t+3,w
 10332  0BF8  0141               	movlb	1	; select bank1
 10333  0BF9  3B66               	subwfb	(_timer_counter+3)^(0+128),w
 10334  0BFA  0140               	movlb	0	; select bank0
 10335  0BFB  00A8               	movwf	??_timer_diff+3
 10336  0BFC  0828               	movf	??_timer_diff+3,w
 10337  0BFD  00A4               	movwf	?_timer_diff+3
 10338  0BFE  0827               	movf	??_timer_diff+2,w
 10339  0BFF  00A3               	movwf	?_timer_diff+2
 10340  0C00  0826               	movf	??_timer_diff+1,w
 10341  0C01  00A2               	movwf	?_timer_diff+1
 10342  0C02  0825               	movf	??_timer_diff,w
 10343  0C03  00A1               	movwf	?_timer_diff
 10344  0C04                     l831:	
 10345  0C04  0008               	return
 10346  0C05                     __end_of_timer_diff:	
 10347                           
 10348                           	psect	text39
 10349  0B19                     __ptext39:	
 10350 ;; *************** function _get_time *****************
 10351 ;; Defined at:
 10352 ;;		line 13 in file "time.c"
 10353 ;; Parameters:    Size  Location     Type
 10354 ;;		None
 10355 ;; Auto vars:     Size  Location     Type
 10356 ;;		None
 10357 ;; Return value:  Size  Location     Type
 10358 ;;                  4    0[BANK0 ] unsigned long 
 10359 ;; Registers used:
 10360 ;;		wreg
 10361 ;; Tracked objects:
 10362 ;;		On entry : 0/0
 10363 ;;		On exit  : 0/0
 10364 ;;		Unchanged: 0/0
 10365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10366 ;;      Params:         0       4       0       0       0       0       0       0
 10367 ;;      Locals:         0       0       0       0       0       0       0       0
 10368 ;;      Temps:          0       0       0       0       0       0       0       0
 10369 ;;      Totals:         0       4       0       0       0       0       0       0
 10370 ;;Total ram usage:        4 bytes
 10371 ;; Hardware stack levels used:    1
 10372 ;; Hardware stack levels required when called:    2
 10373 ;; This function calls:
 10374 ;;		Nothing
 10375 ;; This function is called by:
 10376 ;;		_main
 10377 ;;		_BQ_UPDATE
 10378 ;;		_RGB_fade
 10379 ;;		_chrg_led
 10380 ;;		_flash_led
 10381 ;; This function uses a non-reentrant model
 10382 ;;
 10383                           
 10384                           
 10385                           ;psect for function _get_time
 10386  0B19                     _get_time:	
 10387  0B19                     l3041:	
 10388                           ;incstack = 0
 10389                           ; Regs used in _get_time: [wreg]
 10390                           
 10391                           
 10392                           ;time.c: 14: return timer_counter;
 10393  0B19  0141               	movlb	1	; select bank1
 10394  0B1A  0866               	movf	(_timer_counter+3)^(0+128),w
 10395  0B1B  0140               	movlb	0	; select bank0
 10396  0B1C  00A4               	movwf	?_get_time+3
 10397  0B1D  0141               	movlb	1	; select bank1
 10398  0B1E  0865               	movf	(_timer_counter+2)^(0+128),w
 10399  0B1F  0140               	movlb	0	; select bank0
 10400  0B20  00A3               	movwf	?_get_time+2
 10401  0B21  0141               	movlb	1	; select bank1
 10402  0B22  0864               	movf	(_timer_counter+1)^(0+128),w
 10403  0B23  0140               	movlb	0	; select bank0
 10404  0B24  00A2               	movwf	?_get_time+1
 10405  0B25  0141               	movlb	1	; select bank1
 10406  0B26  0863               	movf	_timer_counter^(0+128),w
 10407  0B27  0140               	movlb	0	; select bank0
 10408  0B28  00A1               	movwf	?_get_time
 10409  0B29                     l828:	
 10410  0B29  0008               	return
 10411  0B2A                     __end_of_get_time:	
 10412                           
 10413                           	psect	text40
 10414  0C43                     __ptext40:	
 10415 ;; *************** function _BQ_get_chrg_state *****************
 10416 ;; Defined at:
 10417 ;;		line 43 in file "BQ25895M.c"
 10418 ;; Parameters:    Size  Location     Type
 10419 ;;		None
 10420 ;; Auto vars:     Size  Location     Type
 10421 ;;  data            2   11[BANK0 ] unsigned char [2]
 10422 ;;  temp            1   13[BANK0 ] unsigned char 
 10423 ;; Return value:  Size  Location     Type
 10424 ;;                  1    wreg      PTR unsigned char 
 10425 ;; Registers used:
 10426 ;;		wreg, status,2, status,0, pclath, cstack
 10427 ;; Tracked objects:
 10428 ;;		On entry : 0/0
 10429 ;;		On exit  : 0/0
 10430 ;;		Unchanged: 0/0
 10431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10432 ;;      Params:         0       0       0       0       0       0       0       0
 10433 ;;      Locals:         0       3       0       0       0       0       0       0
 10434 ;;      Temps:          0       2       0       0       0       0       0       0
 10435 ;;      Totals:         0       5       0       0       0       0       0       0
 10436 ;;Total ram usage:        5 bytes
 10437 ;; Hardware stack levels used:    1
 10438 ;; Hardware stack levels required when called:    5
 10439 ;; This function calls:
 10440 ;;		_BQ_Read
 10441 ;; This function is called by:
 10442 ;;		_BQ_UPDATE
 10443 ;; This function uses a non-reentrant model
 10444 ;;
 10445                           
 10446                           
 10447                           ;psect for function _BQ_get_chrg_state
 10448  0C43                     _BQ_get_chrg_state:	
 10449  0C43                     l3137:	
 10450                           ;incstack = 0
 10451                           ; Regs used in _BQ_get_chrg_state: [wreg+status,2+status,0+pclath+cstack]
 10452                           
 10453                           
 10454                           ;BQ25895M.c: 45: char data[2];;BQ25895M.c: 46: char temp = BQ_Read(0x0B);
 10455  0C43  300B               	movlw	11
 10456  0C44  318C  24D0  318C   	fcall	_BQ_Read
 10457  0C47  0140               	movlb	0	; select bank0
 10458  0C48  0824               	movf	?_BQ_Read,w
 10459  0C49  00AA               	movwf	??_BQ_get_chrg_state
 10460  0C4A  082A               	movf	??_BQ_get_chrg_state,w
 10461  0C4B  00AE               	movwf	BQ_get_chrg_state@temp
 10462  0C4C                     l3139:	
 10463                           
 10464                           ;BQ25895M.c: 48: data[0] = (temp >> 4) & 0b00000111;
 10465  0C4C  082E               	movf	BQ_get_chrg_state@temp,w
 10466  0C4D  00AA               	movwf	??_BQ_get_chrg_state
 10467  0C4E  3004               	movlw	4
 10468  0C4F                     u2585:	
 10469  0C4F  36AA               	lsrf	??_BQ_get_chrg_state,f
 10470  0C50  0B89               	decfsz	9,f
 10471  0C51  2C4F               	goto	u2585
 10472  0C52  082A               	movf	??_BQ_get_chrg_state,w
 10473  0C53  3907               	andlw	7
 10474  0C54  00AB               	movwf	??_BQ_get_chrg_state+1
 10475  0C55  082B               	movf	??_BQ_get_chrg_state+1,w
 10476  0C56  00AC               	movwf	BQ_get_chrg_state@data
 10477  0C57                     l3141:	
 10478                           
 10479                           ;BQ25895M.c: 49: data[1] = (temp >> 2) & 0b00000011;
 10480  0C57  082E               	movf	BQ_get_chrg_state@temp,w
 10481  0C58  00AA               	movwf	??_BQ_get_chrg_state
 10482  0C59  3002               	movlw	2
 10483  0C5A                     u2595:	
 10484  0C5A  36AA               	lsrf	??_BQ_get_chrg_state,f
 10485  0C5B  0B89               	decfsz	9,f
 10486  0C5C  2C5A               	goto	u2595
 10487  0C5D  082A               	movf	??_BQ_get_chrg_state,w
 10488  0C5E  3903               	andlw	3
 10489  0C5F  00AB               	movwf	??_BQ_get_chrg_state+1
 10490  0C60  082B               	movf	??_BQ_get_chrg_state+1,w
 10491  0C61  00AD               	movwf	BQ_get_chrg_state@data+1
 10492  0C62                     l3143:	
 10493                           
 10494                           ;BQ25895M.c: 51: return data;
 10495  0C62  302C               	movlw	(low (BQ_get_chrg_state@data| 0))& (0+255)
 10496  0C63                     l334:	
 10497  0C63  0008               	return
 10498  0C64                     __end_of_BQ_get_chrg_state:	
 10499                           
 10500                           	psect	text41
 10501  0CD0                     __ptext41:	
 10502 ;; *************** function _BQ_Read *****************
 10503 ;; Defined at:
 10504 ;;		line 24 in file "BQ25895M.c"
 10505 ;; Parameters:    Size  Location     Type
 10506 ;;  reg             1    wreg     unsigned char 
 10507 ;; Auto vars:     Size  Location     Type
 10508 ;;  reg             1    7[BANK0 ] unsigned char 
 10509 ;;  data            1    8[BANK0 ] unsigned char 
 10510 ;; Return value:  Size  Location     Type
 10511 ;;                  2    3[BANK0 ] unsigned short 
 10512 ;; Registers used:
 10513 ;;		wreg, status,2, status,0, pclath, cstack
 10514 ;; Tracked objects:
 10515 ;;		On entry : 0/0
 10516 ;;		On exit  : 0/0
 10517 ;;		Unchanged: 0/0
 10518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10519 ;;      Params:         0       2       0       0       0       0       0       0
 10520 ;;      Locals:         0       2       0       0       0       0       0       0
 10521 ;;      Temps:          0       2       0       0       0       0       0       0
 10522 ;;      Totals:         0       6       0       0       0       0       0       0
 10523 ;;Total ram usage:        6 bytes
 10524 ;; Hardware stack levels used:    1
 10525 ;; Hardware stack levels required when called:    4
 10526 ;; This function calls:
 10527 ;;		_I2C_Master_Read
 10528 ;;		_I2C_Master_Start
 10529 ;;		_I2C_Master_Stop
 10530 ;;		_I2C_Master_Write
 10531 ;; This function is called by:
 10532 ;;		_BQ_get_chrg_state
 10533 ;;		_BQ_UPDATE
 10534 ;;		_BQ_read_adc
 10535 ;; This function uses a non-reentrant model
 10536 ;;
 10537                           
 10538                           
 10539                           ;psect for function _BQ_Read
 10540  0CD0                     _BQ_Read:	
 10541                           
 10542                           ;incstack = 0
 10543                           ; Regs used in _BQ_Read: [wreg+status,2+status,0+pclath+cstack]
 10544                           ;BQ_Read@reg stored from wreg
 10545  0CD0  0140               	movlb	0	; select bank0
 10546  0CD1  00A8               	movwf	BQ_Read@reg
 10547  0CD2                     l3049:	
 10548                           
 10549                           ;BQ25895M.c: 25: unsigned char data;;BQ25895M.c: 27: I2C_Master_Start();
 10550  0CD2  318A  229A  318C   	fcall	_I2C_Master_Start
 10551                           
 10552                           ;BQ25895M.c: 28: I2C_Master_Write(0x6A << 1);
 10553  0CD5  30D4               	movlw	212
 10554  0CD6  318A  22DD  318C   	fcall	_I2C_Master_Write
 10555                           
 10556                           ;BQ25895M.c: 29: I2C_Master_Write(reg);
 10557  0CD9  0140               	movlb	0	; select bank0
 10558  0CDA  0828               	movf	BQ_Read@reg,w
 10559  0CDB  318A  22DD  318C   	fcall	_I2C_Master_Write
 10560                           
 10561                           ;BQ25895M.c: 30: I2C_Master_Start();
 10562  0CDE  318A  229A  318C   	fcall	_I2C_Master_Start
 10563                           
 10564                           ;BQ25895M.c: 31: I2C_Master_Write(0b11010101);
 10565  0CE1  30D5               	movlw	213
 10566  0CE2  318A  22DD  318C   	fcall	_I2C_Master_Write
 10567                           
 10568                           ;BQ25895M.c: 32: data=I2C_Master_Read(1);
 10569  0CE5  3001               	movlw	1
 10570  0CE6  318C  2464  318C   	fcall	_I2C_Master_Read
 10571  0CE9  0140               	movlb	0	; select bank0
 10572  0CEA  00A6               	movwf	??_BQ_Read
 10573  0CEB  0826               	movf	??_BQ_Read,w
 10574  0CEC  00A9               	movwf	BQ_Read@data
 10575                           
 10576                           ;BQ25895M.c: 33: I2C_Master_Stop();
 10577  0CED  318A  22A0  318C   	fcall	_I2C_Master_Stop
 10578  0CF0                     l3051:	
 10579                           
 10580                           ;BQ25895M.c: 34: return data;
 10581  0CF0  0140               	movlb	0	; select bank0
 10582  0CF1  0829               	movf	BQ_Read@data,w
 10583  0CF2  00A6               	movwf	??_BQ_Read
 10584  0CF3  01A7               	clrf	??_BQ_Read+1
 10585  0CF4  0826               	movf	??_BQ_Read,w
 10586  0CF5  00A4               	movwf	?_BQ_Read
 10587  0CF6  0827               	movf	??_BQ_Read+1,w
 10588  0CF7  00A5               	movwf	?_BQ_Read+1
 10589  0CF8                     l328:	
 10590  0CF8  0008               	return
 10591  0CF9                     __end_of_BQ_Read:	
 10592                           
 10593                           	psect	text42
 10594  0C64                     __ptext42:	
 10595 ;; *************** function _I2C_Master_Read *****************
 10596 ;; Defined at:
 10597 ;;		line 94 in file "I2C.c"
 10598 ;; Parameters:    Size  Location     Type
 10599 ;;  ack             1    wreg     unsigned char 
 10600 ;; Auto vars:     Size  Location     Type
 10601 ;;  ack             1    1[BANK0 ] unsigned char 
 10602 ;;  data            1    2[BANK0 ] unsigned char 
 10603 ;; Return value:  Size  Location     Type
 10604 ;;                  1    wreg      unsigned char 
 10605 ;; Registers used:
 10606 ;;		wreg, status,2, status,0, pclath, cstack
 10607 ;; Tracked objects:
 10608 ;;		On entry : 0/0
 10609 ;;		On exit  : 0/0
 10610 ;;		Unchanged: 0/0
 10611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10612 ;;      Params:         0       0       0       0       0       0       0       0
 10613 ;;      Locals:         0       2       0       0       0       0       0       0
 10614 ;;      Temps:          0       1       0       0       0       0       0       0
 10615 ;;      Totals:         0       3       0       0       0       0       0       0
 10616 ;;Total ram usage:        3 bytes
 10617 ;; Hardware stack levels used:    1
 10618 ;; Hardware stack levels required when called:    3
 10619 ;; This function calls:
 10620 ;;		_I2C_Master_Ack
 10621 ;;		_I2C_Master_Wait
 10622 ;;		_I2C_Master_nAck
 10623 ;; This function is called by:
 10624 ;;		_BQ_Read
 10625 ;; This function uses a non-reentrant model
 10626 ;;
 10627                           
 10628                           
 10629                           ;psect for function _I2C_Master_Read
 10630  0C64                     _I2C_Master_Read:	
 10631                           
 10632                           ;incstack = 0
 10633                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 10634                           ;I2C_Master_Read@ack stored from wreg
 10635  0C64  0140               	movlb	0	; select bank0
 10636  0C65  00A2               	movwf	I2C_Master_Read@ack
 10637  0C66                     l2903:	
 10638                           
 10639                           ;I2C.c: 96: I2C_Master_Wait();
 10640  0C66  318A  22E7  318C   	fcall	_I2C_Master_Wait
 10641  0C69                     l2905:	
 10642                           
 10643                           ;I2C.c: 97: SSP1CON2bits.RCEN = 1;
 10644  0C69  0143               	movlb	3	; select bank3
 10645  0C6A  1591               	bsf	17,3	;volatile
 10646                           
 10647                           ;I2C.c: 98: I2C_Master_Wait();
 10648  0C6B  318A  22E7  318C   	fcall	_I2C_Master_Wait
 10649  0C6E                     l2907:	
 10650                           
 10651                           ;I2C.c: 100: unsigned char data = SSP1BUF;
 10652  0C6E  0143               	movlb	3	; select bank3
 10653  0C6F  080C               	movf	12,w	;volatile
 10654  0C70  0140               	movlb	0	; select bank0
 10655  0C71  00A1               	movwf	??_I2C_Master_Read
 10656  0C72  0821               	movf	??_I2C_Master_Read,w
 10657  0C73  00A3               	movwf	I2C_Master_Read@data
 10658  0C74                     l2909:	
 10659                           
 10660                           ;I2C.c: 101: I2C_Master_Wait();
 10661  0C74  318A  22E7  318C   	fcall	_I2C_Master_Wait
 10662  0C77                     l2911:	
 10663                           
 10664                           ;I2C.c: 103: if (ack)
 10665  0C77  0140               	movlb	0	; select bank0
 10666  0C78  0822               	movf	I2C_Master_Read@ack,w
 10667  0C79  1903               	btfsc	3,2
 10668  0C7A  2C7C               	goto	u2111
 10669  0C7B  2C7D               	goto	u2110
 10670  0C7C                     u2111:	
 10671  0C7C  2C81               	goto	l2915
 10672  0C7D                     u2110:	
 10673  0C7D                     l2913:	
 10674                           
 10675                           ;I2C.c: 104: I2C_Master_nAck();
 10676  0C7D  318A  2292  318C   	fcall	_I2C_Master_nAck
 10677  0C80  2C84               	goto	l2917
 10678  0C81                     l2915:	
 10679                           
 10680                           ;I2C.c: 105: else;I2C.c: 106: I2C_Master_Ack();
 10681  0C81  318A  228E  318C   	fcall	_I2C_Master_Ack
 10682  0C84                     l2917:	
 10683                           
 10684                           ;I2C.c: 108: return data;
 10685  0C84  0140               	movlb	0	; select bank0
 10686  0C85  0823               	movf	I2C_Master_Read@data,w
 10687  0C86                     l308:	
 10688  0C86  0008               	return
 10689  0C87                     __end_of_I2C_Master_Read:	
 10690                           
 10691                           	psect	text43
 10692  0A92                     __ptext43:	
 10693 ;; *************** function _I2C_Master_nAck *****************
 10694 ;; Defined at:
 10695 ;;		line 88 in file "I2C.c"
 10696 ;; Parameters:    Size  Location     Type
 10697 ;;		None
 10698 ;; Auto vars:     Size  Location     Type
 10699 ;;		None
 10700 ;; Return value:  Size  Location     Type
 10701 ;;                  1    wreg      void 
 10702 ;; Registers used:
 10703 ;;		None
 10704 ;; Tracked objects:
 10705 ;;		On entry : 0/0
 10706 ;;		On exit  : 0/0
 10707 ;;		Unchanged: 0/0
 10708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10709 ;;      Params:         0       0       0       0       0       0       0       0
 10710 ;;      Locals:         0       0       0       0       0       0       0       0
 10711 ;;      Temps:          0       0       0       0       0       0       0       0
 10712 ;;      Totals:         0       0       0       0       0       0       0       0
 10713 ;;Total ram usage:        0 bytes
 10714 ;; Hardware stack levels used:    1
 10715 ;; Hardware stack levels required when called:    2
 10716 ;; This function calls:
 10717 ;;		Nothing
 10718 ;; This function is called by:
 10719 ;;		_I2C_Master_Read
 10720 ;; This function uses a non-reentrant model
 10721 ;;
 10722                           
 10723                           
 10724                           ;psect for function _I2C_Master_nAck
 10725  0A92                     _I2C_Master_nAck:	
 10726  0A92                     l2881:	
 10727                           ;incstack = 0
 10728                           ; Regs used in _I2C_Master_nAck: []
 10729                           
 10730                           
 10731                           ;I2C.c: 90: SSP1CON2bits.ACKDT = 1;
 10732  0A92  0143               	movlb	3	; select bank3
 10733  0A93  1691               	bsf	17,5	;volatile
 10734                           
 10735                           ;I2C.c: 91: SSP1CON2bits.ACKEN = 1;
 10736  0A94  1611               	bsf	17,4	;volatile
 10737  0A95                     l303:	
 10738  0A95  0008               	return
 10739  0A96                     __end_of_I2C_Master_nAck:	
 10740                           
 10741                           	psect	text44
 10742  0A8E                     __ptext44:	
 10743 ;; *************** function _I2C_Master_Ack *****************
 10744 ;; Defined at:
 10745 ;;		line 82 in file "I2C.c"
 10746 ;; Parameters:    Size  Location     Type
 10747 ;;		None
 10748 ;; Auto vars:     Size  Location     Type
 10749 ;;		None
 10750 ;; Return value:  Size  Location     Type
 10751 ;;                  1    wreg      void 
 10752 ;; Registers used:
 10753 ;;		None
 10754 ;; Tracked objects:
 10755 ;;		On entry : 0/0
 10756 ;;		On exit  : 0/0
 10757 ;;		Unchanged: 0/0
 10758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10759 ;;      Params:         0       0       0       0       0       0       0       0
 10760 ;;      Locals:         0       0       0       0       0       0       0       0
 10761 ;;      Temps:          0       0       0       0       0       0       0       0
 10762 ;;      Totals:         0       0       0       0       0       0       0       0
 10763 ;;Total ram usage:        0 bytes
 10764 ;; Hardware stack levels used:    1
 10765 ;; Hardware stack levels required when called:    2
 10766 ;; This function calls:
 10767 ;;		Nothing
 10768 ;; This function is called by:
 10769 ;;		_I2C_Master_Read
 10770 ;; This function uses a non-reentrant model
 10771 ;;
 10772                           
 10773                           
 10774                           ;psect for function _I2C_Master_Ack
 10775  0A8E                     _I2C_Master_Ack:	
 10776  0A8E                     l2879:	
 10777                           ;incstack = 0
 10778                           ; Regs used in _I2C_Master_Ack: []
 10779                           
 10780                           
 10781                           ;I2C.c: 84: SSP1CON2bits.ACKDT = 0;
 10782  0A8E  0143               	movlb	3	; select bank3
 10783  0A8F  1291               	bcf	17,5	;volatile
 10784                           
 10785                           ;I2C.c: 85: SSP1CON2bits.ACKEN = 1;
 10786  0A90  1611               	bsf	17,4	;volatile
 10787  0A91                     l300:	
 10788  0A91  0008               	return
 10789  0A92                     __end_of_I2C_Master_Ack:	
 10790                           
 10791                           	psect	text45
 10792  0EF6                     __ptext45:	
 10793 ;; *************** function _BQ_INIT *****************
 10794 ;; Defined at:
 10795 ;;		line 156 in file "BQ25895M.c"
 10796 ;; Parameters:    Size  Location     Type
 10797 ;;		None
 10798 ;; Auto vars:     Size  Location     Type
 10799 ;;		None
 10800 ;; Return value:  Size  Location     Type
 10801 ;;                  1    wreg      void 
 10802 ;; Registers used:
 10803 ;;		wreg, status,2, status,0, pclath, cstack
 10804 ;; Tracked objects:
 10805 ;;		On entry : 0/0
 10806 ;;		On exit  : 0/0
 10807 ;;		Unchanged: 0/0
 10808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10809 ;;      Params:         0       0       0       0       0       0       0       0
 10810 ;;      Locals:         0       0       0       0       0       0       0       0
 10811 ;;      Temps:          0       1       0       0       0       0       0       0
 10812 ;;      Totals:         0       1       0       0       0       0       0       0
 10813 ;;Total ram usage:        1 bytes
 10814 ;; Hardware stack levels used:    1
 10815 ;; Hardware stack levels required when called:    5
 10816 ;; This function calls:
 10817 ;;		_BQ_Write
 10818 ;; This function is called by:
 10819 ;;		_main
 10820 ;; This function uses a non-reentrant model
 10821 ;;
 10822                           
 10823                           
 10824                           ;psect for function _BQ_INIT
 10825  0EF6                     _BQ_INIT:	
 10826  0EF6                     l3469:	
 10827                           ;incstack = 0
 10828                           ; Regs used in _BQ_INIT: [wreg+status,2+status,0+pclath+cstack]
 10829                           
 10830                           
 10831                           ;BQ25895M.c: 157: BQ_Write(0x00, REG00_config);
 10832  0EF6  0140               	movlb	0	; select bank0
 10833  0EF7  0868               	movf	_REG00_config,w
 10834  0EF8  00A4               	movwf	??_BQ_INIT
 10835  0EF9  0824               	movf	??_BQ_INIT,w
 10836  0EFA  00A2               	movwf	BQ_Write@data
 10837  0EFB  3000               	movlw	0
 10838  0EFC  318B  2340  318E   	fcall	_BQ_Write
 10839                           
 10840                           ;BQ25895M.c: 158: BQ_Write(0x01, REG01_config);
 10841  0EFF  0140               	movlb	0	; select bank0
 10842  0F00  0867               	movf	_REG01_config,w
 10843  0F01  00A4               	movwf	??_BQ_INIT
 10844  0F02  0824               	movf	??_BQ_INIT,w
 10845  0F03  00A2               	movwf	BQ_Write@data
 10846  0F04  3001               	movlw	1
 10847  0F05  318B  2340  318E   	fcall	_BQ_Write
 10848                           
 10849                           ;BQ25895M.c: 159: BQ_Write(0x02, REG02_config);
 10850  0F08  0140               	movlb	0	; select bank0
 10851  0F09  0866               	movf	_REG02_config,w
 10852  0F0A  00A4               	movwf	??_BQ_INIT
 10853  0F0B  0824               	movf	??_BQ_INIT,w
 10854  0F0C  00A2               	movwf	BQ_Write@data
 10855  0F0D  3002               	movlw	2
 10856  0F0E  318B  2340  318E   	fcall	_BQ_Write
 10857                           
 10858                           ;BQ25895M.c: 160: BQ_Write(0x03, REG03_config);
 10859  0F11  0140               	movlb	0	; select bank0
 10860  0F12  0865               	movf	_REG03_config,w
 10861  0F13  00A4               	movwf	??_BQ_INIT
 10862  0F14  0824               	movf	??_BQ_INIT,w
 10863  0F15  00A2               	movwf	BQ_Write@data
 10864  0F16  3003               	movlw	3
 10865  0F17  318B  2340  318E   	fcall	_BQ_Write
 10866                           
 10867                           ;BQ25895M.c: 161: BQ_Write(0x04, REG04_config);
 10868  0F1A  087C               	movf	_REG04_config,w
 10869  0F1B  0140               	movlb	0	; select bank0
 10870  0F1C  00A4               	movwf	??_BQ_INIT
 10871  0F1D  0824               	movf	??_BQ_INIT,w
 10872  0F1E  00A2               	movwf	BQ_Write@data
 10873  0F1F  3004               	movlw	4
 10874  0F20  318B  2340  318E   	fcall	_BQ_Write
 10875                           
 10876                           ;BQ25895M.c: 162: BQ_Write(0x05, REG05_config);
 10877  0F23  087B               	movf	_REG05_config,w
 10878  0F24  0140               	movlb	0	; select bank0
 10879  0F25  00A4               	movwf	??_BQ_INIT
 10880  0F26  0824               	movf	??_BQ_INIT,w
 10881  0F27  00A2               	movwf	BQ_Write@data
 10882  0F28  3005               	movlw	5
 10883  0F29  318B  2340  318E   	fcall	_BQ_Write
 10884                           
 10885                           ;BQ25895M.c: 163: BQ_Write(0x06, REG06_config);
 10886  0F2C  087A               	movf	_REG06_config,w
 10887  0F2D  0140               	movlb	0	; select bank0
 10888  0F2E  00A4               	movwf	??_BQ_INIT
 10889  0F2F  0824               	movf	??_BQ_INIT,w
 10890  0F30  00A2               	movwf	BQ_Write@data
 10891  0F31  3006               	movlw	6
 10892  0F32  318B  2340  318E   	fcall	_BQ_Write
 10893                           
 10894                           ;BQ25895M.c: 164: BQ_Write(0x07, REG07_config);
 10895  0F35  0879               	movf	_REG07_config,w
 10896  0F36  0140               	movlb	0	; select bank0
 10897  0F37  00A4               	movwf	??_BQ_INIT
 10898  0F38  0824               	movf	??_BQ_INIT,w
 10899  0F39  00A2               	movwf	BQ_Write@data
 10900  0F3A  3007               	movlw	7
 10901  0F3B  318B  2340  318E   	fcall	_BQ_Write
 10902                           
 10903                           ;BQ25895M.c: 165: BQ_Write(0x08, REG08_config);
 10904  0F3E  0878               	movf	_REG08_config,w
 10905  0F3F  0140               	movlb	0	; select bank0
 10906  0F40  00A4               	movwf	??_BQ_INIT
 10907  0F41  0824               	movf	??_BQ_INIT,w
 10908  0F42  00A2               	movwf	BQ_Write@data
 10909  0F43  3008               	movlw	8
 10910  0F44  318B  2340  318E   	fcall	_BQ_Write
 10911  0F47                     l441:	
 10912  0F47  0008               	return
 10913  0F48                     __end_of_BQ_INIT:	
 10914                           
 10915                           	psect	text46
 10916  0B40                     __ptext46:	
 10917 ;; *************** function _BQ_Write *****************
 10918 ;; Defined at:
 10919 ;;		line 16 in file "BQ25895M.c"
 10920 ;; Parameters:    Size  Location     Type
 10921 ;;  reg             1    wreg     unsigned char 
 10922 ;;  data            1    1[BANK0 ] unsigned char 
 10923 ;; Auto vars:     Size  Location     Type
 10924 ;;  reg             1    2[BANK0 ] unsigned char 
 10925 ;; Return value:  Size  Location     Type
 10926 ;;                  1    wreg      void 
 10927 ;; Registers used:
 10928 ;;		wreg, status,2, status,0, pclath, cstack
 10929 ;; Tracked objects:
 10930 ;;		On entry : 0/0
 10931 ;;		On exit  : 0/0
 10932 ;;		Unchanged: 0/0
 10933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10934 ;;      Params:         0       1       0       0       0       0       0       0
 10935 ;;      Locals:         0       1       0       0       0       0       0       0
 10936 ;;      Temps:          0       0       0       0       0       0       0       0
 10937 ;;      Totals:         0       2       0       0       0       0       0       0
 10938 ;;Total ram usage:        2 bytes
 10939 ;; Hardware stack levels used:    1
 10940 ;; Hardware stack levels required when called:    4
 10941 ;; This function calls:
 10942 ;;		_I2C_Master_Start
 10943 ;;		_I2C_Master_Stop
 10944 ;;		_I2C_Master_Write
 10945 ;; This function is called by:
 10946 ;;		_thermal_protection
 10947 ;;		_main
 10948 ;;		_BQ_UPDATE
 10949 ;;		_BQ_INIT
 10950 ;;		_BQ_read_adc
 10951 ;; This function uses a non-reentrant model
 10952 ;;
 10953                           
 10954                           
 10955                           ;psect for function _BQ_Write
 10956  0B40                     _BQ_Write:	
 10957                           
 10958                           ;incstack = 0
 10959                           ; Regs used in _BQ_Write: [wreg+status,2+status,0+pclath+cstack]
 10960                           ;BQ_Write@reg stored from wreg
 10961  0B40  0140               	movlb	0	; select bank0
 10962  0B41  00A3               	movwf	BQ_Write@reg
 10963  0B42                     l3129:	
 10964                           
 10965                           ;BQ25895M.c: 17: I2C_Master_Start();
 10966  0B42  318A  229A  318B   	fcall	_I2C_Master_Start
 10967                           
 10968                           ;BQ25895M.c: 18: I2C_Master_Write(0x6A << 1);
 10969  0B45  30D4               	movlw	212
 10970  0B46  318A  22DD  318B   	fcall	_I2C_Master_Write
 10971                           
 10972                           ;BQ25895M.c: 19: I2C_Master_Write(reg);
 10973  0B49  0140               	movlb	0	; select bank0
 10974  0B4A  0823               	movf	BQ_Write@reg,w
 10975  0B4B  318A  22DD  318B   	fcall	_I2C_Master_Write
 10976                           
 10977                           ;BQ25895M.c: 20: I2C_Master_Write(data);
 10978  0B4E  0140               	movlb	0	; select bank0
 10979  0B4F  0822               	movf	BQ_Write@data,w
 10980  0B50  318A  22DD  318B   	fcall	_I2C_Master_Write
 10981                           
 10982                           ;BQ25895M.c: 21: I2C_Master_Stop();
 10983  0B53  318A  22A0  318B   	fcall	_I2C_Master_Stop
 10984  0B56                     l325:	
 10985  0B56  0008               	return
 10986  0B57                     __end_of_BQ_Write:	
 10987                           
 10988                           	psect	text47
 10989  0ADD                     __ptext47:	
 10990 ;; *************** function _I2C_Master_Write *****************
 10991 ;; Defined at:
 10992 ;;		line 76 in file "I2C.c"
 10993 ;; Parameters:    Size  Location     Type
 10994 ;;  data            1    wreg     unsigned char 
 10995 ;; Auto vars:     Size  Location     Type
 10996 ;;  data            1    0[BANK0 ] unsigned char 
 10997 ;; Return value:  Size  Location     Type
 10998 ;;                  1    wreg      void 
 10999 ;; Registers used:
 11000 ;;		wreg, status,2, status,0, pclath, cstack
 11001 ;; Tracked objects:
 11002 ;;		On entry : 0/0
 11003 ;;		On exit  : 0/0
 11004 ;;		Unchanged: 0/0
 11005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11006 ;;      Params:         0       0       0       0       0       0       0       0
 11007 ;;      Locals:         0       1       0       0       0       0       0       0
 11008 ;;      Temps:          0       0       0       0       0       0       0       0
 11009 ;;      Totals:         0       1       0       0       0       0       0       0
 11010 ;;Total ram usage:        1 bytes
 11011 ;; Hardware stack levels used:    1
 11012 ;; Hardware stack levels required when called:    3
 11013 ;; This function calls:
 11014 ;;		_I2C_Master_Wait
 11015 ;; This function is called by:
 11016 ;;		_BQ_Write
 11017 ;;		_BQ_Read
 11018 ;; This function uses a non-reentrant model
 11019 ;;
 11020                           
 11021                           
 11022                           ;psect for function _I2C_Master_Write
 11023  0ADD                     _I2C_Master_Write:	
 11024                           
 11025                           ;incstack = 0
 11026                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 11027                           ;I2C_Master_Write@data stored from wreg
 11028  0ADD  0140               	movlb	0	; select bank0
 11029  0ADE  00A1               	movwf	I2C_Master_Write@data
 11030  0ADF                     l2899:	
 11031                           
 11032                           ;I2C.c: 78: I2C_Master_Wait();
 11033  0ADF  318A  22E7  318A   	fcall	_I2C_Master_Wait
 11034  0AE2                     l2901:	
 11035                           
 11036                           ;I2C.c: 79: SSP1BUF = data;
 11037  0AE2  0140               	movlb	0	; select bank0
 11038  0AE3  0821               	movf	I2C_Master_Write@data,w
 11039  0AE4  0143               	movlb	3	; select bank3
 11040  0AE5  008C               	movwf	12	;volatile
 11041  0AE6                     l297:	
 11042  0AE6  0008               	return
 11043  0AE7                     __end_of_I2C_Master_Write:	
 11044                           
 11045                           	psect	text48
 11046  0AA0                     __ptext48:	
 11047 ;; *************** function _I2C_Master_Stop *****************
 11048 ;; Defined at:
 11049 ;;		line 70 in file "I2C.c"
 11050 ;; Parameters:    Size  Location     Type
 11051 ;;		None
 11052 ;; Auto vars:     Size  Location     Type
 11053 ;;		None
 11054 ;; Return value:  Size  Location     Type
 11055 ;;                  1    wreg      void 
 11056 ;; Registers used:
 11057 ;;		wreg, status,2, status,0, pclath, cstack
 11058 ;; Tracked objects:
 11059 ;;		On entry : 0/0
 11060 ;;		On exit  : 0/0
 11061 ;;		Unchanged: 0/0
 11062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11063 ;;      Params:         0       0       0       0       0       0       0       0
 11064 ;;      Locals:         0       0       0       0       0       0       0       0
 11065 ;;      Temps:          0       0       0       0       0       0       0       0
 11066 ;;      Totals:         0       0       0       0       0       0       0       0
 11067 ;;Total ram usage:        0 bytes
 11068 ;; Hardware stack levels used:    1
 11069 ;; Hardware stack levels required when called:    3
 11070 ;; This function calls:
 11071 ;;		_I2C_Master_Wait
 11072 ;; This function is called by:
 11073 ;;		_BQ_Write
 11074 ;;		_BQ_Read
 11075 ;; This function uses a non-reentrant model
 11076 ;;
 11077                           
 11078                           
 11079                           ;psect for function _I2C_Master_Stop
 11080  0AA0                     _I2C_Master_Stop:	
 11081  0AA0                     l2895:	
 11082                           ;incstack = 0
 11083                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 11084                           
 11085                           
 11086                           ;I2C.c: 72: I2C_Master_Wait();
 11087  0AA0  318A  22E7  318A   	fcall	_I2C_Master_Wait
 11088  0AA3                     l2897:	
 11089                           
 11090                           ;I2C.c: 73: SSP1CON2bits.PEN = 1;
 11091  0AA3  0143               	movlb	3	; select bank3
 11092  0AA4  1511               	bsf	17,2	;volatile
 11093  0AA5                     l294:	
 11094  0AA5  0008               	return
 11095  0AA6                     __end_of_I2C_Master_Stop:	
 11096                           
 11097                           	psect	text49
 11098  0A9A                     __ptext49:	
 11099 ;; *************** function _I2C_Master_Start *****************
 11100 ;; Defined at:
 11101 ;;		line 58 in file "I2C.c"
 11102 ;; Parameters:    Size  Location     Type
 11103 ;;		None
 11104 ;; Auto vars:     Size  Location     Type
 11105 ;;		None
 11106 ;; Return value:  Size  Location     Type
 11107 ;;                  1    wreg      void 
 11108 ;; Registers used:
 11109 ;;		wreg, status,2, status,0, pclath, cstack
 11110 ;; Tracked objects:
 11111 ;;		On entry : 0/0
 11112 ;;		On exit  : 0/0
 11113 ;;		Unchanged: 0/0
 11114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11115 ;;      Params:         0       0       0       0       0       0       0       0
 11116 ;;      Locals:         0       0       0       0       0       0       0       0
 11117 ;;      Temps:          0       0       0       0       0       0       0       0
 11118 ;;      Totals:         0       0       0       0       0       0       0       0
 11119 ;;Total ram usage:        0 bytes
 11120 ;; Hardware stack levels used:    1
 11121 ;; Hardware stack levels required when called:    3
 11122 ;; This function calls:
 11123 ;;		_I2C_Master_Wait
 11124 ;; This function is called by:
 11125 ;;		_BQ_Write
 11126 ;;		_BQ_Read
 11127 ;; This function uses a non-reentrant model
 11128 ;;
 11129                           
 11130                           
 11131                           ;psect for function _I2C_Master_Start
 11132  0A9A                     _I2C_Master_Start:	
 11133  0A9A                     l2891:	
 11134                           ;incstack = 0
 11135                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 11136                           
 11137                           
 11138                           ;I2C.c: 60: I2C_Master_Wait();
 11139  0A9A  318A  22E7  318A   	fcall	_I2C_Master_Wait
 11140  0A9D                     l2893:	
 11141                           
 11142                           ;I2C.c: 61: SSP1CON2bits.SEN = 1;
 11143  0A9D  0143               	movlb	3	; select bank3
 11144  0A9E  1411               	bsf	17,0	;volatile
 11145  0A9F                     l288:	
 11146  0A9F  0008               	return
 11147  0AA0                     __end_of_I2C_Master_Start:	
 11148                           
 11149                           	psect	text50
 11150  0AE7                     __ptext50:	
 11151 ;; *************** function _I2C_Master_Wait *****************
 11152 ;; Defined at:
 11153 ;;		line 53 in file "I2C.c"
 11154 ;; Parameters:    Size  Location     Type
 11155 ;;		None
 11156 ;; Auto vars:     Size  Location     Type
 11157 ;;		None
 11158 ;; Return value:  Size  Location     Type
 11159 ;;                  1    wreg      void 
 11160 ;; Registers used:
 11161 ;;		wreg, status,2
 11162 ;; Tracked objects:
 11163 ;;		On entry : 0/0
 11164 ;;		On exit  : 0/0
 11165 ;;		Unchanged: 0/0
 11166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11167 ;;      Params:         0       0       0       0       0       0       0       0
 11168 ;;      Locals:         0       0       0       0       0       0       0       0
 11169 ;;      Temps:          0       0       0       0       0       0       0       0
 11170 ;;      Totals:         0       0       0       0       0       0       0       0
 11171 ;;Total ram usage:        0 bytes
 11172 ;; Hardware stack levels used:    1
 11173 ;; Hardware stack levels required when called:    2
 11174 ;; This function calls:
 11175 ;;		Nothing
 11176 ;; This function is called by:
 11177 ;;		_I2C_Master_Start
 11178 ;;		_I2C_Master_Stop
 11179 ;;		_I2C_Master_Write
 11180 ;;		_I2C_Master_Read
 11181 ;;		_I2C_Master_Repeated_Start
 11182 ;; This function uses a non-reentrant model
 11183 ;;
 11184                           
 11185                           
 11186                           ;psect for function _I2C_Master_Wait
 11187  0AE7                     _I2C_Master_Wait:	
 11188  0AE7                     l2875:	
 11189                           ;incstack = 0
 11190                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 11191                           
 11192  0AE7                     l282:	
 11193                           ;I2C.c: 55: while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
 11194                           
 11195  0AE7  0143               	movlb	3	; select bank3
 11196  0AE8  190F               	btfsc	15,2	;volatile
 11197  0AE9  2AEB               	goto	u2091
 11198  0AEA  2AEC               	goto	u2090
 11199  0AEB                     u2091:	
 11200  0AEB  2AE7               	goto	l282
 11201  0AEC                     u2090:	
 11202  0AEC                     l2877:	
 11203  0AEC  0811               	movf	17,w	;volatile
 11204  0AED  391F               	andlw	31
 11205  0AEE  1D03               	btfss	3,2
 11206  0AEF  2AF1               	goto	u2101
 11207  0AF0  2AF2               	goto	u2100
 11208  0AF1                     u2101:	
 11209  0AF1  2AE7               	goto	l282
 11210  0AF2                     u2100:	
 11211  0AF2                     l285:	
 11212  0AF2  0008               	return
 11213  0AF3                     __end_of_I2C_Master_Wait:	
 11214                           
 11215                           	psect	text51
 11216  0C87                     __ptext51:	
 11217 ;; *************** function _BQ_CONFIG_INIT *****************
 11218 ;; Defined at:
 11219 ;;		line 144 in file "BQ25895M.c"
 11220 ;; Parameters:    Size  Location     Type
 11221 ;;		None
 11222 ;; Auto vars:     Size  Location     Type
 11223 ;;		None
 11224 ;; Return value:  Size  Location     Type
 11225 ;;                  1    wreg      void 
 11226 ;; Registers used:
 11227 ;;		wreg
 11228 ;; Tracked objects:
 11229 ;;		On entry : 0/0
 11230 ;;		On exit  : 0/0
 11231 ;;		Unchanged: 0/0
 11232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11233 ;;      Params:         0       0       0       0       0       0       0       0
 11234 ;;      Locals:         0       0       0       0       0       0       0       0
 11235 ;;      Temps:          0       1       0       0       0       0       0       0
 11236 ;;      Totals:         0       1       0       0       0       0       0       0
 11237 ;;Total ram usage:        1 bytes
 11238 ;; Hardware stack levels used:    1
 11239 ;; Hardware stack levels required when called:    2
 11240 ;; This function calls:
 11241 ;;		Nothing
 11242 ;; This function is called by:
 11243 ;;		_main
 11244 ;; This function uses a non-reentrant model
 11245 ;;
 11246                           
 11247                           
 11248                           ;psect for function _BQ_CONFIG_INIT
 11249  0C87                     _BQ_CONFIG_INIT:	
 11250  0C87                     l3465:	
 11251                           ;incstack = 0
 11252                           ; Regs used in _BQ_CONFIG_INIT: [wreg]
 11253                           
 11254                           
 11255                           ;BQ25895M.c: 145: REG00_config = (EN_HIZ<<7)|(EN_ILIM<<6)|(INILIM);
 11256  0C87  307A               	movlw	122
 11257  0C88  0140               	movlb	0	; select bank0
 11258  0C89  00A1               	movwf	??_BQ_CONFIG_INIT
 11259  0C8A  0821               	movf	??_BQ_CONFIG_INIT,w
 11260  0C8B  00E8               	movwf	_REG00_config
 11261                           
 11262                           ;BQ25895M.c: 146: REG01_config = (BHOT<<6)|(BCOLD<<5)|(VINDPM_OS);
 11263  0C8C  3006               	movlw	6
 11264  0C8D  00A1               	movwf	??_BQ_CONFIG_INIT
 11265  0C8E  0821               	movf	??_BQ_CONFIG_INIT,w
 11266  0C8F  00E7               	movwf	_REG01_config
 11267                           
 11268                           ;BQ25895M.c: 147: REG02_config = (CONV_START<<7)|(CONV_RATE<<6)|(BOOST_FREQ<<5)|(ICO_EN<
      +                          <4)|(HVDCP_EN<<3)|(MAXC_EN<<2)|(FORCE_DPDM<<1)|(AUTO_DPDM_EN);
 11269  0C90  3035               	movlw	53
 11270  0C91  00A1               	movwf	??_BQ_CONFIG_INIT
 11271  0C92  0821               	movf	??_BQ_CONFIG_INIT,w
 11272  0C93  00E6               	movwf	_REG02_config
 11273                           
 11274                           ;BQ25895M.c: 148: REG03_config = (WD_RST<<6)|(OTG_CONFIG<<5)|(CHG_CONFIG<<4)|(SYS_MIN<<1
      +                          );
 11275  0C94  301A               	movlw	26
 11276  0C95  00A1               	movwf	??_BQ_CONFIG_INIT
 11277  0C96  0821               	movf	??_BQ_CONFIG_INIT,w
 11278  0C97  00E5               	movwf	_REG03_config
 11279                           
 11280                           ;BQ25895M.c: 149: REG04_config = (ICHG);
 11281  0C98  3060               	movlw	96
 11282  0C99  00A1               	movwf	??_BQ_CONFIG_INIT
 11283  0C9A  0821               	movf	??_BQ_CONFIG_INIT,w
 11284  0C9B  00FC               	movwf	_REG04_config
 11285                           
 11286                           ;BQ25895M.c: 150: REG05_config = (IPRECHG<<4)|(ITERM);
 11287  0C9C  3013               	movlw	19
 11288  0C9D  00A1               	movwf	??_BQ_CONFIG_INIT
 11289  0C9E  0821               	movf	??_BQ_CONFIG_INIT,w
 11290  0C9F  00FB               	movwf	_REG05_config
 11291                           
 11292                           ;BQ25895M.c: 151: REG06_config = (VREG<<2)|(BATLOWV<<1)|(VRECHG);
 11293  0CA0  3058               	movlw	88
 11294  0CA1  00A1               	movwf	??_BQ_CONFIG_INIT
 11295  0CA2  0821               	movf	??_BQ_CONFIG_INIT,w
 11296  0CA3  00FA               	movwf	_REG06_config
 11297                           
 11298                           ;BQ25895M.c: 152: REG07_config = (EN_TERM<<7)|(STAT_DIS<<6)|(WATCHDOG<<4)|(EN_TIMER<<3)|
      +                          (CHG_TIMER<<1)|0b1;
 11299  0CA4  30DD               	movlw	221
 11300  0CA5  00A1               	movwf	??_BQ_CONFIG_INIT
 11301  0CA6  0821               	movf	??_BQ_CONFIG_INIT,w
 11302  0CA7  00F9               	movwf	_REG07_config
 11303  0CA8                     l3467:	
 11304                           
 11305                           ;BQ25895M.c: 153: REG08_config = (BAT_COMP<<5)|(VCLAMP<<2)|TREG;
 11306  0CA8  01F8               	clrf	_REG08_config
 11307  0CA9  0AF8               	incf	_REG08_config,f
 11308  0CAA                     l438:	
 11309  0CAA  0008               	return
 11310  0CAB                     __end_of_BQ_CONFIG_INIT:	
 11311                           
 11312                           	psect	intentry
 11313  0004                     __pintentry:	
 11314 ;; *************** function _ISR *****************
 11315 ;; Defined at:
 11316 ;;		line 63 in file "main.c"
 11317 ;; Parameters:    Size  Location     Type
 11318 ;;		None
 11319 ;; Auto vars:     Size  Location     Type
 11320 ;;		None
 11321 ;; Return value:  Size  Location     Type
 11322 ;;                  1    wreg      void 
 11323 ;; Registers used:
 11324 ;;		wreg, status,2, status,0, pclath, cstack
 11325 ;; Tracked objects:
 11326 ;;		On entry : 0/0
 11327 ;;		On exit  : 0/0
 11328 ;;		Unchanged: 0/0
 11329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11330 ;;      Params:         0       0       0       0       0       0       0       0
 11331 ;;      Locals:         0       0       0       0       0       0       0       0
 11332 ;;      Temps:          0       0       0       0       0       0       0       0
 11333 ;;      Totals:         0       0       0       0       0       0       0       0
 11334 ;;Total ram usage:        0 bytes
 11335 ;; Hardware stack levels used:    1
 11336 ;; Hardware stack levels required when called:    1
 11337 ;; This function calls:
 11338 ;;		i1_get_time
 11339 ;;		i1_timer_diff
 11340 ;; This function is called by:
 11341 ;;		Interrupt level 1
 11342 ;; This function uses a non-reentrant model
 11343 ;;
 11344                           
 11345  0004                     _ISR:	
 11346                           
 11347                           ;incstack = 0
 11348  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11349                           
 11350                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
 11351  0005  3180               	pagesel	$
 11352  0006                     i1l3911:	
 11353                           
 11354                           ;main.c: 65: if(TMR1IF) {
 11355  0006  014E               	movlb	14	; select bank14
 11356  0007  1C10               	btfss	16,0	;volatile
 11357  0008  280A               	goto	u363_21
 11358  0009  280B               	goto	u363_20
 11359  000A                     u363_21:	
 11360  000A  281A               	goto	i1l3917
 11361  000B                     u363_20:	
 11362  000B                     i1l3913:	
 11363                           
 11364                           ;main.c: 66: TMR1IF = 0;
 11365  000B  1010               	bcf	16,0	;volatile
 11366                           
 11367                           ;main.c: 67: TMR1 = 65228;
 11368  000C  30FE               	movlw	254
 11369  000D  0144               	movlb	4	; select bank4
 11370  000E  008D               	movwf	13	;volatile
 11371  000F  30CC               	movlw	204
 11372  0010  008C               	movwf	12	;volatile
 11373  0011                     i1l3915:	
 11374                           
 11375                           ;main.c: 68: timer_counter++;
 11376  0011  3001               	movlw	1
 11377  0012  0141               	movlb	1	; select bank1
 11378  0013  07E3               	addwf	_timer_counter^(0+128),f
 11379  0014  3000               	movlw	0
 11380  0015  3DE4               	addwfc	(_timer_counter+1)^(0+128),f
 11381  0016  3000               	movlw	0
 11382  0017  3DE5               	addwfc	(_timer_counter+2)^(0+128),f
 11383  0018  3000               	movlw	0
 11384  0019  3DE6               	addwfc	(_timer_counter+3)^(0+128),f
 11385  001A                     i1l3917:	
 11386                           
 11387                           ;main.c: 69: };main.c: 71: if(IOCAF5) {
 11388  001A  017E               	movlb	62	; select bank62
 11389  001B  1EBF               	btfss	63,5	;volatile
 11390  001C  281E               	goto	u364_21
 11391  001D  281F               	goto	u364_20
 11392  001E                     u364_21:	
 11393  001E  2820               	goto	i1l121
 11394  001F                     u364_20:	
 11395  001F                     i1l3919:	
 11396                           
 11397                           ;main.c: 72: IOCAF5 = 0;
 11398  001F  12BF               	bcf	63,5	;volatile
 11399  0020                     i1l121:	
 11400                           
 11401                           ;main.c: 73: };main.c: 75: if(!RA5) {
 11402  0020  0140               	movlb	0	; select bank0
 11403  0021  1A8C               	btfsc	12,5	;volatile
 11404  0022  2824               	goto	u365_21
 11405  0023  2825               	goto	u365_20
 11406  0024                     u365_21:	
 11407  0024  2839               	goto	i1l3927
 11408  0025                     u365_20:	
 11409  0025                     i1l3921:	
 11410                           
 11411                           ;main.c: 76: if(!btn_is_pressed) {
 11412  0025  087D               	movf	_btn_is_pressed,w
 11413  0026  1D03               	btfss	3,2
 11414  0027  2829               	goto	u366_21
 11415  0028  282A               	goto	u366_20
 11416  0029                     u366_21:	
 11417  0029  2836               	goto	i1l3925
 11418  002A                     u366_20:	
 11419  002A                     i1l3923:	
 11420                           
 11421                           ;main.c: 77: btn_time_start = get_time();
 11422  002A  318A  22D3  3180   	fcall	i1_get_time
 11423  002D  0873               	movf	?i1_get_time+3,w
 11424  002E  0142               	movlb	2	; select bank2
 11425  002F  00BB               	movwf	(_btn_time_start+3)^(0+256)
 11426  0030  0872               	movf	?i1_get_time+2,w
 11427  0031  00BA               	movwf	(_btn_time_start+2)^(0+256)
 11428  0032  0871               	movf	?i1_get_time+1,w
 11429  0033  00B9               	movwf	(_btn_time_start+1)^(0+256)
 11430  0034  0870               	movf	?i1_get_time,w
 11431  0035  00B8               	movwf	_btn_time_start^(0+256)
 11432  0036                     i1l3925:	
 11433                           
 11434                           ;main.c: 78: };main.c: 79: btn_is_pressed = 1;
 11435  0036  01FD               	clrf	_btn_is_pressed
 11436  0037  0AFD               	incf	_btn_is_pressed,f
 11437                           
 11438                           ;main.c: 80: }
 11439  0038  2866               	goto	i1l127
 11440  0039                     i1l3927:	
 11441                           
 11442                           ;main.c: 81: else {;main.c: 82: if(btn_is_pressed) {
 11443  0039  087D               	movf	_btn_is_pressed,w
 11444  003A  1903               	btfsc	3,2
 11445  003B  283D               	goto	u367_21
 11446  003C  283E               	goto	u367_20
 11447  003D                     u367_21:	
 11448  003D  2865               	goto	i1l3935
 11449  003E                     u367_20:	
 11450  003E                     i1l3929:	
 11451                           
 11452                           ;main.c: 83: btn_time = timer_diff(btn_time_start);
 11453  003E  0142               	movlb	2	; select bank2
 11454  003F  083B               	movf	(_btn_time_start+3)^(0+256),w
 11455  0040  00F3               	movwf	i1timer_diff@t+3
 11456  0041  083A               	movf	(_btn_time_start+2)^(0+256),w
 11457  0042  00F2               	movwf	i1timer_diff@t+2
 11458  0043  0839               	movf	(_btn_time_start+1)^(0+256),w
 11459  0044  00F1               	movwf	i1timer_diff@t+1
 11460  0045  0838               	movf	_btn_time_start^(0+256),w
 11461  0046  00F0               	movwf	i1timer_diff@t
 11462  0047  318B  232A  3180   	fcall	i1_timer_diff
 11463  004A  0873               	movf	?i1_timer_diff+3,w
 11464  004B  0142               	movlb	2	; select bank2
 11465  004C  00B7               	movwf	(_btn_time+3)^(0+256)
 11466  004D  0872               	movf	?i1_timer_diff+2,w
 11467  004E  00B6               	movwf	(_btn_time+2)^(0+256)
 11468  004F  0871               	movf	?i1_timer_diff+1,w
 11469  0050  00B5               	movwf	(_btn_time+1)^(0+256)
 11470  0051  0870               	movf	?i1_timer_diff,w
 11471  0052  00B4               	movwf	_btn_time^(0+256)
 11472  0053                     i1l3931:	
 11473                           
 11474                           ;main.c: 84: if(btn_time >= 5) {
 11475  0053  0837               	movf	(_btn_time+3)^(0+256),w
 11476  0054  1D03               	btfss	3,2
 11477  0055  2862               	goto	u368_20
 11478  0056  0836               	movf	(_btn_time+2)^(0+256),w
 11479  0057  1D03               	btfss	3,2
 11480  0058  2862               	goto	u368_20
 11481  0059  0835               	movf	(_btn_time+1)^(0+256),w
 11482  005A  1D03               	btfss	3,2
 11483  005B  2862               	goto	u368_20
 11484  005C  3005               	movlw	5
 11485  005D  0234               	subwf	_btn_time^(0+256),w
 11486  005E  1C03               	btfss	3,0
 11487  005F  2861               	goto	u368_21
 11488  0060  2862               	goto	u368_20
 11489  0061                     u368_21:	
 11490  0061  2865               	goto	i1l3935
 11491  0062                     u368_20:	
 11492  0062                     i1l3933:	
 11493                           
 11494                           ;main.c: 85: btn_is_debounced = 1;
 11495  0062  0140               	movlb	0	; select bank0
 11496  0063  01EA               	clrf	_btn_is_debounced
 11497  0064  0AEA               	incf	_btn_is_debounced,f
 11498  0065                     i1l3935:	
 11499                           
 11500                           ;main.c: 86: };main.c: 87: };main.c: 88: btn_is_pressed = 0;
 11501  0065  01FD               	clrf	_btn_is_pressed
 11502  0066                     i1l127:	
 11503  0066  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11504  0067  0009               	retfie
 11505  0068                     __end_of_ISR:	
 11506                           
 11507                           	psect	text53
 11508  0B2A                     __ptext53:	
 11509 ;; *************** function i1_timer_diff *****************
 11510 ;; Defined at:
 11511 ;;		line 17 in file "time.c"
 11512 ;; Parameters:    Size  Location     Type
 11513 ;;  t               4    0[COMMON] unsigned long 
 11514 ;; Auto vars:     Size  Location     Type
 11515 ;;		None
 11516 ;; Return value:  Size  Location     Type
 11517 ;;                  4    0[COMMON] unsigned long 
 11518 ;; Registers used:
 11519 ;;		wreg
 11520 ;; Tracked objects:
 11521 ;;		On entry : 0/0
 11522 ;;		On exit  : 0/0
 11523 ;;		Unchanged: 0/0
 11524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11525 ;;      Params:         4       0       0       0       0       0       0       0
 11526 ;;      Locals:         0       0       0       0       0       0       0       0
 11527 ;;      Temps:          4       0       0       0       0       0       0       0
 11528 ;;      Totals:         8       0       0       0       0       0       0       0
 11529 ;;Total ram usage:        8 bytes
 11530 ;; Hardware stack levels used:    1
 11531 ;; This function calls:
 11532 ;;		Nothing
 11533 ;; This function is called by:
 11534 ;;		_ISR
 11535 ;; This function uses a non-reentrant model
 11536 ;;
 11537                           
 11538                           
 11539                           ;psect for function i1_timer_diff
 11540  0B2A                     i1_timer_diff:	
 11541  0B2A                     i1l3907:	
 11542                           ;incstack = 0
 11543                           ; Regs used in i1_timer_diff: [wreg]
 11544                           
 11545                           
 11546                           ;time.c: 18: return timer_counter - t;
 11547  0B2A  0870               	movf	i1timer_diff@t,w
 11548  0B2B  0141               	movlb	1	; select bank1
 11549  0B2C  0263               	subwf	_timer_counter^(0+128),w
 11550  0B2D  00F4               	movwf	??i1_timer_diff
 11551  0B2E  0871               	movf	i1timer_diff@t+1,w
 11552  0B2F  3B64               	subwfb	(_timer_counter+1)^(0+128),w
 11553  0B30  00F5               	movwf	??i1_timer_diff+1
 11554  0B31  0872               	movf	i1timer_diff@t+2,w
 11555  0B32  3B65               	subwfb	(_timer_counter+2)^(0+128),w
 11556  0B33  00F6               	movwf	??i1_timer_diff+2
 11557  0B34  0873               	movf	i1timer_diff@t+3,w
 11558  0B35  3B66               	subwfb	(_timer_counter+3)^(0+128),w
 11559  0B36  00F7               	movwf	??i1_timer_diff+3
 11560  0B37  0877               	movf	??i1_timer_diff+3,w
 11561  0B38  00F3               	movwf	?i1_timer_diff+3
 11562  0B39  0876               	movf	??i1_timer_diff+2,w
 11563  0B3A  00F2               	movwf	?i1_timer_diff+2
 11564  0B3B  0875               	movf	??i1_timer_diff+1,w
 11565  0B3C  00F1               	movwf	?i1_timer_diff+1
 11566  0B3D  0874               	movf	??i1_timer_diff,w
 11567  0B3E  00F0               	movwf	?i1_timer_diff
 11568  0B3F                     i1l831:	
 11569  0B3F  0008               	return
 11570  0B40                     __end_ofi1_timer_diff:	
 11571                           
 11572                           	psect	text54
 11573  0AD3                     __ptext54:	
 11574 ;; *************** function i1_get_time *****************
 11575 ;; Defined at:
 11576 ;;		line 13 in file "time.c"
 11577 ;; Parameters:    Size  Location     Type
 11578 ;;		None
 11579 ;; Auto vars:     Size  Location     Type
 11580 ;;		None
 11581 ;; Return value:  Size  Location     Type
 11582 ;;                  4    0[COMMON] unsigned long 
 11583 ;; Registers used:
 11584 ;;		wreg
 11585 ;; Tracked objects:
 11586 ;;		On entry : 0/0
 11587 ;;		On exit  : 0/0
 11588 ;;		Unchanged: 0/0
 11589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11590 ;;      Params:         4       0       0       0       0       0       0       0
 11591 ;;      Locals:         0       0       0       0       0       0       0       0
 11592 ;;      Temps:          0       0       0       0       0       0       0       0
 11593 ;;      Totals:         4       0       0       0       0       0       0       0
 11594 ;;Total ram usage:        4 bytes
 11595 ;; Hardware stack levels used:    1
 11596 ;; This function calls:
 11597 ;;		Nothing
 11598 ;; This function is called by:
 11599 ;;		_ISR
 11600 ;; This function uses a non-reentrant model
 11601 ;;
 11602                           
 11603                           
 11604                           ;psect for function i1_get_time
 11605  0AD3                     i1_get_time:	
 11606  0AD3                     i1l3903:	
 11607                           ;incstack = 0
 11608                           ; Regs used in i1_get_time: [wreg]
 11609                           
 11610                           
 11611                           ;time.c: 14: return timer_counter;
 11612  0AD3  0141               	movlb	1	; select bank1
 11613  0AD4  0866               	movf	(_timer_counter+3)^(0+128),w
 11614  0AD5  00F3               	movwf	?i1_get_time+3
 11615  0AD6  0865               	movf	(_timer_counter+2)^(0+128),w
 11616  0AD7  00F2               	movwf	?i1_get_time+2
 11617  0AD8  0864               	movf	(_timer_counter+1)^(0+128),w
 11618  0AD9  00F1               	movwf	?i1_get_time+1
 11619  0ADA  0863               	movf	_timer_counter^(0+128),w
 11620  0ADB  00F0               	movwf	?i1_get_time
 11621  0ADC                     i1l828:	
 11622  0ADC  0008               	return
 11623  0ADD                     __end_ofi1_get_time:	
 11624  007E                     btemp	set	126	;btemp
 11625  007E                     int$flags	set	126
 11626  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    40
    Data        19
    BSS         67
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            79     63      79
    BANK1            80     67      80
    BANK2            80      0      51
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    i2c_master_read_u16@data	PTR unsigned int  size(1) Largest target is 2
		 -> stusb_negotiate@header(BANK1[2]), 

    i2c_master_read_u8@data	PTR unsigned char  size(1) Largest target is 40
		 -> write_sector@buffer(COMMON[1]), read_sector@buffer(COMMON[1]), enter_write_mode@buffer(COMMON[1]), stusb_negotiate@buffer(BANK1[40]), 
		 -> reset@res(BANK0[1]), 

    i2c_master_read@buf	PTR void  size(1) Largest target is 40
		 -> nvm_read@sectors(BANK0[40]), write_sector@buffer(COMMON[1]), read_sector@buffer(COMMON[1]), enter_write_mode@buffer(COMMON[1]), 
		 -> stusb_negotiate@header(BANK1[2]), stusb_negotiate@buffer(BANK1[40]), reset@res(BANK0[1]), 

    i2c_master_read@data	PTR unsigned char  size(1) Largest target is 40
		 -> nvm_read@sectors(BANK0[40]), write_sector@buffer(COMMON[1]), read_sector@buffer(COMMON[1]), enter_write_mode@buffer(COMMON[1]), 
		 -> stusb_negotiate@header(BANK1[2]), stusb_negotiate@buffer(BANK1[40]), reset@res(BANK0[1]), 

    i2c_master_write@buf	PTR const void  size(2) Largest target is 40
		 -> nvm_config(CODE[40]), i2c_master_write_u32@data(BANK0[4]), i2c_master_write_u16@data(COMMON[2]), i2c_master_write_u8@data(BANK0[1]), 

    i2c_master_write@data	PTR unsigned char  size(2) Largest target is 40
		 -> nvm_config(CODE[40]), i2c_master_write_u32@data(BANK0[4]), i2c_master_write_u16@data(COMMON[2]), i2c_master_write_u8@data(BANK0[1]), 

    negotiate_optimal_pdo@src_pdos	PTR unsigned long  size(1) Largest target is 40
		 -> stusb_negotiate@buffer(BANK1[40]), 

    sp__BQ_get_chrg_state	PTR unsigned char  size(1) Largest target is 2
		 -> BQ_get_chrg_state@data(BANK0[2]), 

    VBUS_CHRG_STATE	PTR unsigned char  size(1) Largest target is 2
		 -> NULL(NULL[0]), BQ_get_chrg_state@data(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_timer_diff

Critical Paths under _main in BANK0

    _main->_stusb_negotiate
    _thermal_protection->_readADC
    _stusb_negotiate->_negotiate_optimal_pdo
    _negotiate_optimal_pdo->_write_pdo
    _write_pdo->_reset
    _reset->_i2c_master_read_u8
    _reset->_i2c_master_write_u8
    _i2c_master_write_u8->_i2c_master_write
    _i2c_master_read_u8->_i2c_master_read
    _i2c_master_write_u32->_i2c_master_write
    _i2c_master_write->_i2c_master_send_byte
    _i2c_master_read_u16->_i2c_master_read
    _i2c_master_read->_i2c_master_send_byte
    _led_modes->_battery_fade
    _flash_led->_timer_diff
    _battery_fade->_Map
    _Map->___awdiv
    ___awdiv->___wmul
    _RGB_fade->_timer_diff
    _chrg_led->_timer_diff
    _I2C_Master_Init->___lldiv
    ___lldiv->___lmul
    _BQ_UPDATE->_BQ_get_chrg_state
    _BQ_get_chrg_state->_BQ_Read
    _BQ_Read->_I2C_Master_Read
    _BQ_INIT->_BQ_Write
    _BQ_Write->_I2C_Master_Write

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_stusb_negotiate
    _stusb_negotiate->_negotiate_optimal_pdo

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   39019
                                             62 BANK0      1     1      0
                     _BQ_CONFIG_INIT
                            _BQ_INIT
                          _BQ_UPDATE
                           _BQ_Write
                    _I2C_Master_Init
                      _I2C_bus_reset
                          _PIC_SETUP
                           _PPS_lock
                         _PPS_unlock
                           _PWM_INIT
                     _PWM_power_down
                           _chrg_led
                           _get_time
                          _led_modes
                    _stusb_negotiate
                 _thermal_protection
                         _timer_diff
 ---------------------------------------------------------------------------------
 (1) _thermal_protection                                   1     1      0    1076
                                              5 BANK0      1     1      0
                           _BQ_Write
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              5     3      2      22
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _stusb_negotiate                                     48    48      0   28448
                                             56 BANK0      6     6      0
                                             25 BANK1     42    42      0
                    _i2c_master_read
                _i2c_master_read_u16
                 _i2c_master_read_u8
              _negotiate_optimal_pdo
                              _reset
 ---------------------------------------------------------------------------------
 (2) _negotiate_optimal_pdo                               35    33      2   12974
                                             46 BANK0     10     8      2
                                              0 BANK1     25    25      0
                            ___lldiv
                             ___lmul
                             ___wmul
                          _write_pdo
 ---------------------------------------------------------------------------------
 (3) _write_pdo                                           21    16      5   11000
                                             25 BANK0     21    16      5
                            ___lwdiv
               _i2c_master_write_u32
                              _reset
 ---------------------------------------------------------------------------------
 (2) _reset                                                7     5      2    8794
                                             18 BANK0      7     5      2
                 _i2c_master_read_u8
                _i2c_master_write_u8
 ---------------------------------------------------------------------------------
 (3) _i2c_master_write_u8                                  4     2      2    5483
                                             14 BANK0      4     2      2
                   _i2c_master_write
 ---------------------------------------------------------------------------------
 (3) _i2c_master_read_u8                                   5     3      2    3107
                                             13 BANK0      5     3      2
                    _i2c_master_read
 ---------------------------------------------------------------------------------
 (4) _i2c_master_write_u32                                 7     2      5    1379
                                             14 BANK0      7     2      5
                   _i2c_master_write
 ---------------------------------------------------------------------------------
 (4) _i2c_master_write                                    10     5      5    1160
                                              4 BANK0     10     5      5
               _i2c_master_send_byte
                   _i2c_master_start
                    _i2c_master_stop
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _i2c_master_read_u16                                  5     3      2    1739
                                             13 BANK0      5     3      2
                    _i2c_master_read
 ---------------------------------------------------------------------------------
 (4) _i2c_master_read                                      9     5      4    1521
                                              4 BANK0      9     5      4
            _i2c_master_receive_byte
            _i2c_master_repeat_start
               _i2c_master_send_byte
                   _i2c_master_start
                    _i2c_master_stop
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_stop                                      0     0      0       0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_start                                     0     0      0       0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_send_byte                                 4     1      3      22
                                              0 BANK0      4     1      3
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_repeat_start                              0     0      0       0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_receive_byte                              3     3      0      45
                                              0 BANK0      3     3      0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_modes                                            0     0      0    3688
                           _RGB_fade
                       _battery_fade
                          _flash_led
 ---------------------------------------------------------------------------------
 (2) _flash_led                                            1     1      0     528
                                              8 BANK0      1     1      0
                           _get_time
                         _timer_diff
 ---------------------------------------------------------------------------------
 (2) _battery_fade                                         9     9      0    2632
                                             23 BANK0      9     9      0
                                _Map
 ---------------------------------------------------------------------------------
 (3) _Map                                                  8     2      6    2294
                                             15 BANK0      8     2      6
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     452
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _RGB_fade                                             1     1      0     528
                                              8 BANK0      1     1      0
                           _get_time
                         _timer_diff
 ---------------------------------------------------------------------------------
 (1) _chrg_led                                             1     1      0     528
                                              8 BANK0      1     1      0
                           _get_time
                         _timer_diff
 ---------------------------------------------------------------------------------
 (1) _PWM_power_down                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_INIT                                             0     0      0       0
                           _PPS_lock
                         _PPS_unlock
 ---------------------------------------------------------------------------------
 (2) _PPS_unlock                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PPS_lock                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIC_SETUP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_bus_reset                                        2     2      0      24
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     716
                                             26 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _BQ_UPDATE                                            1     1      0    1903
                                             14 BANK0      1     1      0
                            _BQ_Read
                           _BQ_Write
                  _BQ_get_chrg_state
                           _get_time
                         _timer_diff
 ---------------------------------------------------------------------------------
 (1) _timer_diff                                           8     4      4     528
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _get_time                                             4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _BQ_get_chrg_state                                    5     5      0     209
                                              9 BANK0      5     5      0
                            _BQ_Read
 ---------------------------------------------------------------------------------
 (3) _BQ_Read                                              6     4      2     112
                                              3 BANK0      6     4      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Read                                      3     3      0      45
                                              0 BANK0      3     3      0
                     _I2C_Master_Ack
                    _I2C_Master_Wait
                    _I2C_Master_nAck
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_nAck                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Ack                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BQ_INIT                                              1     1      0    1054
                                              3 BANK0      1     1      0
                           _BQ_Write
 ---------------------------------------------------------------------------------
 (2) _BQ_Write                                             2     1      1    1054
                                              1 BANK0      2     1      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      22
                                              0 BANK0      1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BQ_CONFIG_INIT                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  0     0      0      48
                         i1_get_time
                       i1_timer_diff
 ---------------------------------------------------------------------------------
 (10) i1_timer_diff                                        8     4      4      48
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (10) i1_get_time                                          4     0      4       0
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BQ_CONFIG_INIT
   _BQ_INIT
     _BQ_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _BQ_UPDATE
     _BQ_Read
       _I2C_Master_Read
         _I2C_Master_Ack
         _I2C_Master_Wait
         _I2C_Master_nAck
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BQ_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BQ_get_chrg_state
       _BQ_Read
         _I2C_Master_Read
           _I2C_Master_Ack
           _I2C_Master_Wait
           _I2C_Master_nAck
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _get_time
     _timer_diff
   _BQ_Write
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _I2C_Master_Init
     ___lldiv
       ___lmul (ARG)
   _I2C_bus_reset
   _PIC_SETUP
   _PPS_lock
   _PPS_unlock
   _PWM_INIT
     _PPS_lock
     _PPS_unlock
   _PWM_power_down
   _chrg_led
     _get_time
     _timer_diff
   _get_time
   _led_modes
     _RGB_fade
       _get_time
       _timer_diff
     _battery_fade
       _Map
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _flash_led
       _get_time
       _timer_diff
   _stusb_negotiate
     _i2c_master_read
       _i2c_master_receive_byte
         _i2c_master_wait
       _i2c_master_repeat_start
         _i2c_master_wait
       _i2c_master_send_byte
         _i2c_master_wait
       _i2c_master_start
         _i2c_master_wait
       _i2c_master_stop
         _i2c_master_wait
       _i2c_master_wait
     _i2c_master_read_u16
       _i2c_master_read
         _i2c_master_receive_byte
           _i2c_master_wait
         _i2c_master_repeat_start
           _i2c_master_wait
         _i2c_master_send_byte
           _i2c_master_wait
         _i2c_master_start
           _i2c_master_wait
         _i2c_master_stop
           _i2c_master_wait
         _i2c_master_wait
     _i2c_master_read_u8
       _i2c_master_read
         _i2c_master_receive_byte
           _i2c_master_wait
         _i2c_master_repeat_start
           _i2c_master_wait
         _i2c_master_send_byte
           _i2c_master_wait
         _i2c_master_start
           _i2c_master_wait
         _i2c_master_stop
           _i2c_master_wait
         _i2c_master_wait
     _negotiate_optimal_pdo
       ___lldiv
         ___lmul (ARG)
       ___lmul
       ___wmul
       _write_pdo
         ___lwdiv
         _i2c_master_write_u32
           _i2c_master_write
             _i2c_master_send_byte
               _i2c_master_wait
             _i2c_master_start
               _i2c_master_wait
             _i2c_master_stop
               _i2c_master_wait
             _i2c_master_wait
         _reset
           _i2c_master_read_u8
             _i2c_master_read
               _i2c_master_receive_byte
                 _i2c_master_wait
               _i2c_master_repeat_start
                 _i2c_master_wait
               _i2c_master_send_byte
                 _i2c_master_wait
               _i2c_master_start
                 _i2c_master_wait
               _i2c_master_stop
                 _i2c_master_wait
               _i2c_master_wait
           _i2c_master_write_u8
             _i2c_master_write
               _i2c_master_send_byte
                 _i2c_master_wait
               _i2c_master_start
                 _i2c_master_wait
               _i2c_master_stop
                 _i2c_master_wait
               _i2c_master_wait
     _reset
       _i2c_master_read_u8
         _i2c_master_read
           _i2c_master_receive_byte
             _i2c_master_wait
           _i2c_master_repeat_start
             _i2c_master_wait
           _i2c_master_send_byte
             _i2c_master_wait
           _i2c_master_start
             _i2c_master_wait
           _i2c_master_stop
             _i2c_master_wait
           _i2c_master_wait
       _i2c_master_write_u8
         _i2c_master_write
           _i2c_master_send_byte
             _i2c_master_wait
           _i2c_master_start
             _i2c_master_wait
           _i2c_master_stop
             _i2c_master_wait
           _i2c_master_wait
   _thermal_protection
     _BQ_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _readADC
   _timer_diff

 _ISR (ROOT)
   i1_get_time
   i1_timer_diff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1EF      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      E0       4        0.0%
BITBANK0            4F      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               4F     3F      4F       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     43      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      33      10       63.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      E0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 21 13:56:51 2020

                                   _c 0063                                     _i 0064  
                   _BQ_get_chrg_state 0C43                           __CFG_CP$OFF 0000  
                        ___awdiv@sign 002D                   ___wmul@multiplicand 0023  
                  ?_BQ_get_chrg_state 0070                  __end_ofi1_timer_diff 0B40  
                          _PPS_unlock 0AC4                                   l107 0D76  
                                 l131 0BE6                                   l300 0A91  
                                 l230 0E5A                                   l303 0A95  
                                 l143 022F                                   l241 0ACA  
                                 l233 0AFE                                   l154 02B0  
                                 l146 0259                                   l308 0C86  
                                 l244 0AD2                                   l325 0B56  
                                 l334 0C63                                   l328 0CF8  
                                 l600 0796                                   l441 0F47  
                                 l353 04BC                                   l282 0AE7  
                                 l276 0EA4                                   l700 0B9D  
                                 l285 0AF2                                   l349 04BC  
                                 l541 0D4B                                   l438 0CAA  
                                 l294 0AA5                                   l518 053E  
                                 l606 05BB                                   l454 0D15  
                                 l279 0DA5                                   l288 0A9F  
                                 l528 0EF5                                   l704 0636  
                                 l297 0AE6                                   l625 041B  
                                 l457 0D21                                   l491 0CCF  
                                 l715 0BB5                                   l619 0201  
                                 l628 035A                                   l901 0C42  
                                 l661 0AB1                                   l718 0B85  
                                 l831 0C04                                   l655 0AFF  
                                 l488 06AF                                   l664 0AAB  
                                 l913 0DD9                                   l658 0B0A  
                                 l674 0B6D                                   l499 0727  
                                 l667 0AB7                                   l828 0B29  
                                 l684 0FFF                                   l677 0C22  
                                 l694 0BCD                                   l935 0FA2  
                                 l899 0C2E                                   _RA2 0062  
                                 _RC0 0070                                   _RA5 0065  
                                 _RC1 0071                                   _RC2 0072  
                                 _RC3 0073                                   _RC4 0074  
                                 _RC5 0075                                   _PR2 028D  
                                 _ISR 0004                                   _Map 0CAB  
                                 _dir 0061                          __CFG_BORV$LO 0000  
                                 wreg 0009                   ??_BQ_get_chrg_state 002A  
                          i1_get_time 0AD3                         __CFG_BBEN$OFF 0000  
                          _SYS_ENABLE 006B                          __CFG_LVP$OFF 0000  
                     __end_of_BQ_INIT 0F48                                  ?_ISR 0070  
                       i1timer_diff@t 0070                          __CFG_ZCD$OFF 0000  
                                ?_Map 0030                                  l1052 07F6  
                                l3001 07DC                                  l3011 07F2  
                                l3003 07DD                                  l1171 0E16  
                                l3101 0F6B                                  l3005 07E2  
                                l3021 0DE6                                  l3111 0F94  
                                l3103 0F72                                  l3007 07E8  
                                l3031 0E06                                  l3023 0DEB  
                                l3015 0DDA                                  l3041 0B19  
                                l3105 0F84                                  l3113 0F9A  
                                l3009 07ED                                  l3201 06F7  
                                l3033 0E07                                  l3025 0DEF  
                                l3017 0DDD                                  l3121 0D0A  
                                l4001 0309                                  l3051 0CF0  
                                l3107 0F8C                                  l3131 0AC4  
                                l3211 0721                                  l3203 06FB  
                                l3035 0E0C                                  l3027 0DF3  
                                l3019 0DE3                                  l3123 0D13  
                                l4003 030D                                  l3141 0C57  
                                l3045 0BE7                                  l3109 0F8D  
                                l3133 0AC9                                  l3213 0723  
                                l3205 06FE                                  l3221 0EE5  
                                l3029 0E02                                  l3037 0E12  
                                l3061 0545                                  l3125 0D19  
                                l3117 0CFB                                  l4005 0312  
                                l3143 0C62                                  l3135 0ACB  
                                l3151 066D                                  l3055 0CAB  
                                l3207 0704                                  l3223 0EEB  
                                l3215 0EA5                                  l3063 054B  
                                l3231 00B1                                  l3119 0CFE  
                                l4007 0317                                  l3129 0B42  
                                l3049 0CD2                                  l3137 0C43  
                                l3401 0D62                                  l3153 0673  
                                l3161 067F                                  l3209 071F  
                                l3225 0EEE                                  l3217 0EC8  
                                l3081 0DAF                                  l3241 00F2  
                                l3233 00B5                                  l3139 0C4C  
                                l3411 0D6E                                  l3403 0D64  
                                l3171 0696                                  l3163 0683  
                                l3155 0674                                  l3147 0637  
                                l3227 0EF1                                  l3219 0ED2  
                                l3083 0DB3                                  l3075 05B3  
                                l3067 0550                                  l3059 053F  
                                l3251 019D                                  l3243 011D  
                                l3235 00BD                                  l3093 0F48  
                                l3413 0D71                                  l3405 0D68  
                                l3501 0E3A                                  l3173 0698  
                                l3165 0688                                  l3157 0678  
                                l3149 065A                                  l3181 06B0  
                                l3085 0DBB                                  l3069 0593  
                                l3261 01D5                                  l3253 01AF  
                                l3245 0159                                  l3237 00C0  
                                l3229 00AD                                  l3421 0BCE  
                                l3095 0F59                                  l3431 0E5E  
                                l3415 0D73                                  l3407 0D6A  
                                l3511 0E47                                  l3503 0E3C  
                                l3175 06A0                                  l3167 068B  
                                l3159 067E                                  l3183 06B5  
                                l3087 0DC2                                  l3079 0DA6  
                                l3263 01DC                                  l3255 01BF  
                                l3247 0189                                  l3239 00DA  
                                l3423 0BDC                                  l3097 0F5C  
                                l3441 0E73                                  l3433 0E60  
                                l3417 0D74                                  l3409 0D6C  
                                l3521 0E50                                  l3513 0E4A  
                                l3505 0E41                                  l3601 0517  
                                l3177 06A7                                  l3169 0690  
                                l3193 06BF                                  l3185 06B5  
                                l2801 05CC                                  l3089 0DD1  
                                l3265 01FA                                  l3249 0193  
                                l3257 01C1                                  l3425 0BDD  
                                l3099 0F67                                  l3451 0E99  
                                l3443 0E7E                                  l3435 0E64  
                                l3419 0D75                                  l3531 0E56  
                                l3523 0E51                                  l3515 0E4D  
                                l3507 0E43                                  l3611 0525  
                                l3603 051C                                  l3179 06AA  
                                l3195 06D7                                  l3187 06B5  
                                l2811 05DC                                  l2803 05CC  
                                l3259 01C6                                  l3427 0BDE  
         __size_of_i2c_master_read_u8 0018                                  l2901 0AE2  
                     __end_of_BQ_Read 0CF9                                  l3541 0444  
                                l3461 0D7B                                  l3445 0E83  
                                l3437 0E68                                  l3429 0E5B  
                                l3533 0E58                                  l3525 0E52  
                                l3517 0E4E                                  l3509 0E45  
                                l3613 0529                                  l3605 051E  
                                l3197 06DD                                  l3189 06BB  
                                l2821 05FB                                  l2813 05E2  
                                l2805 05CF                                  l3269 0B70  
                                l3621 0334                                  l2911 0C77  
                                l2903 0C66                                  l3551 047D  
                                l3543 0448                                  l3535 041C  
                                l3463 0DA3                                  l3447 0E85  
                                l3439 0E6A                                  l3455 0E9E  
                                l3391 0D59                                  l3383 0D4C  
                                l3527 0E53                                  l3519 0E4F  
                                l3471 0E17                                  l3615 052B  
                                l3199 06F5                                  l2751 0AAC  
                                l2831 0622                                  l2823 0605  
                                l2815 05EB                                  l2807 05D2  
                                l3623 033A                                  l3465 0C87  
                                l2913 0C7D                                  l2905 0C69  
                                l3545 044D                                  l3553 0491  
                                l3537 0422                                  l3457 0D77  
                                l3449 0E8E                                  l3393 0D5C  
                                l3385 0D4E                                  l3529 0E54  
                                l3481 0E24                                  l3473 0E1A  
                                l3609 0523                                  l3617 0530  
                                l3561 0D22                                  l2753 0AAE  
                                l2761 0AB4                                  l2833 062E  
                                l2817 05F1                                  l2809 05D2  
                                l2841 0FA9                                  l2921 0728  
                                l3641 039E                                  l3633 0360  
                                l3467 0CA8                                  l2915 0C81  
                                l2907 0C6E                                  l3555 0497  
                                l3547 0470                                  l3539 0431  
                                l3459 0D7A                                  l3395 0D5F  
                                l3387 0D56                                  l3491 0E31  
                                l3483 0E26                                  l3475 0E1D  
                                l3571 0D3C                                  l3563 0D28  
                                l2747 0AFF                                  l2755 0AA6  
                                l2771 0B68                                  l2763 0B59  
                                l2835 0631                                  l2827 060C  
                                l2819 05F4                                  l2851 0FB7  
                                l2843 0FAF                                  l2931 074F  
                                l2923 0728                                  l3627 0345  
                                l3619 0320                                  l3469 0EF6  
                                l2917 0C84                                  l2909 0C74  
                                l3557 04BA                                  l3549 0479  
                                l3397 0D60                                  l3389 0D58  
                                l3493 0E34                                  l3485 0E2B  
                                l3477 0E1F                                  l3661 0AF8  
                                l3581 04E0                                  l3573 0D40  
                                l3565 0D2D                                  l2749 0B04  
                                l2781 0C12                                  l2757 0AA8  
                                l2765 0B5C                                  l2829 061E  
                                l2861 0FD4                                  l2853 0FBA  
                                l2941 0774                                  l2933 0755  
                                l2925 0728                                  l3653 0406  
                                l3645 03B2                                  l3637 0375  
                                l3399 0D61                                  l3495 0E35  
                                l3487 0E2D                                  l3479 0E21  
                                l3663 0AF9                                  l3591 0502  
                                l3583 04F3                                  l3575 0D46  
                                l3567 0D32                                  l2783 0C15  
                                l2775 0C07                                  l2767 0B5F  
                                l2759 0AB2                                  l2871 0FFA  
                                l2863 0FE1                                  l2855 0FBA  
                                l2847 0FB4                                  l2839 0FA5  
                                l2943 077B                                  l2935 075B  
                                l2927 0738                                  l3639 038D  
                                l2881 0A92                                  l3497 0E36  
                                l3489 0E2F                                  l3665 0AFA  
                                l3657 0AF3                                  l3593 0507  
                                l3585 04F9                                  l2961 0C2A  
                                l3577 0D4A                                  l3569 0D36  
                                l2785 0C1C                                  l2777 0C09  
                                l2769 0B64                                  l2793 05BE  
                                l2865 0FE5                                  l2857 0FC4  
                                l2849 0FB4                                  l2953 0B88  
                                l2945 0789                                  l2929 073E  
                                l2937 0761                                  l3649 03D8  
                                l2875 0AE7                                  l2891 0A9A  
                                l3499 0E38                                  l3667 0AFC  
                                l3659 0AF7                                  l3595 050C  
                                l3587 04FA                                  l3579 04BD  
                                l2971 0797                                  l2963 0C33  
                                l2787 0C1D                                  l2779 0C0C  
                                l2795 05C2                                  l2867 0FEB  
                                l2859 0FCA                                  l2883 0BB8  
                                l2947 078F                                  l2939 0767  
                                l2877 0AEC                                  l2893 0A9D  
                                l3669 0AFD                                  l3597 0511  
                                l3589 0500                                  l2981 07A8  
                                l2973 0799                                  l2965 0C38  
                                l2957 0C23                                  l2789 0C20  
                                l2797 05C7                                  l2869 0FF7  
                                l2949 0794                                  l3941 020E  
                                l2895 0AA0                                  l2879 0A8E  
                                l3599 0514                                  l2991 07BC  
                                l2983 07AD                                  l2975 079D  
                                l2967 0C3E                                  l2959 0C26  
                                l2887 0BA0                                  l3951 0246  
                                l3943 0211                                  l2897 0AA3  
                                l2993 07C1                                  l2985 07B1  
                                l2977 07A2                                  l3961 026F  
                                l3953 0256                                  l3945 0214  
                                l3937 0202                                  l2899 0ADF  
                                l2995 07C5                                  l2987 07B3  
                                l2979 07A4                                  l3963 027F  
                                l3955 025A                                  l3971 0297  
                                l3947 0230                                  l3939 020B  
                                l2997 07C9                                  l2989 07B9  
                                l3981 02AD                                  l3965 0288  
                                l3957 0260                                  l3949 0236  
                                l3973 0299                                  l2999 07D8  
                                l3991 02E0                                  l3983 02D2  
                                l3975 029C                                  l3967 028E  
                                l3959 0269                                  l3993 02E3  
                                l3985 02D4                                  l3977 029F  
                                l3969 0293                                  l3987 02D7  
                                l3995 02F6                                  l3979 02A8  
                                l3997 02FC                                  l3989 02DD  
                                l3999 0304                          __CFG_WDTE$ON 0000  
                                _BHOT 00EA                                  _ICHG 014D  
                                u2000 05FB                                  u2001 05FA  
                                u2010 060B                                  u2011 060A  
                                u2100 0AF2                                  u2020 0613  
                                u2101 0AF1                                  u2021 0611  
                                u2110 0C7D                                  u2030 0614  
                                u2111 0C7C                                  u3000 0EA4  
                                u2040 062E                                  u2120 073E  
                                u3001 0EA3                                  u2041 062D  
                                u2121 073D                                  u3010 0D89  
                                u2050 0FAF                                  u2130 0755  
                                u2051 0FAE                                  u2131 0754  
                                u3020 0422                                  u2220 0C3E  
                                u3100 0D46                                  u2060 0FCA  
                                u2140 075B                                  u3021 0421  
                                u2221 0C3D                                  u2205 0C2F  
                                u3101 0D45                                  u2061 0FC9  
                                u2141 075A                                  u3030 044D  
                                u3110 04E0                                  u2310 07E8  
                                u2230 079D                                  u2070 0FEB  
                                u2150 0761                                  u3031 044C  
                                u3015 0D85                                  u3111 04DF  
                                u2311 07E7                                  u2231 079C  
                                u2215 0C34                                  u2071 0FEA  
                                u2151 0760                                  u3040 0470  
                                u3120 04F9                                  u2320 07ED  
                                u2240 07A8                                  u2080 0FF7  
                                u2160 0767                                  u2400 0545  
                                u3200 035F                                  u3041 046F  
                                u3121 04F8                                  u2321 07EC  
                                u2305 07DE                                  u2241 07A7  
                                u2081 0FF6                                  u2161 0766  
                                u2401 0544                                  u3201 035E  
                                u2090 0AEC                                  u3050 0497  
                                u3130 0500                                  u2250 07B9  
                                u2330 0DE3                                  u2170 077B  
                                u2410 054B                                  u3210 0374  
                                u2091 0AEB                                  u3051 0496  
                                u3131 04FF                                  u2251 07B8  
                                u2331 0DE2                                  u2171 077A  
                                u2411 054A                                  u3211 0373  
                                u3060 04BA                                  u3140 0507  
                                u2180 078F                                  u2420 056D  
                                u3220 038D                                  u3061 04B9  
                                u3141 0506                                  u2181 078E  
                                u3221 038C                                  u2510 0F6B  
                                u3150 0511                                  u2270 07C9  
                                u2190 0C2A                                  u3070 0D28  
                                u2350 0DF3                                  u3230 039D  
                                u2511 0F6A                                  u3151 0510  
                                u2271 07C8                                  u2191 0C29  
                                u3071 0D27                                  u2351 0DF2  
                                u4007 076D                                  u3231 039C  
                                u2600 065A                                  u3080 0D32  
                                u2440 05B2                                  u3240 03B1  
                                u3160 0334                                  u2505 0F5D  
                                u4017 0E6E                                  u2601 0659  
                                u2265 07BD                                  u3081 0D31  
                                u2345 0DE7                                  u2441 05B1  
                                u2425 0569                                  u3241 03B0  
                                u3161 0333                                  u2530 0F84  
                                u2610 0673                                  u2290 07D8  
                                u3090 0D3C                                  u2450 0DB3  
                                u2370 0E02                                  u3250 03D7  
                                u3170 0339                                  u2531 0F83  
                                u4027 0E79                                  u2611 0672  
                                u2291 07D7                                  u3091 0D3B  
                                u2451 0DB2                                  u2371 0E01  
                                u2435 0596                                  u3251 03D6  
                                u3171 0338                                  u2620 067E  
                                u2700 0ECE                                  u3260 0405  
                                u3180 0344                                  u2525 0F6C  
                                u4037 0E89                                  u2621 067D  
                                u2285 07CA                                  u2701 0ECC  
                                u2365 0DF4                                  u3261 0404  
                                u3181 0343                                  u2550 0F9A  
                                u2630 0688                                  u2710 0ECF  
                                u2390 0E12                                  u3190 0359  
                                u2551 0F99                                  u2535 0F80  
                                u4047 0E94                                  u2631 0687  
                                u2295 07D4                                  u2391 0E11  
                                u2375 0DFE                                  u3255 03D3  
                                u3191 0358                                  u2640 0696  
                                u2720 0EEB                                  u2480 0DD1  
                                u2800 01D5                                  u2545 0F8E  
                                u2641 0695                                  u2721 0EEA  
                                u2481 0DD0                                  u2465 0DBC  
                                u2385 0E08                                  u2801 01D4  
                                u2490 0F59                                  u2650 06A7  
                                u2810 01DC                                  u2570 0D19  
                                u2491 0F58                                  u2651 06A6  
                                u2475 0DC3                                  u2811 01DB  
                                u2571 0D18                                  u2660 06BB  
                                u1940 0B04                                  u2740 0106  
                                u3700 0246                                  u2661 06BA  
                                u1941 0B03                                  u2805 01D1  
                                u2565 0D02                                  u3701 0245  
                                u2670 06DD                                  u1950 0B0A  
                                u2750 0177                                  u3710 024D  
                                u2671 06DC                                  u1951 0B09  
                                u2735 00C5                                  u3711 024B  
                                u2680 0704                                  u1960 0B64  
                                u2760 0189                                  u3800 02AD  
                                u3720 024E                                  u2585 0C4F  
                                u2681 0703                                  u1961 0B63  
                                u2761 0188                                  u2745 0102  
                                u3801 02AC                                  u2690 0EC8  
                                u1970 05C7                                  u2770 0193  
                                u3810 02D2                                  u3730 0256  
                                u2595 0C5A                                  u2691 0EC7  
                                u1971 05C6                                  u2771 0192  
                                u2755 0173                                  u3811 02D1  
                                u3731 0255                                  u1980 05E2  
                                u2780 019C                                  u3820 02DD  
                                u3740 0260                                  u1981 05E1  
                                u2781 019B                                  u3821 02DC  
                                u3741 025F                                  u1990 05F1  
                                u2790 01AF                                  u3830 02FC  
                                u3750 026F                                  u1991 05F0  
                                u2791 01AE                                  u3831 02FB  
                                u3751 026E                                  u2960 0BDC  
                                u3840 0304                                  u3760 027F  
                                u2961 0BDB                                  u3841 0303  
                                u3761 027E                                  u2970 0E68  
                                u3850 0309                                  u3770 0288  
                                u3690 0236                                  u2971 0E67  
                                u2795 01AB                                  u3851 0308  
                                u3771 0287                                  u3691 0235  
                                u2980 0E83                                  u3860 030D  
                                u3780 028E                                  u2981 0E82  
                                u3861 030C                                  u3781 028D  
                                u2990 0E9E                                  u3870 0312  
                                u3790 02A8                                  u2991 0E9D  
                                u3871 0311                                  u3791 02A7  
                                u3880 0317                                  u3881 0316  
                                u3997 0D0E                                  Map@x 0030  
                                _TMR1 020C                                  _TMR2 028C  
                                _TREG 0145                                  _VREG 014A  
                                _WPUA 1F39                         __CFG_FCMEN$ON 0000  
                                _main 0202                                  _mode 006F  
                                fsr0h 0005                                  fsr1h 0007  
                                indf0 0000                                  fsr0l 0004  
                                indf1 0001                                  fsr1l 0006  
                                btemp 007E                         __CFG_BOREN$ON 0000  
                  __size_of_BQ_UPDATE 00A1                                  start 0068  
                      _btn_time_start 0138                         __CFG_CSWEN$ON 0000  
           __end_of_BQ_get_chrg_state 0C64                                 ??_ISR 0078  
                               ??_Map 0036                       _VBUS_CHRG_STATE 006E  
    __size_of_i2c_master_repeat_start 0006                    __size_of_PIC_SETUP 002B  
                __end_of_battery_fade 0728                      ?_I2C_Master_Init 003B  
                    ?_I2C_Master_Read 0070                      ?_I2C_Master_Wait 0070  
                    ?_I2C_Master_nAck 0070                      ?_I2C_Master_Stop 0070  
        __size_of_i2c_master_read_u16 0018                                 ?_main 0070  
                     __end_of___awdiv 07F7                                 _BCOLD 00E9  
                     __end_of___lldiv 0FA3                                 _T1CLK 0211  
                     ___awdiv@divisor 0027                                 _IOCAF 1F3F  
                               _IOCAN 1F3E                                 _IOCAP 1F3D  
  negotiate_optimal_pdo@opt_pdo_power 00A0                       __end_of___lwdiv 0E17  
                    __end_of_BQ_Write 0B57                                 i1l121 0020  
                               i1l127 0066                                 i1l831 0B3F  
                               i1l828 0ADC                                 _ITERM 014B  
                     ___awdiv@counter 002C               ??_negotiate_optimal_pdo 0051  
                               _TRISA 0012                                 _TRISC 0014  
                 ___lmul@multiplicand 0025                      __end_of_RGB_fade 06B0  
                       __CFG_WRTB$OFF 0000                         __CFG_WRTC$OFF 0000  
                     __end_of_readADC 0D22              __size_of_stusb_negotiate 00FC  
                               _color 0062                                 _reset 0728  
                    __end_of_PWM_INIT 0E5B                      __end_of_PPS_lock 0AD3  
              negotiate_optimal_pdo@i 00AF          __size_of_i2c_master_write_u8 0018  
                               status 0003                                 wtemp0 007E  
                      __CFG_MCLRE$OFF 0000                       __initialization 006D  
                        __end_of_main 0320         negotiate_optimal_pdo@num_pdos 004F  
                      __CFG_SAFEN$OFF 0000         negotiate_optimal_pdo@src_pdos 00A8  
         __size_of_thermal_protection 0019                           ?_PPS_unlock 0070  
                              ??_main 005F                             ??_BQ_INIT 0024  
                   __end_of_BQ_UPDATE 04BD                             ??_BQ_Read 0026  
                   ?_I2C_Master_Start 0070                     ?_I2C_Master_Write 0070  
                         ?i1_get_time 0070                           BQ_Read@data 0029  
                  ??_I2C_Master_Start 0021                                _ADCON0 009D  
                              _ADCON1 009E                    ??_I2C_Master_Write 0021  
                              _ADRESH 009C                                ?_reset 0033  
                    ___awdiv@dividend 0029                                _ANSELA 1F38  
                              _ANSELC 1F4E                                _IOCAF5 F9FD  
                              _ICO_EN 0152               _i2c_master_receive_byte 0C05  
                              _RC0PPS 1F20                                _RC1PPS 1F21  
                              _RC2PPS 1F22                                _RC3PPS 1F23  
                              _RC4PPS 1F24                                _INILIM 00EE  
                              i1l3903 0AD3                                i1l3911 0006  
                              i1l3921 0025                                i1l3913 000B  
                              i1l3907 0B2A                                i1l3931 0053  
                              i1l3923 002A                                i1l3915 0011  
                              i1l3933 0062                                i1l3925 0036  
                              i1l3917 001A                                i1l3935 0065  
                              i1l3927 0039                                i1l3919 001F  
                              i1l3929 003E                                _EN_HIZ 00EB  
                   __end_of_PIC_SETUP 0D77                                u363_20 000B  
                              u363_21 000A                                u364_20 001F  
                              u364_21 001E                                u365_20 0025  
                              u365_21 0024                                u366_20 002A  
                              u366_21 0029                                u367_20 003E  
                              u367_21 003D                                u368_20 0062  
                              u368_21 0061                                _VCLAMP 013C  
                              _TMR1IF 3880                                _TMR2IF 3881  
                              _TMR2ON 1477                                _VRECHG 013F  
                    ??_BQ_CONFIG_INIT 0021                                _WD_RST 0142  
       __size_of_i2c_master_send_byte 0017                        __CFG_PWRTE$OFF 0000  
                    __end_of_chrg_led 053F            __size_of_BQ_get_chrg_state 0021  
                    __end_of_get_time 0B2A                 __size_ofi1_timer_diff 0016  
                              ___lmul 0DA6                                ___wmul 0C23  
                           ??___awdiv 002B                        __CFG_STVREN$ON 0000  
                     _i2c_master_read 05BC                             ??___lldiv 0035  
                     _i2c_master_wait 0AFF                       _i2c_master_stop 0AB2  
                           ??___lwdiv 0025              i2c_master_send_byte@data 0024  
                    ___awdiv@quotient 002E               __size_of_I2C_Master_Ack 0004  
           __size_of_i2c_master_start 0006             __size_of_i2c_master_write 005D  
                           ??_readADC 0023               negotiate_optimal_pdo@ok 00B1  
              __size_of_I2C_bus_reset 004A         __size_of_i2c_master_write_u32 0018  
                         BQ_Write@reg 0023               __end_of__initialization 00A7  
                        i1_timer_diff 0B2A                     ??_stusb_negotiate 0059  
                 __size_of_PPS_unlock 0007                             ?_BQ_Write 0022  
               __size_of_battery_fade 0078                        __pcstackCOMMON 0070  
                           ?_RGB_fade 0070                          __pidataBANK0 0003  
                        __pidataBANK1 0A96                          __pidataBANK2 0B0B  
                 __size_ofi1_get_time 000A               _i2c_master_repeat_start 0AA6  
                       __end_of_reset 0797                       _BATTERY_VOLTAGE 006D  
                           ?_PWM_INIT 0070                             ?_PPS_lock 0070  
                  __size_of_flash_led 0051             ??_i2c_master_receive_byte 0021  
                  __size_of_led_modes 002A                               ??_reset 0035  
                          __pbssBANK0 0060                            __pbssBANK1 00E3  
                          __pbssBANK2 0120                          _battery_fade 06B0  
                 _i2c_master_read_u16 0B6E               __end_of_i2c_master_read 0637  
             __end_of_i2c_master_wait 0B0B               __end_of_i2c_master_stop 0AB8  
                          ??_BQ_Write 0023                         _I2C_bus_reset 0E5B  
                          __pmaintext 0202                            ??_RGB_fade 0029  
                             ?___lmul 0021                               ?___wmul 0021  
                          _chrg_delay 0124                            __pintentry 0004  
                      ___lmul@product 0029                               _BATLOWV 0140  
                          ??_PWM_INIT 0021                  ?_i2c_master_read_u16 002E  
                 __CFG_RSTOSC$HFINT32 0000                   _i2c_master_write_u8 0BB6  
                          ??_PPS_lock 0021                               _T2CKPS0 1474  
                             _T2CKPS1 1475                               _T2CKPS2 1476  
                             _BQ_INIT 0EF6                               _EN_ILIM 00EF  
                             _MAXC_EN 0151                               _IPRECHG 014C  
             __size_of_PWM_power_down 000C                               _EN_TERM 0149  
                             _BQ_Read 0CD0                            _flash_time 0120  
      __size_of_negotiate_optimal_pdo 0157         __end_of_negotiate_optimal_pdo 0202  
          __end_of_i2c_master_read_u8 0BB6                               _NVMADRH 081B  
                             _NVMADRL 081A                               _PWM3DCH 0315  
                             _NVMDATL 081C                               _PWM3DCL 0314  
                             _PWM4DCH 0319                               _NVMCON2 081F  
                             _PWM4DCL 0318                               _PWM5DCH 031D  
                           ?_chrg_led 0070                               _PWM5DCL 031C  
                             _PWM3CON 0316                               _PWM4CON 031A  
                             _PWM5CON 031E                               _SSP1ADD 018D  
                             _PPSLOCK 1E8F                               _SSP1BUF 018C  
                             _VREGCON 0812                i2c_master_read_u16@reg 002E  
                           ?_get_time 0021                               _SYS_MIN 014E  
               BQ_get_chrg_state@data 002C                i2c_master_read_u8@data 002F  
               BQ_get_chrg_state@temp 002E                  ?_i2c_master_write_u8 002F  
                  __size_of_write_pdo 007D                        ?_I2C_bus_reset 0070  
           ??_i2c_master_repeat_start 0021                     __end_of_flash_led 0EF6  
                             ___awdiv 0797                       __size_of___lmul 0034  
                           _CHG_TIMER 0146                               ___lldiv 0F48  
                   __end_of_led_modes 0D4C                       __size_of___wmul 0020  
                             ___lwdiv 0DDA                        _I2C_Master_Ack 0A8E  
               ??_i2c_master_read_u16 0030                          ??_PPS_unlock 0021  
                    _i2c_master_start 0AAC                               __ptext1 0BCE  
                             __ptext2 0CF9                               __ptext3 0320  
                             __ptext4 00AB                               __ptext5 053F  
                             __ptext6 0728                               __ptext7 0BB6  
                             __ptext8 0B9E                               __ptext9 0B86  
                    _i2c_master_write 0FA3                       __CFG_WRTAPP$OFF 0000  
                             _readADC 0CF9                          __size_of_ISR 0064  
                           _T1CONbits 020E                          __size_of_Map 0025  
                           _CONV_RATE 00E7                       __CFG_WRTSAF$OFF 0000  
            __size_of_I2C_Master_Init 002F              __size_of_I2C_Master_Read 0023  
                        ??i1_get_time 0074              __size_of_I2C_Master_Wait 000C  
            __size_of_I2C_Master_nAck 0004              __size_of_I2C_Master_Stop 0006  
                          ??_chrg_led 0029                             _BQ_UPDATE 041C  
                             clrloop0 0AB9                            ??_get_time 0025  
                end_of_initialization 00A7                 ??_i2c_master_write_u8 0031  
                    write_pdo@pdo_num 003E                               init_ram 0ABE  
                             initloop 0ABF                      ?_i2c_master_read 0025  
           __size_of_I2C_Master_Start 0006                    __end_of_PPS_unlock 0ACB  
                    ?_i2c_master_wait 0070                             _PIC_SETUP 0D4C  
           __size_of_I2C_Master_Write 000A                       ___lldiv@divisor 002D  
                    ?_i2c_master_stop 0070              negotiate_optimal_pdo@pdo 00B3  
                             reset@ok 0038                       ___lldiv@counter 003A  
              __end_of_I2C_Master_Ack 0A92                          _AUTO_DPDM_EN 0150  
          __end_of_thermal_protection 0BE7                    __end_ofi1_get_time 0ADD  
                          _nvm_config 07F7                          BQ_Write@data 0022  
               __CFG_WDTCPS$WDTCPS_13 0000                             Map@outMax 0035  
                           Map@outMin 0034                            _timer_diff 0BE7  
                           _VINDPM_OS 00ED          __end_of_i2c_master_send_byte 0B6E  
                        _REG00_config 0068                          _REG01_config 0067  
                   __end_of_write_pdo 05BC                  __CFG_WDTCCS$LFINTOSC 0000  
                        _REG02_config 0066                             _TRISAbits 0012  
                     _stusb_negotiate 0320                          _REG03_config 0065  
                           _TRISCbits 0014                          _REG04_config 007C  
                         timer_diff@t 0021                          _REG05_config 007B  
                        _REG06_config 007A                            ?_BQ_UPDATE 0070  
                        _REG07_config 0079                      __CFG_FEXTOSC$OFF 0000  
                        _REG08_config 0078                       ??_I2C_bus_reset 0021  
                          ?_PIC_SETUP 0070                          write_pdo@pdo 004B  
negotiate_optimal_pdo@opt_pdo_current 00A4                         battery_fade@v 0040  
        __end_of_i2c_master_write_u32 0B9E              i2c_master_read_u8@device 0032  
                     ?_I2C_Master_Ack 0070                     __size_of_BQ_Write 0017  
          i2c_master_receive_byte@ack 0022  negotiate_optimal_pdo@opt_pdo_voltage 00A6  
                      __end_of___lmul 0DDA                        __end_of___wmul 0C43  
                   __size_of_RGB_fade 0079                     __size_of_PWM_INIT 0044  
                      _PWM_power_down 0AF3                     __size_of_PPS_lock 0008  
                 start_initialization 006D                           __end_of_ISR 0068  
                         __end_of_Map 0CD0             i2c_master_read_u16@device 0032  
                 write_pdo@current_mA 003A                     ??_I2C_Master_Init 003F  
                   ??_I2C_Master_Read 0021                     ??_I2C_Master_Wait 0021  
                   ??_I2C_Master_nAck 0021                            BQ_Read@reg 0028  
                   ??_I2C_Master_Stop 0021                      __CFG_LPBOREN$OFF 0000  
                            ??___lmul 0029                              ??___wmul 0025  
                         __pdataBANK0 006F                           __pdataBANK1 00EC  
                         __pdataBANK2 0145               __size_of_BQ_CONFIG_INIT 0024  
             __end_of_stusb_negotiate 041C                           ?_timer_diff 0021  
              __end_of_PWM_power_down 0AFF                              ?_BQ_INIT 0070  
                         __pbssCOMMON 0078                              ?_BQ_Read 0024  
                           ___latbits 0001                         __pcstackBANK0 0021  
                       __pcstackBANK1 00A0                           ??_BQ_UPDATE 002F  
                   __size_of_chrg_led 0082                     __size_of_get_time 0011  
            __end_of_i2c_master_start 0AB2              __end_of_i2c_master_write 1000  
                    _I2C_Master_Start 0A9A                  _i2c_master_send_byte 0B57  
                  _i2c_master_read_u8 0B9E                           ??_PIC_SETUP 0021  
                    _I2C_Master_Write 0ADD                      ___lwdiv@dividend 0023  
            i2c_master_write_u32@data 0030                 i2c_master_read@device 002A  
         i2c_master_receive_byte@data 0023                              ?___awdiv 0027  
                            ?___lldiv 002D                   ?_i2c_master_read_u8 002E  
                            ?___lwdiv 0021                          _BQ_adc_state 006C  
                    __CFG_PPS1WAY$OFF 0000                             _flash_led 0EA5  
                I2C_Master_Write@data 0021                       ?_PWM_power_down 0070  
                           _led_modes 0D22                              ?_readADC 0021  
            ?_i2c_master_receive_byte 0070                 i2c_master_read_u8@reg 002E  
                 write_pdo@voltage_mV 003C                              _BAT_COMP 013D  
                _i2c_master_write_u32 0B86                      ___lwdiv@quotient 0026  
                ??_i2c_master_read_u8 0030                           _CPUDOZEbits 088C  
                            _T2CLKCON 0290                 _negotiate_optimal_pdo 00AB  
                      __size_of_reset 006F                             _rgb_delay 0128  
                            _T2OUTPS0 1470                              _T2OUTPS1 1471  
                            _T2OUTPS2 1472                              _T2OUTPS3 1473  
                      ___wmul@product 0025                              _HVDCP_EN 0144  
                 __size_of_timer_diff 001E                              _EN_TIMER 0147  
               ?_i2c_master_send_byte 0021                             clear_ram0 0AB8  
                            _PIE0bits 0716                              _PIE4bits 071A  
                            _BQ_Write 0B40                           _flash_state 0060  
         __end_of_i2c_master_read_u16 0B86                              _WATCHDOG 013E  
                            _RGB_fade 0637                     __CFG_BBSIZE$BB512 0000  
                            Map@inMax 0033                              Map@inMin 0032  
                            _SSP1CON1 0190                              _SSP1CON2 0191  
                            _SSP1CON3 0192                              _SSP1STAT 018F  
             i2c_master_read_u16@data 002F                              _STAT_DIS 0148  
                          ?_flash_led 0070                              _PWM_INIT 0E17  
                    ?_stusb_negotiate 0070                            _ADCON0bits 009D  
                            _PPS_lock 0ACB                     ___wmul@multiplier 0021  
                          ?_led_modes 0070                      __size_of_BQ_INIT 0052  
                  _thermal_protection 0BCE           __end_of_i2c_master_write_u8 0BCE  
                    __size_of_BQ_Read 0029                 ?_i2c_master_write_u32 002F  
                 I2C_Master_Read@data 0023                     ___lmul@multiplier 0021  
                           _write_pdo 053F                   ?_thermal_protection 0070  
            ?_i2c_master_repeat_start 0070                         ?i1_timer_diff 0070  
                    ??_I2C_Master_Ack 0021                         _set_stusb4500 0069  
                          _CHG_CONFIG 014F                        _BQ_CONFIG_INIT 0C87  
     __end_of_i2c_master_receive_byte 0C23                      __size_of___awdiv 0060  
            __size_of_i2c_master_read 007B                      __size_of___lldiv 005B  
                ??_thermal_protection 0026              __size_of_i2c_master_wait 000C  
                    __size_of___lwdiv 003D              __size_of_i2c_master_stop 0006  
                      readADC@channel 0025                            _ANSELAbits 1F38  
                     _I2C_Master_Init 0D77                      __size_of_readADC 0029  
                     _I2C_Master_Read 0C64                       _I2C_Master_Wait 0AE7  
                     _I2C_Master_nAck 0A92                       _I2C_Master_Stop 0AA0  
                     ___lwdiv@divisor 0021               i2c_master_write_u32@reg 002F  
                            _chrg_led 04BD                       ___lwdiv@counter 0028  
              ?_negotiate_optimal_pdo 004F                              __ptext10 0FA3  
                            __ptext11 0DDA                              __ptext20 0AFF  
                            __ptext12 0DA6                              __ptext21 0D22  
                            __ptext13 0B6E                            _T1GCONbits 020F  
                            __ptext30 0E17                              __ptext22 0EA5  
                            __ptext14 05BC                              __ptext31 0AC4  
                            __ptext23 06B0                              __ptext15 0AB2  
                            __ptext40 0C43                              __ptext32 0ACB  
                            __ptext24 0CAB                              __ptext16 0AAC  
                            __ptext41 0CD0                              __ptext33 0D4C  
                            __ptext25 0C23                              __ptext17 0B57  
                            __ptext50 0AE7                              __ptext42 0C64  
                            __ptext34 0E5B                              __ptext26 0797  
                            __ptext18 0AA6                              __ptext51 0C87  
                            __ptext43 0A92                              __ptext35 0D77  
                            __ptext27 0637                              __ptext19 0C05  
                            __ptext44 0A8E                              __ptext36 0F48  
                            __ptext28 04BD                              __ptext53 0B2A  
                            __ptext45 0EF6                              __ptext37 041C  
                            __ptext29 0AF3                              __ptext54 0AD3  
                            __ptext46 0B40                              __ptext38 0BE7  
                            __ptext47 0ADD                              __ptext39 0B19  
                            __ptext48 0AA0                              __ptext49 0A9A  
                         _BQ_adc_time 012C                          _SSP1CON2bits 0191  
                          ?_write_pdo 003A                              _get_time 0B19  
                            _btn_time 0134                            _BOOST_FREQ 00EC  
             i2c_master_write_u8@data 0030                         ?_battery_fade 0070  
                      ??i1_timer_diff 0074        negotiate_optimal_pdo@pdo_power 00A9  
              ??_i2c_master_send_byte 0024                         __size_of_main 011E  
          i2c_master_write_u32@device 0035                            _CONV_START 00E8  
                __CFG_WDTCWS$WDTCWS_7 0000                 __end_of_I2C_bus_reset 0EA5  
                          _FORCE_DPDM 0143                     _stusb4500_timeout 0130  
                      I2C_bus_reset@i 0022                __end_of_BQ_CONFIG_INIT 0CAB  
                            int$flags 007E                           ??_flash_led 0029  
                       _timer_counter 00E3                          ??_timer_diff 0025  
                  I2C_Master_Init@clk 003B                    I2C_Master_Read@ack 0022  
                         ??_led_modes 0041              __end_of_I2C_Master_Start 0AA0  
            __end_of_I2C_Master_Write 0AE7                            _INTCONbits 000B  
              ??_i2c_master_write_u32 0034                           _NVMCON1bits 081E  
              i2c_master_write@device 002A                           _PWM3CONbits 0316  
                         _PWM4CONbits 031A       __end_of_i2c_master_repeat_start 0AAC  
                         _PWM5CONbits 031E                        ??_battery_fade 0038  
                            intlevel1 0000                      _btn_is_debounced 006A  
                 i2c_master_read@data 002B                      ___lldiv@dividend 0031  
                  __end_of_nvm_config 081F                     ?_i2c_master_start 0070  
                   __CFG_CLKOUTEN$OFF 0000                     ?_i2c_master_write 0025  
              i2c_master_write_u8@reg 002F                              reset@res 0037  
                  __end_of_timer_diff 0C05                    ??_i2c_master_start 0021  
                  ??_i2c_master_write 002A                       ?_BQ_CONFIG_INIT 0070  
                    ??_PWM_power_down 0021               __end_of_I2C_Master_Init 0DA6  
             __end_of_I2C_Master_Read 0C87               __end_of_I2C_Master_Wait 0AF3  
             __end_of_I2C_Master_nAck 0A96               __end_of_I2C_Master_Stop 0AA6  
                       __pstringtext1 07F7                 stusb_negotiate@header 00E1  
               stusb_negotiate@buffer 00B9                            _SSP1DATPPS 1EC6  
                  i2c_master_read@buf 0026                    i2c_master_read@len 0027  
                  i2c_master_read@reg 0025                            _SSP1CLKPPS 1EC5  
                          _OTG_CONFIG 0141                      ___lldiv@quotient 0036  
                   ??_i2c_master_read 0029                     ??_i2c_master_wait 0021  
                   ??_i2c_master_stop 0021      negotiate_optimal_pdo@pdo_current 00AD  
                         ??_write_pdo 003F                  i2c_master_write@data 002B  
           i2c_master_write_u8@device 0032                     i2c_master_read@ok 002C  
    __size_of_i2c_master_receive_byte 001E      negotiate_optimal_pdo@pdo_voltage 00B7  
                 i2c_master_write@buf 0026                   i2c_master_write@len 0028  
                 i2c_master_write@reg 0025                    i2c_master_write@ok 002D  
                      _btn_is_pressed 007D  
