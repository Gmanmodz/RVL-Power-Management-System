

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 02 07:18:54 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F15324
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	inittext,global,class=CODE,delta=2
    17                           	psect	clrtext,global,class=CODE,delta=2
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    19                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    20                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    21                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    22                           	psect	text1,local,class=CODE,merge=1,delta=2
    23                           	psect	text2,local,class=CODE,merge=1,delta=2
    24                           	psect	text3,local,class=CODE,merge=1,delta=2
    25                           	psect	text4,local,class=CODE,merge=1,delta=2
    26                           	psect	text5,local,class=CODE,merge=1,delta=2
    27                           	psect	text6,local,class=CODE,merge=1,delta=2
    28                           	psect	text7,local,class=CODE,merge=1,delta=2
    29                           	psect	text8,local,class=CODE,merge=1,delta=2
    30                           	psect	text9,local,class=CODE,merge=1,delta=2
    31                           	psect	text10,local,class=CODE,merge=1,delta=2
    32                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text13,local,class=CODE,merge=1,delta=2
    35                           	psect	text14,local,class=CODE,merge=1,delta=2
    36                           	psect	text15,local,class=CODE,merge=1,delta=2
    37                           	psect	text16,local,class=CODE,merge=1,delta=2
    38                           	psect	text17,local,class=CODE,merge=1,delta=2
    39                           	psect	text18,local,class=CODE,merge=1,delta=2
    40                           	psect	text19,local,class=CODE,merge=1,delta=2
    41                           	psect	text20,local,class=CODE,merge=1,delta=2
    42                           	psect	text21,local,class=CODE,merge=1,delta=2
    43                           	psect	text22,local,class=CODE,merge=1,delta=2
    44                           	psect	text23,local,class=CODE,merge=1,delta=2
    45                           	psect	text24,local,class=CODE,merge=1,delta=2
    46                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    47                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text27,local,class=CODE,merge=1,delta=2
    49                           	psect	text28,local,class=CODE,merge=1,delta=2
    50                           	psect	text29,local,class=CODE,merge=1,delta=2
    51                           	psect	text30,local,class=CODE,merge=1,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2
    56                           	psect	text35,local,class=CODE,merge=1,delta=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text37,local,class=CODE,merge=1,delta=2
    59                           	psect	text38,local,class=CODE,merge=1,delta=2
    60                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text40,local,class=CODE,merge=1,delta=2
    62                           	psect	text41,local,class=CODE,merge=1,delta=2
    63                           	psect	text42,local,class=CODE,merge=1,delta=2
    64                           	psect	text43,local,class=CODE,merge=1,delta=2
    65                           	psect	text44,local,class=CODE,merge=1,delta=2
    66                           	psect	text45,local,class=CODE,merge=1,delta=2
    67                           	psect	text46,local,class=CODE,merge=1,delta=2
    68                           	psect	text47,local,class=CODE,merge=1,delta=2
    69                           	psect	text48,local,class=CODE,merge=1,delta=2
    70                           	psect	text49,local,class=CODE,merge=1,delta=2
    71                           	psect	text50,local,class=CODE,merge=1,delta=2
    72                           	psect	text51,local,class=CODE,merge=1,delta=2
    73                           	psect	intentry,global,class=CODE,delta=2
    74                           	psect	text53,local,class=CODE,merge=1,delta=2
    75                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    76                           	dabs	1,0x7E,2
    77  0000                     
    78                           ; Version 2.10
    79                           ; Generated 31/07/2019 GMT
    80                           ; 
    81                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    82                           ; All rights reserved.
    83                           ; 
    84                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    85                           ; 
    86                           ; Redistribution and use in source and binary forms, with or without modification, are
    87                           ; permitted provided that the following conditions are met:
    88                           ; 
    89                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    90                           ;        conditions and the following disclaimer.
    91                           ; 
    92                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    93                           ;        of conditions and the following disclaimer in the documentation and/or other
    94                           ;        materials provided with the distribution.
    95                           ; 
    96                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    97                           ;        software without specific prior written permission.
    98                           ; 
    99                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   100                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   101                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   102                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   103                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   104                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   105                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   106                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   107                           ; 
   108                           ; 
   109                           ; Code-generator required, PIC16F15324 Definitions
   110                           ; 
   111                           ; SFR Addresses
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000E                     	;# 
   126  0012                     	;# 
   127  0014                     	;# 
   128  0018                     	;# 
   129  001A                     	;# 
   130  009B                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0119                     	;# 
   137  0119                     	;# 
   138  0119                     	;# 
   139  011A                     	;# 
   140  011A                     	;# 
   141  011A                     	;# 
   142  011B                     	;# 
   143  011B                     	;# 
   144  011B                     	;# 
   145  011B                     	;# 
   146  011B                     	;# 
   147  011C                     	;# 
   148  011C                     	;# 
   149  011C                     	;# 
   150  011D                     	;# 
   151  011D                     	;# 
   152  011D                     	;# 
   153  011E                     	;# 
   154  011E                     	;# 
   155  011E                     	;# 
   156  011F                     	;# 
   157  011F                     	;# 
   158  011F                     	;# 
   159  011F                     	;# 
   160  011F                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  018E                     	;# 
   164  018F                     	;# 
   165  0190                     	;# 
   166  0191                     	;# 
   167  0192                     	;# 
   168  020C                     	;# 
   169  020C                     	;# 
   170  020D                     	;# 
   171  020E                     	;# 
   172  020F                     	;# 
   173  020F                     	;# 
   174  0210                     	;# 
   175  0210                     	;# 
   176  0211                     	;# 
   177  0211                     	;# 
   178  028C                     	;# 
   179  028C                     	;# 
   180  028D                     	;# 
   181  028D                     	;# 
   182  028E                     	;# 
   183  028F                     	;# 
   184  0290                     	;# 
   185  0291                     	;# 
   186  030C                     	;# 
   187  030C                     	;# 
   188  030D                     	;# 
   189  030E                     	;# 
   190  030F                     	;# 
   191  0310                     	;# 
   192  0310                     	;# 
   193  0311                     	;# 
   194  0312                     	;# 
   195  0313                     	;# 
   196  0314                     	;# 
   197  0314                     	;# 
   198  0315                     	;# 
   199  0316                     	;# 
   200  0318                     	;# 
   201  0318                     	;# 
   202  0319                     	;# 
   203  031A                     	;# 
   204  031C                     	;# 
   205  031C                     	;# 
   206  031D                     	;# 
   207  031E                     	;# 
   208  038C                     	;# 
   209  038C                     	;# 
   210  038D                     	;# 
   211  038E                     	;# 
   212  058C                     	;# 
   213  058C                     	;# 
   214  058D                     	;# 
   215  058E                     	;# 
   216  058F                     	;# 
   217  058F                     	;# 
   218  0590                     	;# 
   219  0591                     	;# 
   220  0592                     	;# 
   221  0593                     	;# 
   222  059C                     	;# 
   223  059C                     	;# 
   224  059D                     	;# 
   225  059D                     	;# 
   226  059E                     	;# 
   227  059F                     	;# 
   228  060C                     	;# 
   229  060D                     	;# 
   230  060E                     	;# 
   231  060F                     	;# 
   232  0610                     	;# 
   233  0611                     	;# 
   234  0612                     	;# 
   235  0613                     	;# 
   236  0614                     	;# 
   237  070C                     	;# 
   238  070D                     	;# 
   239  070E                     	;# 
   240  070F                     	;# 
   241  0710                     	;# 
   242  0711                     	;# 
   243  0712                     	;# 
   244  0713                     	;# 
   245  0716                     	;# 
   246  0717                     	;# 
   247  0718                     	;# 
   248  0719                     	;# 
   249  071A                     	;# 
   250  071B                     	;# 
   251  071C                     	;# 
   252  071D                     	;# 
   253  0796                     	;# 
   254  0797                     	;# 
   255  0798                     	;# 
   256  0799                     	;# 
   257  079A                     	;# 
   258  079B                     	;# 
   259  080C                     	;# 
   260  080D                     	;# 
   261  080E                     	;# 
   262  080F                     	;# 
   263  0810                     	;# 
   264  0811                     	;# 
   265  0812                     	;# 
   266  0813                     	;# 
   267  0814                     	;# 
   268  081A                     	;# 
   269  081A                     	;# 
   270  081B                     	;# 
   271  081C                     	;# 
   272  081C                     	;# 
   273  081D                     	;# 
   274  081E                     	;# 
   275  081F                     	;# 
   276  088C                     	;# 
   277  088D                     	;# 
   278  088E                     	;# 
   279  088F                     	;# 
   280  0890                     	;# 
   281  0891                     	;# 
   282  0892                     	;# 
   283  0893                     	;# 
   284  0895                     	;# 
   285  0896                     	;# 
   286  090C                     	;# 
   287  090E                     	;# 
   288  090F                     	;# 
   289  091F                     	;# 
   290  098F                     	;# 
   291  098F                     	;# 
   292  0990                     	;# 
   293  0991                     	;# 
   294  0992                     	;# 
   295  0993                     	;# 
   296  0994                     	;# 
   297  0995                     	;# 
   298  0996                     	;# 
   299  0997                     	;# 
   300  0A19                     	;# 
   301  0A19                     	;# 
   302  0A1A                     	;# 
   303  0A1A                     	;# 
   304  0A1B                     	;# 
   305  0A1B                     	;# 
   306  0A1B                     	;# 
   307  0A1C                     	;# 
   308  0A1C                     	;# 
   309  0A1D                     	;# 
   310  0A1D                     	;# 
   311  0A1E                     	;# 
   312  0A1E                     	;# 
   313  0A1F                     	;# 
   314  0A1F                     	;# 
   315  0A1F                     	;# 
   316  1E0F                     	;# 
   317  1E10                     	;# 
   318  1E11                     	;# 
   319  1E12                     	;# 
   320  1E13                     	;# 
   321  1E14                     	;# 
   322  1E15                     	;# 
   323  1E16                     	;# 
   324  1E17                     	;# 
   325  1E18                     	;# 
   326  1E19                     	;# 
   327  1E1A                     	;# 
   328  1E1B                     	;# 
   329  1E1C                     	;# 
   330  1E1D                     	;# 
   331  1E1E                     	;# 
   332  1E1F                     	;# 
   333  1E20                     	;# 
   334  1E21                     	;# 
   335  1E22                     	;# 
   336  1E23                     	;# 
   337  1E24                     	;# 
   338  1E25                     	;# 
   339  1E26                     	;# 
   340  1E27                     	;# 
   341  1E28                     	;# 
   342  1E29                     	;# 
   343  1E2A                     	;# 
   344  1E2B                     	;# 
   345  1E2C                     	;# 
   346  1E2D                     	;# 
   347  1E2E                     	;# 
   348  1E2F                     	;# 
   349  1E30                     	;# 
   350  1E31                     	;# 
   351  1E32                     	;# 
   352  1E33                     	;# 
   353  1E34                     	;# 
   354  1E35                     	;# 
   355  1E36                     	;# 
   356  1E37                     	;# 
   357  1E8F                     	;# 
   358  1E90                     	;# 
   359  1E91                     	;# 
   360  1E92                     	;# 
   361  1E93                     	;# 
   362  1E9C                     	;# 
   363  1EA1                     	;# 
   364  1EA2                     	;# 
   365  1EB1                     	;# 
   366  1EBB                     	;# 
   367  1EBC                     	;# 
   368  1EBD                     	;# 
   369  1EBE                     	;# 
   370  1EC3                     	;# 
   371  1EC5                     	;# 
   372  1EC6                     	;# 
   373  1EC7                     	;# 
   374  1ECB                     	;# 
   375  1ECC                     	;# 
   376  1ECD                     	;# 
   377  1ECE                     	;# 
   378  1F10                     	;# 
   379  1F11                     	;# 
   380  1F12                     	;# 
   381  1F13                     	;# 
   382  1F14                     	;# 
   383  1F15                     	;# 
   384  1F20                     	;# 
   385  1F21                     	;# 
   386  1F22                     	;# 
   387  1F23                     	;# 
   388  1F24                     	;# 
   389  1F25                     	;# 
   390  1F38                     	;# 
   391  1F39                     	;# 
   392  1F3A                     	;# 
   393  1F3B                     	;# 
   394  1F3C                     	;# 
   395  1F3D                     	;# 
   396  1F3E                     	;# 
   397  1F3F                     	;# 
   398  1F4E                     	;# 
   399  1F4F                     	;# 
   400  1F50                     	;# 
   401  1F51                     	;# 
   402  1F52                     	;# 
   403  1F53                     	;# 
   404  1F54                     	;# 
   405  1F55                     	;# 
   406  1FE4                     	;# 
   407  1FE5                     	;# 
   408  1FE6                     	;# 
   409  1FE7                     	;# 
   410  1FE8                     	;# 
   411  1FE8                     	;# 
   412  1FE9                     	;# 
   413  1FEA                     	;# 
   414  1FEA                     	;# 
   415  1FEB                     	;# 
   416  1FED                     	;# 
   417  1FEE                     	;# 
   418  1FEF                     	;# 
   419  0000                     	;# 
   420  0001                     	;# 
   421  0002                     	;# 
   422  0003                     	;# 
   423  0004                     	;# 
   424  0005                     	;# 
   425  0006                     	;# 
   426  0007                     	;# 
   427  0008                     	;# 
   428  0009                     	;# 
   429  000A                     	;# 
   430  000B                     	;# 
   431  000C                     	;# 
   432  000E                     	;# 
   433  0012                     	;# 
   434  0014                     	;# 
   435  0018                     	;# 
   436  001A                     	;# 
   437  009B                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  009F                     	;# 
   443  0119                     	;# 
   444  0119                     	;# 
   445  0119                     	;# 
   446  011A                     	;# 
   447  011A                     	;# 
   448  011A                     	;# 
   449  011B                     	;# 
   450  011B                     	;# 
   451  011B                     	;# 
   452  011B                     	;# 
   453  011B                     	;# 
   454  011C                     	;# 
   455  011C                     	;# 
   456  011C                     	;# 
   457  011D                     	;# 
   458  011D                     	;# 
   459  011D                     	;# 
   460  011E                     	;# 
   461  011E                     	;# 
   462  011E                     	;# 
   463  011F                     	;# 
   464  011F                     	;# 
   465  011F                     	;# 
   466  011F                     	;# 
   467  011F                     	;# 
   468  018C                     	;# 
   469  018D                     	;# 
   470  018E                     	;# 
   471  018F                     	;# 
   472  0190                     	;# 
   473  0191                     	;# 
   474  0192                     	;# 
   475  020C                     	;# 
   476  020C                     	;# 
   477  020D                     	;# 
   478  020E                     	;# 
   479  020F                     	;# 
   480  020F                     	;# 
   481  0210                     	;# 
   482  0210                     	;# 
   483  0211                     	;# 
   484  0211                     	;# 
   485  028C                     	;# 
   486  028C                     	;# 
   487  028D                     	;# 
   488  028D                     	;# 
   489  028E                     	;# 
   490  028F                     	;# 
   491  0290                     	;# 
   492  0291                     	;# 
   493  030C                     	;# 
   494  030C                     	;# 
   495  030D                     	;# 
   496  030E                     	;# 
   497  030F                     	;# 
   498  0310                     	;# 
   499  0310                     	;# 
   500  0311                     	;# 
   501  0312                     	;# 
   502  0313                     	;# 
   503  0314                     	;# 
   504  0314                     	;# 
   505  0315                     	;# 
   506  0316                     	;# 
   507  0318                     	;# 
   508  0318                     	;# 
   509  0319                     	;# 
   510  031A                     	;# 
   511  031C                     	;# 
   512  031C                     	;# 
   513  031D                     	;# 
   514  031E                     	;# 
   515  038C                     	;# 
   516  038C                     	;# 
   517  038D                     	;# 
   518  038E                     	;# 
   519  058C                     	;# 
   520  058C                     	;# 
   521  058D                     	;# 
   522  058E                     	;# 
   523  058F                     	;# 
   524  058F                     	;# 
   525  0590                     	;# 
   526  0591                     	;# 
   527  0592                     	;# 
   528  0593                     	;# 
   529  059C                     	;# 
   530  059C                     	;# 
   531  059D                     	;# 
   532  059D                     	;# 
   533  059E                     	;# 
   534  059F                     	;# 
   535  060C                     	;# 
   536  060D                     	;# 
   537  060E                     	;# 
   538  060F                     	;# 
   539  0610                     	;# 
   540  0611                     	;# 
   541  0612                     	;# 
   542  0613                     	;# 
   543  0614                     	;# 
   544  070C                     	;# 
   545  070D                     	;# 
   546  070E                     	;# 
   547  070F                     	;# 
   548  0710                     	;# 
   549  0711                     	;# 
   550  0712                     	;# 
   551  0713                     	;# 
   552  0716                     	;# 
   553  0717                     	;# 
   554  0718                     	;# 
   555  0719                     	;# 
   556  071A                     	;# 
   557  071B                     	;# 
   558  071C                     	;# 
   559  071D                     	;# 
   560  0796                     	;# 
   561  0797                     	;# 
   562  0798                     	;# 
   563  0799                     	;# 
   564  079A                     	;# 
   565  079B                     	;# 
   566  080C                     	;# 
   567  080D                     	;# 
   568  080E                     	;# 
   569  080F                     	;# 
   570  0810                     	;# 
   571  0811                     	;# 
   572  0812                     	;# 
   573  0813                     	;# 
   574  0814                     	;# 
   575  081A                     	;# 
   576  081A                     	;# 
   577  081B                     	;# 
   578  081C                     	;# 
   579  081C                     	;# 
   580  081D                     	;# 
   581  081E                     	;# 
   582  081F                     	;# 
   583  088C                     	;# 
   584  088D                     	;# 
   585  088E                     	;# 
   586  088F                     	;# 
   587  0890                     	;# 
   588  0891                     	;# 
   589  0892                     	;# 
   590  0893                     	;# 
   591  0895                     	;# 
   592  0896                     	;# 
   593  090C                     	;# 
   594  090E                     	;# 
   595  090F                     	;# 
   596  091F                     	;# 
   597  098F                     	;# 
   598  098F                     	;# 
   599  0990                     	;# 
   600  0991                     	;# 
   601  0992                     	;# 
   602  0993                     	;# 
   603  0994                     	;# 
   604  0995                     	;# 
   605  0996                     	;# 
   606  0997                     	;# 
   607  0A19                     	;# 
   608  0A19                     	;# 
   609  0A1A                     	;# 
   610  0A1A                     	;# 
   611  0A1B                     	;# 
   612  0A1B                     	;# 
   613  0A1B                     	;# 
   614  0A1C                     	;# 
   615  0A1C                     	;# 
   616  0A1D                     	;# 
   617  0A1D                     	;# 
   618  0A1E                     	;# 
   619  0A1E                     	;# 
   620  0A1F                     	;# 
   621  0A1F                     	;# 
   622  0A1F                     	;# 
   623  1E0F                     	;# 
   624  1E10                     	;# 
   625  1E11                     	;# 
   626  1E12                     	;# 
   627  1E13                     	;# 
   628  1E14                     	;# 
   629  1E15                     	;# 
   630  1E16                     	;# 
   631  1E17                     	;# 
   632  1E18                     	;# 
   633  1E19                     	;# 
   634  1E1A                     	;# 
   635  1E1B                     	;# 
   636  1E1C                     	;# 
   637  1E1D                     	;# 
   638  1E1E                     	;# 
   639  1E1F                     	;# 
   640  1E20                     	;# 
   641  1E21                     	;# 
   642  1E22                     	;# 
   643  1E23                     	;# 
   644  1E24                     	;# 
   645  1E25                     	;# 
   646  1E26                     	;# 
   647  1E27                     	;# 
   648  1E28                     	;# 
   649  1E29                     	;# 
   650  1E2A                     	;# 
   651  1E2B                     	;# 
   652  1E2C                     	;# 
   653  1E2D                     	;# 
   654  1E2E                     	;# 
   655  1E2F                     	;# 
   656  1E30                     	;# 
   657  1E31                     	;# 
   658  1E32                     	;# 
   659  1E33                     	;# 
   660  1E34                     	;# 
   661  1E35                     	;# 
   662  1E36                     	;# 
   663  1E37                     	;# 
   664  1E8F                     	;# 
   665  1E90                     	;# 
   666  1E91                     	;# 
   667  1E92                     	;# 
   668  1E93                     	;# 
   669  1E9C                     	;# 
   670  1EA1                     	;# 
   671  1EA2                     	;# 
   672  1EB1                     	;# 
   673  1EBB                     	;# 
   674  1EBC                     	;# 
   675  1EBD                     	;# 
   676  1EBE                     	;# 
   677  1EC3                     	;# 
   678  1EC5                     	;# 
   679  1EC6                     	;# 
   680  1EC7                     	;# 
   681  1ECB                     	;# 
   682  1ECC                     	;# 
   683  1ECD                     	;# 
   684  1ECE                     	;# 
   685  1F10                     	;# 
   686  1F11                     	;# 
   687  1F12                     	;# 
   688  1F13                     	;# 
   689  1F14                     	;# 
   690  1F15                     	;# 
   691  1F20                     	;# 
   692  1F21                     	;# 
   693  1F22                     	;# 
   694  1F23                     	;# 
   695  1F24                     	;# 
   696  1F25                     	;# 
   697  1F38                     	;# 
   698  1F39                     	;# 
   699  1F3A                     	;# 
   700  1F3B                     	;# 
   701  1F3C                     	;# 
   702  1F3D                     	;# 
   703  1F3E                     	;# 
   704  1F3F                     	;# 
   705  1F4E                     	;# 
   706  1F4F                     	;# 
   707  1F50                     	;# 
   708  1F51                     	;# 
   709  1F52                     	;# 
   710  1F53                     	;# 
   711  1F54                     	;# 
   712  1F55                     	;# 
   713  1FE4                     	;# 
   714  1FE5                     	;# 
   715  1FE6                     	;# 
   716  1FE7                     	;# 
   717  1FE8                     	;# 
   718  1FE8                     	;# 
   719  1FE9                     	;# 
   720  1FEA                     	;# 
   721  1FEA                     	;# 
   722  1FEB                     	;# 
   723  1FED                     	;# 
   724  1FEE                     	;# 
   725  1FEF                     	;# 
   726  0000                     	;# 
   727  0001                     	;# 
   728  0002                     	;# 
   729  0003                     	;# 
   730  0004                     	;# 
   731  0005                     	;# 
   732  0006                     	;# 
   733  0007                     	;# 
   734  0008                     	;# 
   735  0009                     	;# 
   736  000A                     	;# 
   737  000B                     	;# 
   738  000C                     	;# 
   739  000E                     	;# 
   740  0012                     	;# 
   741  0014                     	;# 
   742  0018                     	;# 
   743  001A                     	;# 
   744  009B                     	;# 
   745  009B                     	;# 
   746  009C                     	;# 
   747  009D                     	;# 
   748  009E                     	;# 
   749  009F                     	;# 
   750  0119                     	;# 
   751  0119                     	;# 
   752  0119                     	;# 
   753  011A                     	;# 
   754  011A                     	;# 
   755  011A                     	;# 
   756  011B                     	;# 
   757  011B                     	;# 
   758  011B                     	;# 
   759  011B                     	;# 
   760  011B                     	;# 
   761  011C                     	;# 
   762  011C                     	;# 
   763  011C                     	;# 
   764  011D                     	;# 
   765  011D                     	;# 
   766  011D                     	;# 
   767  011E                     	;# 
   768  011E                     	;# 
   769  011E                     	;# 
   770  011F                     	;# 
   771  011F                     	;# 
   772  011F                     	;# 
   773  011F                     	;# 
   774  011F                     	;# 
   775  018C                     	;# 
   776  018D                     	;# 
   777  018E                     	;# 
   778  018F                     	;# 
   779  0190                     	;# 
   780  0191                     	;# 
   781  0192                     	;# 
   782  020C                     	;# 
   783  020C                     	;# 
   784  020D                     	;# 
   785  020E                     	;# 
   786  020F                     	;# 
   787  020F                     	;# 
   788  0210                     	;# 
   789  0210                     	;# 
   790  0211                     	;# 
   791  0211                     	;# 
   792  028C                     	;# 
   793  028C                     	;# 
   794  028D                     	;# 
   795  028D                     	;# 
   796  028E                     	;# 
   797  028F                     	;# 
   798  0290                     	;# 
   799  0291                     	;# 
   800  030C                     	;# 
   801  030C                     	;# 
   802  030D                     	;# 
   803  030E                     	;# 
   804  030F                     	;# 
   805  0310                     	;# 
   806  0310                     	;# 
   807  0311                     	;# 
   808  0312                     	;# 
   809  0313                     	;# 
   810  0314                     	;# 
   811  0314                     	;# 
   812  0315                     	;# 
   813  0316                     	;# 
   814  0318                     	;# 
   815  0318                     	;# 
   816  0319                     	;# 
   817  031A                     	;# 
   818  031C                     	;# 
   819  031C                     	;# 
   820  031D                     	;# 
   821  031E                     	;# 
   822  038C                     	;# 
   823  038C                     	;# 
   824  038D                     	;# 
   825  038E                     	;# 
   826  058C                     	;# 
   827  058C                     	;# 
   828  058D                     	;# 
   829  058E                     	;# 
   830  058F                     	;# 
   831  058F                     	;# 
   832  0590                     	;# 
   833  0591                     	;# 
   834  0592                     	;# 
   835  0593                     	;# 
   836  059C                     	;# 
   837  059C                     	;# 
   838  059D                     	;# 
   839  059D                     	;# 
   840  059E                     	;# 
   841  059F                     	;# 
   842  060C                     	;# 
   843  060D                     	;# 
   844  060E                     	;# 
   845  060F                     	;# 
   846  0610                     	;# 
   847  0611                     	;# 
   848  0612                     	;# 
   849  0613                     	;# 
   850  0614                     	;# 
   851  070C                     	;# 
   852  070D                     	;# 
   853  070E                     	;# 
   854  070F                     	;# 
   855  0710                     	;# 
   856  0711                     	;# 
   857  0712                     	;# 
   858  0713                     	;# 
   859  0716                     	;# 
   860  0717                     	;# 
   861  0718                     	;# 
   862  0719                     	;# 
   863  071A                     	;# 
   864  071B                     	;# 
   865  071C                     	;# 
   866  071D                     	;# 
   867  0796                     	;# 
   868  0797                     	;# 
   869  0798                     	;# 
   870  0799                     	;# 
   871  079A                     	;# 
   872  079B                     	;# 
   873  080C                     	;# 
   874  080D                     	;# 
   875  080E                     	;# 
   876  080F                     	;# 
   877  0810                     	;# 
   878  0811                     	;# 
   879  0812                     	;# 
   880  0813                     	;# 
   881  0814                     	;# 
   882  081A                     	;# 
   883  081A                     	;# 
   884  081B                     	;# 
   885  081C                     	;# 
   886  081C                     	;# 
   887  081D                     	;# 
   888  081E                     	;# 
   889  081F                     	;# 
   890  088C                     	;# 
   891  088D                     	;# 
   892  088E                     	;# 
   893  088F                     	;# 
   894  0890                     	;# 
   895  0891                     	;# 
   896  0892                     	;# 
   897  0893                     	;# 
   898  0895                     	;# 
   899  0896                     	;# 
   900  090C                     	;# 
   901  090E                     	;# 
   902  090F                     	;# 
   903  091F                     	;# 
   904  098F                     	;# 
   905  098F                     	;# 
   906  0990                     	;# 
   907  0991                     	;# 
   908  0992                     	;# 
   909  0993                     	;# 
   910  0994                     	;# 
   911  0995                     	;# 
   912  0996                     	;# 
   913  0997                     	;# 
   914  0A19                     	;# 
   915  0A19                     	;# 
   916  0A1A                     	;# 
   917  0A1A                     	;# 
   918  0A1B                     	;# 
   919  0A1B                     	;# 
   920  0A1B                     	;# 
   921  0A1C                     	;# 
   922  0A1C                     	;# 
   923  0A1D                     	;# 
   924  0A1D                     	;# 
   925  0A1E                     	;# 
   926  0A1E                     	;# 
   927  0A1F                     	;# 
   928  0A1F                     	;# 
   929  0A1F                     	;# 
   930  1E0F                     	;# 
   931  1E10                     	;# 
   932  1E11                     	;# 
   933  1E12                     	;# 
   934  1E13                     	;# 
   935  1E14                     	;# 
   936  1E15                     	;# 
   937  1E16                     	;# 
   938  1E17                     	;# 
   939  1E18                     	;# 
   940  1E19                     	;# 
   941  1E1A                     	;# 
   942  1E1B                     	;# 
   943  1E1C                     	;# 
   944  1E1D                     	;# 
   945  1E1E                     	;# 
   946  1E1F                     	;# 
   947  1E20                     	;# 
   948  1E21                     	;# 
   949  1E22                     	;# 
   950  1E23                     	;# 
   951  1E24                     	;# 
   952  1E25                     	;# 
   953  1E26                     	;# 
   954  1E27                     	;# 
   955  1E28                     	;# 
   956  1E29                     	;# 
   957  1E2A                     	;# 
   958  1E2B                     	;# 
   959  1E2C                     	;# 
   960  1E2D                     	;# 
   961  1E2E                     	;# 
   962  1E2F                     	;# 
   963  1E30                     	;# 
   964  1E31                     	;# 
   965  1E32                     	;# 
   966  1E33                     	;# 
   967  1E34                     	;# 
   968  1E35                     	;# 
   969  1E36                     	;# 
   970  1E37                     	;# 
   971  1E8F                     	;# 
   972  1E90                     	;# 
   973  1E91                     	;# 
   974  1E92                     	;# 
   975  1E93                     	;# 
   976  1E9C                     	;# 
   977  1EA1                     	;# 
   978  1EA2                     	;# 
   979  1EB1                     	;# 
   980  1EBB                     	;# 
   981  1EBC                     	;# 
   982  1EBD                     	;# 
   983  1EBE                     	;# 
   984  1EC3                     	;# 
   985  1EC5                     	;# 
   986  1EC6                     	;# 
   987  1EC7                     	;# 
   988  1ECB                     	;# 
   989  1ECC                     	;# 
   990  1ECD                     	;# 
   991  1ECE                     	;# 
   992  1F10                     	;# 
   993  1F11                     	;# 
   994  1F12                     	;# 
   995  1F13                     	;# 
   996  1F14                     	;# 
   997  1F15                     	;# 
   998  1F20                     	;# 
   999  1F21                     	;# 
  1000  1F22                     	;# 
  1001  1F23                     	;# 
  1002  1F24                     	;# 
  1003  1F25                     	;# 
  1004  1F38                     	;# 
  1005  1F39                     	;# 
  1006  1F3A                     	;# 
  1007  1F3B                     	;# 
  1008  1F3C                     	;# 
  1009  1F3D                     	;# 
  1010  1F3E                     	;# 
  1011  1F3F                     	;# 
  1012  1F4E                     	;# 
  1013  1F4F                     	;# 
  1014  1F50                     	;# 
  1015  1F51                     	;# 
  1016  1F52                     	;# 
  1017  1F53                     	;# 
  1018  1F54                     	;# 
  1019  1F55                     	;# 
  1020  1FE4                     	;# 
  1021  1FE5                     	;# 
  1022  1FE6                     	;# 
  1023  1FE7                     	;# 
  1024  1FE8                     	;# 
  1025  1FE8                     	;# 
  1026  1FE9                     	;# 
  1027  1FEA                     	;# 
  1028  1FEA                     	;# 
  1029  1FEB                     	;# 
  1030  1FED                     	;# 
  1031  1FEE                     	;# 
  1032  1FEF                     	;# 
  1033  0000                     	;# 
  1034  0001                     	;# 
  1035  0002                     	;# 
  1036  0003                     	;# 
  1037  0004                     	;# 
  1038  0005                     	;# 
  1039  0006                     	;# 
  1040  0007                     	;# 
  1041  0008                     	;# 
  1042  0009                     	;# 
  1043  000A                     	;# 
  1044  000B                     	;# 
  1045  000C                     	;# 
  1046  000E                     	;# 
  1047  0012                     	;# 
  1048  0014                     	;# 
  1049  0018                     	;# 
  1050  001A                     	;# 
  1051  009B                     	;# 
  1052  009B                     	;# 
  1053  009C                     	;# 
  1054  009D                     	;# 
  1055  009E                     	;# 
  1056  009F                     	;# 
  1057  0119                     	;# 
  1058  0119                     	;# 
  1059  0119                     	;# 
  1060  011A                     	;# 
  1061  011A                     	;# 
  1062  011A                     	;# 
  1063  011B                     	;# 
  1064  011B                     	;# 
  1065  011B                     	;# 
  1066  011B                     	;# 
  1067  011B                     	;# 
  1068  011C                     	;# 
  1069  011C                     	;# 
  1070  011C                     	;# 
  1071  011D                     	;# 
  1072  011D                     	;# 
  1073  011D                     	;# 
  1074  011E                     	;# 
  1075  011E                     	;# 
  1076  011E                     	;# 
  1077  011F                     	;# 
  1078  011F                     	;# 
  1079  011F                     	;# 
  1080  011F                     	;# 
  1081  011F                     	;# 
  1082  018C                     	;# 
  1083  018D                     	;# 
  1084  018E                     	;# 
  1085  018F                     	;# 
  1086  0190                     	;# 
  1087  0191                     	;# 
  1088  0192                     	;# 
  1089  020C                     	;# 
  1090  020C                     	;# 
  1091  020D                     	;# 
  1092  020E                     	;# 
  1093  020F                     	;# 
  1094  020F                     	;# 
  1095  0210                     	;# 
  1096  0210                     	;# 
  1097  0211                     	;# 
  1098  0211                     	;# 
  1099  028C                     	;# 
  1100  028C                     	;# 
  1101  028D                     	;# 
  1102  028D                     	;# 
  1103  028E                     	;# 
  1104  028F                     	;# 
  1105  0290                     	;# 
  1106  0291                     	;# 
  1107  030C                     	;# 
  1108  030C                     	;# 
  1109  030D                     	;# 
  1110  030E                     	;# 
  1111  030F                     	;# 
  1112  0310                     	;# 
  1113  0310                     	;# 
  1114  0311                     	;# 
  1115  0312                     	;# 
  1116  0313                     	;# 
  1117  0314                     	;# 
  1118  0314                     	;# 
  1119  0315                     	;# 
  1120  0316                     	;# 
  1121  0318                     	;# 
  1122  0318                     	;# 
  1123  0319                     	;# 
  1124  031A                     	;# 
  1125  031C                     	;# 
  1126  031C                     	;# 
  1127  031D                     	;# 
  1128  031E                     	;# 
  1129  038C                     	;# 
  1130  038C                     	;# 
  1131  038D                     	;# 
  1132  038E                     	;# 
  1133  058C                     	;# 
  1134  058C                     	;# 
  1135  058D                     	;# 
  1136  058E                     	;# 
  1137  058F                     	;# 
  1138  058F                     	;# 
  1139  0590                     	;# 
  1140  0591                     	;# 
  1141  0592                     	;# 
  1142  0593                     	;# 
  1143  059C                     	;# 
  1144  059C                     	;# 
  1145  059D                     	;# 
  1146  059D                     	;# 
  1147  059E                     	;# 
  1148  059F                     	;# 
  1149  060C                     	;# 
  1150  060D                     	;# 
  1151  060E                     	;# 
  1152  060F                     	;# 
  1153  0610                     	;# 
  1154  0611                     	;# 
  1155  0612                     	;# 
  1156  0613                     	;# 
  1157  0614                     	;# 
  1158  070C                     	;# 
  1159  070D                     	;# 
  1160  070E                     	;# 
  1161  070F                     	;# 
  1162  0710                     	;# 
  1163  0711                     	;# 
  1164  0712                     	;# 
  1165  0713                     	;# 
  1166  0716                     	;# 
  1167  0717                     	;# 
  1168  0718                     	;# 
  1169  0719                     	;# 
  1170  071A                     	;# 
  1171  071B                     	;# 
  1172  071C                     	;# 
  1173  071D                     	;# 
  1174  0796                     	;# 
  1175  0797                     	;# 
  1176  0798                     	;# 
  1177  0799                     	;# 
  1178  079A                     	;# 
  1179  079B                     	;# 
  1180  080C                     	;# 
  1181  080D                     	;# 
  1182  080E                     	;# 
  1183  080F                     	;# 
  1184  0810                     	;# 
  1185  0811                     	;# 
  1186  0812                     	;# 
  1187  0813                     	;# 
  1188  0814                     	;# 
  1189  081A                     	;# 
  1190  081A                     	;# 
  1191  081B                     	;# 
  1192  081C                     	;# 
  1193  081C                     	;# 
  1194  081D                     	;# 
  1195  081E                     	;# 
  1196  081F                     	;# 
  1197  088C                     	;# 
  1198  088D                     	;# 
  1199  088E                     	;# 
  1200  088F                     	;# 
  1201  0890                     	;# 
  1202  0891                     	;# 
  1203  0892                     	;# 
  1204  0893                     	;# 
  1205  0895                     	;# 
  1206  0896                     	;# 
  1207  090C                     	;# 
  1208  090E                     	;# 
  1209  090F                     	;# 
  1210  091F                     	;# 
  1211  098F                     	;# 
  1212  098F                     	;# 
  1213  0990                     	;# 
  1214  0991                     	;# 
  1215  0992                     	;# 
  1216  0993                     	;# 
  1217  0994                     	;# 
  1218  0995                     	;# 
  1219  0996                     	;# 
  1220  0997                     	;# 
  1221  0A19                     	;# 
  1222  0A19                     	;# 
  1223  0A1A                     	;# 
  1224  0A1A                     	;# 
  1225  0A1B                     	;# 
  1226  0A1B                     	;# 
  1227  0A1B                     	;# 
  1228  0A1C                     	;# 
  1229  0A1C                     	;# 
  1230  0A1D                     	;# 
  1231  0A1D                     	;# 
  1232  0A1E                     	;# 
  1233  0A1E                     	;# 
  1234  0A1F                     	;# 
  1235  0A1F                     	;# 
  1236  0A1F                     	;# 
  1237  1E0F                     	;# 
  1238  1E10                     	;# 
  1239  1E11                     	;# 
  1240  1E12                     	;# 
  1241  1E13                     	;# 
  1242  1E14                     	;# 
  1243  1E15                     	;# 
  1244  1E16                     	;# 
  1245  1E17                     	;# 
  1246  1E18                     	;# 
  1247  1E19                     	;# 
  1248  1E1A                     	;# 
  1249  1E1B                     	;# 
  1250  1E1C                     	;# 
  1251  1E1D                     	;# 
  1252  1E1E                     	;# 
  1253  1E1F                     	;# 
  1254  1E20                     	;# 
  1255  1E21                     	;# 
  1256  1E22                     	;# 
  1257  1E23                     	;# 
  1258  1E24                     	;# 
  1259  1E25                     	;# 
  1260  1E26                     	;# 
  1261  1E27                     	;# 
  1262  1E28                     	;# 
  1263  1E29                     	;# 
  1264  1E2A                     	;# 
  1265  1E2B                     	;# 
  1266  1E2C                     	;# 
  1267  1E2D                     	;# 
  1268  1E2E                     	;# 
  1269  1E2F                     	;# 
  1270  1E30                     	;# 
  1271  1E31                     	;# 
  1272  1E32                     	;# 
  1273  1E33                     	;# 
  1274  1E34                     	;# 
  1275  1E35                     	;# 
  1276  1E36                     	;# 
  1277  1E37                     	;# 
  1278  1E8F                     	;# 
  1279  1E90                     	;# 
  1280  1E91                     	;# 
  1281  1E92                     	;# 
  1282  1E93                     	;# 
  1283  1E9C                     	;# 
  1284  1EA1                     	;# 
  1285  1EA2                     	;# 
  1286  1EB1                     	;# 
  1287  1EBB                     	;# 
  1288  1EBC                     	;# 
  1289  1EBD                     	;# 
  1290  1EBE                     	;# 
  1291  1EC3                     	;# 
  1292  1EC5                     	;# 
  1293  1EC6                     	;# 
  1294  1EC7                     	;# 
  1295  1ECB                     	;# 
  1296  1ECC                     	;# 
  1297  1ECD                     	;# 
  1298  1ECE                     	;# 
  1299  1F10                     	;# 
  1300  1F11                     	;# 
  1301  1F12                     	;# 
  1302  1F13                     	;# 
  1303  1F14                     	;# 
  1304  1F15                     	;# 
  1305  1F20                     	;# 
  1306  1F21                     	;# 
  1307  1F22                     	;# 
  1308  1F23                     	;# 
  1309  1F24                     	;# 
  1310  1F25                     	;# 
  1311  1F38                     	;# 
  1312  1F39                     	;# 
  1313  1F3A                     	;# 
  1314  1F3B                     	;# 
  1315  1F3C                     	;# 
  1316  1F3D                     	;# 
  1317  1F3E                     	;# 
  1318  1F3F                     	;# 
  1319  1F4E                     	;# 
  1320  1F4F                     	;# 
  1321  1F50                     	;# 
  1322  1F51                     	;# 
  1323  1F52                     	;# 
  1324  1F53                     	;# 
  1325  1F54                     	;# 
  1326  1F55                     	;# 
  1327  1FE4                     	;# 
  1328  1FE5                     	;# 
  1329  1FE6                     	;# 
  1330  1FE7                     	;# 
  1331  1FE8                     	;# 
  1332  1FE8                     	;# 
  1333  1FE9                     	;# 
  1334  1FEA                     	;# 
  1335  1FEA                     	;# 
  1336  1FEB                     	;# 
  1337  1FED                     	;# 
  1338  1FEE                     	;# 
  1339  1FEF                     	;# 
  1340  0000                     	;# 
  1341  0001                     	;# 
  1342  0002                     	;# 
  1343  0003                     	;# 
  1344  0004                     	;# 
  1345  0005                     	;# 
  1346  0006                     	;# 
  1347  0007                     	;# 
  1348  0008                     	;# 
  1349  0009                     	;# 
  1350  000A                     	;# 
  1351  000B                     	;# 
  1352  000C                     	;# 
  1353  000E                     	;# 
  1354  0012                     	;# 
  1355  0014                     	;# 
  1356  0018                     	;# 
  1357  001A                     	;# 
  1358  009B                     	;# 
  1359  009B                     	;# 
  1360  009C                     	;# 
  1361  009D                     	;# 
  1362  009E                     	;# 
  1363  009F                     	;# 
  1364  0119                     	;# 
  1365  0119                     	;# 
  1366  0119                     	;# 
  1367  011A                     	;# 
  1368  011A                     	;# 
  1369  011A                     	;# 
  1370  011B                     	;# 
  1371  011B                     	;# 
  1372  011B                     	;# 
  1373  011B                     	;# 
  1374  011B                     	;# 
  1375  011C                     	;# 
  1376  011C                     	;# 
  1377  011C                     	;# 
  1378  011D                     	;# 
  1379  011D                     	;# 
  1380  011D                     	;# 
  1381  011E                     	;# 
  1382  011E                     	;# 
  1383  011E                     	;# 
  1384  011F                     	;# 
  1385  011F                     	;# 
  1386  011F                     	;# 
  1387  011F                     	;# 
  1388  011F                     	;# 
  1389  018C                     	;# 
  1390  018D                     	;# 
  1391  018E                     	;# 
  1392  018F                     	;# 
  1393  0190                     	;# 
  1394  0191                     	;# 
  1395  0192                     	;# 
  1396  020C                     	;# 
  1397  020C                     	;# 
  1398  020D                     	;# 
  1399  020E                     	;# 
  1400  020F                     	;# 
  1401  020F                     	;# 
  1402  0210                     	;# 
  1403  0210                     	;# 
  1404  0211                     	;# 
  1405  0211                     	;# 
  1406  028C                     	;# 
  1407  028C                     	;# 
  1408  028D                     	;# 
  1409  028D                     	;# 
  1410  028E                     	;# 
  1411  028F                     	;# 
  1412  0290                     	;# 
  1413  0291                     	;# 
  1414  030C                     	;# 
  1415  030C                     	;# 
  1416  030D                     	;# 
  1417  030E                     	;# 
  1418  030F                     	;# 
  1419  0310                     	;# 
  1420  0310                     	;# 
  1421  0311                     	;# 
  1422  0312                     	;# 
  1423  0313                     	;# 
  1424  0314                     	;# 
  1425  0314                     	;# 
  1426  0315                     	;# 
  1427  0316                     	;# 
  1428  0318                     	;# 
  1429  0318                     	;# 
  1430  0319                     	;# 
  1431  031A                     	;# 
  1432  031C                     	;# 
  1433  031C                     	;# 
  1434  031D                     	;# 
  1435  031E                     	;# 
  1436  038C                     	;# 
  1437  038C                     	;# 
  1438  038D                     	;# 
  1439  038E                     	;# 
  1440  058C                     	;# 
  1441  058C                     	;# 
  1442  058D                     	;# 
  1443  058E                     	;# 
  1444  058F                     	;# 
  1445  058F                     	;# 
  1446  0590                     	;# 
  1447  0591                     	;# 
  1448  0592                     	;# 
  1449  0593                     	;# 
  1450  059C                     	;# 
  1451  059C                     	;# 
  1452  059D                     	;# 
  1453  059D                     	;# 
  1454  059E                     	;# 
  1455  059F                     	;# 
  1456  060C                     	;# 
  1457  060D                     	;# 
  1458  060E                     	;# 
  1459  060F                     	;# 
  1460  0610                     	;# 
  1461  0611                     	;# 
  1462  0612                     	;# 
  1463  0613                     	;# 
  1464  0614                     	;# 
  1465  070C                     	;# 
  1466  070D                     	;# 
  1467  070E                     	;# 
  1468  070F                     	;# 
  1469  0710                     	;# 
  1470  0711                     	;# 
  1471  0712                     	;# 
  1472  0713                     	;# 
  1473  0716                     	;# 
  1474  0717                     	;# 
  1475  0718                     	;# 
  1476  0719                     	;# 
  1477  071A                     	;# 
  1478  071B                     	;# 
  1479  071C                     	;# 
  1480  071D                     	;# 
  1481  0796                     	;# 
  1482  0797                     	;# 
  1483  0798                     	;# 
  1484  0799                     	;# 
  1485  079A                     	;# 
  1486  079B                     	;# 
  1487  080C                     	;# 
  1488  080D                     	;# 
  1489  080E                     	;# 
  1490  080F                     	;# 
  1491  0810                     	;# 
  1492  0811                     	;# 
  1493  0812                     	;# 
  1494  0813                     	;# 
  1495  0814                     	;# 
  1496  081A                     	;# 
  1497  081A                     	;# 
  1498  081B                     	;# 
  1499  081C                     	;# 
  1500  081C                     	;# 
  1501  081D                     	;# 
  1502  081E                     	;# 
  1503  081F                     	;# 
  1504  088C                     	;# 
  1505  088D                     	;# 
  1506  088E                     	;# 
  1507  088F                     	;# 
  1508  0890                     	;# 
  1509  0891                     	;# 
  1510  0892                     	;# 
  1511  0893                     	;# 
  1512  0895                     	;# 
  1513  0896                     	;# 
  1514  090C                     	;# 
  1515  090E                     	;# 
  1516  090F                     	;# 
  1517  091F                     	;# 
  1518  098F                     	;# 
  1519  098F                     	;# 
  1520  0990                     	;# 
  1521  0991                     	;# 
  1522  0992                     	;# 
  1523  0993                     	;# 
  1524  0994                     	;# 
  1525  0995                     	;# 
  1526  0996                     	;# 
  1527  0997                     	;# 
  1528  0A19                     	;# 
  1529  0A19                     	;# 
  1530  0A1A                     	;# 
  1531  0A1A                     	;# 
  1532  0A1B                     	;# 
  1533  0A1B                     	;# 
  1534  0A1B                     	;# 
  1535  0A1C                     	;# 
  1536  0A1C                     	;# 
  1537  0A1D                     	;# 
  1538  0A1D                     	;# 
  1539  0A1E                     	;# 
  1540  0A1E                     	;# 
  1541  0A1F                     	;# 
  1542  0A1F                     	;# 
  1543  0A1F                     	;# 
  1544  1E0F                     	;# 
  1545  1E10                     	;# 
  1546  1E11                     	;# 
  1547  1E12                     	;# 
  1548  1E13                     	;# 
  1549  1E14                     	;# 
  1550  1E15                     	;# 
  1551  1E16                     	;# 
  1552  1E17                     	;# 
  1553  1E18                     	;# 
  1554  1E19                     	;# 
  1555  1E1A                     	;# 
  1556  1E1B                     	;# 
  1557  1E1C                     	;# 
  1558  1E1D                     	;# 
  1559  1E1E                     	;# 
  1560  1E1F                     	;# 
  1561  1E20                     	;# 
  1562  1E21                     	;# 
  1563  1E22                     	;# 
  1564  1E23                     	;# 
  1565  1E24                     	;# 
  1566  1E25                     	;# 
  1567  1E26                     	;# 
  1568  1E27                     	;# 
  1569  1E28                     	;# 
  1570  1E29                     	;# 
  1571  1E2A                     	;# 
  1572  1E2B                     	;# 
  1573  1E2C                     	;# 
  1574  1E2D                     	;# 
  1575  1E2E                     	;# 
  1576  1E2F                     	;# 
  1577  1E30                     	;# 
  1578  1E31                     	;# 
  1579  1E32                     	;# 
  1580  1E33                     	;# 
  1581  1E34                     	;# 
  1582  1E35                     	;# 
  1583  1E36                     	;# 
  1584  1E37                     	;# 
  1585  1E8F                     	;# 
  1586  1E90                     	;# 
  1587  1E91                     	;# 
  1588  1E92                     	;# 
  1589  1E93                     	;# 
  1590  1E9C                     	;# 
  1591  1EA1                     	;# 
  1592  1EA2                     	;# 
  1593  1EB1                     	;# 
  1594  1EBB                     	;# 
  1595  1EBC                     	;# 
  1596  1EBD                     	;# 
  1597  1EBE                     	;# 
  1598  1EC3                     	;# 
  1599  1EC5                     	;# 
  1600  1EC6                     	;# 
  1601  1EC7                     	;# 
  1602  1ECB                     	;# 
  1603  1ECC                     	;# 
  1604  1ECD                     	;# 
  1605  1ECE                     	;# 
  1606  1F10                     	;# 
  1607  1F11                     	;# 
  1608  1F12                     	;# 
  1609  1F13                     	;# 
  1610  1F14                     	;# 
  1611  1F15                     	;# 
  1612  1F20                     	;# 
  1613  1F21                     	;# 
  1614  1F22                     	;# 
  1615  1F23                     	;# 
  1616  1F24                     	;# 
  1617  1F25                     	;# 
  1618  1F38                     	;# 
  1619  1F39                     	;# 
  1620  1F3A                     	;# 
  1621  1F3B                     	;# 
  1622  1F3C                     	;# 
  1623  1F3D                     	;# 
  1624  1F3E                     	;# 
  1625  1F3F                     	;# 
  1626  1F4E                     	;# 
  1627  1F4F                     	;# 
  1628  1F50                     	;# 
  1629  1F51                     	;# 
  1630  1F52                     	;# 
  1631  1F53                     	;# 
  1632  1F54                     	;# 
  1633  1F55                     	;# 
  1634  1FE4                     	;# 
  1635  1FE5                     	;# 
  1636  1FE6                     	;# 
  1637  1FE7                     	;# 
  1638  1FE8                     	;# 
  1639  1FE8                     	;# 
  1640  1FE9                     	;# 
  1641  1FEA                     	;# 
  1642  1FEA                     	;# 
  1643  1FEB                     	;# 
  1644  1FED                     	;# 
  1645  1FEE                     	;# 
  1646  1FEF                     	;# 
  1647  0000                     	;# 
  1648  0001                     	;# 
  1649  0002                     	;# 
  1650  0003                     	;# 
  1651  0004                     	;# 
  1652  0005                     	;# 
  1653  0006                     	;# 
  1654  0007                     	;# 
  1655  0008                     	;# 
  1656  0009                     	;# 
  1657  000A                     	;# 
  1658  000B                     	;# 
  1659  000C                     	;# 
  1660  000E                     	;# 
  1661  0012                     	;# 
  1662  0014                     	;# 
  1663  0018                     	;# 
  1664  001A                     	;# 
  1665  009B                     	;# 
  1666  009B                     	;# 
  1667  009C                     	;# 
  1668  009D                     	;# 
  1669  009E                     	;# 
  1670  009F                     	;# 
  1671  0119                     	;# 
  1672  0119                     	;# 
  1673  0119                     	;# 
  1674  011A                     	;# 
  1675  011A                     	;# 
  1676  011A                     	;# 
  1677  011B                     	;# 
  1678  011B                     	;# 
  1679  011B                     	;# 
  1680  011B                     	;# 
  1681  011B                     	;# 
  1682  011C                     	;# 
  1683  011C                     	;# 
  1684  011C                     	;# 
  1685  011D                     	;# 
  1686  011D                     	;# 
  1687  011D                     	;# 
  1688  011E                     	;# 
  1689  011E                     	;# 
  1690  011E                     	;# 
  1691  011F                     	;# 
  1692  011F                     	;# 
  1693  011F                     	;# 
  1694  011F                     	;# 
  1695  011F                     	;# 
  1696  018C                     	;# 
  1697  018D                     	;# 
  1698  018E                     	;# 
  1699  018F                     	;# 
  1700  0190                     	;# 
  1701  0191                     	;# 
  1702  0192                     	;# 
  1703  020C                     	;# 
  1704  020C                     	;# 
  1705  020D                     	;# 
  1706  020E                     	;# 
  1707  020F                     	;# 
  1708  020F                     	;# 
  1709  0210                     	;# 
  1710  0210                     	;# 
  1711  0211                     	;# 
  1712  0211                     	;# 
  1713  028C                     	;# 
  1714  028C                     	;# 
  1715  028D                     	;# 
  1716  028D                     	;# 
  1717  028E                     	;# 
  1718  028F                     	;# 
  1719  0290                     	;# 
  1720  0291                     	;# 
  1721  030C                     	;# 
  1722  030C                     	;# 
  1723  030D                     	;# 
  1724  030E                     	;# 
  1725  030F                     	;# 
  1726  0310                     	;# 
  1727  0310                     	;# 
  1728  0311                     	;# 
  1729  0312                     	;# 
  1730  0313                     	;# 
  1731  0314                     	;# 
  1732  0314                     	;# 
  1733  0315                     	;# 
  1734  0316                     	;# 
  1735  0318                     	;# 
  1736  0318                     	;# 
  1737  0319                     	;# 
  1738  031A                     	;# 
  1739  031C                     	;# 
  1740  031C                     	;# 
  1741  031D                     	;# 
  1742  031E                     	;# 
  1743  038C                     	;# 
  1744  038C                     	;# 
  1745  038D                     	;# 
  1746  038E                     	;# 
  1747  058C                     	;# 
  1748  058C                     	;# 
  1749  058D                     	;# 
  1750  058E                     	;# 
  1751  058F                     	;# 
  1752  058F                     	;# 
  1753  0590                     	;# 
  1754  0591                     	;# 
  1755  0592                     	;# 
  1756  0593                     	;# 
  1757  059C                     	;# 
  1758  059C                     	;# 
  1759  059D                     	;# 
  1760  059D                     	;# 
  1761  059E                     	;# 
  1762  059F                     	;# 
  1763  060C                     	;# 
  1764  060D                     	;# 
  1765  060E                     	;# 
  1766  060F                     	;# 
  1767  0610                     	;# 
  1768  0611                     	;# 
  1769  0612                     	;# 
  1770  0613                     	;# 
  1771  0614                     	;# 
  1772  070C                     	;# 
  1773  070D                     	;# 
  1774  070E                     	;# 
  1775  070F                     	;# 
  1776  0710                     	;# 
  1777  0711                     	;# 
  1778  0712                     	;# 
  1779  0713                     	;# 
  1780  0716                     	;# 
  1781  0717                     	;# 
  1782  0718                     	;# 
  1783  0719                     	;# 
  1784  071A                     	;# 
  1785  071B                     	;# 
  1786  071C                     	;# 
  1787  071D                     	;# 
  1788  0796                     	;# 
  1789  0797                     	;# 
  1790  0798                     	;# 
  1791  0799                     	;# 
  1792  079A                     	;# 
  1793  079B                     	;# 
  1794  080C                     	;# 
  1795  080D                     	;# 
  1796  080E                     	;# 
  1797  080F                     	;# 
  1798  0810                     	;# 
  1799  0811                     	;# 
  1800  0812                     	;# 
  1801  0813                     	;# 
  1802  0814                     	;# 
  1803  081A                     	;# 
  1804  081A                     	;# 
  1805  081B                     	;# 
  1806  081C                     	;# 
  1807  081C                     	;# 
  1808  081D                     	;# 
  1809  081E                     	;# 
  1810  081F                     	;# 
  1811  088C                     	;# 
  1812  088D                     	;# 
  1813  088E                     	;# 
  1814  088F                     	;# 
  1815  0890                     	;# 
  1816  0891                     	;# 
  1817  0892                     	;# 
  1818  0893                     	;# 
  1819  0895                     	;# 
  1820  0896                     	;# 
  1821  090C                     	;# 
  1822  090E                     	;# 
  1823  090F                     	;# 
  1824  091F                     	;# 
  1825  098F                     	;# 
  1826  098F                     	;# 
  1827  0990                     	;# 
  1828  0991                     	;# 
  1829  0992                     	;# 
  1830  0993                     	;# 
  1831  0994                     	;# 
  1832  0995                     	;# 
  1833  0996                     	;# 
  1834  0997                     	;# 
  1835  0A19                     	;# 
  1836  0A19                     	;# 
  1837  0A1A                     	;# 
  1838  0A1A                     	;# 
  1839  0A1B                     	;# 
  1840  0A1B                     	;# 
  1841  0A1B                     	;# 
  1842  0A1C                     	;# 
  1843  0A1C                     	;# 
  1844  0A1D                     	;# 
  1845  0A1D                     	;# 
  1846  0A1E                     	;# 
  1847  0A1E                     	;# 
  1848  0A1F                     	;# 
  1849  0A1F                     	;# 
  1850  0A1F                     	;# 
  1851  1E0F                     	;# 
  1852  1E10                     	;# 
  1853  1E11                     	;# 
  1854  1E12                     	;# 
  1855  1E13                     	;# 
  1856  1E14                     	;# 
  1857  1E15                     	;# 
  1858  1E16                     	;# 
  1859  1E17                     	;# 
  1860  1E18                     	;# 
  1861  1E19                     	;# 
  1862  1E1A                     	;# 
  1863  1E1B                     	;# 
  1864  1E1C                     	;# 
  1865  1E1D                     	;# 
  1866  1E1E                     	;# 
  1867  1E1F                     	;# 
  1868  1E20                     	;# 
  1869  1E21                     	;# 
  1870  1E22                     	;# 
  1871  1E23                     	;# 
  1872  1E24                     	;# 
  1873  1E25                     	;# 
  1874  1E26                     	;# 
  1875  1E27                     	;# 
  1876  1E28                     	;# 
  1877  1E29                     	;# 
  1878  1E2A                     	;# 
  1879  1E2B                     	;# 
  1880  1E2C                     	;# 
  1881  1E2D                     	;# 
  1882  1E2E                     	;# 
  1883  1E2F                     	;# 
  1884  1E30                     	;# 
  1885  1E31                     	;# 
  1886  1E32                     	;# 
  1887  1E33                     	;# 
  1888  1E34                     	;# 
  1889  1E35                     	;# 
  1890  1E36                     	;# 
  1891  1E37                     	;# 
  1892  1E8F                     	;# 
  1893  1E90                     	;# 
  1894  1E91                     	;# 
  1895  1E92                     	;# 
  1896  1E93                     	;# 
  1897  1E9C                     	;# 
  1898  1EA1                     	;# 
  1899  1EA2                     	;# 
  1900  1EB1                     	;# 
  1901  1EBB                     	;# 
  1902  1EBC                     	;# 
  1903  1EBD                     	;# 
  1904  1EBE                     	;# 
  1905  1EC3                     	;# 
  1906  1EC5                     	;# 
  1907  1EC6                     	;# 
  1908  1EC7                     	;# 
  1909  1ECB                     	;# 
  1910  1ECC                     	;# 
  1911  1ECD                     	;# 
  1912  1ECE                     	;# 
  1913  1F10                     	;# 
  1914  1F11                     	;# 
  1915  1F12                     	;# 
  1916  1F13                     	;# 
  1917  1F14                     	;# 
  1918  1F15                     	;# 
  1919  1F20                     	;# 
  1920  1F21                     	;# 
  1921  1F22                     	;# 
  1922  1F23                     	;# 
  1923  1F24                     	;# 
  1924  1F25                     	;# 
  1925  1F38                     	;# 
  1926  1F39                     	;# 
  1927  1F3A                     	;# 
  1928  1F3B                     	;# 
  1929  1F3C                     	;# 
  1930  1F3D                     	;# 
  1931  1F3E                     	;# 
  1932  1F3F                     	;# 
  1933  1F4E                     	;# 
  1934  1F4F                     	;# 
  1935  1F50                     	;# 
  1936  1F51                     	;# 
  1937  1F52                     	;# 
  1938  1F53                     	;# 
  1939  1F54                     	;# 
  1940  1F55                     	;# 
  1941  1FE4                     	;# 
  1942  1FE5                     	;# 
  1943  1FE6                     	;# 
  1944  1FE7                     	;# 
  1945  1FE8                     	;# 
  1946  1FE8                     	;# 
  1947  1FE9                     	;# 
  1948  1FEA                     	;# 
  1949  1FEA                     	;# 
  1950  1FEB                     	;# 
  1951  1FED                     	;# 
  1952  1FEE                     	;# 
  1953  1FEF                     	;# 
  1954  0000                     	;# 
  1955  0001                     	;# 
  1956  0002                     	;# 
  1957  0003                     	;# 
  1958  0004                     	;# 
  1959  0005                     	;# 
  1960  0006                     	;# 
  1961  0007                     	;# 
  1962  0008                     	;# 
  1963  0009                     	;# 
  1964  000A                     	;# 
  1965  000B                     	;# 
  1966  000C                     	;# 
  1967  000E                     	;# 
  1968  0012                     	;# 
  1969  0014                     	;# 
  1970  0018                     	;# 
  1971  001A                     	;# 
  1972  009B                     	;# 
  1973  009B                     	;# 
  1974  009C                     	;# 
  1975  009D                     	;# 
  1976  009E                     	;# 
  1977  009F                     	;# 
  1978  0119                     	;# 
  1979  0119                     	;# 
  1980  0119                     	;# 
  1981  011A                     	;# 
  1982  011A                     	;# 
  1983  011A                     	;# 
  1984  011B                     	;# 
  1985  011B                     	;# 
  1986  011B                     	;# 
  1987  011B                     	;# 
  1988  011B                     	;# 
  1989  011C                     	;# 
  1990  011C                     	;# 
  1991  011C                     	;# 
  1992  011D                     	;# 
  1993  011D                     	;# 
  1994  011D                     	;# 
  1995  011E                     	;# 
  1996  011E                     	;# 
  1997  011E                     	;# 
  1998  011F                     	;# 
  1999  011F                     	;# 
  2000  011F                     	;# 
  2001  011F                     	;# 
  2002  011F                     	;# 
  2003  018C                     	;# 
  2004  018D                     	;# 
  2005  018E                     	;# 
  2006  018F                     	;# 
  2007  0190                     	;# 
  2008  0191                     	;# 
  2009  0192                     	;# 
  2010  020C                     	;# 
  2011  020C                     	;# 
  2012  020D                     	;# 
  2013  020E                     	;# 
  2014  020F                     	;# 
  2015  020F                     	;# 
  2016  0210                     	;# 
  2017  0210                     	;# 
  2018  0211                     	;# 
  2019  0211                     	;# 
  2020  028C                     	;# 
  2021  028C                     	;# 
  2022  028D                     	;# 
  2023  028D                     	;# 
  2024  028E                     	;# 
  2025  028F                     	;# 
  2026  0290                     	;# 
  2027  0291                     	;# 
  2028  030C                     	;# 
  2029  030C                     	;# 
  2030  030D                     	;# 
  2031  030E                     	;# 
  2032  030F                     	;# 
  2033  0310                     	;# 
  2034  0310                     	;# 
  2035  0311                     	;# 
  2036  0312                     	;# 
  2037  0313                     	;# 
  2038  0314                     	;# 
  2039  0314                     	;# 
  2040  0315                     	;# 
  2041  0316                     	;# 
  2042  0318                     	;# 
  2043  0318                     	;# 
  2044  0319                     	;# 
  2045  031A                     	;# 
  2046  031C                     	;# 
  2047  031C                     	;# 
  2048  031D                     	;# 
  2049  031E                     	;# 
  2050  038C                     	;# 
  2051  038C                     	;# 
  2052  038D                     	;# 
  2053  038E                     	;# 
  2054  058C                     	;# 
  2055  058C                     	;# 
  2056  058D                     	;# 
  2057  058E                     	;# 
  2058  058F                     	;# 
  2059  058F                     	;# 
  2060  0590                     	;# 
  2061  0591                     	;# 
  2062  0592                     	;# 
  2063  0593                     	;# 
  2064  059C                     	;# 
  2065  059C                     	;# 
  2066  059D                     	;# 
  2067  059D                     	;# 
  2068  059E                     	;# 
  2069  059F                     	;# 
  2070  060C                     	;# 
  2071  060D                     	;# 
  2072  060E                     	;# 
  2073  060F                     	;# 
  2074  0610                     	;# 
  2075  0611                     	;# 
  2076  0612                     	;# 
  2077  0613                     	;# 
  2078  0614                     	;# 
  2079  070C                     	;# 
  2080  070D                     	;# 
  2081  070E                     	;# 
  2082  070F                     	;# 
  2083  0710                     	;# 
  2084  0711                     	;# 
  2085  0712                     	;# 
  2086  0713                     	;# 
  2087  0716                     	;# 
  2088  0717                     	;# 
  2089  0718                     	;# 
  2090  0719                     	;# 
  2091  071A                     	;# 
  2092  071B                     	;# 
  2093  071C                     	;# 
  2094  071D                     	;# 
  2095  0796                     	;# 
  2096  0797                     	;# 
  2097  0798                     	;# 
  2098  0799                     	;# 
  2099  079A                     	;# 
  2100  079B                     	;# 
  2101  080C                     	;# 
  2102  080D                     	;# 
  2103  080E                     	;# 
  2104  080F                     	;# 
  2105  0810                     	;# 
  2106  0811                     	;# 
  2107  0812                     	;# 
  2108  0813                     	;# 
  2109  0814                     	;# 
  2110  081A                     	;# 
  2111  081A                     	;# 
  2112  081B                     	;# 
  2113  081C                     	;# 
  2114  081C                     	;# 
  2115  081D                     	;# 
  2116  081E                     	;# 
  2117  081F                     	;# 
  2118  088C                     	;# 
  2119  088D                     	;# 
  2120  088E                     	;# 
  2121  088F                     	;# 
  2122  0890                     	;# 
  2123  0891                     	;# 
  2124  0892                     	;# 
  2125  0893                     	;# 
  2126  0895                     	;# 
  2127  0896                     	;# 
  2128  090C                     	;# 
  2129  090E                     	;# 
  2130  090F                     	;# 
  2131  091F                     	;# 
  2132  098F                     	;# 
  2133  098F                     	;# 
  2134  0990                     	;# 
  2135  0991                     	;# 
  2136  0992                     	;# 
  2137  0993                     	;# 
  2138  0994                     	;# 
  2139  0995                     	;# 
  2140  0996                     	;# 
  2141  0997                     	;# 
  2142  0A19                     	;# 
  2143  0A19                     	;# 
  2144  0A1A                     	;# 
  2145  0A1A                     	;# 
  2146  0A1B                     	;# 
  2147  0A1B                     	;# 
  2148  0A1B                     	;# 
  2149  0A1C                     	;# 
  2150  0A1C                     	;# 
  2151  0A1D                     	;# 
  2152  0A1D                     	;# 
  2153  0A1E                     	;# 
  2154  0A1E                     	;# 
  2155  0A1F                     	;# 
  2156  0A1F                     	;# 
  2157  0A1F                     	;# 
  2158  1E0F                     	;# 
  2159  1E10                     	;# 
  2160  1E11                     	;# 
  2161  1E12                     	;# 
  2162  1E13                     	;# 
  2163  1E14                     	;# 
  2164  1E15                     	;# 
  2165  1E16                     	;# 
  2166  1E17                     	;# 
  2167  1E18                     	;# 
  2168  1E19                     	;# 
  2169  1E1A                     	;# 
  2170  1E1B                     	;# 
  2171  1E1C                     	;# 
  2172  1E1D                     	;# 
  2173  1E1E                     	;# 
  2174  1E1F                     	;# 
  2175  1E20                     	;# 
  2176  1E21                     	;# 
  2177  1E22                     	;# 
  2178  1E23                     	;# 
  2179  1E24                     	;# 
  2180  1E25                     	;# 
  2181  1E26                     	;# 
  2182  1E27                     	;# 
  2183  1E28                     	;# 
  2184  1E29                     	;# 
  2185  1E2A                     	;# 
  2186  1E2B                     	;# 
  2187  1E2C                     	;# 
  2188  1E2D                     	;# 
  2189  1E2E                     	;# 
  2190  1E2F                     	;# 
  2191  1E30                     	;# 
  2192  1E31                     	;# 
  2193  1E32                     	;# 
  2194  1E33                     	;# 
  2195  1E34                     	;# 
  2196  1E35                     	;# 
  2197  1E36                     	;# 
  2198  1E37                     	;# 
  2199  1E8F                     	;# 
  2200  1E90                     	;# 
  2201  1E91                     	;# 
  2202  1E92                     	;# 
  2203  1E93                     	;# 
  2204  1E9C                     	;# 
  2205  1EA1                     	;# 
  2206  1EA2                     	;# 
  2207  1EB1                     	;# 
  2208  1EBB                     	;# 
  2209  1EBC                     	;# 
  2210  1EBD                     	;# 
  2211  1EBE                     	;# 
  2212  1EC3                     	;# 
  2213  1EC5                     	;# 
  2214  1EC6                     	;# 
  2215  1EC7                     	;# 
  2216  1ECB                     	;# 
  2217  1ECC                     	;# 
  2218  1ECD                     	;# 
  2219  1ECE                     	;# 
  2220  1F10                     	;# 
  2221  1F11                     	;# 
  2222  1F12                     	;# 
  2223  1F13                     	;# 
  2224  1F14                     	;# 
  2225  1F15                     	;# 
  2226  1F20                     	;# 
  2227  1F21                     	;# 
  2228  1F22                     	;# 
  2229  1F23                     	;# 
  2230  1F24                     	;# 
  2231  1F25                     	;# 
  2232  1F38                     	;# 
  2233  1F39                     	;# 
  2234  1F3A                     	;# 
  2235  1F3B                     	;# 
  2236  1F3C                     	;# 
  2237  1F3D                     	;# 
  2238  1F3E                     	;# 
  2239  1F3F                     	;# 
  2240  1F4E                     	;# 
  2241  1F4F                     	;# 
  2242  1F50                     	;# 
  2243  1F51                     	;# 
  2244  1F52                     	;# 
  2245  1F53                     	;# 
  2246  1F54                     	;# 
  2247  1F55                     	;# 
  2248  1FE4                     	;# 
  2249  1FE5                     	;# 
  2250  1FE6                     	;# 
  2251  1FE7                     	;# 
  2252  1FE8                     	;# 
  2253  1FE8                     	;# 
  2254  1FE9                     	;# 
  2255  1FEA                     	;# 
  2256  1FEA                     	;# 
  2257  1FEB                     	;# 
  2258  1FED                     	;# 
  2259  1FEE                     	;# 
  2260  1FEF                     	;# 
  2261  0000                     	;# 
  2262  0001                     	;# 
  2263  0002                     	;# 
  2264  0003                     	;# 
  2265  0004                     	;# 
  2266  0005                     	;# 
  2267  0006                     	;# 
  2268  0007                     	;# 
  2269  0008                     	;# 
  2270  0009                     	;# 
  2271  000A                     	;# 
  2272  000B                     	;# 
  2273  000C                     	;# 
  2274  000E                     	;# 
  2275  0012                     	;# 
  2276  0014                     	;# 
  2277  0018                     	;# 
  2278  001A                     	;# 
  2279  009B                     	;# 
  2280  009B                     	;# 
  2281  009C                     	;# 
  2282  009D                     	;# 
  2283  009E                     	;# 
  2284  009F                     	;# 
  2285  0119                     	;# 
  2286  0119                     	;# 
  2287  0119                     	;# 
  2288  011A                     	;# 
  2289  011A                     	;# 
  2290  011A                     	;# 
  2291  011B                     	;# 
  2292  011B                     	;# 
  2293  011B                     	;# 
  2294  011B                     	;# 
  2295  011B                     	;# 
  2296  011C                     	;# 
  2297  011C                     	;# 
  2298  011C                     	;# 
  2299  011D                     	;# 
  2300  011D                     	;# 
  2301  011D                     	;# 
  2302  011E                     	;# 
  2303  011E                     	;# 
  2304  011E                     	;# 
  2305  011F                     	;# 
  2306  011F                     	;# 
  2307  011F                     	;# 
  2308  011F                     	;# 
  2309  011F                     	;# 
  2310  018C                     	;# 
  2311  018D                     	;# 
  2312  018E                     	;# 
  2313  018F                     	;# 
  2314  0190                     	;# 
  2315  0191                     	;# 
  2316  0192                     	;# 
  2317  020C                     	;# 
  2318  020C                     	;# 
  2319  020D                     	;# 
  2320  020E                     	;# 
  2321  020F                     	;# 
  2322  020F                     	;# 
  2323  0210                     	;# 
  2324  0210                     	;# 
  2325  0211                     	;# 
  2326  0211                     	;# 
  2327  028C                     	;# 
  2328  028C                     	;# 
  2329  028D                     	;# 
  2330  028D                     	;# 
  2331  028E                     	;# 
  2332  028F                     	;# 
  2333  0290                     	;# 
  2334  0291                     	;# 
  2335  030C                     	;# 
  2336  030C                     	;# 
  2337  030D                     	;# 
  2338  030E                     	;# 
  2339  030F                     	;# 
  2340  0310                     	;# 
  2341  0310                     	;# 
  2342  0311                     	;# 
  2343  0312                     	;# 
  2344  0313                     	;# 
  2345  0314                     	;# 
  2346  0314                     	;# 
  2347  0315                     	;# 
  2348  0316                     	;# 
  2349  0318                     	;# 
  2350  0318                     	;# 
  2351  0319                     	;# 
  2352  031A                     	;# 
  2353  031C                     	;# 
  2354  031C                     	;# 
  2355  031D                     	;# 
  2356  031E                     	;# 
  2357  038C                     	;# 
  2358  038C                     	;# 
  2359  038D                     	;# 
  2360  038E                     	;# 
  2361  058C                     	;# 
  2362  058C                     	;# 
  2363  058D                     	;# 
  2364  058E                     	;# 
  2365  058F                     	;# 
  2366  058F                     	;# 
  2367  0590                     	;# 
  2368  0591                     	;# 
  2369  0592                     	;# 
  2370  0593                     	;# 
  2371  059C                     	;# 
  2372  059C                     	;# 
  2373  059D                     	;# 
  2374  059D                     	;# 
  2375  059E                     	;# 
  2376  059F                     	;# 
  2377  060C                     	;# 
  2378  060D                     	;# 
  2379  060E                     	;# 
  2380  060F                     	;# 
  2381  0610                     	;# 
  2382  0611                     	;# 
  2383  0612                     	;# 
  2384  0613                     	;# 
  2385  0614                     	;# 
  2386  070C                     	;# 
  2387  070D                     	;# 
  2388  070E                     	;# 
  2389  070F                     	;# 
  2390  0710                     	;# 
  2391  0711                     	;# 
  2392  0712                     	;# 
  2393  0713                     	;# 
  2394  0716                     	;# 
  2395  0717                     	;# 
  2396  0718                     	;# 
  2397  0719                     	;# 
  2398  071A                     	;# 
  2399  071B                     	;# 
  2400  071C                     	;# 
  2401  071D                     	;# 
  2402  0796                     	;# 
  2403  0797                     	;# 
  2404  0798                     	;# 
  2405  0799                     	;# 
  2406  079A                     	;# 
  2407  079B                     	;# 
  2408  080C                     	;# 
  2409  080D                     	;# 
  2410  080E                     	;# 
  2411  080F                     	;# 
  2412  0810                     	;# 
  2413  0811                     	;# 
  2414  0812                     	;# 
  2415  0813                     	;# 
  2416  0814                     	;# 
  2417  081A                     	;# 
  2418  081A                     	;# 
  2419  081B                     	;# 
  2420  081C                     	;# 
  2421  081C                     	;# 
  2422  081D                     	;# 
  2423  081E                     	;# 
  2424  081F                     	;# 
  2425  088C                     	;# 
  2426  088D                     	;# 
  2427  088E                     	;# 
  2428  088F                     	;# 
  2429  0890                     	;# 
  2430  0891                     	;# 
  2431  0892                     	;# 
  2432  0893                     	;# 
  2433  0895                     	;# 
  2434  0896                     	;# 
  2435  090C                     	;# 
  2436  090E                     	;# 
  2437  090F                     	;# 
  2438  091F                     	;# 
  2439  098F                     	;# 
  2440  098F                     	;# 
  2441  0990                     	;# 
  2442  0991                     	;# 
  2443  0992                     	;# 
  2444  0993                     	;# 
  2445  0994                     	;# 
  2446  0995                     	;# 
  2447  0996                     	;# 
  2448  0997                     	;# 
  2449  0A19                     	;# 
  2450  0A19                     	;# 
  2451  0A1A                     	;# 
  2452  0A1A                     	;# 
  2453  0A1B                     	;# 
  2454  0A1B                     	;# 
  2455  0A1B                     	;# 
  2456  0A1C                     	;# 
  2457  0A1C                     	;# 
  2458  0A1D                     	;# 
  2459  0A1D                     	;# 
  2460  0A1E                     	;# 
  2461  0A1E                     	;# 
  2462  0A1F                     	;# 
  2463  0A1F                     	;# 
  2464  0A1F                     	;# 
  2465  1E0F                     	;# 
  2466  1E10                     	;# 
  2467  1E11                     	;# 
  2468  1E12                     	;# 
  2469  1E13                     	;# 
  2470  1E14                     	;# 
  2471  1E15                     	;# 
  2472  1E16                     	;# 
  2473  1E17                     	;# 
  2474  1E18                     	;# 
  2475  1E19                     	;# 
  2476  1E1A                     	;# 
  2477  1E1B                     	;# 
  2478  1E1C                     	;# 
  2479  1E1D                     	;# 
  2480  1E1E                     	;# 
  2481  1E1F                     	;# 
  2482  1E20                     	;# 
  2483  1E21                     	;# 
  2484  1E22                     	;# 
  2485  1E23                     	;# 
  2486  1E24                     	;# 
  2487  1E25                     	;# 
  2488  1E26                     	;# 
  2489  1E27                     	;# 
  2490  1E28                     	;# 
  2491  1E29                     	;# 
  2492  1E2A                     	;# 
  2493  1E2B                     	;# 
  2494  1E2C                     	;# 
  2495  1E2D                     	;# 
  2496  1E2E                     	;# 
  2497  1E2F                     	;# 
  2498  1E30                     	;# 
  2499  1E31                     	;# 
  2500  1E32                     	;# 
  2501  1E33                     	;# 
  2502  1E34                     	;# 
  2503  1E35                     	;# 
  2504  1E36                     	;# 
  2505  1E37                     	;# 
  2506  1E8F                     	;# 
  2507  1E90                     	;# 
  2508  1E91                     	;# 
  2509  1E92                     	;# 
  2510  1E93                     	;# 
  2511  1E9C                     	;# 
  2512  1EA1                     	;# 
  2513  1EA2                     	;# 
  2514  1EB1                     	;# 
  2515  1EBB                     	;# 
  2516  1EBC                     	;# 
  2517  1EBD                     	;# 
  2518  1EBE                     	;# 
  2519  1EC3                     	;# 
  2520  1EC5                     	;# 
  2521  1EC6                     	;# 
  2522  1EC7                     	;# 
  2523  1ECB                     	;# 
  2524  1ECC                     	;# 
  2525  1ECD                     	;# 
  2526  1ECE                     	;# 
  2527  1F10                     	;# 
  2528  1F11                     	;# 
  2529  1F12                     	;# 
  2530  1F13                     	;# 
  2531  1F14                     	;# 
  2532  1F15                     	;# 
  2533  1F20                     	;# 
  2534  1F21                     	;# 
  2535  1F22                     	;# 
  2536  1F23                     	;# 
  2537  1F24                     	;# 
  2538  1F25                     	;# 
  2539  1F38                     	;# 
  2540  1F39                     	;# 
  2541  1F3A                     	;# 
  2542  1F3B                     	;# 
  2543  1F3C                     	;# 
  2544  1F3D                     	;# 
  2545  1F3E                     	;# 
  2546  1F3F                     	;# 
  2547  1F4E                     	;# 
  2548  1F4F                     	;# 
  2549  1F50                     	;# 
  2550  1F51                     	;# 
  2551  1F52                     	;# 
  2552  1F53                     	;# 
  2553  1F54                     	;# 
  2554  1F55                     	;# 
  2555  1FE4                     	;# 
  2556  1FE5                     	;# 
  2557  1FE6                     	;# 
  2558  1FE7                     	;# 
  2559  1FE8                     	;# 
  2560  1FE8                     	;# 
  2561  1FE9                     	;# 
  2562  1FEA                     	;# 
  2563  1FEA                     	;# 
  2564  1FEB                     	;# 
  2565  1FED                     	;# 
  2566  1FEE                     	;# 
  2567  1FEF                     	;# 
  2568  0000                     	;# 
  2569  0001                     	;# 
  2570  0002                     	;# 
  2571  0003                     	;# 
  2572  0004                     	;# 
  2573  0005                     	;# 
  2574  0006                     	;# 
  2575  0007                     	;# 
  2576  0008                     	;# 
  2577  0009                     	;# 
  2578  000A                     	;# 
  2579  000B                     	;# 
  2580  000C                     	;# 
  2581  000E                     	;# 
  2582  0012                     	;# 
  2583  0014                     	;# 
  2584  0018                     	;# 
  2585  001A                     	;# 
  2586  009B                     	;# 
  2587  009B                     	;# 
  2588  009C                     	;# 
  2589  009D                     	;# 
  2590  009E                     	;# 
  2591  009F                     	;# 
  2592  0119                     	;# 
  2593  0119                     	;# 
  2594  0119                     	;# 
  2595  011A                     	;# 
  2596  011A                     	;# 
  2597  011A                     	;# 
  2598  011B                     	;# 
  2599  011B                     	;# 
  2600  011B                     	;# 
  2601  011B                     	;# 
  2602  011B                     	;# 
  2603  011C                     	;# 
  2604  011C                     	;# 
  2605  011C                     	;# 
  2606  011D                     	;# 
  2607  011D                     	;# 
  2608  011D                     	;# 
  2609  011E                     	;# 
  2610  011E                     	;# 
  2611  011E                     	;# 
  2612  011F                     	;# 
  2613  011F                     	;# 
  2614  011F                     	;# 
  2615  011F                     	;# 
  2616  011F                     	;# 
  2617  018C                     	;# 
  2618  018D                     	;# 
  2619  018E                     	;# 
  2620  018F                     	;# 
  2621  0190                     	;# 
  2622  0191                     	;# 
  2623  0192                     	;# 
  2624  020C                     	;# 
  2625  020C                     	;# 
  2626  020D                     	;# 
  2627  020E                     	;# 
  2628  020F                     	;# 
  2629  020F                     	;# 
  2630  0210                     	;# 
  2631  0210                     	;# 
  2632  0211                     	;# 
  2633  0211                     	;# 
  2634  028C                     	;# 
  2635  028C                     	;# 
  2636  028D                     	;# 
  2637  028D                     	;# 
  2638  028E                     	;# 
  2639  028F                     	;# 
  2640  0290                     	;# 
  2641  0291                     	;# 
  2642  030C                     	;# 
  2643  030C                     	;# 
  2644  030D                     	;# 
  2645  030E                     	;# 
  2646  030F                     	;# 
  2647  0310                     	;# 
  2648  0310                     	;# 
  2649  0311                     	;# 
  2650  0312                     	;# 
  2651  0313                     	;# 
  2652  0314                     	;# 
  2653  0314                     	;# 
  2654  0315                     	;# 
  2655  0316                     	;# 
  2656  0318                     	;# 
  2657  0318                     	;# 
  2658  0319                     	;# 
  2659  031A                     	;# 
  2660  031C                     	;# 
  2661  031C                     	;# 
  2662  031D                     	;# 
  2663  031E                     	;# 
  2664  038C                     	;# 
  2665  038C                     	;# 
  2666  038D                     	;# 
  2667  038E                     	;# 
  2668  058C                     	;# 
  2669  058C                     	;# 
  2670  058D                     	;# 
  2671  058E                     	;# 
  2672  058F                     	;# 
  2673  058F                     	;# 
  2674  0590                     	;# 
  2675  0591                     	;# 
  2676  0592                     	;# 
  2677  0593                     	;# 
  2678  059C                     	;# 
  2679  059C                     	;# 
  2680  059D                     	;# 
  2681  059D                     	;# 
  2682  059E                     	;# 
  2683  059F                     	;# 
  2684  060C                     	;# 
  2685  060D                     	;# 
  2686  060E                     	;# 
  2687  060F                     	;# 
  2688  0610                     	;# 
  2689  0611                     	;# 
  2690  0612                     	;# 
  2691  0613                     	;# 
  2692  0614                     	;# 
  2693  070C                     	;# 
  2694  070D                     	;# 
  2695  070E                     	;# 
  2696  070F                     	;# 
  2697  0710                     	;# 
  2698  0711                     	;# 
  2699  0712                     	;# 
  2700  0713                     	;# 
  2701  0716                     	;# 
  2702  0717                     	;# 
  2703  0718                     	;# 
  2704  0719                     	;# 
  2705  071A                     	;# 
  2706  071B                     	;# 
  2707  071C                     	;# 
  2708  071D                     	;# 
  2709  0796                     	;# 
  2710  0797                     	;# 
  2711  0798                     	;# 
  2712  0799                     	;# 
  2713  079A                     	;# 
  2714  079B                     	;# 
  2715  080C                     	;# 
  2716  080D                     	;# 
  2717  080E                     	;# 
  2718  080F                     	;# 
  2719  0810                     	;# 
  2720  0811                     	;# 
  2721  0812                     	;# 
  2722  0813                     	;# 
  2723  0814                     	;# 
  2724  081A                     	;# 
  2725  081A                     	;# 
  2726  081B                     	;# 
  2727  081C                     	;# 
  2728  081C                     	;# 
  2729  081D                     	;# 
  2730  081E                     	;# 
  2731  081F                     	;# 
  2732  088C                     	;# 
  2733  088D                     	;# 
  2734  088E                     	;# 
  2735  088F                     	;# 
  2736  0890                     	;# 
  2737  0891                     	;# 
  2738  0892                     	;# 
  2739  0893                     	;# 
  2740  0895                     	;# 
  2741  0896                     	;# 
  2742  090C                     	;# 
  2743  090E                     	;# 
  2744  090F                     	;# 
  2745  091F                     	;# 
  2746  098F                     	;# 
  2747  098F                     	;# 
  2748  0990                     	;# 
  2749  0991                     	;# 
  2750  0992                     	;# 
  2751  0993                     	;# 
  2752  0994                     	;# 
  2753  0995                     	;# 
  2754  0996                     	;# 
  2755  0997                     	;# 
  2756  0A19                     	;# 
  2757  0A19                     	;# 
  2758  0A1A                     	;# 
  2759  0A1A                     	;# 
  2760  0A1B                     	;# 
  2761  0A1B                     	;# 
  2762  0A1B                     	;# 
  2763  0A1C                     	;# 
  2764  0A1C                     	;# 
  2765  0A1D                     	;# 
  2766  0A1D                     	;# 
  2767  0A1E                     	;# 
  2768  0A1E                     	;# 
  2769  0A1F                     	;# 
  2770  0A1F                     	;# 
  2771  0A1F                     	;# 
  2772  1E0F                     	;# 
  2773  1E10                     	;# 
  2774  1E11                     	;# 
  2775  1E12                     	;# 
  2776  1E13                     	;# 
  2777  1E14                     	;# 
  2778  1E15                     	;# 
  2779  1E16                     	;# 
  2780  1E17                     	;# 
  2781  1E18                     	;# 
  2782  1E19                     	;# 
  2783  1E1A                     	;# 
  2784  1E1B                     	;# 
  2785  1E1C                     	;# 
  2786  1E1D                     	;# 
  2787  1E1E                     	;# 
  2788  1E1F                     	;# 
  2789  1E20                     	;# 
  2790  1E21                     	;# 
  2791  1E22                     	;# 
  2792  1E23                     	;# 
  2793  1E24                     	;# 
  2794  1E25                     	;# 
  2795  1E26                     	;# 
  2796  1E27                     	;# 
  2797  1E28                     	;# 
  2798  1E29                     	;# 
  2799  1E2A                     	;# 
  2800  1E2B                     	;# 
  2801  1E2C                     	;# 
  2802  1E2D                     	;# 
  2803  1E2E                     	;# 
  2804  1E2F                     	;# 
  2805  1E30                     	;# 
  2806  1E31                     	;# 
  2807  1E32                     	;# 
  2808  1E33                     	;# 
  2809  1E34                     	;# 
  2810  1E35                     	;# 
  2811  1E36                     	;# 
  2812  1E37                     	;# 
  2813  1E8F                     	;# 
  2814  1E90                     	;# 
  2815  1E91                     	;# 
  2816  1E92                     	;# 
  2817  1E93                     	;# 
  2818  1E9C                     	;# 
  2819  1EA1                     	;# 
  2820  1EA2                     	;# 
  2821  1EB1                     	;# 
  2822  1EBB                     	;# 
  2823  1EBC                     	;# 
  2824  1EBD                     	;# 
  2825  1EBE                     	;# 
  2826  1EC3                     	;# 
  2827  1EC5                     	;# 
  2828  1EC6                     	;# 
  2829  1EC7                     	;# 
  2830  1ECB                     	;# 
  2831  1ECC                     	;# 
  2832  1ECD                     	;# 
  2833  1ECE                     	;# 
  2834  1F10                     	;# 
  2835  1F11                     	;# 
  2836  1F12                     	;# 
  2837  1F13                     	;# 
  2838  1F14                     	;# 
  2839  1F15                     	;# 
  2840  1F20                     	;# 
  2841  1F21                     	;# 
  2842  1F22                     	;# 
  2843  1F23                     	;# 
  2844  1F24                     	;# 
  2845  1F25                     	;# 
  2846  1F38                     	;# 
  2847  1F39                     	;# 
  2848  1F3A                     	;# 
  2849  1F3B                     	;# 
  2850  1F3C                     	;# 
  2851  1F3D                     	;# 
  2852  1F3E                     	;# 
  2853  1F3F                     	;# 
  2854  1F4E                     	;# 
  2855  1F4F                     	;# 
  2856  1F50                     	;# 
  2857  1F51                     	;# 
  2858  1F52                     	;# 
  2859  1F53                     	;# 
  2860  1F54                     	;# 
  2861  1F55                     	;# 
  2862  1FE4                     	;# 
  2863  1FE5                     	;# 
  2864  1FE6                     	;# 
  2865  1FE7                     	;# 
  2866  1FE8                     	;# 
  2867  1FE8                     	;# 
  2868  1FE9                     	;# 
  2869  1FEA                     	;# 
  2870  1FEA                     	;# 
  2871  1FEB                     	;# 
  2872  1FED                     	;# 
  2873  1FEE                     	;# 
  2874  1FEF                     	;# 
  2875  0000                     	;# 
  2876  0001                     	;# 
  2877  0002                     	;# 
  2878  0003                     	;# 
  2879  0004                     	;# 
  2880  0005                     	;# 
  2881  0006                     	;# 
  2882  0007                     	;# 
  2883  0008                     	;# 
  2884  0009                     	;# 
  2885  000A                     	;# 
  2886  000B                     	;# 
  2887  000C                     	;# 
  2888  000E                     	;# 
  2889  0012                     	;# 
  2890  0014                     	;# 
  2891  0018                     	;# 
  2892  001A                     	;# 
  2893  009B                     	;# 
  2894  009B                     	;# 
  2895  009C                     	;# 
  2896  009D                     	;# 
  2897  009E                     	;# 
  2898  009F                     	;# 
  2899  0119                     	;# 
  2900  0119                     	;# 
  2901  0119                     	;# 
  2902  011A                     	;# 
  2903  011A                     	;# 
  2904  011A                     	;# 
  2905  011B                     	;# 
  2906  011B                     	;# 
  2907  011B                     	;# 
  2908  011B                     	;# 
  2909  011B                     	;# 
  2910  011C                     	;# 
  2911  011C                     	;# 
  2912  011C                     	;# 
  2913  011D                     	;# 
  2914  011D                     	;# 
  2915  011D                     	;# 
  2916  011E                     	;# 
  2917  011E                     	;# 
  2918  011E                     	;# 
  2919  011F                     	;# 
  2920  011F                     	;# 
  2921  011F                     	;# 
  2922  011F                     	;# 
  2923  011F                     	;# 
  2924  018C                     	;# 
  2925  018D                     	;# 
  2926  018E                     	;# 
  2927  018F                     	;# 
  2928  0190                     	;# 
  2929  0191                     	;# 
  2930  0192                     	;# 
  2931  020C                     	;# 
  2932  020C                     	;# 
  2933  020D                     	;# 
  2934  020E                     	;# 
  2935  020F                     	;# 
  2936  020F                     	;# 
  2937  0210                     	;# 
  2938  0210                     	;# 
  2939  0211                     	;# 
  2940  0211                     	;# 
  2941  028C                     	;# 
  2942  028C                     	;# 
  2943  028D                     	;# 
  2944  028D                     	;# 
  2945  028E                     	;# 
  2946  028F                     	;# 
  2947  0290                     	;# 
  2948  0291                     	;# 
  2949  030C                     	;# 
  2950  030C                     	;# 
  2951  030D                     	;# 
  2952  030E                     	;# 
  2953  030F                     	;# 
  2954  0310                     	;# 
  2955  0310                     	;# 
  2956  0311                     	;# 
  2957  0312                     	;# 
  2958  0313                     	;# 
  2959  0314                     	;# 
  2960  0314                     	;# 
  2961  0315                     	;# 
  2962  0316                     	;# 
  2963  0318                     	;# 
  2964  0318                     	;# 
  2965  0319                     	;# 
  2966  031A                     	;# 
  2967  031C                     	;# 
  2968  031C                     	;# 
  2969  031D                     	;# 
  2970  031E                     	;# 
  2971  038C                     	;# 
  2972  038C                     	;# 
  2973  038D                     	;# 
  2974  038E                     	;# 
  2975  058C                     	;# 
  2976  058C                     	;# 
  2977  058D                     	;# 
  2978  058E                     	;# 
  2979  058F                     	;# 
  2980  058F                     	;# 
  2981  0590                     	;# 
  2982  0591                     	;# 
  2983  0592                     	;# 
  2984  0593                     	;# 
  2985  059C                     	;# 
  2986  059C                     	;# 
  2987  059D                     	;# 
  2988  059D                     	;# 
  2989  059E                     	;# 
  2990  059F                     	;# 
  2991  060C                     	;# 
  2992  060D                     	;# 
  2993  060E                     	;# 
  2994  060F                     	;# 
  2995  0610                     	;# 
  2996  0611                     	;# 
  2997  0612                     	;# 
  2998  0613                     	;# 
  2999  0614                     	;# 
  3000  070C                     	;# 
  3001  070D                     	;# 
  3002  070E                     	;# 
  3003  070F                     	;# 
  3004  0710                     	;# 
  3005  0711                     	;# 
  3006  0712                     	;# 
  3007  0713                     	;# 
  3008  0716                     	;# 
  3009  0717                     	;# 
  3010  0718                     	;# 
  3011  0719                     	;# 
  3012  071A                     	;# 
  3013  071B                     	;# 
  3014  071C                     	;# 
  3015  071D                     	;# 
  3016  0796                     	;# 
  3017  0797                     	;# 
  3018  0798                     	;# 
  3019  0799                     	;# 
  3020  079A                     	;# 
  3021  079B                     	;# 
  3022  080C                     	;# 
  3023  080D                     	;# 
  3024  080E                     	;# 
  3025  080F                     	;# 
  3026  0810                     	;# 
  3027  0811                     	;# 
  3028  0812                     	;# 
  3029  0813                     	;# 
  3030  0814                     	;# 
  3031  081A                     	;# 
  3032  081A                     	;# 
  3033  081B                     	;# 
  3034  081C                     	;# 
  3035  081C                     	;# 
  3036  081D                     	;# 
  3037  081E                     	;# 
  3038  081F                     	;# 
  3039  088C                     	;# 
  3040  088D                     	;# 
  3041  088E                     	;# 
  3042  088F                     	;# 
  3043  0890                     	;# 
  3044  0891                     	;# 
  3045  0892                     	;# 
  3046  0893                     	;# 
  3047  0895                     	;# 
  3048  0896                     	;# 
  3049  090C                     	;# 
  3050  090E                     	;# 
  3051  090F                     	;# 
  3052  091F                     	;# 
  3053  098F                     	;# 
  3054  098F                     	;# 
  3055  0990                     	;# 
  3056  0991                     	;# 
  3057  0992                     	;# 
  3058  0993                     	;# 
  3059  0994                     	;# 
  3060  0995                     	;# 
  3061  0996                     	;# 
  3062  0997                     	;# 
  3063  0A19                     	;# 
  3064  0A19                     	;# 
  3065  0A1A                     	;# 
  3066  0A1A                     	;# 
  3067  0A1B                     	;# 
  3068  0A1B                     	;# 
  3069  0A1B                     	;# 
  3070  0A1C                     	;# 
  3071  0A1C                     	;# 
  3072  0A1D                     	;# 
  3073  0A1D                     	;# 
  3074  0A1E                     	;# 
  3075  0A1E                     	;# 
  3076  0A1F                     	;# 
  3077  0A1F                     	;# 
  3078  0A1F                     	;# 
  3079  1E0F                     	;# 
  3080  1E10                     	;# 
  3081  1E11                     	;# 
  3082  1E12                     	;# 
  3083  1E13                     	;# 
  3084  1E14                     	;# 
  3085  1E15                     	;# 
  3086  1E16                     	;# 
  3087  1E17                     	;# 
  3088  1E18                     	;# 
  3089  1E19                     	;# 
  3090  1E1A                     	;# 
  3091  1E1B                     	;# 
  3092  1E1C                     	;# 
  3093  1E1D                     	;# 
  3094  1E1E                     	;# 
  3095  1E1F                     	;# 
  3096  1E20                     	;# 
  3097  1E21                     	;# 
  3098  1E22                     	;# 
  3099  1E23                     	;# 
  3100  1E24                     	;# 
  3101  1E25                     	;# 
  3102  1E26                     	;# 
  3103  1E27                     	;# 
  3104  1E28                     	;# 
  3105  1E29                     	;# 
  3106  1E2A                     	;# 
  3107  1E2B                     	;# 
  3108  1E2C                     	;# 
  3109  1E2D                     	;# 
  3110  1E2E                     	;# 
  3111  1E2F                     	;# 
  3112  1E30                     	;# 
  3113  1E31                     	;# 
  3114  1E32                     	;# 
  3115  1E33                     	;# 
  3116  1E34                     	;# 
  3117  1E35                     	;# 
  3118  1E36                     	;# 
  3119  1E37                     	;# 
  3120  1E8F                     	;# 
  3121  1E90                     	;# 
  3122  1E91                     	;# 
  3123  1E92                     	;# 
  3124  1E93                     	;# 
  3125  1E9C                     	;# 
  3126  1EA1                     	;# 
  3127  1EA2                     	;# 
  3128  1EB1                     	;# 
  3129  1EBB                     	;# 
  3130  1EBC                     	;# 
  3131  1EBD                     	;# 
  3132  1EBE                     	;# 
  3133  1EC3                     	;# 
  3134  1EC5                     	;# 
  3135  1EC6                     	;# 
  3136  1EC7                     	;# 
  3137  1ECB                     	;# 
  3138  1ECC                     	;# 
  3139  1ECD                     	;# 
  3140  1ECE                     	;# 
  3141  1F10                     	;# 
  3142  1F11                     	;# 
  3143  1F12                     	;# 
  3144  1F13                     	;# 
  3145  1F14                     	;# 
  3146  1F15                     	;# 
  3147  1F20                     	;# 
  3148  1F21                     	;# 
  3149  1F22                     	;# 
  3150  1F23                     	;# 
  3151  1F24                     	;# 
  3152  1F25                     	;# 
  3153  1F38                     	;# 
  3154  1F39                     	;# 
  3155  1F3A                     	;# 
  3156  1F3B                     	;# 
  3157  1F3C                     	;# 
  3158  1F3D                     	;# 
  3159  1F3E                     	;# 
  3160  1F3F                     	;# 
  3161  1F4E                     	;# 
  3162  1F4F                     	;# 
  3163  1F50                     	;# 
  3164  1F51                     	;# 
  3165  1F52                     	;# 
  3166  1F53                     	;# 
  3167  1F54                     	;# 
  3168  1F55                     	;# 
  3169  1FE4                     	;# 
  3170  1FE5                     	;# 
  3171  1FE6                     	;# 
  3172  1FE7                     	;# 
  3173  1FE8                     	;# 
  3174  1FE8                     	;# 
  3175  1FE9                     	;# 
  3176  1FEA                     	;# 
  3177  1FEA                     	;# 
  3178  1FEB                     	;# 
  3179  1FED                     	;# 
  3180  1FEE                     	;# 
  3181  1FEF                     	;# 
  3182  0000                     	;# 
  3183  0001                     	;# 
  3184  0002                     	;# 
  3185  0003                     	;# 
  3186  0004                     	;# 
  3187  0005                     	;# 
  3188  0006                     	;# 
  3189  0007                     	;# 
  3190  0008                     	;# 
  3191  0009                     	;# 
  3192  000A                     	;# 
  3193  000B                     	;# 
  3194  000C                     	;# 
  3195  000E                     	;# 
  3196  0012                     	;# 
  3197  0014                     	;# 
  3198  0018                     	;# 
  3199  001A                     	;# 
  3200  009B                     	;# 
  3201  009B                     	;# 
  3202  009C                     	;# 
  3203  009D                     	;# 
  3204  009E                     	;# 
  3205  009F                     	;# 
  3206  0119                     	;# 
  3207  0119                     	;# 
  3208  0119                     	;# 
  3209  011A                     	;# 
  3210  011A                     	;# 
  3211  011A                     	;# 
  3212  011B                     	;# 
  3213  011B                     	;# 
  3214  011B                     	;# 
  3215  011B                     	;# 
  3216  011B                     	;# 
  3217  011C                     	;# 
  3218  011C                     	;# 
  3219  011C                     	;# 
  3220  011D                     	;# 
  3221  011D                     	;# 
  3222  011D                     	;# 
  3223  011E                     	;# 
  3224  011E                     	;# 
  3225  011E                     	;# 
  3226  011F                     	;# 
  3227  011F                     	;# 
  3228  011F                     	;# 
  3229  011F                     	;# 
  3230  011F                     	;# 
  3231  018C                     	;# 
  3232  018D                     	;# 
  3233  018E                     	;# 
  3234  018F                     	;# 
  3235  0190                     	;# 
  3236  0191                     	;# 
  3237  0192                     	;# 
  3238  020C                     	;# 
  3239  020C                     	;# 
  3240  020D                     	;# 
  3241  020E                     	;# 
  3242  020F                     	;# 
  3243  020F                     	;# 
  3244  0210                     	;# 
  3245  0210                     	;# 
  3246  0211                     	;# 
  3247  0211                     	;# 
  3248  028C                     	;# 
  3249  028C                     	;# 
  3250  028D                     	;# 
  3251  028D                     	;# 
  3252  028E                     	;# 
  3253  028F                     	;# 
  3254  0290                     	;# 
  3255  0291                     	;# 
  3256  030C                     	;# 
  3257  030C                     	;# 
  3258  030D                     	;# 
  3259  030E                     	;# 
  3260  030F                     	;# 
  3261  0310                     	;# 
  3262  0310                     	;# 
  3263  0311                     	;# 
  3264  0312                     	;# 
  3265  0313                     	;# 
  3266  0314                     	;# 
  3267  0314                     	;# 
  3268  0315                     	;# 
  3269  0316                     	;# 
  3270  0318                     	;# 
  3271  0318                     	;# 
  3272  0319                     	;# 
  3273  031A                     	;# 
  3274  031C                     	;# 
  3275  031C                     	;# 
  3276  031D                     	;# 
  3277  031E                     	;# 
  3278  038C                     	;# 
  3279  038C                     	;# 
  3280  038D                     	;# 
  3281  038E                     	;# 
  3282  058C                     	;# 
  3283  058C                     	;# 
  3284  058D                     	;# 
  3285  058E                     	;# 
  3286  058F                     	;# 
  3287  058F                     	;# 
  3288  0590                     	;# 
  3289  0591                     	;# 
  3290  0592                     	;# 
  3291  0593                     	;# 
  3292  059C                     	;# 
  3293  059C                     	;# 
  3294  059D                     	;# 
  3295  059D                     	;# 
  3296  059E                     	;# 
  3297  059F                     	;# 
  3298  060C                     	;# 
  3299  060D                     	;# 
  3300  060E                     	;# 
  3301  060F                     	;# 
  3302  0610                     	;# 
  3303  0611                     	;# 
  3304  0612                     	;# 
  3305  0613                     	;# 
  3306  0614                     	;# 
  3307  070C                     	;# 
  3308  070D                     	;# 
  3309  070E                     	;# 
  3310  070F                     	;# 
  3311  0710                     	;# 
  3312  0711                     	;# 
  3313  0712                     	;# 
  3314  0713                     	;# 
  3315  0716                     	;# 
  3316  0717                     	;# 
  3317  0718                     	;# 
  3318  0719                     	;# 
  3319  071A                     	;# 
  3320  071B                     	;# 
  3321  071C                     	;# 
  3322  071D                     	;# 
  3323  0796                     	;# 
  3324  0797                     	;# 
  3325  0798                     	;# 
  3326  0799                     	;# 
  3327  079A                     	;# 
  3328  079B                     	;# 
  3329  080C                     	;# 
  3330  080D                     	;# 
  3331  080E                     	;# 
  3332  080F                     	;# 
  3333  0810                     	;# 
  3334  0811                     	;# 
  3335  0812                     	;# 
  3336  0813                     	;# 
  3337  0814                     	;# 
  3338  081A                     	;# 
  3339  081A                     	;# 
  3340  081B                     	;# 
  3341  081C                     	;# 
  3342  081C                     	;# 
  3343  081D                     	;# 
  3344  081E                     	;# 
  3345  081F                     	;# 
  3346  088C                     	;# 
  3347  088D                     	;# 
  3348  088E                     	;# 
  3349  088F                     	;# 
  3350  0890                     	;# 
  3351  0891                     	;# 
  3352  0892                     	;# 
  3353  0893                     	;# 
  3354  0895                     	;# 
  3355  0896                     	;# 
  3356  090C                     	;# 
  3357  090E                     	;# 
  3358  090F                     	;# 
  3359  091F                     	;# 
  3360  098F                     	;# 
  3361  098F                     	;# 
  3362  0990                     	;# 
  3363  0991                     	;# 
  3364  0992                     	;# 
  3365  0993                     	;# 
  3366  0994                     	;# 
  3367  0995                     	;# 
  3368  0996                     	;# 
  3369  0997                     	;# 
  3370  0A19                     	;# 
  3371  0A19                     	;# 
  3372  0A1A                     	;# 
  3373  0A1A                     	;# 
  3374  0A1B                     	;# 
  3375  0A1B                     	;# 
  3376  0A1B                     	;# 
  3377  0A1C                     	;# 
  3378  0A1C                     	;# 
  3379  0A1D                     	;# 
  3380  0A1D                     	;# 
  3381  0A1E                     	;# 
  3382  0A1E                     	;# 
  3383  0A1F                     	;# 
  3384  0A1F                     	;# 
  3385  0A1F                     	;# 
  3386  1E0F                     	;# 
  3387  1E10                     	;# 
  3388  1E11                     	;# 
  3389  1E12                     	;# 
  3390  1E13                     	;# 
  3391  1E14                     	;# 
  3392  1E15                     	;# 
  3393  1E16                     	;# 
  3394  1E17                     	;# 
  3395  1E18                     	;# 
  3396  1E19                     	;# 
  3397  1E1A                     	;# 
  3398  1E1B                     	;# 
  3399  1E1C                     	;# 
  3400  1E1D                     	;# 
  3401  1E1E                     	;# 
  3402  1E1F                     	;# 
  3403  1E20                     	;# 
  3404  1E21                     	;# 
  3405  1E22                     	;# 
  3406  1E23                     	;# 
  3407  1E24                     	;# 
  3408  1E25                     	;# 
  3409  1E26                     	;# 
  3410  1E27                     	;# 
  3411  1E28                     	;# 
  3412  1E29                     	;# 
  3413  1E2A                     	;# 
  3414  1E2B                     	;# 
  3415  1E2C                     	;# 
  3416  1E2D                     	;# 
  3417  1E2E                     	;# 
  3418  1E2F                     	;# 
  3419  1E30                     	;# 
  3420  1E31                     	;# 
  3421  1E32                     	;# 
  3422  1E33                     	;# 
  3423  1E34                     	;# 
  3424  1E35                     	;# 
  3425  1E36                     	;# 
  3426  1E37                     	;# 
  3427  1E8F                     	;# 
  3428  1E90                     	;# 
  3429  1E91                     	;# 
  3430  1E92                     	;# 
  3431  1E93                     	;# 
  3432  1E9C                     	;# 
  3433  1EA1                     	;# 
  3434  1EA2                     	;# 
  3435  1EB1                     	;# 
  3436  1EBB                     	;# 
  3437  1EBC                     	;# 
  3438  1EBD                     	;# 
  3439  1EBE                     	;# 
  3440  1EC3                     	;# 
  3441  1EC5                     	;# 
  3442  1EC6                     	;# 
  3443  1EC7                     	;# 
  3444  1ECB                     	;# 
  3445  1ECC                     	;# 
  3446  1ECD                     	;# 
  3447  1ECE                     	;# 
  3448  1F10                     	;# 
  3449  1F11                     	;# 
  3450  1F12                     	;# 
  3451  1F13                     	;# 
  3452  1F14                     	;# 
  3453  1F15                     	;# 
  3454  1F20                     	;# 
  3455  1F21                     	;# 
  3456  1F22                     	;# 
  3457  1F23                     	;# 
  3458  1F24                     	;# 
  3459  1F25                     	;# 
  3460  1F38                     	;# 
  3461  1F39                     	;# 
  3462  1F3A                     	;# 
  3463  1F3B                     	;# 
  3464  1F3C                     	;# 
  3465  1F3D                     	;# 
  3466  1F3E                     	;# 
  3467  1F3F                     	;# 
  3468  1F4E                     	;# 
  3469  1F4F                     	;# 
  3470  1F50                     	;# 
  3471  1F51                     	;# 
  3472  1F52                     	;# 
  3473  1F53                     	;# 
  3474  1F54                     	;# 
  3475  1F55                     	;# 
  3476  1FE4                     	;# 
  3477  1FE5                     	;# 
  3478  1FE6                     	;# 
  3479  1FE7                     	;# 
  3480  1FE8                     	;# 
  3481  1FE8                     	;# 
  3482  1FE9                     	;# 
  3483  1FEA                     	;# 
  3484  1FEA                     	;# 
  3485  1FEB                     	;# 
  3486  1FED                     	;# 
  3487  1FEE                     	;# 
  3488  1FEF                     	;# 
  3489                           
  3490                           	psect	idataBANK0
  3491  0003                     __pidataBANK0:	
  3492                           
  3493                           ;initializer for _mode
  3494  0003  3402               	retlw	2
  3495                           
  3496                           	psect	idataBANK1
  3497  0B26                     __pidataBANK1:	
  3498                           
  3499                           ;initializer for _CHG_TIMER
  3500  0B26  340A               	retlw	10
  3501                           
  3502                           ;initializer for _EN_TIMER
  3503  0B27  3401               	retlw	1
  3504                           
  3505                           ;initializer for _STAT_DIS
  3506  0B28  3401               	retlw	1
  3507                           
  3508                           ;initializer for _EN_TERM
  3509  0B29  3401               	retlw	1
  3510                           
  3511                           ;initializer for _ICHG
  3512  0B2A  3460               	retlw	96
  3513                           
  3514                           ;initializer for _SYS_MIN
  3515  0B2B  3405               	retlw	5
  3516                           
  3517                           ;initializer for _CHG_CONFIG
  3518  0B2C  3401               	retlw	1
  3519                           
  3520                           ;initializer for _INILIM
  3521  0B2D  343A               	retlw	58
  3522                           
  3523                           ;initializer for _EN_ILIM
  3524  0B2E  3401               	retlw	1
  3525                           
  3526                           	psect	idataBANK2
  3527  0ADB                     __pidataBANK2:	
  3528                           
  3529                           ;initializer for _TREG
  3530  0ADB  3401               	retlw	1
  3531                           
  3532                           	psect	stringtext1
  3533  07E6                     __pstringtext1:	
  3534  07E6                     _nvm_config:	
  3535  07E6  3400               	retlw	0
  3536  07E7  3400               	retlw	0
  3537  07E8  34B0               	retlw	176
  3538  07E9  34AA               	retlw	170
  3539  07EA  3400               	retlw	0
  3540  07EB  3445               	retlw	69
  3541  07EC  3400               	retlw	0
  3542  07ED  3400               	retlw	0
  3543  07EE  3410               	retlw	16
  3544  07EF  3440               	retlw	64
  3545  07F0  349C               	retlw	156
  3546  07F1  341C               	retlw	28
  3547  07F2  34FF               	retlw	255
  3548  07F3  3401               	retlw	1
  3549  07F4  343C               	retlw	60
  3550  07F5  34DF               	retlw	223
  3551  07F6  3402               	retlw	2
  3552  07F7  3440               	retlw	64
  3553  07F8  340F               	retlw	15
  3554  07F9  3400               	retlw	0
  3555  07FA  3432               	retlw	50
  3556  07FB  3400               	retlw	0
  3557  07FC  34FC               	retlw	252
  3558  07FD  34F1               	retlw	241
  3559  07FE  3400               	retlw	0
  3560  07FF  3419               	retlw	25
  3561  0800  3456               	retlw	86
  3562  0801  34AF               	retlw	175
  3563  0802  34FB               	retlw	251
  3564  0803  3475               	retlw	117
  3565  0804  345F               	retlw	95
  3566  0805  3400               	retlw	0
  3567  0806  3400               	retlw	0
  3568  0807  342D               	retlw	45
  3569  0808  34F0               	retlw	240
  3570  0809  3420               	retlw	32
  3571  080A  3443               	retlw	67
  3572  080B  3400               	retlw	0
  3573  080C  3450               	retlw	80
  3574  080D  34FB               	retlw	251
  3575  080E                     __end_of_nvm_config:	
  3576  0012                     _TRISAbits	set	18
  3577  0014                     _TRISCbits	set	20
  3578  000B                     _INTCONbits	set	11
  3579  0014                     _TRISC	set	20
  3580  0012                     _TRISA	set	18
  3581  0070                     _RC0	set	112
  3582  0071                     _RC1	set	113
  3583  0074                     _RC4	set	116
  3584  0073                     _RC3	set	115
  3585  0072                     _RC2	set	114
  3586  0075                     _RC5	set	117
  3587  0062                     _RA2	set	98
  3588  0065                     _RA5	set	101
  3589  009C                     _ADRESH	set	156
  3590  009D                     _ADCON0bits	set	157
  3591  009D                     _ADCON0	set	157
  3592  009E                     _ADCON1	set	158
  3593  0192                     _SSP1CON3	set	402
  3594  018C                     _SSP1BUF	set	396
  3595  0191                     _SSP1CON2bits	set	401
  3596  018F                     _SSP1STAT	set	399
  3597  018D                     _SSP1ADD	set	397
  3598  0191                     _SSP1CON2	set	401
  3599  0190                     _SSP1CON1	set	400
  3600  020C                     _TMR1	set	524
  3601  0211                     _T1CLK	set	529
  3602  020F                     _T1GCONbits	set	527
  3603  020E                     _T1CONbits	set	526
  3604  028C                     _TMR2	set	652
  3605  0290                     _T2CLKCON	set	656
  3606  028D                     _PR2	set	653
  3607  1473                     _T2OUTPS3	set	5235
  3608  1472                     _T2OUTPS2	set	5234
  3609  1471                     _T2OUTPS1	set	5233
  3610  1470                     _T2OUTPS0	set	5232
  3611  1476                     _T2CKPS2	set	5238
  3612  1475                     _T2CKPS1	set	5237
  3613  1474                     _T2CKPS0	set	5236
  3614  1477                     _TMR2ON	set	5239
  3615  031E                     _PWM5CONbits	set	798
  3616  031A                     _PWM4CONbits	set	794
  3617  0316                     _PWM3CONbits	set	790
  3618  031C                     _PWM5DCL	set	796
  3619  031D                     _PWM5DCH	set	797
  3620  031E                     _PWM5CON	set	798
  3621  0318                     _PWM4DCL	set	792
  3622  0319                     _PWM4DCH	set	793
  3623  031A                     _PWM4CON	set	794
  3624  0314                     _PWM3DCL	set	788
  3625  0315                     _PWM3DCH	set	789
  3626  0316                     _PWM3CON	set	790
  3627  0716                     _PIE0bits	set	1814
  3628  071A                     _PIE4bits	set	1818
  3629  3881                     _TMR2IF	set	14465
  3630  3880                     _TMR1IF	set	14464
  3631  081F                     _NVMCON2	set	2079
  3632  081C                     _NVMDATL	set	2076
  3633  081A                     _NVMADRL	set	2074
  3634  081B                     _NVMADRH	set	2075
  3635  081E                     _NVMCON1bits	set	2078
  3636  0812                     _VREGCON	set	2066
  3637  088C                     _CPUDOZEbits	set	2188
  3638  1E8F                     _PPSLOCK	set	7823
  3639  1EC5                     _SSP1CLKPPS	set	7877
  3640  1EC6                     _SSP1DATPPS	set	7878
  3641  1F24                     _RC4PPS	set	7972
  3642  1F23                     _RC3PPS	set	7971
  3643  1F22                     _RC2PPS	set	7970
  3644  1F20                     _RC0PPS	set	7968
  3645  1F21                     _RC1PPS	set	7969
  3646  1F3F                     _IOCAF	set	7999
  3647  1F3E                     _IOCAN	set	7998
  3648  1F3D                     _IOCAP	set	7997
  3649  1F39                     _WPUA	set	7993
  3650  1F38                     _ANSELAbits	set	7992
  3651  1F4E                     _ANSELC	set	8014
  3652  1F38                     _ANSELA	set	7992
  3653  F9FD                     _IOCAF5	set	63997
  3654                           
  3655                           ; #config settings
  3656  0000                     
  3657                           	psect	cinit
  3658  006C                     start_initialization:	
  3659  006C                     __initialization:	
  3660                           
  3661                           ; Initialize objects allocated to BANK0
  3662  006C  3180  2003  3180   	fcall	__pidataBANK0	;fetch initializer
  3663  006F  00EF               	movwf	__pdataBANK0& (0+127)
  3664                           
  3665                           ; Initialize objects allocated to BANK1
  3666  0070  3026               	movlw	low __pidataBANK1
  3667  0071  0084               	movwf	4
  3668  0072  308B               	movlw	(high __pidataBANK1)| (0+128)
  3669  0073  0085               	movwf	5
  3670  0074  30E3               	movlw	low __pdataBANK1
  3671  0075  0086               	movwf	6
  3672  0076  3000               	movlw	high __pdataBANK1
  3673  0077  0087               	movwf	7
  3674  0078  3009               	movlw	9
  3675  0079  318B  2308  3180   	fcall	init_ram
  3676                           
  3677                           ; Initialize objects allocated to BANK2
  3678  007C  0142               	movlb	2	; select bank2
  3679  007D  318A  22DB  3180   	fcall	__pidataBANK2	;fetch initializer
  3680  0080  00BE               	movwf	__pdataBANK2& (0+127)
  3681                           
  3682                           ; Clear objects allocated to COMMON
  3683  0081  01F8               	clrf	__pbssCOMMON& (0+127)
  3684  0082  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  3685  0083  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  3686  0084  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  3687  0085  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  3688  0086  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  3689                           
  3690                           ; Clear objects allocated to BANK0
  3691  0087  3060               	movlw	low __pbssBANK0
  3692  0088  0084               	movwf	4
  3693  0089  3000               	movlw	high __pbssBANK0
  3694  008A  0085               	movwf	5
  3695  008B  300F               	movlw	15
  3696  008C  318B  2302  3180   	fcall	clear_ram0
  3697                           
  3698                           ; Clear objects allocated to BANK1
  3699  008F  0141               	movlb	1	; select bank1
  3700  0090  01EC               	clrf	__pbssBANK1& (0+127)
  3701  0091  01ED               	clrf	(__pbssBANK1+1)& (0+127)
  3702  0092  01EE               	clrf	(__pbssBANK1+2)& (0+127)
  3703  0093  01EF               	clrf	(__pbssBANK1+3)& (0+127)
  3704                           
  3705                           ; Clear objects allocated to BANK2
  3706  0094  3020               	movlw	low __pbssBANK2
  3707  0095  0084               	movwf	4
  3708  0096  3001               	movlw	high __pbssBANK2
  3709  0097  0085               	movwf	5
  3710  0098  301E               	movlw	30
  3711  0099  318B  2302  3180   	fcall	clear_ram0
  3712  009C                     end_of_initialization:	
  3713                           ;End of C runtime variable initialization code
  3714                           
  3715  009C                     __end_of__initialization:	
  3716  009C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3717  009D  0140               	movlb	0
  3718  009E  3181  29F7         	ljmp	_main	;jump to C main() function
  3719                           
  3720                           	psect	bssCOMMON
  3721  0078                     __pbssCOMMON:	
  3722  0078                     _timer_counter:	
  3723  0078                     	ds	4
  3724  007C                     _REG08_config:	
  3725  007C                     	ds	1
  3726  007D                     _btn_is_pressed:	
  3727  007D                     	ds	1
  3728                           
  3729                           	psect	bssBANK0
  3730  0060                     __pbssBANK0:	
  3731  0060                     _flash_state:	
  3732  0060                     	ds	1
  3733  0061                     _dir:	
  3734  0061                     	ds	1
  3735  0062                     _color:	
  3736  0062                     	ds	1
  3737  0063                     _c:	
  3738  0063                     	ds	1
  3739  0064                     _i:	
  3740  0064                     	ds	1
  3741  0065                     _REG07_config:	
  3742  0065                     	ds	1
  3743  0066                     _REG04_config:	
  3744  0066                     	ds	1
  3745  0067                     _REG03_config:	
  3746  0067                     	ds	1
  3747  0068                     _REG00_config:	
  3748  0068                     	ds	1
  3749  0069                     _set_stusb4500:	
  3750  0069                     	ds	1
  3751  006A                     _btn_is_debounced:	
  3752  006A                     	ds	1
  3753  006B                     _SYS_ENABLE:	
  3754  006B                     	ds	1
  3755  006C                     _BQ_adc_state:	
  3756  006C                     	ds	1
  3757  006D                     _BATTERY_VOLTAGE:	
  3758  006D                     	ds	1
  3759  006E                     _VBUS_CHRG_STATE:	
  3760  006E                     	ds	1
  3761                           
  3762                           	psect	dataBANK0
  3763  006F                     __pdataBANK0:	
  3764  006F                     _mode:	
  3765  006F                     	ds	1
  3766                           
  3767                           	psect	bssBANK1
  3768  00EC                     __pbssBANK1:	
  3769  00EC                     _WATCHDOG:	
  3770  00EC                     	ds	1
  3771  00ED                     _OTG_CONFIG:	
  3772  00ED                     	ds	1
  3773  00EE                     _WD_RST:	
  3774  00EE                     	ds	1
  3775  00EF                     _EN_HIZ:	
  3776  00EF                     	ds	1
  3777                           
  3778                           	psect	dataBANK1
  3779  00E3                     __pdataBANK1:	
  3780  00E3                     _CHG_TIMER:	
  3781  00E3                     	ds	1
  3782  00E4                     _EN_TIMER:	
  3783  00E4                     	ds	1
  3784  00E5                     _STAT_DIS:	
  3785  00E5                     	ds	1
  3786  00E6                     _EN_TERM:	
  3787  00E6                     	ds	1
  3788  00E7                     _ICHG:	
  3789  00E7                     	ds	1
  3790  00E8                     _SYS_MIN:	
  3791  00E8                     	ds	1
  3792  00E9                     _CHG_CONFIG:	
  3793  00E9                     	ds	1
  3794  00EA                     _INILIM:	
  3795  00EA                     	ds	1
  3796  00EB                     _EN_ILIM:	
  3797  00EB                     	ds	1
  3798                           
  3799                           	psect	bssBANK2
  3800  0120                     __pbssBANK2:	
  3801  0120                     _flash_time:	
  3802  0120                     	ds	4
  3803  0124                     _chrg_delay:	
  3804  0124                     	ds	4
  3805  0128                     _rgb_delay:	
  3806  0128                     	ds	4
  3807  012C                     _BQ_adc_time:	
  3808  012C                     	ds	4
  3809  0130                     _stusb4500_timeout:	
  3810  0130                     	ds	4
  3811  0134                     _btn_time:	
  3812  0134                     	ds	4
  3813  0138                     _btn_time_start:	
  3814  0138                     	ds	4
  3815  013C                     _VCLAMP:	
  3816  013C                     	ds	1
  3817  013D                     _BAT_COMP:	
  3818  013D                     	ds	1
  3819                           
  3820                           	psect	dataBANK2
  3821  013E                     __pdataBANK2:	
  3822  013E                     _TREG:	
  3823  013E                     	ds	1
  3824                           
  3825                           	psect	inittext
  3826  0B08                     init_ram:	
  3827  0B08  00FE               	movwf	btemp
  3828  0B09                     initloop:	
  3829  0B09  0012               	moviw fsr0++
  3830  0B0A  001E               	movwi fsr1++
  3831  0B0B  0BFE               	decfsz	btemp,f
  3832  0B0C  2B09               	goto	initloop
  3833  0B0D  3400               	retlw	0
  3834                           
  3835                           	psect	clrtext
  3836  0B02                     clear_ram0:	
  3837                           ;	Called with FSR0 containing the base address, and
  3838                           ;	WREG with the size to clear
  3839                           
  3840  0B02  0064               	clrwdt	;clear the watchdog before getting into this loop
  3841  0B03                     clrloop0:	
  3842  0B03  0180               	clrf	0	;clear RAM location pointed to by FSR
  3843  0B04  3101               	addfsr 0,1
  3844  0B05  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3845  0B06  2B03               	goto	clrloop0	;have we reached the end yet?
  3846  0B07  3400               	retlw	0	;all done for this memory range, return
  3847                           
  3848                           	psect	cstackBANK1
  3849  00A0                     __pcstackBANK1:	
  3850  00A0                     negotiate_optimal_pdo@opt_pdo_power:	
  3851                           
  3852                           ; 4 bytes @ 0x0
  3853  00A0                     	ds	4
  3854  00A4                     negotiate_optimal_pdo@opt_pdo_current:	
  3855                           
  3856                           ; 2 bytes @ 0x4
  3857  00A4                     	ds	2
  3858  00A6                     negotiate_optimal_pdo@opt_pdo_voltage:	
  3859                           
  3860                           ; 2 bytes @ 0x6
  3861  00A6                     	ds	2
  3862  00A8                     negotiate_optimal_pdo@src_pdos:	
  3863                           
  3864                           ; 1 bytes @ 0x8
  3865  00A8                     	ds	1
  3866  00A9                     negotiate_optimal_pdo@pdo_power:	
  3867                           
  3868                           ; 4 bytes @ 0x9
  3869  00A9                     	ds	4
  3870  00AD                     negotiate_optimal_pdo@pdo_current:	
  3871                           
  3872                           ; 2 bytes @ 0xD
  3873  00AD                     	ds	2
  3874  00AF                     negotiate_optimal_pdo@i:	
  3875                           
  3876                           ; 2 bytes @ 0xF
  3877  00AF                     	ds	2
  3878  00B1                     negotiate_optimal_pdo@ok:	
  3879                           
  3880                           ; 2 bytes @ 0x11
  3881  00B1                     	ds	2
  3882  00B3                     negotiate_optimal_pdo@pdo:	
  3883                           
  3884                           ; 4 bytes @ 0x13
  3885  00B3                     	ds	4
  3886  00B7                     negotiate_optimal_pdo@pdo_voltage:	
  3887                           
  3888                           ; 2 bytes @ 0x17
  3889  00B7                     	ds	2
  3890  00B9                     stusb_negotiate@buffer:	
  3891                           
  3892                           ; 40 bytes @ 0x19
  3893  00B9                     	ds	40
  3894  00E1                     stusb_negotiate@header:	
  3895                           
  3896                           ; 2 bytes @ 0x41
  3897  00E1                     	ds	2
  3898                           
  3899                           	psect	cstackCOMMON
  3900  0070                     __pcstackCOMMON:	
  3901  0070                     ?_I2C_bus_reset:	
  3902  0070                     ?_PPS_unlock:	
  3903                           ; 1 bytes @ 0x0
  3904                           
  3905  0070                     ?_PPS_lock:	
  3906                           ; 1 bytes @ 0x0
  3907                           
  3908  0070                     ?_BQ_CONFIG_INIT:	
  3909                           ; 1 bytes @ 0x0
  3910                           
  3911  0070                     ?_BQ_INIT:	
  3912                           ; 1 bytes @ 0x0
  3913                           
  3914  0070                     ?_PWM_INIT:	
  3915                           ; 1 bytes @ 0x0
  3916                           
  3917  0070                     ?_BQ_UPDATE:	
  3918                           ; 1 bytes @ 0x0
  3919                           
  3920  0070                     ?_led_modes:	
  3921                           ; 1 bytes @ 0x0
  3922                           
  3923  0070                     ?_chrg_led:	
  3924                           ; 1 bytes @ 0x0
  3925                           
  3926  0070                     ?_PWM_power_down:	
  3927                           ; 1 bytes @ 0x0
  3928                           
  3929  0070                     ?_BQ_get_chrg_state:	
  3930                           ; 1 bytes @ 0x0
  3931                           
  3932  0070                     ?_PIC_SETUP:	
  3933                           ; 1 bytes @ 0x0
  3934                           
  3935  0070                     ?_ISR:	
  3936                           ; 1 bytes @ 0x0
  3937                           
  3938  0070                     ?_thermal_protection:	
  3939                           ; 1 bytes @ 0x0
  3940                           
  3941  0070                     ?_main:	
  3942                           ; 1 bytes @ 0x0
  3943                           
  3944  0070                     ?_I2C_Master_Wait:	
  3945                           ; 1 bytes @ 0x0
  3946                           
  3947  0070                     ?_I2C_Master_Start:	
  3948                           ; 1 bytes @ 0x0
  3949                           
  3950  0070                     ?_I2C_Master_Stop:	
  3951                           ; 1 bytes @ 0x0
  3952                           
  3953  0070                     ?_I2C_Master_Write:	
  3954                           ; 1 bytes @ 0x0
  3955                           
  3956  0070                     ?_I2C_Master_Ack:	
  3957                           ; 1 bytes @ 0x0
  3958                           
  3959  0070                     ?_I2C_Master_nAck:	
  3960                           ; 1 bytes @ 0x0
  3961                           
  3962  0070                     ?_I2C_Master_Read:	
  3963                           ; 1 bytes @ 0x0
  3964                           
  3965  0070                     ?_RGB_fade:	
  3966                           ; 1 bytes @ 0x0
  3967                           
  3968  0070                     ?_battery_fade:	
  3969                           ; 1 bytes @ 0x0
  3970                           
  3971  0070                     ?_flash_led:	
  3972                           ; 1 bytes @ 0x0
  3973                           
  3974  0070                     ?_i2c_master_wait:	
  3975                           ; 1 bytes @ 0x0
  3976                           
  3977  0070                     ?_i2c_master_start:	
  3978                           ; 1 bytes @ 0x0
  3979                           
  3980  0070                     ?_i2c_master_repeat_start:	
  3981                           ; 1 bytes @ 0x0
  3982                           
  3983  0070                     ?_i2c_master_stop:	
  3984                           ; 1 bytes @ 0x0
  3985                           
  3986  0070                     ?_i2c_master_receive_byte:	
  3987                           ; 1 bytes @ 0x0
  3988                           
  3989  0070                     ?_stusb_negotiate:	
  3990                           ; 1 bytes @ 0x0
  3991                           
  3992  0070                     ?i1_get_time:	
  3993                           ; 2 bytes @ 0x0
  3994                           
  3995  0070                     ?i1_timer_diff:	
  3996                           ; 4 bytes @ 0x0
  3997                           
  3998  0070                     i1timer_diff@t:	
  3999                           ; 4 bytes @ 0x0
  4000                           
  4001                           
  4002                           ; 4 bytes @ 0x0
  4003  0070                     	ds	4
  4004  0074                     ??i1_get_time:	
  4005  0074                     ??i1_timer_diff:	
  4006                           ; 1 bytes @ 0x4
  4007                           
  4008                           
  4009                           ; 1 bytes @ 0x4
  4010  0074                     	ds	4
  4011  0078                     ??_ISR:	
  4012                           
  4013                           	psect	cstackBANK0
  4014  0021                     __pcstackBANK0:	
  4015                           ; 1 bytes @ 0x8
  4016                           
  4017  0021                     ??_I2C_bus_reset:	
  4018  0021                     ??_PPS_unlock:	
  4019                           ; 1 bytes @ 0x0
  4020                           
  4021  0021                     ??_PPS_lock:	
  4022                           ; 1 bytes @ 0x0
  4023                           
  4024  0021                     ??_BQ_CONFIG_INIT:	
  4025                           ; 1 bytes @ 0x0
  4026                           
  4027  0021                     ??_PWM_INIT:	
  4028                           ; 1 bytes @ 0x0
  4029                           
  4030  0021                     ??_PWM_power_down:	
  4031                           ; 1 bytes @ 0x0
  4032                           
  4033  0021                     ??_PIC_SETUP:	
  4034                           ; 1 bytes @ 0x0
  4035                           
  4036  0021                     ??_I2C_Master_Wait:	
  4037                           ; 1 bytes @ 0x0
  4038                           
  4039  0021                     ??_I2C_Master_Start:	
  4040                           ; 1 bytes @ 0x0
  4041                           
  4042  0021                     ??_I2C_Master_Stop:	
  4043                           ; 1 bytes @ 0x0
  4044                           
  4045  0021                     ??_I2C_Master_Write:	
  4046                           ; 1 bytes @ 0x0
  4047                           
  4048  0021                     ??_I2C_Master_Ack:	
  4049                           ; 1 bytes @ 0x0
  4050                           
  4051  0021                     ??_I2C_Master_nAck:	
  4052                           ; 1 bytes @ 0x0
  4053                           
  4054  0021                     ??_I2C_Master_Read:	
  4055                           ; 1 bytes @ 0x0
  4056                           
  4057  0021                     ??_i2c_master_wait:	
  4058                           ; 1 bytes @ 0x0
  4059                           
  4060  0021                     ??_i2c_master_start:	
  4061                           ; 1 bytes @ 0x0
  4062                           
  4063  0021                     ??_i2c_master_repeat_start:	
  4064                           ; 1 bytes @ 0x0
  4065                           
  4066  0021                     ??_i2c_master_stop:	
  4067                           ; 1 bytes @ 0x0
  4068                           
  4069  0021                     ??_i2c_master_receive_byte:	
  4070                           ; 1 bytes @ 0x0
  4071                           
  4072  0021                     ?_readADC:	
  4073                           ; 1 bytes @ 0x0
  4074                           
  4075  0021                     ?_i2c_master_send_byte:	
  4076                           ; 2 bytes @ 0x0
  4077                           
  4078  0021                     ?___wmul:	
  4079                           ; 2 bytes @ 0x0
  4080                           
  4081  0021                     ?___lwdiv:	
  4082                           ; 2 bytes @ 0x0
  4083                           
  4084  0021                     ?_get_time:	
  4085                           ; 2 bytes @ 0x0
  4086                           
  4087  0021                     ?_timer_diff:	
  4088                           ; 4 bytes @ 0x0
  4089                           
  4090  0021                     ?___lmul:	
  4091                           ; 4 bytes @ 0x0
  4092                           
  4093  0021                     I2C_Master_Write@data:	
  4094                           ; 4 bytes @ 0x0
  4095                           
  4096  0021                     ___wmul@multiplier:	
  4097                           ; 1 bytes @ 0x0
  4098                           
  4099  0021                     ___lwdiv@divisor:	
  4100                           ; 2 bytes @ 0x0
  4101                           
  4102  0021                     timer_diff@t:	
  4103                           ; 2 bytes @ 0x0
  4104                           
  4105  0021                     ___lmul@multiplier:	
  4106                           ; 4 bytes @ 0x0
  4107                           
  4108                           
  4109                           ; 4 bytes @ 0x0
  4110  0021                     	ds	1
  4111  0022                     ?_BQ_Write:	
  4112  0022                     I2C_bus_reset@i:	
  4113                           ; 1 bytes @ 0x1
  4114                           
  4115  0022                     I2C_Master_Read@ack:	
  4116                           ; 1 bytes @ 0x1
  4117                           
  4118  0022                     BQ_Write@data:	
  4119                           ; 1 bytes @ 0x1
  4120                           
  4121  0022                     i2c_master_receive_byte@ack:	
  4122                           ; 1 bytes @ 0x1
  4123                           
  4124                           
  4125                           ; 1 bytes @ 0x1
  4126  0022                     	ds	1
  4127  0023                     ??_readADC:	
  4128  0023                     ??_BQ_Write:	
  4129                           ; 1 bytes @ 0x2
  4130                           
  4131  0023                     I2C_Master_Read@data:	
  4132                           ; 1 bytes @ 0x2
  4133                           
  4134  0023                     BQ_Write@reg:	
  4135                           ; 1 bytes @ 0x2
  4136                           
  4137  0023                     i2c_master_receive_byte@data:	
  4138                           ; 1 bytes @ 0x2
  4139                           
  4140  0023                     ___wmul@multiplicand:	
  4141                           ; 1 bytes @ 0x2
  4142                           
  4143  0023                     ___lwdiv@dividend:	
  4144                           ; 2 bytes @ 0x2
  4145                           
  4146                           
  4147                           ; 2 bytes @ 0x2
  4148  0023                     	ds	1
  4149  0024                     ??_BQ_INIT:	
  4150  0024                     ??_i2c_master_send_byte:	
  4151                           ; 1 bytes @ 0x3
  4152                           
  4153  0024                     ?_BQ_Read:	
  4154                           ; 1 bytes @ 0x3
  4155                           
  4156  0024                     i2c_master_send_byte@data:	
  4157                           ; 2 bytes @ 0x3
  4158                           
  4159                           
  4160                           ; 1 bytes @ 0x3
  4161  0024                     	ds	1
  4162  0025                     ??_get_time:	
  4163  0025                     ??_timer_diff:	
  4164                           ; 1 bytes @ 0x4
  4165                           
  4166  0025                     ??___wmul:	
  4167                           ; 1 bytes @ 0x4
  4168                           
  4169  0025                     ??___lwdiv:	
  4170                           ; 1 bytes @ 0x4
  4171                           
  4172  0025                     ?_i2c_master_read:	
  4173                           ; 1 bytes @ 0x4
  4174                           
  4175  0025                     ?_i2c_master_write:	
  4176                           ; 2 bytes @ 0x4
  4177                           
  4178  0025                     readADC@channel:	
  4179                           ; 2 bytes @ 0x4
  4180                           
  4181  0025                     i2c_master_write@reg:	
  4182                           ; 1 bytes @ 0x4
  4183                           
  4184  0025                     i2c_master_read@reg:	
  4185                           ; 1 bytes @ 0x4
  4186                           
  4187  0025                     ___wmul@product:	
  4188                           ; 1 bytes @ 0x4
  4189                           
  4190  0025                     ___lmul@multiplicand:	
  4191                           ; 2 bytes @ 0x4
  4192                           
  4193                           
  4194                           ; 4 bytes @ 0x4
  4195  0025                     	ds	1
  4196  0026                     ??_thermal_protection:	
  4197  0026                     ??_BQ_Read:	
  4198                           ; 1 bytes @ 0x5
  4199                           
  4200  0026                     i2c_master_read@buf:	
  4201                           ; 1 bytes @ 0x5
  4202                           
  4203  0026                     i2c_master_write@buf:	
  4204                           ; 1 bytes @ 0x5
  4205                           
  4206  0026                     ___lwdiv@quotient:	
  4207                           ; 2 bytes @ 0x5
  4208                           
  4209                           
  4210                           ; 2 bytes @ 0x5
  4211  0026                     	ds	1
  4212  0027                     ?___awdiv:	
  4213  0027                     i2c_master_read@len:	
  4214                           ; 2 bytes @ 0x6
  4215                           
  4216  0027                     ___awdiv@divisor:	
  4217                           ; 2 bytes @ 0x6
  4218                           
  4219                           
  4220                           ; 2 bytes @ 0x6
  4221  0027                     	ds	1
  4222  0028                     BQ_Read@reg:	
  4223  0028                     ___lwdiv@counter:	
  4224                           ; 1 bytes @ 0x7
  4225                           
  4226  0028                     i2c_master_write@len:	
  4227                           ; 1 bytes @ 0x7
  4228                           
  4229                           
  4230                           ; 2 bytes @ 0x7
  4231  0028                     	ds	1
  4232  0029                     ??_chrg_led:	
  4233  0029                     ??_i2c_master_read:	
  4234                           ; 1 bytes @ 0x8
  4235                           
  4236  0029                     ??_RGB_fade:	
  4237                           ; 1 bytes @ 0x8
  4238                           
  4239  0029                     ??_flash_led:	
  4240                           ; 1 bytes @ 0x8
  4241                           
  4242  0029                     ??___lmul:	
  4243                           ; 1 bytes @ 0x8
  4244                           
  4245  0029                     BQ_Read@data:	
  4246                           ; 1 bytes @ 0x8
  4247                           
  4248  0029                     ___awdiv@dividend:	
  4249                           ; 1 bytes @ 0x8
  4250                           
  4251  0029                     ___lmul@product:	
  4252                           ; 2 bytes @ 0x8
  4253                           
  4254                           
  4255                           ; 4 bytes @ 0x8
  4256  0029                     	ds	1
  4257  002A                     ??_BQ_get_chrg_state:	
  4258  002A                     ??_i2c_master_write:	
  4259                           ; 1 bytes @ 0x9
  4260                           
  4261  002A                     i2c_master_write@device:	
  4262                           ; 1 bytes @ 0x9
  4263                           
  4264  002A                     i2c_master_read@device:	
  4265                           ; 1 bytes @ 0x9
  4266                           
  4267                           
  4268                           ; 1 bytes @ 0x9
  4269  002A                     	ds	1
  4270  002B                     ??___awdiv:	
  4271  002B                     i2c_master_read@data:	
  4272                           ; 1 bytes @ 0xA
  4273                           
  4274  002B                     i2c_master_write@data:	
  4275                           ; 1 bytes @ 0xA
  4276                           
  4277                           
  4278                           ; 2 bytes @ 0xA
  4279  002B                     	ds	1
  4280  002C                     ___awdiv@counter:	
  4281  002C                     BQ_get_chrg_state@data:	
  4282                           ; 1 bytes @ 0xB
  4283                           
  4284  002C                     i2c_master_read@ok:	
  4285                           ; 2 bytes @ 0xB
  4286                           
  4287                           
  4288                           ; 2 bytes @ 0xB
  4289  002C                     	ds	1
  4290  002D                     ?___lldiv:	
  4291  002D                     ___awdiv@sign:	
  4292                           ; 4 bytes @ 0xC
  4293                           
  4294  002D                     i2c_master_write@ok:	
  4295                           ; 1 bytes @ 0xC
  4296                           
  4297  002D                     ___lldiv@divisor:	
  4298                           ; 2 bytes @ 0xC
  4299                           
  4300                           
  4301                           ; 4 bytes @ 0xC
  4302  002D                     	ds	1
  4303  002E                     ?_i2c_master_read_u8:	
  4304  002E                     ?_i2c_master_read_u16:	
  4305                           ; 2 bytes @ 0xD
  4306                           
  4307  002E                     BQ_get_chrg_state@temp:	
  4308                           ; 2 bytes @ 0xD
  4309                           
  4310  002E                     i2c_master_read_u8@reg:	
  4311                           ; 1 bytes @ 0xD
  4312                           
  4313  002E                     i2c_master_read_u16@reg:	
  4314                           ; 1 bytes @ 0xD
  4315                           
  4316  002E                     ___awdiv@quotient:	
  4317                           ; 1 bytes @ 0xD
  4318                           
  4319                           
  4320                           ; 2 bytes @ 0xD
  4321  002E                     	ds	1
  4322  002F                     ??_BQ_UPDATE:	
  4323  002F                     ?_i2c_master_write_u8:	
  4324                           ; 1 bytes @ 0xE
  4325                           
  4326  002F                     ?_i2c_master_write_u32:	
  4327                           ; 2 bytes @ 0xE
  4328                           
  4329  002F                     i2c_master_write_u8@reg:	
  4330                           ; 2 bytes @ 0xE
  4331                           
  4332  002F                     i2c_master_write_u32@reg:	
  4333                           ; 1 bytes @ 0xE
  4334                           
  4335  002F                     i2c_master_read_u8@data:	
  4336                           ; 1 bytes @ 0xE
  4337                           
  4338  002F                     i2c_master_read_u16@data:	
  4339                           ; 1 bytes @ 0xE
  4340                           
  4341                           
  4342                           ; 1 bytes @ 0xE
  4343  002F                     	ds	1
  4344  0030                     ??_i2c_master_read_u8:	
  4345  0030                     ??_i2c_master_read_u16:	
  4346                           ; 1 bytes @ 0xF
  4347                           
  4348  0030                     ?_Map:	
  4349                           ; 1 bytes @ 0xF
  4350                           
  4351  0030                     i2c_master_write_u8@data:	
  4352                           ; 1 bytes @ 0xF
  4353                           
  4354  0030                     Map@x:	
  4355                           ; 1 bytes @ 0xF
  4356                           
  4357  0030                     i2c_master_write_u32@data:	
  4358                           ; 2 bytes @ 0xF
  4359                           
  4360                           
  4361                           ; 4 bytes @ 0xF
  4362  0030                     	ds	1
  4363  0031                     ??_i2c_master_write_u8:	
  4364  0031                     ___lldiv@dividend:	
  4365                           ; 1 bytes @ 0x10
  4366                           
  4367                           
  4368                           ; 4 bytes @ 0x10
  4369  0031                     	ds	1
  4370  0032                     Map@inMin:	
  4371  0032                     i2c_master_write_u8@device:	
  4372                           ; 1 bytes @ 0x11
  4373                           
  4374  0032                     i2c_master_read_u8@device:	
  4375                           ; 1 bytes @ 0x11
  4376                           
  4377  0032                     i2c_master_read_u16@device:	
  4378                           ; 1 bytes @ 0x11
  4379                           
  4380                           
  4381                           ; 1 bytes @ 0x11
  4382  0032                     	ds	1
  4383  0033                     ?_reset:	
  4384  0033                     Map@inMax:	
  4385                           ; 2 bytes @ 0x12
  4386                           
  4387                           
  4388                           ; 1 bytes @ 0x12
  4389  0033                     	ds	1
  4390  0034                     ??_i2c_master_write_u32:	
  4391  0034                     Map@outMin:	
  4392                           ; 1 bytes @ 0x13
  4393                           
  4394                           
  4395                           ; 1 bytes @ 0x13
  4396  0034                     	ds	1
  4397  0035                     ??_reset:	
  4398  0035                     ??___lldiv:	
  4399                           ; 1 bytes @ 0x14
  4400                           
  4401  0035                     Map@outMax:	
  4402                           ; 1 bytes @ 0x14
  4403                           
  4404  0035                     i2c_master_write_u32@device:	
  4405                           ; 1 bytes @ 0x14
  4406                           
  4407                           
  4408                           ; 1 bytes @ 0x14
  4409  0035                     	ds	1
  4410  0036                     ??_Map:	
  4411  0036                     ___lldiv@quotient:	
  4412                           ; 1 bytes @ 0x15
  4413                           
  4414                           
  4415                           ; 4 bytes @ 0x15
  4416  0036                     	ds	1
  4417  0037                     reset@res:	
  4418                           
  4419                           ; 1 bytes @ 0x16
  4420  0037                     	ds	1
  4421  0038                     ??_battery_fade:	
  4422  0038                     reset@ok:	
  4423                           ; 1 bytes @ 0x17
  4424                           
  4425                           
  4426                           ; 2 bytes @ 0x17
  4427  0038                     	ds	2
  4428  003A                     ?_write_pdo:	
  4429  003A                     ___lldiv@counter:	
  4430                           ; 2 bytes @ 0x19
  4431                           
  4432  003A                     write_pdo@current_mA:	
  4433                           ; 1 bytes @ 0x19
  4434                           
  4435                           
  4436                           ; 2 bytes @ 0x19
  4437  003A                     	ds	1
  4438  003B                     ?_I2C_Master_Init:	
  4439  003B                     I2C_Master_Init@clk:	
  4440                           ; 1 bytes @ 0x1A
  4441                           
  4442                           
  4443                           ; 4 bytes @ 0x1A
  4444  003B                     	ds	1
  4445  003C                     write_pdo@voltage_mV:	
  4446                           
  4447                           ; 2 bytes @ 0x1B
  4448  003C                     	ds	2
  4449  003E                     write_pdo@pdo_num:	
  4450                           
  4451                           ; 1 bytes @ 0x1D
  4452  003E                     	ds	1
  4453  003F                     ??_I2C_Master_Init:	
  4454  003F                     ??_write_pdo:	
  4455                           ; 1 bytes @ 0x1E
  4456                           
  4457                           
  4458                           ; 1 bytes @ 0x1E
  4459  003F                     	ds	1
  4460  0040                     battery_fade@v:	
  4461                           
  4462                           ; 1 bytes @ 0x1F
  4463  0040                     	ds	1
  4464  0041                     ??_led_modes:	
  4465                           
  4466                           ; 1 bytes @ 0x20
  4467  0041                     	ds	10
  4468  004B                     write_pdo@pdo:	
  4469                           
  4470                           ; 4 bytes @ 0x2A
  4471  004B                     	ds	4
  4472  004F                     ?_negotiate_optimal_pdo:	
  4473  004F                     negotiate_optimal_pdo@num_pdos:	
  4474                           ; 2 bytes @ 0x2E
  4475                           
  4476                           
  4477                           ; 1 bytes @ 0x2E
  4478  004F                     	ds	2
  4479  0051                     ??_negotiate_optimal_pdo:	
  4480                           
  4481                           ; 1 bytes @ 0x30
  4482  0051                     	ds	8
  4483  0059                     ??_stusb_negotiate:	
  4484                           
  4485                           ; 1 bytes @ 0x38
  4486  0059                     	ds	6
  4487  005F                     ??_main:	
  4488                           
  4489                           ; 1 bytes @ 0x3E
  4490  005F                     	ds	1
  4491                           
  4492                           	psect	maintext
  4493  01F7                     __pmaintext:	
  4494 ;;
  4495 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  4496 ;;
  4497 ;; *************** function _main *****************
  4498 ;; Defined at:
  4499 ;;		line 115 in file "main.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;		None
  4502 ;; Auto vars:     Size  Location     Type
  4503 ;;		None
  4504 ;; Return value:  Size  Location     Type
  4505 ;;                  1    wreg      void 
  4506 ;; Registers used:
  4507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4508 ;; Tracked objects:
  4509 ;;		On entry : B3F/0
  4510 ;;		On exit  : 0/0
  4511 ;;		Unchanged: 0/0
  4512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4513 ;;      Params:         0       0       0       0       0       0       0       0
  4514 ;;      Locals:         0       0       0       0       0       0       0       0
  4515 ;;      Temps:          0       1       0       0       0       0       0       0
  4516 ;;      Totals:         0       1       0       0       0       0       0       0
  4517 ;;Total ram usage:        1 bytes
  4518 ;; Hardware stack levels required when called:   10
  4519 ;; This function calls:
  4520 ;;		_BQ_CONFIG_INIT
  4521 ;;		_BQ_INIT
  4522 ;;		_BQ_UPDATE
  4523 ;;		_BQ_Write
  4524 ;;		_I2C_Master_Init
  4525 ;;		_I2C_bus_reset
  4526 ;;		_PIC_SETUP
  4527 ;;		_PPS_lock
  4528 ;;		_PPS_unlock
  4529 ;;		_PWM_INIT
  4530 ;;		_PWM_power_down
  4531 ;;		_chrg_led
  4532 ;;		_get_time
  4533 ;;		_led_modes
  4534 ;;		_stusb_negotiate
  4535 ;;		_thermal_protection
  4536 ;;		_timer_diff
  4537 ;; This function is called by:
  4538 ;;		Startup code after reset
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           
  4543                           ;psect for function _main
  4544  01F7                     _main:	
  4545  01F7                     l3893:	
  4546                           ;incstack = 0
  4547                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4548                           
  4549                           
  4550                           ;main.c: 117: PIC_SETUP();
  4551  01F7  318D  2570  3181   	fcall	_PIC_SETUP
  4552                           
  4553                           ;main.c: 120: I2C_bus_reset();
  4554  01FA  318E  26AD  3181   	fcall	_I2C_bus_reset
  4555                           
  4556                           ;main.c: 123: PPS_unlock();
  4557  01FD  318B  230E  3181   	fcall	_PPS_unlock
  4558  0200                     l3895:	
  4559                           
  4560                           ;main.c: 124: SSP1DATPPS = 0x11;
  4561  0200  3011               	movlw	17
  4562  0201  017D               	movlb	61	; select bank61
  4563  0202  00C6               	movwf	70	;volatile
  4564  0203                     l3897:	
  4565                           
  4566                           ;main.c: 125: RC1PPS = 0x16;
  4567  0203  3016               	movlw	22
  4568  0204  017E               	movlb	62	; select bank62
  4569  0205  00A1               	movwf	33	;volatile
  4570  0206                     l3899:	
  4571                           
  4572                           ;main.c: 126: SSP1CLKPPS = 0x10;
  4573  0206  3010               	movlw	16
  4574  0207  017D               	movlb	61	; select bank61
  4575  0208  00C5               	movwf	69	;volatile
  4576  0209                     l3901:	
  4577                           
  4578                           ;main.c: 127: RC0PPS = 0x15;
  4579  0209  3015               	movlw	21
  4580  020A  017E               	movlb	62	; select bank62
  4581  020B  00A0               	movwf	32	;volatile
  4582                           
  4583                           ;main.c: 128: PPS_lock();
  4584  020C  318B  2315  3181   	fcall	_PPS_lock
  4585                           
  4586                           ;main.c: 129: I2C_Master_Init(350000);
  4587  020F  3000               	movlw	0
  4588  0210  0140               	movlb	0	; select bank0
  4589  0211  00BE               	movwf	I2C_Master_Init@clk+3
  4590  0212  3005               	movlw	5
  4591  0213  00BD               	movwf	I2C_Master_Init@clk+2
  4592  0214  3057               	movlw	87
  4593  0215  00BC               	movwf	I2C_Master_Init@clk+1
  4594  0216  3030               	movlw	48
  4595  0217  00BB               	movwf	I2C_Master_Init@clk
  4596  0218  318D  25C9  3181   	fcall	_I2C_Master_Init
  4597                           
  4598                           ;main.c: 131: BQ_CONFIG_INIT();
  4599  021B  318B  2367  3181   	fcall	_BQ_CONFIG_INIT
  4600                           
  4601                           ;main.c: 132: BQ_INIT();
  4602  021E  318D  259B  3181   	fcall	_BQ_INIT
  4603                           
  4604                           ;main.c: 134: PWM_INIT();
  4605  0221  318E  2669  3181   	fcall	_PWM_INIT
  4606  0224                     l143:	
  4607                           ;main.c: 136: while(1) {
  4608                           
  4609  0224  0064               	clrwdt	;# 
  4610  0225                     l3903:	
  4611                           
  4612                           ;main.c: 140: if(btn_is_debounced) {
  4613  0225  0140               	movlb	0	; select bank0
  4614  0226  086A               	movf	_btn_is_debounced,w
  4615  0227  1903               	btfsc	3,2
  4616  0228  2A2A               	goto	u3671
  4617  0229  2A2B               	goto	u3670
  4618  022A                     u3671:	
  4619  022A  2A8E               	goto	l3929
  4620  022B                     u3670:	
  4621  022B                     l3905:	
  4622                           
  4623                           ;main.c: 141: if(btn_time >= 85) {
  4624  022B  0142               	movlb	2	; select bank2
  4625  022C  0837               	movf	(_btn_time+3)^(0+256),w
  4626  022D  1D03               	btfss	3,2
  4627  022E  2A3B               	goto	u3680
  4628  022F  0836               	movf	(_btn_time+2)^(0+256),w
  4629  0230  1D03               	btfss	3,2
  4630  0231  2A3B               	goto	u3680
  4631  0232  0835               	movf	(_btn_time+1)^(0+256),w
  4632  0233  1D03               	btfss	3,2
  4633  0234  2A3B               	goto	u3680
  4634  0235  3055               	movlw	85
  4635  0236  0234               	subwf	_btn_time^(0+256),w
  4636  0237  1C03               	btfss	3,0
  4637  0238  2A3A               	goto	u3681
  4638  0239  2A3B               	goto	u3680
  4639  023A                     u3681:	
  4640  023A  2A5E               	goto	l3915
  4641  023B                     u3680:	
  4642  023B                     l3907:	
  4643                           
  4644                           ;main.c: 142: SYS_ENABLE = !SYS_ENABLE;
  4645  023B  0140               	movlb	0	; select bank0
  4646  023C  086B               	movf	_SYS_ENABLE,w
  4647  023D  1903               	btfsc	3,2
  4648  023E  2A40               	goto	u3691
  4649  023F  2A42               	goto	u3690
  4650  0240                     u3691:	
  4651  0240  3001               	movlw	1
  4652  0241  2A43               	goto	u3700
  4653  0242                     u3690:	
  4654  0242  3000               	movlw	0
  4655  0243                     u3700:	
  4656  0243  00DF               	movwf	??_main
  4657  0244  085F               	movf	??_main,w
  4658  0245  00EB               	movwf	_SYS_ENABLE
  4659                           
  4660                           ;main.c: 143: if(SYS_ENABLE) {
  4661  0246  086B               	movf	_SYS_ENABLE,w
  4662  0247  1903               	btfsc	3,2
  4663  0248  2A4A               	goto	u3711
  4664  0249  2A4B               	goto	u3710
  4665  024A                     u3711:	
  4666  024A  2A4E               	goto	l146
  4667  024B                     u3710:	
  4668  024B                     l3909:	
  4669                           
  4670                           ;main.c: 144: TRISCbits.TRISC5 = 0;
  4671  024B  1294               	bcf	20,5	;volatile
  4672                           
  4673                           ;main.c: 145: RC5 = 1;
  4674  024C  168E               	bsf	14,5	;volatile
  4675                           
  4676                           ;main.c: 147: }
  4677  024D  2A8C               	goto	l3927
  4678  024E                     l146:	
  4679                           
  4680                           ;main.c: 148: else {;main.c: 149: TRISCbits.TRISC5 = 1;
  4681  024E  1694               	bsf	20,5	;volatile
  4682  024F                     l3911:	
  4683                           
  4684                           ;main.c: 150: if(mode == 3) {
  4685  024F  3003               	movlw	3
  4686  0250  066F               	xorwf	_mode,w
  4687  0251  1D03               	btfss	3,2
  4688  0252  2A54               	goto	u3721
  4689  0253  2A55               	goto	u3720
  4690  0254                     u3721:	
  4691  0254  2A8C               	goto	l3927
  4692  0255                     u3720:	
  4693  0255                     l3913:	
  4694                           
  4695                           ;main.c: 151: BQ_Write(0x09, 0b01100100);
  4696  0255  3064               	movlw	100
  4697  0256  00DF               	movwf	??_main
  4698  0257  085F               	movf	??_main,w
  4699  0258  00A2               	movwf	BQ_Write@data
  4700  0259  3009               	movlw	9
  4701  025A  318B  23A6  3181   	fcall	_BQ_Write
  4702  025D  2A8C               	goto	l3927
  4703  025E                     l3915:	
  4704                           
  4705                           ;main.c: 155: else if(SYS_ENABLE && btn_time<=50 && !VBUS_CHRG_STATE[1]) {
  4706  025E  0140               	movlb	0	; select bank0
  4707  025F  086B               	movf	_SYS_ENABLE,w
  4708  0260  1903               	btfsc	3,2
  4709  0261  2A63               	goto	u3731
  4710  0262  2A64               	goto	u3730
  4711  0263                     u3731:	
  4712  0263  2A8C               	goto	l3927
  4713  0264                     u3730:	
  4714  0264                     l3917:	
  4715  0264  0142               	movlb	2	; select bank2
  4716  0265  0837               	movf	(_btn_time+3)^(0+256),w
  4717  0266  1D03               	btfss	3,2
  4718  0267  2A73               	goto	u3741
  4719  0268  0836               	movf	(_btn_time+2)^(0+256),w
  4720  0269  1D03               	btfss	3,2
  4721  026A  2A73               	goto	u3741
  4722  026B  0835               	movf	(_btn_time+1)^(0+256),w
  4723  026C  1D03               	btfss	3,2
  4724  026D  2A73               	goto	u3741
  4725  026E  3033               	movlw	51
  4726  026F  0234               	subwf	_btn_time^(0+256),w
  4727  0270  1803               	btfsc	3,0
  4728  0271  2A73               	goto	u3741
  4729  0272  2A74               	goto	u3740
  4730  0273                     u3741:	
  4731  0273  2A8C               	goto	l3927
  4732  0274                     u3740:	
  4733  0274                     l3919:	
  4734  0274  0140               	movlb	0	; select bank0
  4735  0275  0A6E               	incf	_VBUS_CHRG_STATE,w
  4736  0276  0086               	movwf	6
  4737  0277  0187               	clrf	7
  4738  0278  0801               	movf	1,w
  4739  0279  1D03               	btfss	3,2
  4740  027A  2A7C               	goto	u3751
  4741  027B  2A7D               	goto	u3750
  4742  027C                     u3751:	
  4743  027C  2A8C               	goto	l3927
  4744  027D                     u3750:	
  4745  027D                     l3921:	
  4746                           
  4747                           ;main.c: 158: if(BATTERY_VOLTAGE <= 50) {
  4748  027D  3033               	movlw	51
  4749  027E  026D               	subwf	_BATTERY_VOLTAGE,w
  4750  027F  1803               	skipnc
  4751  0280  2A82               	goto	u3761
  4752  0281  2A83               	goto	u3760
  4753  0282                     u3761:	
  4754  0282  2A88               	goto	l3925
  4755  0283                     u3760:	
  4756  0283                     l3923:	
  4757                           
  4758                           ;main.c: 159: mode = 2;
  4759  0283  3002               	movlw	2
  4760  0284  00DF               	movwf	??_main
  4761  0285  085F               	movf	??_main,w
  4762  0286  00EF               	movwf	_mode
  4763                           
  4764                           ;main.c: 160: }
  4765  0287  2A8C               	goto	l3927
  4766  0288                     l3925:	
  4767                           
  4768                           ;main.c: 161: else {;main.c: 162: mode++;
  4769  0288  3001               	movlw	1
  4770  0289  00DF               	movwf	??_main
  4771  028A  085F               	movf	??_main,w
  4772  028B  07EF               	addwf	_mode,f
  4773  028C                     l3927:	
  4774                           
  4775                           ;main.c: 163: };main.c: 164: };main.c: 165: btn_is_debounced = 0;
  4776  028C  0140               	movlb	0	; select bank0
  4777  028D  01EA               	clrf	_btn_is_debounced
  4778  028E                     l3929:	
  4779                           
  4780                           ;main.c: 166: };main.c: 168: BQ_UPDATE();
  4781  028E  3184  2411  3181   	fcall	_BQ_UPDATE
  4782  0291                     l3931:	
  4783                           
  4784                           ;main.c: 170: thermal_protection();
  4785  0291  318C  2434  3181   	fcall	_thermal_protection
  4786  0294                     l3933:	
  4787                           
  4788                           ;main.c: 173: if(VBUS_CHRG_STATE[1] == 0) {
  4789  0294  0140               	movlb	0	; select bank0
  4790  0295  0A6E               	incf	_VBUS_CHRG_STATE,w
  4791  0296  0086               	movwf	6
  4792  0297  0187               	clrf	7
  4793  0298  0801               	movf	1,w
  4794  0299  1D03               	btfss	3,2
  4795  029A  2A9C               	goto	u3771
  4796  029B  2A9D               	goto	u3770
  4797  029C                     u3771:	
  4798  029C  2AC9               	goto	l3941
  4799  029D                     u3770:	
  4800  029D                     l3935:	
  4801                           
  4802                           ;main.c: 174: if(SYS_ENABLE) {
  4803  029D  086B               	movf	_SYS_ENABLE,w
  4804  029E  1903               	btfsc	3,2
  4805  029F  2AA1               	goto	u3781
  4806  02A0  2AA2               	goto	u3780
  4807  02A1                     u3781:	
  4808  02A1  2AA5               	goto	l154
  4809  02A2                     u3780:	
  4810  02A2                     l3937:	
  4811                           
  4812                           ;main.c: 175: led_modes();
  4813  02A2  318D  2546  3181   	fcall	_led_modes
  4814  02A5                     l154:	
  4815                           
  4816                           ;main.c: 176: };main.c: 177: if(timer_diff(stusb4500_timeout) >= 500) {
  4817  02A5  0142               	movlb	2	; select bank2
  4818  02A6  0833               	movf	(_stusb4500_timeout+3)^(0+256),w
  4819  02A7  0140               	movlb	0	; select bank0
  4820  02A8  00A4               	movwf	timer_diff@t+3
  4821  02A9  0142               	movlb	2	; select bank2
  4822  02AA  0832               	movf	(_stusb4500_timeout+2)^(0+256),w
  4823  02AB  0140               	movlb	0	; select bank0
  4824  02AC  00A3               	movwf	timer_diff@t+2
  4825  02AD  0142               	movlb	2	; select bank2
  4826  02AE  0831               	movf	(_stusb4500_timeout+1)^(0+256),w
  4827  02AF  0140               	movlb	0	; select bank0
  4828  02B0  00A2               	movwf	timer_diff@t+1
  4829  02B1  0142               	movlb	2	; select bank2
  4830  02B2  0830               	movf	_stusb4500_timeout^(0+256),w
  4831  02B3  0140               	movlb	0	; select bank0
  4832  02B4  00A1               	movwf	timer_diff@t
  4833  02B5  318B  2390  3181   	fcall	_timer_diff
  4834  02B8  0140               	movlb	0	; select bank0
  4835  02B9  0824               	movf	?_timer_diff+3,w
  4836  02BA  1D03               	btfss	3,2
  4837  02BB  2AC7               	goto	u3790
  4838  02BC  0823               	movf	?_timer_diff+2,w
  4839  02BD  1D03               	btfss	3,2
  4840  02BE  2AC7               	goto	u3790
  4841  02BF  30F4               	movlw	244
  4842  02C0  0221               	subwf	?_timer_diff,w
  4843  02C1  3001               	movlw	1
  4844  02C2  3B22               	subwfb	?_timer_diff+1,w
  4845  02C3  1C03               	btfss	3,0
  4846  02C4  2AC6               	goto	u3791
  4847  02C5  2AC7               	goto	u3790
  4848  02C6                     u3791:	
  4849  02C6  2AEB               	goto	l3951
  4850  02C7                     u3790:	
  4851  02C7                     l3939:	
  4852                           
  4853                           ;main.c: 178: set_stusb4500 = 0;
  4854  02C7  01E9               	clrf	_set_stusb4500
  4855  02C8  2AEB               	goto	l3951
  4856  02C9                     l3941:	
  4857                           
  4858                           ;main.c: 181: else {;main.c: 182: chrg_led();
  4859  02C9  3184  24B2  3181   	fcall	_chrg_led
  4860  02CC                     l3943:	
  4861                           
  4862                           ;main.c: 183: if(!set_stusb4500) {
  4863  02CC  0140               	movlb	0	; select bank0
  4864  02CD  0869               	movf	_set_stusb4500,w
  4865  02CE  1D03               	btfss	3,2
  4866  02CF  2AD1               	goto	u3801
  4867  02D0  2AD2               	goto	u3800
  4868  02D1                     u3801:	
  4869  02D1  2AEB               	goto	l3951
  4870  02D2                     u3800:	
  4871  02D2                     l3945:	
  4872                           
  4873                           ;main.c: 184: stusb_negotiate();
  4874  02D2  3183  2315  3181   	fcall	_stusb_negotiate
  4875  02D5                     l3947:	
  4876                           
  4877                           ;main.c: 185: set_stusb4500 = 1;
  4878  02D5  0140               	movlb	0	; select bank0
  4879  02D6  01E9               	clrf	_set_stusb4500
  4880  02D7  0AE9               	incf	_set_stusb4500,f
  4881  02D8                     l3949:	
  4882                           
  4883                           ;main.c: 186: stusb4500_timeout = get_time();
  4884  02D8  318B  2339  3181   	fcall	_get_time
  4885  02DB  0140               	movlb	0	; select bank0
  4886  02DC  0824               	movf	?_get_time+3,w
  4887  02DD  0142               	movlb	2	; select bank2
  4888  02DE  00B3               	movwf	(_stusb4500_timeout+3)^(0+256)
  4889  02DF  0140               	movlb	0	; select bank0
  4890  02E0  0823               	movf	?_get_time+2,w
  4891  02E1  0142               	movlb	2	; select bank2
  4892  02E2  00B2               	movwf	(_stusb4500_timeout+2)^(0+256)
  4893  02E3  0140               	movlb	0	; select bank0
  4894  02E4  0822               	movf	?_get_time+1,w
  4895  02E5  0142               	movlb	2	; select bank2
  4896  02E6  00B1               	movwf	(_stusb4500_timeout+1)^(0+256)
  4897  02E7  0140               	movlb	0	; select bank0
  4898  02E8  0821               	movf	?_get_time,w
  4899  02E9  0142               	movlb	2	; select bank2
  4900  02EA  00B0               	movwf	_stusb4500_timeout^(0+256)
  4901  02EB                     l3951:	
  4902                           
  4903                           ;main.c: 187: };main.c: 188: };main.c: 191: if(!SYS_ENABLE && VBUS_CHRG_STATE[1]==0 && !
      +                          btn_is_debounced && RA5 && BQ_adc_state==0 && !set_stusb4500) {
  4904  02EB  0140               	movlb	0	; select bank0
  4905  02EC  086B               	movf	_SYS_ENABLE,w
  4906  02ED  1D03               	btfss	3,2
  4907  02EE  2AF0               	goto	u3811
  4908  02EF  2AF1               	goto	u3810
  4909  02F0                     u3811:	
  4910  02F0  2A24               	goto	l143
  4911  02F1                     u3810:	
  4912  02F1                     l3953:	
  4913  02F1  0A6E               	incf	_VBUS_CHRG_STATE,w
  4914  02F2  0086               	movwf	6
  4915  02F3  0187               	clrf	7
  4916  02F4  0801               	movf	1,w
  4917  02F5  1D03               	btfss	3,2
  4918  02F6  2AF8               	goto	u3821
  4919  02F7  2AF9               	goto	u3820
  4920  02F8                     u3821:	
  4921  02F8  2A24               	goto	l143
  4922  02F9                     u3820:	
  4923  02F9                     l3955:	
  4924  02F9  086A               	movf	_btn_is_debounced,w
  4925  02FA  1D03               	btfss	3,2
  4926  02FB  2AFD               	goto	u3831
  4927  02FC  2AFE               	goto	u3830
  4928  02FD                     u3831:	
  4929  02FD  2A24               	goto	l143
  4930  02FE                     u3830:	
  4931  02FE                     l3957:	
  4932  02FE  1E8C               	btfss	12,5	;volatile
  4933  02FF  2B01               	goto	u3841
  4934  0300  2B02               	goto	u3840
  4935  0301                     u3841:	
  4936  0301  2A24               	goto	l143
  4937  0302                     u3840:	
  4938  0302                     l3959:	
  4939  0302  086C               	movf	_BQ_adc_state,w
  4940  0303  1D03               	btfss	3,2
  4941  0304  2B06               	goto	u3851
  4942  0305  2B07               	goto	u3850
  4943  0306                     u3851:	
  4944  0306  2A24               	goto	l143
  4945  0307                     u3850:	
  4946  0307                     l3961:	
  4947  0307  0869               	movf	_set_stusb4500,w
  4948  0308  1D03               	btfss	3,2
  4949  0309  2B0B               	goto	u3861
  4950  030A  2B0C               	goto	u3860
  4951  030B                     u3861:	
  4952  030B  2A24               	goto	l143
  4953  030C                     u3860:	
  4954  030C                     l3963:	
  4955                           
  4956                           ;main.c: 192: PWM_power_down();
  4957  030C  318B  234F  3181   	fcall	_PWM_power_down
  4958  030F  0064               	clrwdt	;# 
  4959  0310  0063               	sleep	;# 
  4960  0311  0001               	reset	;# 
  4961  0312  2A24               	goto	l143
  4962  0313  3180  2867         	ljmp	start
  4963  0315                     __end_of_main:	
  4964                           
  4965                           	psect	text1
  4966  0C34                     __ptext1:	
  4967 ;; *************** function _thermal_protection *****************
  4968 ;; Defined at:
  4969 ;;		line 93 in file "main.c"
  4970 ;; Parameters:    Size  Location     Type
  4971 ;;		None
  4972 ;; Auto vars:     Size  Location     Type
  4973 ;;		None
  4974 ;; Return value:  Size  Location     Type
  4975 ;;                  1    wreg      void 
  4976 ;; Registers used:
  4977 ;;		wreg, status,2, status,0, pclath, cstack
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4983 ;;      Params:         0       0       0       0       0       0       0       0
  4984 ;;      Locals:         0       0       0       0       0       0       0       0
  4985 ;;      Temps:          0       1       0       0       0       0       0       0
  4986 ;;      Totals:         0       1       0       0       0       0       0       0
  4987 ;;Total ram usage:        1 bytes
  4988 ;; Hardware stack levels used:    1
  4989 ;; Hardware stack levels required when called:    5
  4990 ;; This function calls:
  4991 ;;		_BQ_Write
  4992 ;;		_readADC
  4993 ;; This function is called by:
  4994 ;;		_main
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           
  4999                           ;psect for function _thermal_protection
  5000  0C34                     _thermal_protection:	
  5001  0C34                     l3377:	
  5002                           ;incstack = 0
  5003                           ; Regs used in _thermal_protection: [wreg+status,2+status,0+pclath+cstack]
  5004                           
  5005                           
  5006                           ;main.c: 96: if(readADC(0b000100) >= 222) {
  5007  0C34  3004               	movlw	4
  5008  0C35  318D  251D  318C   	fcall	_readADC
  5009  0C38  3000               	movlw	0
  5010  0C39  0140               	movlb	0	; select bank0
  5011  0C3A  0222               	subwf	?_readADC+1,w
  5012  0C3B  30DE               	movlw	222
  5013  0C3C  1903               	skipnz
  5014  0C3D  0221               	subwf	?_readADC,w
  5015  0C3E  1C03               	skipc
  5016  0C3F  2C41               	goto	u2941
  5017  0C40  2C42               	goto	u2940
  5018  0C41                     u2941:	
  5019  0C41  2C4C               	goto	l131
  5020  0C42                     u2940:	
  5021  0C42                     l3379:	
  5022                           
  5023                           ;main.c: 97: SYS_ENABLE = 0;
  5024  0C42  01EB               	clrf	_SYS_ENABLE
  5025  0C43                     l3381:	
  5026                           
  5027                           ;main.c: 98: TRISCbits.TRISC5 = 1;
  5028  0C43  1694               	bsf	20,5	;volatile
  5029  0C44                     l3383:	
  5030                           
  5031                           ;main.c: 99: BQ_Write(0x09, 0b01100100);
  5032  0C44  3064               	movlw	100
  5033  0C45  00A6               	movwf	??_thermal_protection
  5034  0C46  0826               	movf	??_thermal_protection,w
  5035  0C47  00A2               	movwf	BQ_Write@data
  5036  0C48  3009               	movlw	9
  5037  0C49  318B  23A6  318C   	fcall	_BQ_Write
  5038  0C4C                     l131:	
  5039  0C4C  0008               	return
  5040  0C4D                     __end_of_thermal_protection:	
  5041                           
  5042                           	psect	text2
  5043  0D1D                     __ptext2:	
  5044 ;; *************** function _readADC *****************
  5045 ;; Defined at:
  5046 ;;		line 11 in file "ADC.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;  channel         1    wreg     unsigned char 
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;  channel         1    4[BANK0 ] unsigned char 
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  2    0[BANK0 ] unsigned int 
  5053 ;; Registers used:
  5054 ;;		wreg, status,2, status,0
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5060 ;;      Params:         0       2       0       0       0       0       0       0
  5061 ;;      Locals:         0       1       0       0       0       0       0       0
  5062 ;;      Temps:          0       2       0       0       0       0       0       0
  5063 ;;      Totals:         0       5       0       0       0       0       0       0
  5064 ;;Total ram usage:        5 bytes
  5065 ;; Hardware stack levels used:    1
  5066 ;; Hardware stack levels required when called:    2
  5067 ;; This function calls:
  5068 ;;		Nothing
  5069 ;; This function is called by:
  5070 ;;		_thermal_protection
  5071 ;; This function uses a non-reentrant model
  5072 ;;
  5073                           
  5074                           
  5075                           ;psect for function _readADC
  5076  0D1D                     _readADC:	
  5077                           
  5078                           ;incstack = 0
  5079                           ; Regs used in _readADC: [wreg+status,2+status,0]
  5080                           ;readADC@channel stored from wreg
  5081  0D1D  0140               	movlb	0	; select bank0
  5082  0D1E  00A5               	movwf	readADC@channel
  5083  0D1F                     l3073:	
  5084                           
  5085                           ;ADC.c: 13: ADCON1 = 0b01100000;
  5086  0D1F  3060               	movlw	96
  5087  0D20  0141               	movlb	1	; select bank1
  5088  0D21  009E               	movwf	30	;volatile
  5089  0D22                     l3075:	
  5090                           
  5091                           ;ADC.c: 14: ADCON0 = (channel << 2) | 0b1;
  5092  0D22  0140               	movlb	0	; select bank0
  5093  0D23  0825               	movf	readADC@channel,w
  5094  0D24  00A3               	movwf	??_readADC
  5095  0D25  3001               	movlw	1
  5096  0D26                     u2545:	
  5097  0D26  35A3               	lslf	??_readADC,f
  5098  0D27  3EFF               	addlw	-1
  5099  0D28  1D03               	skipz
  5100  0D29  2D26               	goto	u2545
  5101  0D2A  3523               	lslf	??_readADC,w
  5102  0D2B  3801               	iorlw	1
  5103  0D2C  0141               	movlb	1	; select bank1
  5104  0D2D  009D               	movwf	29	;volatile
  5105  0D2E                     l3077:	
  5106                           
  5107                           ;ADC.c: 16: _delay((unsigned long)((5)*(32000000/4000.0)));
  5108  0D2E  3034               	movlw	52
  5109  0D2F  0140               	movlb	0	; select bank0
  5110  0D30  00A3               	movwf	??_readADC
  5111  0D31  30F1               	movlw	241
  5112  0D32                     u3977:	
  5113  0D32  0B89               	decfsz	9,f
  5114  0D33  2D32               	goto	u3977
  5115  0D34  0BA3               	decfsz	??_readADC,f
  5116  0D35  2D32               	goto	u3977
  5117  0D36  3200               	nop2
  5118  0D37                     l3079:	
  5119                           
  5120                           ;ADC.c: 18: ADCON0bits.GOnDONE = 1;
  5121  0D37  0141               	movlb	1	; select bank1
  5122  0D38  149D               	bsf	29,1	;volatile
  5123  0D39                     l414:	
  5124                           ;ADC.c: 19: while (ADCON0bits.GOnDONE);
  5125                           
  5126  0D39  189D               	btfsc	29,1	;volatile
  5127  0D3A  2D3C               	goto	u2551
  5128  0D3B  2D3D               	goto	u2550
  5129  0D3C                     u2551:	
  5130  0D3C  2D39               	goto	l414
  5131  0D3D                     u2550:	
  5132  0D3D                     l3081:	
  5133                           
  5134                           ;ADC.c: 22: return ADRESH;
  5135  0D3D  081C               	movf	28,w	;volatile
  5136  0D3E  0140               	movlb	0	; select bank0
  5137  0D3F  00A3               	movwf	??_readADC
  5138  0D40  01A4               	clrf	??_readADC+1
  5139  0D41  0823               	movf	??_readADC,w
  5140  0D42  00A1               	movwf	?_readADC
  5141  0D43  0824               	movf	??_readADC+1,w
  5142  0D44  00A2               	movwf	?_readADC+1
  5143  0D45                     l417:	
  5144  0D45  0008               	return
  5145  0D46                     __end_of_readADC:	
  5146                           
  5147                           	psect	text3
  5148  0315                     __ptext3:	
  5149 ;; *************** function _stusb_negotiate *****************
  5150 ;; Defined at:
  5151 ;;		line 142 in file "stusb4500.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;		None
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;  buffer         40   25[BANK1 ] unsigned char [40]
  5156 ;;  header          2   65[BANK1 ] unsigned int 
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  2   98[None  ] int 
  5159 ;; Registers used:
  5160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5166 ;;      Params:         0       0       0       0       0       0       0       0
  5167 ;;      Locals:         0       0      42       0       0       0       0       0
  5168 ;;      Temps:          0       6       0       0       0       0       0       0
  5169 ;;      Totals:         0       6      42       0       0       0       0       0
  5170 ;;Total ram usage:       48 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:    9
  5173 ;; This function calls:
  5174 ;;		_i2c_master_read
  5175 ;;		_i2c_master_read_u16
  5176 ;;		_i2c_master_read_u8
  5177 ;;		_negotiate_optimal_pdo
  5178 ;;		_reset
  5179 ;; This function is called by:
  5180 ;;		_main
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           
  5185                           ;psect for function _stusb_negotiate
  5186  0315                     _stusb_negotiate:	
  5187  0315                     l3575:	
  5188                           ;incstack = 0
  5189                           ; Regs used in _stusb_negotiate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5190                           
  5191                           
  5192                           ;stusb4500.c: 143: uint8_t buffer[40];;stusb4500.c: 144: uint16_t header;;stusb4500.c: 1
      +                          47: if (;stusb4500.c: 148: i2c_master_read_u8(0x28, 0x0E, buffer) != 0 ||;stusb4500.c: 1
      +                          49: !(buffer[0] & 0x01))
  5193  0315  300E               	movlw	14
  5194  0316  0140               	movlb	0	; select bank0
  5195  0317  00D9               	movwf	??_stusb_negotiate
  5196  0318  0859               	movf	??_stusb_negotiate,w
  5197  0319  00AE               	movwf	i2c_master_read_u8@reg
  5198  031A  30B9               	movlw	(low (stusb_negotiate@buffer| 0))& (0+255)
  5199  031B  00DA               	movwf	??_stusb_negotiate+1
  5200  031C  085A               	movf	??_stusb_negotiate+1,w
  5201  031D  00AF               	movwf	i2c_master_read_u8@data
  5202  031E  3028               	movlw	40
  5203  031F  318C  2404  3183   	fcall	_i2c_master_read_u8
  5204  0322  0140               	movlb	0	; select bank0
  5205  0323  082E               	movf	?_i2c_master_read_u8,w
  5206  0324  042F               	iorwf	?_i2c_master_read_u8+1,w
  5207  0325  1D03               	btfss	3,2
  5208  0326  2B28               	goto	u3141
  5209  0327  2B29               	goto	u3140
  5210  0328                     u3141:	
  5211  0328  2C10               	goto	l585
  5212  0329                     u3140:	
  5213  0329                     l3577:	
  5214  0329  0141               	movlb	1	; select bank1
  5215  032A  1839               	btfsc	stusb_negotiate@buffer^(0+128),0
  5216  032B  2B2D               	goto	u3151
  5217  032C  2B2E               	goto	u3150
  5218  032D                     u3151:	
  5219  032D  2B2F               	goto	l3579
  5220  032E                     u3150:	
  5221  032E  2C10               	goto	l585
  5222  032F                     l3579:	
  5223                           
  5224                           ;stusb4500.c: 153: if (reset() != 0) return -1;
  5225  032F  3187  271D  3183   	fcall	_reset
  5226  0332  0140               	movlb	0	; select bank0
  5227  0333  0833               	movf	?_reset,w
  5228  0334  0434               	iorwf	?_reset+1,w
  5229  0335  1903               	btfsc	3,2
  5230  0336  2B38               	goto	u3161
  5231  0337  2B39               	goto	u3160
  5232  0338                     u3161:	
  5233  0338  2B3A               	goto	l3583
  5234  0339                     u3160:	
  5235  0339  2C10               	goto	l585
  5236  033A                     l3583:	
  5237                           
  5238                           ;stusb4500.c: 157: if (i2c_master_read_u8(0x28, 0x16, buffer) != 0)
  5239  033A  3016               	movlw	22
  5240  033B  0140               	movlb	0	; select bank0
  5241  033C  00D9               	movwf	??_stusb_negotiate
  5242  033D  0859               	movf	??_stusb_negotiate,w
  5243  033E  00AE               	movwf	i2c_master_read_u8@reg
  5244  033F  30B9               	movlw	(low (stusb_negotiate@buffer| 0))& (0+255)
  5245  0340  00DA               	movwf	??_stusb_negotiate+1
  5246  0341  085A               	movf	??_stusb_negotiate+1,w
  5247  0342  00AF               	movwf	i2c_master_read_u8@data
  5248  0343  3028               	movlw	40
  5249  0344  318C  2404  3183   	fcall	_i2c_master_read_u8
  5250  0347  0140               	movlb	0	; select bank0
  5251  0348  082E               	movf	?_i2c_master_read_u8,w
  5252  0349  042F               	iorwf	?_i2c_master_read_u8+1,w
  5253  034A  1903               	btfsc	3,2
  5254  034B  2B4D               	goto	u3171
  5255  034C  2B4E               	goto	u3170
  5256  034D                     u3171:	
  5257  034D  2B4F               	goto	l588
  5258  034E                     u3170:	
  5259  034E  2C10               	goto	l585
  5260  034F                     l588:	
  5261                           
  5262                           ;stusb4500.c: 161: if (!(buffer[0] & 0x04)) continue;
  5263  034F  0141               	movlb	1	; select bank1
  5264  0350  1939               	btfsc	stusb_negotiate@buffer^(0+128),2
  5265  0351  2B53               	goto	u3181
  5266  0352  2B54               	goto	u3180
  5267  0353                     u3181:	
  5268  0353  2B55               	goto	l3589
  5269  0354                     u3180:	
  5270  0354  2B3A               	goto	l3583
  5271  0355                     l3589:	
  5272                           
  5273                           ;stusb4500.c: 164: if (i2c_master_read_u16(0x28, 0x31, &header) != 0)
  5274  0355  3031               	movlw	49
  5275  0356  0140               	movlb	0	; select bank0
  5276  0357  00D9               	movwf	??_stusb_negotiate
  5277  0358  0859               	movf	??_stusb_negotiate,w
  5278  0359  00AE               	movwf	i2c_master_read_u16@reg
  5279  035A  30E1               	movlw	(low (stusb_negotiate@header| 0))& (0+255)
  5280  035B  00DA               	movwf	??_stusb_negotiate+1
  5281  035C  085A               	movf	??_stusb_negotiate+1,w
  5282  035D  00AF               	movwf	i2c_master_read_u16@data
  5283  035E  3028               	movlw	40
  5284  035F  318B  23D4  3183   	fcall	_i2c_master_read_u16
  5285  0362  0140               	movlb	0	; select bank0
  5286  0363  082E               	movf	?_i2c_master_read_u16,w
  5287  0364  042F               	iorwf	?_i2c_master_read_u16+1,w
  5288  0365  1903               	btfsc	3,2
  5289  0366  2B68               	goto	u3191
  5290  0367  2B69               	goto	u3190
  5291  0368                     u3191:	
  5292  0368  2B6A               	goto	l3593
  5293  0369                     u3190:	
  5294  0369  2C10               	goto	l585
  5295  036A                     l3593:	
  5296                           
  5297                           ;stusb4500.c: 168: if (;stusb4500.c: 169: !((header >> 12) & 0x07) ||;stusb4500.c: 170: 
      +                          (header & 0x0F) != 0x01)
  5298  036A  0141               	movlb	1	; select bank1
  5299  036B  0862               	movf	(stusb_negotiate@header+1)^(0+128),w
  5300  036C  0140               	movlb	0	; select bank0
  5301  036D  00DA               	movwf	??_stusb_negotiate+1
  5302  036E  0141               	movlb	1	; select bank1
  5303  036F  0861               	movf	stusb_negotiate@header^(0+128),w
  5304  0370  0140               	movlb	0	; select bank0
  5305  0371  00D9               	movwf	??_stusb_negotiate
  5306  0372  0E5A               	swapf	??_stusb_negotiate+1,w
  5307  0373  390F               	andlw	15
  5308  0374  00D9               	movwf	??_stusb_negotiate
  5309  0375  01DA               	clrf	??_stusb_negotiate+1
  5310  0376  3007               	movlw	7
  5311  0377  0559               	andwf	??_stusb_negotiate,w
  5312  0378  00DB               	movwf	??_stusb_negotiate+2
  5313  0379  3000               	movlw	0
  5314  037A  055A               	andwf	??_stusb_negotiate+1,w
  5315  037B  00DC               	movwf	??_stusb_negotiate+3
  5316  037C  085B               	movf	??_stusb_negotiate+2,w
  5317  037D  045C               	iorwf	??_stusb_negotiate+3,w
  5318  037E  1903               	btfsc	3,2
  5319  037F  2B81               	goto	u3201
  5320  0380  2B82               	goto	u3200
  5321  0381                     u3201:	
  5322  0381  2B3A               	goto	l3583
  5323  0382                     u3200:	
  5324  0382                     l3595:	
  5325  0382  300F               	movlw	15
  5326  0383  0141               	movlb	1	; select bank1
  5327  0384  0561               	andwf	stusb_negotiate@header^(0+128),w
  5328  0385  0140               	movlb	0	; select bank0
  5329  0386  00D9               	movwf	??_stusb_negotiate
  5330  0387  3000               	movlw	0
  5331  0388  0141               	movlb	1	; select bank1
  5332  0389  0562               	andwf	(stusb_negotiate@header+1)^(0+128),w
  5333  038A  0140               	movlb	0	; select bank0
  5334  038B  00DA               	movwf	??_stusb_negotiate+1
  5335  038C  0359               	decf	??_stusb_negotiate,w
  5336  038D  045A               	iorwf	??_stusb_negotiate+1,w
  5337  038E  1903               	btfsc	3,2
  5338  038F  2B91               	goto	u3211
  5339  0390  2B92               	goto	u3210
  5340  0391                     u3211:	
  5341  0391  2B93               	goto	l3597
  5342  0392                     u3210:	
  5343  0392  2B3A               	goto	l3583
  5344  0393                     l3597:	
  5345                           
  5346                           ;stusb4500.c: 174: if (i2c_master_read_u8(0x28, 0x30, buffer) != 0)
  5347  0393  3030               	movlw	48
  5348  0394  00D9               	movwf	??_stusb_negotiate
  5349  0395  0859               	movf	??_stusb_negotiate,w
  5350  0396  00AE               	movwf	i2c_master_read_u8@reg
  5351  0397  30B9               	movlw	(low (stusb_negotiate@buffer| 0))& (0+255)
  5352  0398  00DA               	movwf	??_stusb_negotiate+1
  5353  0399  085A               	movf	??_stusb_negotiate+1,w
  5354  039A  00AF               	movwf	i2c_master_read_u8@data
  5355  039B  3028               	movlw	40
  5356  039C  318C  2404  3183   	fcall	_i2c_master_read_u8
  5357  039F  0140               	movlb	0	; select bank0
  5358  03A0  082E               	movf	?_i2c_master_read_u8,w
  5359  03A1  042F               	iorwf	?_i2c_master_read_u8+1,w
  5360  03A2  1903               	btfsc	3,2
  5361  03A3  2BA5               	goto	u3221
  5362  03A4  2BA6               	goto	u3220
  5363  03A5                     u3221:	
  5364  03A5  2BA7               	goto	l3601
  5365  03A6                     u3220:	
  5366  03A6  2C10               	goto	l585
  5367  03A7                     l3601:	
  5368                           
  5369                           ;stusb4500.c: 178: if (buffer[0] != ((header >> 12) & 0x07) * 4)
  5370  03A7  0141               	movlb	1	; select bank1
  5371  03A8  0862               	movf	(stusb_negotiate@header+1)^(0+128),w
  5372  03A9  0140               	movlb	0	; select bank0
  5373  03AA  00DA               	movwf	??_stusb_negotiate+1
  5374  03AB  0141               	movlb	1	; select bank1
  5375  03AC  0861               	movf	stusb_negotiate@header^(0+128),w
  5376  03AD  0140               	movlb	0	; select bank0
  5377  03AE  00D9               	movwf	??_stusb_negotiate
  5378  03AF  0E5A               	swapf	??_stusb_negotiate+1,w
  5379  03B0  390F               	andlw	15
  5380  03B1  00D9               	movwf	??_stusb_negotiate
  5381  03B2  01DA               	clrf	??_stusb_negotiate+1
  5382  03B3  3007               	movlw	7
  5383  03B4  0559               	andwf	??_stusb_negotiate,w
  5384  03B5  00DB               	movwf	??_stusb_negotiate+2
  5385  03B6  3000               	movlw	0
  5386  03B7  055A               	andwf	??_stusb_negotiate+1,w
  5387  03B8  00DC               	movwf	??_stusb_negotiate+3
  5388  03B9  35DB               	lslf	??_stusb_negotiate+2,f
  5389  03BA  0DDC               	rlf	??_stusb_negotiate+3,f
  5390  03BB  35DB               	lslf	??_stusb_negotiate+2,f
  5391  03BC  0DDC               	rlf	??_stusb_negotiate+3,f
  5392  03BD  0141               	movlb	1	; select bank1
  5393  03BE  0839               	movf	stusb_negotiate@buffer^(0+128),w
  5394  03BF  0140               	movlb	0	; select bank0
  5395  03C0  00DD               	movwf	??_stusb_negotiate+4
  5396  03C1  01DE               	clrf	??_stusb_negotiate+5
  5397  03C2  085C               	movf	??_stusb_negotiate+3,w
  5398  03C3  065E               	xorwf	??_stusb_negotiate+5,w
  5399  03C4  1D03               	skipz
  5400  03C5  2BC8               	goto	u3235
  5401  03C6  085B               	movf	??_stusb_negotiate+2,w
  5402  03C7  065D               	xorwf	??_stusb_negotiate+4,w
  5403  03C8                     u3235:	
  5404  03C8  1903               	skipnz
  5405  03C9  2BCB               	goto	u3231
  5406  03CA  2BCC               	goto	u3230
  5407  03CB                     u3231:	
  5408  03CB  2BCD               	goto	l3605
  5409  03CC                     u3230:	
  5410  03CC  2C10               	goto	l585
  5411  03CD                     l3605:	
  5412                           
  5413                           ;stusb4500.c: 182: };stusb4500.c: 188: if (;stusb4500.c: 189: i2c_master_read(;stusb4500
      +                          .c: 190: 0x28, 0x33, buffer, ((header >> 12) & 0x07) * 4) !=;stusb4500.c: 191: 0)
  5414  03CD  3033               	movlw	51
  5415  03CE  00D9               	movwf	??_stusb_negotiate
  5416  03CF  0859               	movf	??_stusb_negotiate,w
  5417  03D0  00A5               	movwf	i2c_master_read@reg
  5418  03D1  30B9               	movlw	(low (stusb_negotiate@buffer| 0))& (0+255)
  5419  03D2  00DA               	movwf	??_stusb_negotiate+1
  5420  03D3  085A               	movf	??_stusb_negotiate+1,w
  5421  03D4  00A6               	movwf	i2c_master_read@buf
  5422  03D5  0141               	movlb	1	; select bank1
  5423  03D6  0862               	movf	(stusb_negotiate@header+1)^(0+128),w
  5424  03D7  0140               	movlb	0	; select bank0
  5425  03D8  00DC               	movwf	??_stusb_negotiate+3
  5426  03D9  0141               	movlb	1	; select bank1
  5427  03DA  0861               	movf	stusb_negotiate@header^(0+128),w
  5428  03DB  0140               	movlb	0	; select bank0
  5429  03DC  00DB               	movwf	??_stusb_negotiate+2
  5430  03DD  0E5C               	swapf	??_stusb_negotiate+3,w
  5431  03DE  390F               	andlw	15
  5432  03DF  00DB               	movwf	??_stusb_negotiate+2
  5433  03E0  01DC               	clrf	??_stusb_negotiate+3
  5434  03E1  3007               	movlw	7
  5435  03E2  055B               	andwf	??_stusb_negotiate+2,w
  5436  03E3  00DD               	movwf	??_stusb_negotiate+4
  5437  03E4  3000               	movlw	0
  5438  03E5  055C               	andwf	??_stusb_negotiate+3,w
  5439  03E6  00DE               	movwf	??_stusb_negotiate+5
  5440  03E7  35DD               	lslf	??_stusb_negotiate+4,f
  5441  03E8  0DDE               	rlf	??_stusb_negotiate+5,f
  5442  03E9  35DD               	lslf	??_stusb_negotiate+4,f
  5443  03EA  0DDE               	rlf	??_stusb_negotiate+5,f
  5444  03EB  085D               	movf	??_stusb_negotiate+4,w
  5445  03EC  00A7               	movwf	i2c_master_read@len
  5446  03ED  085E               	movf	??_stusb_negotiate+5,w
  5447  03EE  00A8               	movwf	i2c_master_read@len+1
  5448  03EF  3028               	movlw	40
  5449  03F0  3185  25B1  3183   	fcall	_i2c_master_read
  5450  03F3  0140               	movlb	0	; select bank0
  5451  03F4  0825               	movf	?_i2c_master_read,w
  5452  03F5  0426               	iorwf	?_i2c_master_read+1,w
  5453  03F6  1903               	btfsc	3,2
  5454  03F7  2BF9               	goto	u3241
  5455  03F8  2BFA               	goto	u3240
  5456  03F9                     u3241:	
  5457  03F9  2BFB               	goto	l3609
  5458  03FA                     u3240:	
  5459  03FA  2C10               	goto	l585
  5460  03FB                     l3609:	
  5461                           
  5462                           ;stusb4500.c: 195: return negotiate_optimal_pdo(;stusb4500.c: 196: (uint32_t*)buffer, ((
      +                          header >> 12) & 0x07));;	Return value of _stusb_negotiate is never used
  5463  03FB  0141               	movlb	1	; select bank1
  5464  03FC  0862               	movf	(stusb_negotiate@header+1)^(0+128),w
  5465  03FD  0140               	movlb	0	; select bank0
  5466  03FE  00DA               	movwf	??_stusb_negotiate+1
  5467  03FF  0141               	movlb	1	; select bank1
  5468  0400  0861               	movf	stusb_negotiate@header^(0+128),w
  5469  0401  0140               	movlb	0	; select bank0
  5470  0402  00D9               	movwf	??_stusb_negotiate
  5471  0403  0E5A               	swapf	??_stusb_negotiate+1,w
  5472  0404  390F               	andlw	15
  5473  0405  00D9               	movwf	??_stusb_negotiate
  5474  0406  01DA               	clrf	??_stusb_negotiate+1
  5475  0407  0859               	movf	??_stusb_negotiate,w
  5476  0408  3907               	andlw	7
  5477  0409  00DB               	movwf	??_stusb_negotiate+2
  5478  040A  085B               	movf	??_stusb_negotiate+2,w
  5479  040B  00CF               	movwf	negotiate_optimal_pdo@num_pdos
  5480  040C  30B9               	movlw	(low (stusb_negotiate@buffer| 0))& (0+255)
  5481  040D  3180  20A0  3183   	fcall	_negotiate_optimal_pdo
  5482  0410                     l585:	
  5483  0410  0008               	return
  5484  0411                     __end_of_stusb_negotiate:	
  5485                           
  5486                           	psect	text4
  5487  00A0                     __ptext4:	
  5488 ;; *************** function _negotiate_optimal_pdo *****************
  5489 ;; Defined at:
  5490 ;;		line 108 in file "stusb4500.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;  src_pdos        1    wreg     PTR unsigned long 
  5493 ;;		 -> stusb_negotiate@buffer(40), 
  5494 ;;  num_pdos        1   46[BANK0 ] unsigned char 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;  src_pdos        1    8[BANK1 ] PTR unsigned long 
  5497 ;;		 -> stusb_negotiate@buffer(40), 
  5498 ;;  pdo             4   19[BANK1 ] unsigned long 
  5499 ;;  pdo_power       4    9[BANK1 ] unsigned long 
  5500 ;;  pdo_voltage     2   23[BANK1 ] unsigned int 
  5501 ;;  pdo_current     2   13[BANK1 ] unsigned int 
  5502 ;;  i               2   15[BANK1 ] int 
  5503 ;;  opt_pdo_powe    4    0[BANK1 ] unsigned long 
  5504 ;;  ok              2   17[BANK1 ] int 
  5505 ;;  opt_pdo_volt    2    6[BANK1 ] unsigned int 
  5506 ;;  opt_pdo_curr    2    4[BANK1 ] unsigned int 
  5507 ;; Return value:  Size  Location     Type
  5508 ;;                  2   46[BANK0 ] int 
  5509 ;; Registers used:
  5510 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/0
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5516 ;;      Params:         0       2       0       0       0       0       0       0
  5517 ;;      Locals:         0       0      25       0       0       0       0       0
  5518 ;;      Temps:          0       8       0       0       0       0       0       0
  5519 ;;      Totals:         0      10      25       0       0       0       0       0
  5520 ;;Total ram usage:       35 bytes
  5521 ;; Hardware stack levels used:    1
  5522 ;; Hardware stack levels required when called:    8
  5523 ;; This function calls:
  5524 ;;		___lldiv
  5525 ;;		___lmul
  5526 ;;		___wmul
  5527 ;;		_write_pdo
  5528 ;; This function is called by:
  5529 ;;		_stusb_negotiate
  5530 ;; This function uses a non-reentrant model
  5531 ;;
  5532                           
  5533                           
  5534                           ;psect for function _negotiate_optimal_pdo
  5535  00A0                     _negotiate_optimal_pdo:	
  5536                           
  5537                           ;incstack = 0
  5538                           ; Regs used in _negotiate_optimal_pdo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5539                           ;negotiate_optimal_pdo@src_pdos stored from wreg
  5540  00A0  0141               	movlb	1	; select bank1
  5541  00A1  00A8               	movwf	negotiate_optimal_pdo@src_pdos^(0+128)
  5542  00A2                     l3185:	
  5543                           
  5544                           ;stusb4500.c: 109: int ok = -1;
  5545  00A2  30FF               	movlw	255
  5546  00A3  00B1               	movwf	negotiate_optimal_pdo@ok^(0+128)
  5547  00A4  30FF               	movlw	255
  5548  00A5  00B2               	movwf	(negotiate_optimal_pdo@ok^(0+128)+1)
  5549  00A6                     l3187:	
  5550                           
  5551                           ;stusb4500.c: 111: uint16_t opt_pdo_current = 0;
  5552  00A6  01A4               	clrf	negotiate_optimal_pdo@opt_pdo_current^(0+128)
  5553  00A7  01A5               	clrf	(negotiate_optimal_pdo@opt_pdo_current+1)^(0+128)
  5554                           
  5555                           ;stusb4500.c: 112: uint16_t opt_pdo_voltage = 0;
  5556  00A8  01A6               	clrf	negotiate_optimal_pdo@opt_pdo_voltage^(0+128)
  5557  00A9  01A7               	clrf	(negotiate_optimal_pdo@opt_pdo_voltage+1)^(0+128)
  5558  00AA                     l3189:	
  5559                           
  5560                           ;stusb4500.c: 113: uint32_t opt_pdo_power = 0;
  5561  00AA  3000               	movlw	0
  5562  00AB  00A3               	movwf	(negotiate_optimal_pdo@opt_pdo_power+3)^(0+128)
  5563  00AC  3000               	movlw	0
  5564  00AD  00A2               	movwf	(negotiate_optimal_pdo@opt_pdo_power+2)^(0+128)
  5565  00AE  3000               	movlw	0
  5566  00AF  00A1               	movwf	(negotiate_optimal_pdo@opt_pdo_power+1)^(0+128)
  5567  00B0  3000               	movlw	0
  5568  00B1  00A0               	movwf	negotiate_optimal_pdo@opt_pdo_power^(0+128)
  5569  00B2                     l3191:	
  5570                           
  5571                           ;stusb4500.c: 116: for (int i = 0; i < num_pdos; i++) {
  5572  00B2  01AF               	clrf	negotiate_optimal_pdo@i^(0+128)
  5573  00B3  01B0               	clrf	(negotiate_optimal_pdo@i+1)^(0+128)
  5574  00B4  29BB               	goto	l3215
  5575  00B5                     l3193:	
  5576                           
  5577                           ;stusb4500.c: 117: uint32_t pdo = src_pdos[i];
  5578  00B5  0141               	movlb	1	; select bank1
  5579  00B6  082F               	movf	negotiate_optimal_pdo@i^(0+128),w
  5580  00B7  0140               	movlb	0	; select bank0
  5581  00B8  00D1               	movwf	??_negotiate_optimal_pdo
  5582  00B9  3001               	movlw	1
  5583  00BA                     u2715:	
  5584  00BA  35D1               	lslf	??_negotiate_optimal_pdo,f
  5585  00BB  3EFF               	addlw	-1
  5586  00BC  1D03               	skipz
  5587  00BD  28BA               	goto	u2715
  5588  00BE  3551               	lslf	??_negotiate_optimal_pdo,w
  5589  00BF  0141               	movlb	1	; select bank1
  5590  00C0  0728               	addwf	negotiate_optimal_pdo@src_pdos^(0+128),w
  5591  00C1  0140               	movlb	0	; select bank0
  5592  00C2  00D2               	movwf	??_negotiate_optimal_pdo+1
  5593  00C3  0852               	movf	??_negotiate_optimal_pdo+1,w
  5594  00C4  0086               	movwf	6
  5595  00C5  0187               	clrf	7
  5596  00C6  3F40               	moviw [0]fsr1
  5597  00C7  0141               	movlb	1	; select bank1
  5598  00C8  00B3               	movwf	negotiate_optimal_pdo@pdo^(0+128)
  5599  00C9  3F41               	moviw [1]fsr1
  5600  00CA  00B4               	movwf	(negotiate_optimal_pdo@pdo+1)^(0+128)
  5601  00CB  3F42               	moviw [2]fsr1
  5602  00CC  00B5               	movwf	(negotiate_optimal_pdo@pdo+2)^(0+128)
  5603  00CD  3F43               	moviw [3]fsr1
  5604  00CE  00B6               	movwf	(negotiate_optimal_pdo@pdo+3)^(0+128)
  5605  00CF                     l3195:	
  5606                           
  5607                           ;stusb4500.c: 120: uint16_t pdo_current = ((pdo & 0x03FF) * 10);
  5608  00CF  30FF               	movlw	255
  5609  00D0  0533               	andwf	negotiate_optimal_pdo@pdo^(0+128),w
  5610  00D1  0140               	movlb	0	; select bank0
  5611  00D2  00A1               	movwf	___wmul@multiplier
  5612  00D3  3003               	movlw	3
  5613  00D4  0141               	movlb	1	; select bank1
  5614  00D5  0534               	andwf	(negotiate_optimal_pdo@pdo+1)^(0+128),w
  5615  00D6  0140               	movlb	0	; select bank0
  5616  00D7  00A2               	movwf	___wmul@multiplier+1
  5617  00D8  300A               	movlw	10
  5618  00D9  00A3               	movwf	___wmul@multiplicand
  5619  00DA  3000               	movlw	0
  5620  00DB  00A4               	movwf	___wmul@multiplicand+1
  5621  00DC  318C  246B  3180   	fcall	___wmul
  5622  00DF  0140               	movlb	0	; select bank0
  5623  00E0  0822               	movf	?___wmul+1,w
  5624  00E1  0141               	movlb	1	; select bank1
  5625  00E2  00AE               	movwf	(negotiate_optimal_pdo@pdo_current+1)^(0+128)
  5626  00E3  0140               	movlb	0	; select bank0
  5627  00E4  0821               	movf	?___wmul,w
  5628  00E5  0141               	movlb	1	; select bank1
  5629  00E6  00AD               	movwf	negotiate_optimal_pdo@pdo_current^(0+128)
  5630  00E7                     l3197:	
  5631                           
  5632                           ;stusb4500.c: 121: uint16_t pdo_voltage = (((pdo >> 10) & 0x03FF) * 50);
  5633  00E7  0833               	movf	negotiate_optimal_pdo@pdo^(0+128),w
  5634  00E8  0140               	movlb	0	; select bank0
  5635  00E9  00D1               	movwf	??_negotiate_optimal_pdo
  5636  00EA  0141               	movlb	1	; select bank1
  5637  00EB  0834               	movf	(negotiate_optimal_pdo@pdo+1)^(0+128),w
  5638  00EC  0140               	movlb	0	; select bank0
  5639  00ED  00D2               	movwf	??_negotiate_optimal_pdo+1
  5640  00EE  0141               	movlb	1	; select bank1
  5641  00EF  0835               	movf	(negotiate_optimal_pdo@pdo+2)^(0+128),w
  5642  00F0  0140               	movlb	0	; select bank0
  5643  00F1  00D3               	movwf	??_negotiate_optimal_pdo+2
  5644  00F2  0141               	movlb	1	; select bank1
  5645  00F3  0836               	movf	(negotiate_optimal_pdo@pdo+3)^(0+128),w
  5646  00F4  0140               	movlb	0	; select bank0
  5647  00F5  00D4               	movwf	??_negotiate_optimal_pdo+3
  5648  00F6  300A               	movlw	10
  5649  00F7                     u2725:	
  5650  00F7  36D4               	lsrf	??_negotiate_optimal_pdo+3,f
  5651  00F8  0CD3               	rrf	??_negotiate_optimal_pdo+2,f
  5652  00F9  0CD2               	rrf	??_negotiate_optimal_pdo+1,f
  5653  00FA  0CD1               	rrf	??_negotiate_optimal_pdo,f
  5654  00FB                     u2720:	
  5655  00FB  0B89               	decfsz	9,f
  5656  00FC  28F7               	goto	u2725
  5657  00FD  30FF               	movlw	255
  5658  00FE  0551               	andwf	??_negotiate_optimal_pdo,w
  5659  00FF  00A1               	movwf	___wmul@multiplier
  5660  0100  3003               	movlw	3
  5661  0101  0552               	andwf	??_negotiate_optimal_pdo+1,w
  5662  0102  00A2               	movwf	___wmul@multiplier+1
  5663  0103  3032               	movlw	50
  5664  0104  00A3               	movwf	___wmul@multiplicand
  5665  0105  3000               	movlw	0
  5666  0106  00A4               	movwf	___wmul@multiplicand+1
  5667  0107  318C  246B  3180   	fcall	___wmul
  5668  010A  0140               	movlb	0	; select bank0
  5669  010B  0822               	movf	?___wmul+1,w
  5670  010C  0141               	movlb	1	; select bank1
  5671  010D  00B8               	movwf	(negotiate_optimal_pdo@pdo_voltage+1)^(0+128)
  5672  010E  0140               	movlb	0	; select bank0
  5673  010F  0821               	movf	?___wmul,w
  5674  0110  0141               	movlb	1	; select bank1
  5675  0111  00B7               	movwf	negotiate_optimal_pdo@pdo_voltage^(0+128)
  5676  0112                     l3199:	
  5677                           
  5678                           ;stusb4500.c: 122: uint32_t pdo_power = (uint32_t)pdo_current * pdo_voltage / 1000;
  5679  0112  3000               	movlw	0
  5680  0113  0140               	movlb	0	; select bank0
  5681  0114  00B0               	movwf	___lldiv@divisor+3
  5682  0115  3000               	movlw	0
  5683  0116  00AF               	movwf	___lldiv@divisor+2
  5684  0117  3003               	movlw	3
  5685  0118  00AE               	movwf	___lldiv@divisor+1
  5686  0119  30E8               	movlw	232
  5687  011A  00AD               	movwf	___lldiv@divisor
  5688  011B  0141               	movlb	1	; select bank1
  5689  011C  082D               	movf	negotiate_optimal_pdo@pdo_current^(0+128),w
  5690  011D  0140               	movlb	0	; select bank0
  5691  011E  00A1               	movwf	___lmul@multiplier
  5692  011F  0141               	movlb	1	; select bank1
  5693  0120  082E               	movf	(negotiate_optimal_pdo@pdo_current+1)^(0+128),w
  5694  0121  0140               	movlb	0	; select bank0
  5695  0122  00A2               	movwf	___lmul@multiplier+1
  5696  0123  01A3               	clrf	___lmul@multiplier+2
  5697  0124  01A4               	clrf	___lmul@multiplier+3
  5698  0125  0141               	movlb	1	; select bank1
  5699  0126  0837               	movf	negotiate_optimal_pdo@pdo_voltage^(0+128),w
  5700  0127  0140               	movlb	0	; select bank0
  5701  0128  00A5               	movwf	___lmul@multiplicand
  5702  0129  0141               	movlb	1	; select bank1
  5703  012A  0838               	movf	(negotiate_optimal_pdo@pdo_voltage+1)^(0+128),w
  5704  012B  0140               	movlb	0	; select bank0
  5705  012C  00A6               	movwf	___lmul@multiplicand+1
  5706  012D  01A7               	clrf	___lmul@multiplicand+2
  5707  012E  01A8               	clrf	___lmul@multiplicand+3
  5708  012F  318D  25F8  3180   	fcall	___lmul
  5709  0132  0140               	movlb	0	; select bank0
  5710  0133  0824               	movf	?___lmul+3,w
  5711  0134  00B4               	movwf	___lldiv@dividend+3
  5712  0135  0823               	movf	?___lmul+2,w
  5713  0136  00B3               	movwf	___lldiv@dividend+2
  5714  0137  0822               	movf	?___lmul+1,w
  5715  0138  00B2               	movwf	___lldiv@dividend+1
  5716  0139  0821               	movf	?___lmul,w
  5717  013A  00B1               	movwf	___lldiv@dividend
  5718  013B  318F  2748  3180   	fcall	___lldiv
  5719  013E  0140               	movlb	0	; select bank0
  5720  013F  0830               	movf	?___lldiv+3,w
  5721  0140  0141               	movlb	1	; select bank1
  5722  0141  00AC               	movwf	(negotiate_optimal_pdo@pdo_power+3)^(0+128)
  5723  0142  0140               	movlb	0	; select bank0
  5724  0143  082F               	movf	?___lldiv+2,w
  5725  0144  0141               	movlb	1	; select bank1
  5726  0145  00AB               	movwf	(negotiate_optimal_pdo@pdo_power+2)^(0+128)
  5727  0146  0140               	movlb	0	; select bank0
  5728  0147  082E               	movf	?___lldiv+1,w
  5729  0148  0141               	movlb	1	; select bank1
  5730  0149  00AA               	movwf	(negotiate_optimal_pdo@pdo_power+1)^(0+128)
  5731  014A  0140               	movlb	0	; select bank0
  5732  014B  082D               	movf	?___lldiv,w
  5733  014C  0141               	movlb	1	; select bank1
  5734  014D  00A9               	movwf	negotiate_optimal_pdo@pdo_power^(0+128)
  5735  014E                     l3201:	
  5736                           
  5737                           ;stusb4500.c: 124: if (;stusb4500.c: 125: ((pdo >> 30) & 0x03) != 0x00 || pdo_current < 
      +                          0 ||;stusb4500.c: 126: pdo_voltage < 5000 || pdo_voltage > 12000)
  5738  014E  3003               	movlw	3
  5739  014F  0140               	movlb	0	; select bank0
  5740  0150  00D1               	movwf	??_negotiate_optimal_pdo
  5741  0151  3000               	movlw	0
  5742  0152  00D2               	movwf	??_negotiate_optimal_pdo+1
  5743  0153  3000               	movlw	0
  5744  0154  00D3               	movwf	??_negotiate_optimal_pdo+2
  5745  0155  3000               	movlw	0
  5746  0156  00D4               	movwf	??_negotiate_optimal_pdo+3
  5747  0157  0141               	movlb	1	; select bank1
  5748  0158  0833               	movf	negotiate_optimal_pdo@pdo^(0+128),w
  5749  0159  0140               	movlb	0	; select bank0
  5750  015A  00D5               	movwf	??_negotiate_optimal_pdo+4
  5751  015B  0141               	movlb	1	; select bank1
  5752  015C  0834               	movf	(negotiate_optimal_pdo@pdo+1)^(0+128),w
  5753  015D  0140               	movlb	0	; select bank0
  5754  015E  00D6               	movwf	??_negotiate_optimal_pdo+5
  5755  015F  0141               	movlb	1	; select bank1
  5756  0160  0835               	movf	(negotiate_optimal_pdo@pdo+2)^(0+128),w
  5757  0161  0140               	movlb	0	; select bank0
  5758  0162  00D7               	movwf	??_negotiate_optimal_pdo+6
  5759  0163  0141               	movlb	1	; select bank1
  5760  0164  0836               	movf	(negotiate_optimal_pdo@pdo+3)^(0+128),w
  5761  0165  0140               	movlb	0	; select bank0
  5762  0166  00D8               	movwf	??_negotiate_optimal_pdo+7
  5763  0167  301E               	movlw	30
  5764  0168                     u2735:	
  5765  0168  36D8               	lsrf	??_negotiate_optimal_pdo+7,f
  5766  0169  0CD7               	rrf	??_negotiate_optimal_pdo+6,f
  5767  016A  0CD6               	rrf	??_negotiate_optimal_pdo+5,f
  5768  016B  0CD5               	rrf	??_negotiate_optimal_pdo+4,f
  5769  016C                     u2730:	
  5770  016C  0B89               	decfsz	9,f
  5771  016D  2968               	goto	u2735
  5772  016E  0855               	movf	??_negotiate_optimal_pdo+4,w
  5773  016F  05D1               	andwf	??_negotiate_optimal_pdo,f
  5774  0170  0856               	movf	??_negotiate_optimal_pdo+5,w
  5775  0171  05D2               	andwf	??_negotiate_optimal_pdo+1,f
  5776  0172  0857               	movf	??_negotiate_optimal_pdo+6,w
  5777  0173  05D3               	andwf	??_negotiate_optimal_pdo+2,f
  5778  0174  0858               	movf	??_negotiate_optimal_pdo+7,w
  5779  0175  05D4               	andwf	??_negotiate_optimal_pdo+3,f
  5780  0176  0854               	movf	??_negotiate_optimal_pdo+3,w
  5781  0177  0453               	iorwf	??_negotiate_optimal_pdo+2,w
  5782  0178  0452               	iorwf	??_negotiate_optimal_pdo+1,w
  5783  0179  0451               	iorwf	??_negotiate_optimal_pdo,w
  5784  017A  1D03               	skipz
  5785  017B  297D               	goto	u2741
  5786  017C  297E               	goto	u2740
  5787  017D                     u2741:	
  5788  017D  29B6               	goto	l3213
  5789  017E                     u2740:	
  5790  017E                     l3203:	
  5791  017E  3013               	movlw	19
  5792  017F  0141               	movlb	1	; select bank1
  5793  0180  0238               	subwf	(negotiate_optimal_pdo@pdo_voltage+1)^(0+128),w
  5794  0181  3088               	movlw	136
  5795  0182  1903               	skipnz
  5796  0183  0237               	subwf	negotiate_optimal_pdo@pdo_voltage^(0+128),w
  5797  0184  1C03               	skipc
  5798  0185  2987               	goto	u2751
  5799  0186  2988               	goto	u2750
  5800  0187                     u2751:	
  5801  0187  29B6               	goto	l3213
  5802  0188                     u2750:	
  5803  0188                     l3205:	
  5804  0188  302E               	movlw	46
  5805  0189  0238               	subwf	(negotiate_optimal_pdo@pdo_voltage+1)^(0+128),w
  5806  018A  30E1               	movlw	225
  5807  018B  1903               	skipnz
  5808  018C  0237               	subwf	negotiate_optimal_pdo@pdo_voltage^(0+128),w
  5809  018D  1C03               	skipc
  5810  018E  2990               	goto	u2761
  5811  018F  2991               	goto	u2760
  5812  0190                     u2761:	
  5813  0190  2992               	goto	l3207
  5814  0191                     u2760:	
  5815  0191  29B6               	goto	l3213
  5816  0192                     l3207:	
  5817                           
  5818                           ;stusb4500.c: 128: if (pdo_power > opt_pdo_power) {
  5819  0192  082C               	movf	(negotiate_optimal_pdo@pdo_power+3)^(0+128),w
  5820  0193  0223               	subwf	(negotiate_optimal_pdo@opt_pdo_power+3)^(0+128),w
  5821  0194  1D03               	skipz
  5822  0195  29A0               	goto	u2775
  5823  0196  082B               	movf	(negotiate_optimal_pdo@pdo_power+2)^(0+128),w
  5824  0197  0222               	subwf	(negotiate_optimal_pdo@opt_pdo_power+2)^(0+128),w
  5825  0198  1D03               	skipz
  5826  0199  29A0               	goto	u2775
  5827  019A  082A               	movf	(negotiate_optimal_pdo@pdo_power+1)^(0+128),w
  5828  019B  0221               	subwf	(negotiate_optimal_pdo@opt_pdo_power+1)^(0+128),w
  5829  019C  1D03               	skipz
  5830  019D  29A0               	goto	u2775
  5831  019E  0829               	movf	negotiate_optimal_pdo@pdo_power^(0+128),w
  5832  019F  0220               	subwf	negotiate_optimal_pdo@opt_pdo_power^(0+128),w
  5833  01A0                     u2775:	
  5834  01A0  1803               	skipnc
  5835  01A1  29A3               	goto	u2771
  5836  01A2  29A4               	goto	u2770
  5837  01A3                     u2771:	
  5838  01A3  29B6               	goto	l3213
  5839  01A4                     u2770:	
  5840  01A4                     l3209:	
  5841                           
  5842                           ;stusb4500.c: 129: opt_pdo_current = pdo_current;
  5843  01A4  082E               	movf	(negotiate_optimal_pdo@pdo_current+1)^(0+128),w
  5844  01A5  00A5               	movwf	(negotiate_optimal_pdo@opt_pdo_current+1)^(0+128)
  5845  01A6  082D               	movf	negotiate_optimal_pdo@pdo_current^(0+128),w
  5846  01A7  00A4               	movwf	negotiate_optimal_pdo@opt_pdo_current^(0+128)
  5847                           
  5848                           ;stusb4500.c: 130: opt_pdo_voltage = pdo_voltage;
  5849  01A8  0838               	movf	(negotiate_optimal_pdo@pdo_voltage+1)^(0+128),w
  5850  01A9  00A7               	movwf	(negotiate_optimal_pdo@opt_pdo_voltage+1)^(0+128)
  5851  01AA  0837               	movf	negotiate_optimal_pdo@pdo_voltage^(0+128),w
  5852  01AB  00A6               	movwf	negotiate_optimal_pdo@opt_pdo_voltage^(0+128)
  5853                           
  5854                           ;stusb4500.c: 131: opt_pdo_power = pdo_power;
  5855  01AC  082C               	movf	(negotiate_optimal_pdo@pdo_power+3)^(0+128),w
  5856  01AD  00A3               	movwf	(negotiate_optimal_pdo@opt_pdo_power+3)^(0+128)
  5857  01AE  082B               	movf	(negotiate_optimal_pdo@pdo_power+2)^(0+128),w
  5858  01AF  00A2               	movwf	(negotiate_optimal_pdo@opt_pdo_power+2)^(0+128)
  5859  01B0  082A               	movf	(negotiate_optimal_pdo@pdo_power+1)^(0+128),w
  5860  01B1  00A1               	movwf	(negotiate_optimal_pdo@opt_pdo_power+1)^(0+128)
  5861  01B2  0829               	movf	negotiate_optimal_pdo@pdo_power^(0+128),w
  5862  01B3  00A0               	movwf	negotiate_optimal_pdo@opt_pdo_power^(0+128)
  5863  01B4                     l3211:	
  5864                           
  5865                           ;stusb4500.c: 132: ok = 0;
  5866  01B4  01B1               	clrf	negotiate_optimal_pdo@ok^(0+128)
  5867  01B5  01B2               	clrf	(negotiate_optimal_pdo@ok+1)^(0+128)
  5868  01B6                     l3213:	
  5869  01B6  3001               	movlw	1
  5870  01B7  0141               	movlb	1	; select bank1
  5871  01B8  07AF               	addwf	negotiate_optimal_pdo@i^(0+128),f
  5872  01B9  3000               	movlw	0
  5873  01BA  3DB0               	addwfc	(negotiate_optimal_pdo@i+1)^(0+128),f
  5874  01BB                     l3215:	
  5875  01BB  0830               	movf	(negotiate_optimal_pdo@i+1)^(0+128),w
  5876  01BC  3A80               	xorlw	128
  5877  01BD  0140               	movlb	0	; select bank0
  5878  01BE  00D1               	movwf	??_negotiate_optimal_pdo
  5879  01BF  3080               	movlw	128
  5880  01C0  0251               	subwf	??_negotiate_optimal_pdo,w
  5881  01C1  1D03               	skipz
  5882  01C2  29C6               	goto	u2785
  5883  01C3  084F               	movf	negotiate_optimal_pdo@num_pdos,w
  5884  01C4  0141               	movlb	1	; select bank1
  5885  01C5  022F               	subwf	negotiate_optimal_pdo@i^(0+128),w
  5886  01C6                     u2785:	
  5887  01C6  1C03               	skipc
  5888  01C7  29C9               	goto	u2781
  5889  01C8  29CA               	goto	u2780
  5890  01C9                     u2781:	
  5891  01C9  28B5               	goto	l3193
  5892  01CA                     u2780:	
  5893  01CA                     l3217:	
  5894                           
  5895                           ;stusb4500.c: 133: };stusb4500.c: 134: };stusb4500.c: 137: if (ok == 0) ok = write_pdo(o
      +                          pt_pdo_current, opt_pdo_voltage, 3);
  5896  01CA  0141               	movlb	1	; select bank1
  5897  01CB  0831               	movf	negotiate_optimal_pdo@ok^(0+128),w
  5898  01CC  0432               	iorwf	(negotiate_optimal_pdo@ok+1)^(0+128),w
  5899  01CD  1D03               	btfss	3,2
  5900  01CE  29D0               	goto	u2791
  5901  01CF  29D1               	goto	u2790
  5902  01D0                     u2791:	
  5903  01D0  29EF               	goto	l3221
  5904  01D1                     u2790:	
  5905  01D1                     l3219:	
  5906  01D1  0825               	movf	(negotiate_optimal_pdo@opt_pdo_current+1)^(0+128),w
  5907  01D2  0140               	movlb	0	; select bank0
  5908  01D3  00BB               	movwf	write_pdo@current_mA+1
  5909  01D4  0141               	movlb	1	; select bank1
  5910  01D5  0824               	movf	negotiate_optimal_pdo@opt_pdo_current^(0+128),w
  5911  01D6  0140               	movlb	0	; select bank0
  5912  01D7  00BA               	movwf	write_pdo@current_mA
  5913  01D8  0141               	movlb	1	; select bank1
  5914  01D9  0827               	movf	(negotiate_optimal_pdo@opt_pdo_voltage+1)^(0+128),w
  5915  01DA  0140               	movlb	0	; select bank0
  5916  01DB  00BD               	movwf	write_pdo@voltage_mV+1
  5917  01DC  0141               	movlb	1	; select bank1
  5918  01DD  0826               	movf	negotiate_optimal_pdo@opt_pdo_voltage^(0+128),w
  5919  01DE  0140               	movlb	0	; select bank0
  5920  01DF  00BC               	movwf	write_pdo@voltage_mV
  5921  01E0  3003               	movlw	3
  5922  01E1  00D1               	movwf	??_negotiate_optimal_pdo
  5923  01E2  0851               	movf	??_negotiate_optimal_pdo,w
  5924  01E3  00BE               	movwf	write_pdo@pdo_num
  5925  01E4  3185  2534  3180   	fcall	_write_pdo
  5926  01E7  0140               	movlb	0	; select bank0
  5927  01E8  083B               	movf	?_write_pdo+1,w
  5928  01E9  0141               	movlb	1	; select bank1
  5929  01EA  00B2               	movwf	(negotiate_optimal_pdo@ok+1)^(0+128)
  5930  01EB  0140               	movlb	0	; select bank0
  5931  01EC  083A               	movf	?_write_pdo,w
  5932  01ED  0141               	movlb	1	; select bank1
  5933  01EE  00B1               	movwf	negotiate_optimal_pdo@ok^(0+128)
  5934  01EF                     l3221:	
  5935                           
  5936                           ;stusb4500.c: 139: return ok;
  5937  01EF  0832               	movf	(negotiate_optimal_pdo@ok+1)^(0+128),w
  5938  01F0  0140               	movlb	0	; select bank0
  5939  01F1  00D0               	movwf	?_negotiate_optimal_pdo+1
  5940  01F2  0141               	movlb	1	; select bank1
  5941  01F3  0831               	movf	negotiate_optimal_pdo@ok^(0+128),w
  5942  01F4  0140               	movlb	0	; select bank0
  5943  01F5  00CF               	movwf	?_negotiate_optimal_pdo
  5944  01F6                     l579:	
  5945  01F6  0008               	return
  5946  01F7                     __end_of_negotiate_optimal_pdo:	
  5947                           
  5948                           	psect	text5
  5949  0534                     __ptext5:	
  5950 ;; *************** function _write_pdo *****************
  5951 ;; Defined at:
  5952 ;;		line 91 in file "stusb4500.c"
  5953 ;; Parameters:    Size  Location     Type
  5954 ;;  current_mA      2   25[BANK0 ] unsigned int 
  5955 ;;  voltage_mV      2   27[BANK0 ] unsigned int 
  5956 ;;  pdo_num         1   29[BANK0 ] unsigned char 
  5957 ;; Auto vars:     Size  Location     Type
  5958 ;;  pdo             4   42[BANK0 ] unsigned long 
  5959 ;; Return value:  Size  Location     Type
  5960 ;;                  2   25[BANK0 ] int 
  5961 ;; Registers used:
  5962 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5963 ;; Tracked objects:
  5964 ;;		On entry : 0/0
  5965 ;;		On exit  : 0/0
  5966 ;;		Unchanged: 0/0
  5967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5968 ;;      Params:         0       5       0       0       0       0       0       0
  5969 ;;      Locals:         0       4       0       0       0       0       0       0
  5970 ;;      Temps:          0      12       0       0       0       0       0       0
  5971 ;;      Totals:         0      21       0       0       0       0       0       0
  5972 ;;Total ram usage:       21 bytes
  5973 ;; Hardware stack levels used:    1
  5974 ;; Hardware stack levels required when called:    7
  5975 ;; This function calls:
  5976 ;;		___lwdiv
  5977 ;;		_i2c_master_write_u32
  5978 ;;		_reset
  5979 ;; This function is called by:
  5980 ;;		_negotiate_optimal_pdo
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983                           
  5984                           
  5985                           ;psect for function _write_pdo
  5986  0534                     _write_pdo:	
  5987  0534                     l3015:	
  5988                           ;incstack = 0
  5989                           ; Regs used in _write_pdo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5990                           
  5991                           
  5992                           ;stusb4500.c: 92: if (pdo_num < 1 || pdo_num > 3) return -1;
  5993  0534  0140               	movlb	0	; select bank0
  5994  0535  083E               	movf	write_pdo@pdo_num,w
  5995  0536  1903               	btfsc	3,2
  5996  0537  2D39               	goto	u2381
  5997  0538  2D3A               	goto	u2380
  5998  0539                     u2381:	
  5999  0539  2D40               	goto	l3019
  6000  053A                     u2380:	
  6001  053A                     l3017:	
  6002  053A  3004               	movlw	4
  6003  053B  023E               	subwf	write_pdo@pdo_num,w
  6004  053C  1C03               	skipc
  6005  053D  2D3F               	goto	u2391
  6006  053E  2D40               	goto	u2390
  6007  053F                     u2391:	
  6008  053F  2D45               	goto	l3023
  6009  0540                     u2390:	
  6010  0540                     l3019:	
  6011  0540  30FF               	movlw	255
  6012  0541  00BA               	movwf	?_write_pdo
  6013  0542  30FF               	movlw	255
  6014  0543  00BB               	movwf	?_write_pdo+1
  6015  0544  2DB0               	goto	l566
  6016  0545                     l3023:	
  6017                           
  6018                           ;stusb4500.c: 95: uint32_t pdo =;stusb4500.c: 96: 0x00000000 | ((current_mA / 10) & 0x03
      +                          FF) | ((uint32_t)((voltage_mV / 50) & 0x03FF) << 10);
  6019  0545  3032               	movlw	50
  6020  0546  00A1               	movwf	___lwdiv@divisor
  6021  0547  3000               	movlw	0
  6022  0548  00A2               	movwf	___lwdiv@divisor+1
  6023  0549  083D               	movf	write_pdo@voltage_mV+1,w
  6024  054A  00A4               	movwf	___lwdiv@dividend+1
  6025  054B  083C               	movf	write_pdo@voltage_mV,w
  6026  054C  00A3               	movwf	___lwdiv@dividend
  6027  054D  318E  262C  3185   	fcall	___lwdiv
  6028  0550  30FF               	movlw	255
  6029  0551  0140               	movlb	0	; select bank0
  6030  0552  0521               	andwf	?___lwdiv,w
  6031  0553  00BF               	movwf	??_write_pdo
  6032  0554  3003               	movlw	3
  6033  0555  0522               	andwf	?___lwdiv+1,w
  6034  0556  00C0               	movwf	??_write_pdo+1
  6035  0557  083F               	movf	??_write_pdo,w
  6036  0558  00C1               	movwf	??_write_pdo+2
  6037  0559  0840               	movf	??_write_pdo+1,w
  6038  055A  00C2               	movwf	??_write_pdo+3
  6039  055B  01C3               	clrf	??_write_pdo+4
  6040  055C  01C4               	clrf	??_write_pdo+5
  6041  055D  300A               	movlw	10
  6042  055E                     u2405:	
  6043  055E  35C1               	lslf	??_write_pdo+2,f
  6044  055F  0DC2               	rlf	??_write_pdo+3,f
  6045  0560  0DC3               	rlf	??_write_pdo+4,f
  6046  0561  0DC4               	rlf	??_write_pdo+5,f
  6047  0562                     u2400:	
  6048  0562  0B89               	decfsz	9,f
  6049  0563  2D5E               	goto	u2405
  6050  0564  300A               	movlw	10
  6051  0565  00A1               	movwf	___lwdiv@divisor
  6052  0566  3000               	movlw	0
  6053  0567  00A2               	movwf	___lwdiv@divisor+1
  6054  0568  083B               	movf	write_pdo@current_mA+1,w
  6055  0569  00A4               	movwf	___lwdiv@dividend+1
  6056  056A  083A               	movf	write_pdo@current_mA,w
  6057  056B  00A3               	movwf	___lwdiv@dividend
  6058  056C  318E  262C  3185   	fcall	___lwdiv
  6059  056F  30FF               	movlw	255
  6060  0570  0140               	movlb	0	; select bank0
  6061  0571  0521               	andwf	?___lwdiv,w
  6062  0572  00C5               	movwf	??_write_pdo+6
  6063  0573  3003               	movlw	3
  6064  0574  0522               	andwf	?___lwdiv+1,w
  6065  0575  00C6               	movwf	??_write_pdo+7
  6066  0576  0845               	movf	??_write_pdo+6,w
  6067  0577  00C7               	movwf	??_write_pdo+8
  6068  0578  0846               	movf	??_write_pdo+7,w
  6069  0579  00C8               	movwf	??_write_pdo+9
  6070  057A  01C9               	clrf	??_write_pdo+10
  6071  057B  01CA               	clrf	??_write_pdo+11
  6072  057C  0841               	movf	??_write_pdo+2,w
  6073  057D  0447               	iorwf	??_write_pdo+8,w
  6074  057E  00CB               	movwf	write_pdo@pdo
  6075  057F  0842               	movf	??_write_pdo+3,w
  6076  0580  0448               	iorwf	??_write_pdo+9,w
  6077  0581  00CC               	movwf	write_pdo@pdo+1
  6078  0582  0843               	movf	??_write_pdo+4,w
  6079  0583  0449               	iorwf	??_write_pdo+10,w
  6080  0584  00CD               	movwf	write_pdo@pdo+2
  6081  0585  0844               	movf	??_write_pdo+5,w
  6082  0586  044A               	iorwf	??_write_pdo+11,w
  6083  0587  00CE               	movwf	write_pdo@pdo+3
  6084  0588                     l3025:	
  6085                           
  6086                           ;stusb4500.c: 99: if (;stusb4500.c: 100: i2c_master_write_u32(0x28, 0x85 + 4 * (pdo_num 
      +                          - 1), pdo) !=;stusb4500.c: 101: 0)
  6087  0588  083E               	movf	write_pdo@pdo_num,w
  6088  0589  00BF               	movwf	??_write_pdo
  6089  058A  3001               	movlw	1
  6090  058B                     u2415:	
  6091  058B  35BF               	lslf	??_write_pdo,f
  6092  058C  3EFF               	addlw	-1
  6093  058D  1D03               	skipz
  6094  058E  2D8B               	goto	u2415
  6095  058F  353F               	lslf	??_write_pdo,w
  6096  0590  3E81               	addlw	129
  6097  0591  00C0               	movwf	??_write_pdo+1
  6098  0592  0840               	movf	??_write_pdo+1,w
  6099  0593  00AF               	movwf	i2c_master_write_u32@reg
  6100  0594  084E               	movf	write_pdo@pdo+3,w
  6101  0595  00B3               	movwf	i2c_master_write_u32@data+3
  6102  0596  084D               	movf	write_pdo@pdo+2,w
  6103  0597  00B2               	movwf	i2c_master_write_u32@data+2
  6104  0598  084C               	movf	write_pdo@pdo+1,w
  6105  0599  00B1               	movwf	i2c_master_write_u32@data+1
  6106  059A  084B               	movf	write_pdo@pdo,w
  6107  059B  00B0               	movwf	i2c_master_write_u32@data
  6108  059C  3028               	movlw	40
  6109  059D  318B  23EC  3185   	fcall	_i2c_master_write_u32
  6110  05A0  0140               	movlb	0	; select bank0
  6111  05A1  082F               	movf	?_i2c_master_write_u32,w
  6112  05A2  0430               	iorwf	?_i2c_master_write_u32+1,w
  6113  05A3  1903               	btfsc	3,2
  6114  05A4  2DA6               	goto	u2421
  6115  05A5  2DA7               	goto	u2420
  6116  05A6                     u2421:	
  6117  05A6  2DA8               	goto	l3031
  6118  05A7                     u2420:	
  6119  05A7  2D40               	goto	l3019
  6120  05A8                     l3031:	
  6121                           
  6122                           ;stusb4500.c: 105: return reset();
  6123  05A8  3187  271D  3185   	fcall	_reset
  6124  05AB  0140               	movlb	0	; select bank0
  6125  05AC  0834               	movf	?_reset+1,w
  6126  05AD  00BB               	movwf	?_write_pdo+1
  6127  05AE  0833               	movf	?_reset,w
  6128  05AF  00BA               	movwf	?_write_pdo
  6129  05B0                     l566:	
  6130  05B0  0008               	return
  6131  05B1                     __end_of_write_pdo:	
  6132                           
  6133                           	psect	text6
  6134  071D                     __ptext6:	
  6135 ;; *************** function _reset *****************
  6136 ;; Defined at:
  6137 ;;		line 65 in file "stusb4500.c"
  6138 ;; Parameters:    Size  Location     Type
  6139 ;;		None
  6140 ;; Auto vars:     Size  Location     Type
  6141 ;;  res             1   22[BANK0 ] unsigned char 
  6142 ;;  ok              2   23[BANK0 ] int 
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  2   18[BANK0 ] int 
  6145 ;; Registers used:
  6146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6152 ;;      Params:         0       2       0       0       0       0       0       0
  6153 ;;      Locals:         0       3       0       0       0       0       0       0
  6154 ;;      Temps:          0       2       0       0       0       0       0       0
  6155 ;;      Totals:         0       7       0       0       0       0       0       0
  6156 ;;Total ram usage:        7 bytes
  6157 ;; Hardware stack levels used:    1
  6158 ;; Hardware stack levels required when called:    6
  6159 ;; This function calls:
  6160 ;;		_i2c_master_read_u8
  6161 ;;		_i2c_master_write_u8
  6162 ;; This function is called by:
  6163 ;;		_write_pdo
  6164 ;;		_stusb_negotiate
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           
  6169                           ;psect for function _reset
  6170  071D                     _reset:	
  6171  071D                     l2879:	
  6172                           ;incstack = 0
  6173                           ; Regs used in _reset: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6174                           
  6175  071D                     l2881:	
  6176  071D                     l2883:	
  6177                           ;stusb4500.c: 69: if (ok == 0)
  6178                           
  6179                           
  6180                           ;stusb4500.c: 70: ok = i2c_master_write_u8(0x28, 0x23, 0x01);
  6181  071D  3023               	movlw	35
  6182  071E  0140               	movlb	0	; select bank0
  6183  071F  00B5               	movwf	??_reset
  6184  0720  0835               	movf	??_reset,w
  6185  0721  00AF               	movwf	i2c_master_write_u8@reg
  6186  0722  01B0               	clrf	i2c_master_write_u8@data
  6187  0723  0AB0               	incf	i2c_master_write_u8@data,f
  6188  0724  3028               	movlw	40
  6189  0725  318C  241C  3187   	fcall	_i2c_master_write_u8
  6190  0728  0140               	movlb	0	; select bank0
  6191  0729  0830               	movf	?_i2c_master_write_u8+1,w
  6192  072A  00B9               	movwf	reset@ok+1
  6193  072B  082F               	movf	?_i2c_master_write_u8,w
  6194  072C  00B8               	movwf	reset@ok
  6195  072D                     l2885:	
  6196                           
  6197                           ;stusb4500.c: 73: if (ok == 0) {
  6198  072D  0838               	movf	reset@ok,w
  6199  072E  0439               	iorwf	reset@ok+1,w
  6200  072F  1D03               	btfss	3,2
  6201  0730  2F32               	goto	u2111
  6202  0731  2F33               	goto	u2110
  6203  0732                     u2111:	
  6204  0732  2F50               	goto	l2893
  6205  0733                     u2110:	
  6206  0733                     l2887:	
  6207                           
  6208                           ;stusb4500.c: 76: ok = i2c_master_read_u8(0x28, 0x2F, &res);
  6209  0733  302F               	movlw	47
  6210  0734  00B5               	movwf	??_reset
  6211  0735  0835               	movf	??_reset,w
  6212  0736  00AE               	movwf	i2c_master_read_u8@reg
  6213  0737  3037               	movlw	(low (reset@res| 0))& (0+255)
  6214  0738  00B6               	movwf	??_reset+1
  6215  0739  0836               	movf	??_reset+1,w
  6216  073A  00AF               	movwf	i2c_master_read_u8@data
  6217  073B  3028               	movlw	40
  6218  073C  318C  2404  3187   	fcall	_i2c_master_read_u8
  6219  073F  0140               	movlb	0	; select bank0
  6220  0740  082F               	movf	?_i2c_master_read_u8+1,w
  6221  0741  00B9               	movwf	reset@ok+1
  6222  0742  082E               	movf	?_i2c_master_read_u8,w
  6223  0743  00B8               	movwf	reset@ok
  6224  0744                     l2889:	
  6225                           
  6226                           ;stusb4500.c: 77: } while (ok == 0 && res != 0x21);
  6227  0744  0838               	movf	reset@ok,w
  6228  0745  0439               	iorwf	reset@ok+1,w
  6229  0746  1D03               	btfss	3,2
  6230  0747  2F49               	goto	u2121
  6231  0748  2F4A               	goto	u2120
  6232  0749                     u2121:	
  6233  0749  2F50               	goto	l2893
  6234  074A                     u2120:	
  6235  074A                     l2891:	
  6236  074A  3021               	movlw	33
  6237  074B  0637               	xorwf	reset@res,w
  6238  074C  1D03               	btfss	3,2
  6239  074D  2F4F               	goto	u2131
  6240  074E  2F50               	goto	u2130
  6241  074F                     u2131:	
  6242  074F  2F33               	goto	l2887
  6243  0750                     u2130:	
  6244  0750                     l2893:	
  6245                           
  6246                           ;stusb4500.c: 78: };stusb4500.c: 81: if (ok == 0) _delay((unsigned long)((27)*(32000000/
      +                          4000.0)));
  6247  0750  0838               	movf	reset@ok,w
  6248  0751  0439               	iorwf	reset@ok+1,w
  6249  0752  1D03               	btfss	3,2
  6250  0753  2F55               	goto	u2141
  6251  0754  2F56               	goto	u2140
  6252  0755                     u2141:	
  6253  0755  2F63               	goto	l2897
  6254  0756                     u2140:	
  6255  0756                     l2895:	
  6256  0756  3002               	movlw	2
  6257  0757  0140               	movlb	0	; select bank0
  6258  0758  00B6               	movwf	??_reset+1
  6259  0759  3019               	movlw	25
  6260  075A  00B5               	movwf	??_reset
  6261  075B  3081               	movlw	129
  6262  075C                     u3987:	
  6263  075C  0B89               	decfsz	9,f
  6264  075D  2F5C               	goto	u3987
  6265  075E  0BB5               	decfsz	??_reset,f
  6266  075F  2F5C               	goto	u3987
  6267  0760  0BB6               	decfsz	??_reset+1,f
  6268  0761  2F5C               	goto	u3987
  6269  0762  3200               	nop2
  6270  0763                     l2897:	
  6271                           
  6272                           ;stusb4500.c: 84: if (ok == 0)
  6273  0763  0140               	movlb	0	; select bank0
  6274  0764  0838               	movf	reset@ok,w
  6275  0765  0439               	iorwf	reset@ok+1,w
  6276  0766  1D03               	btfss	3,2
  6277  0767  2F69               	goto	u2151
  6278  0768  2F6A               	goto	u2150
  6279  0769                     u2151:	
  6280  0769  2F78               	goto	l2901
  6281  076A                     u2150:	
  6282  076A                     l2899:	
  6283                           
  6284                           ;stusb4500.c: 85: ok = i2c_master_write_u8(0x28, 0x23, 0x00);
  6285  076A  3023               	movlw	35
  6286  076B  00B5               	movwf	??_reset
  6287  076C  0835               	movf	??_reset,w
  6288  076D  00AF               	movwf	i2c_master_write_u8@reg
  6289  076E  01B0               	clrf	i2c_master_write_u8@data
  6290  076F  3028               	movlw	40
  6291  0770  318C  241C  3187   	fcall	_i2c_master_write_u8
  6292  0773  0140               	movlb	0	; select bank0
  6293  0774  0830               	movf	?_i2c_master_write_u8+1,w
  6294  0775  00B9               	movwf	reset@ok+1
  6295  0776  082F               	movf	?_i2c_master_write_u8,w
  6296  0777  00B8               	movwf	reset@ok
  6297  0778                     l2901:	
  6298                           
  6299                           ;stusb4500.c: 87: return (ok == 0) ? 0 : -1;
  6300  0778  0838               	movf	reset@ok,w
  6301  0779  0439               	iorwf	reset@ok+1,w
  6302  077A  1903               	btfsc	3,2
  6303  077B  2F7D               	goto	u2161
  6304  077C  2F7E               	goto	u2160
  6305  077D                     u2161:	
  6306  077D  2F83               	goto	l2905
  6307  077E                     u2160:	
  6308  077E                     l2903:	
  6309  077E  30FF               	movlw	255
  6310  077F  00B3               	movwf	?_reset
  6311  0780  30FF               	movlw	255
  6312  0781  00B4               	movwf	?_reset+1
  6313  0782  2F85               	goto	l560
  6314  0783                     l2905:	
  6315  0783  01B3               	clrf	?_reset
  6316  0784  01B4               	clrf	?_reset+1
  6317  0785                     l560:	
  6318  0785  0008               	return
  6319  0786                     __end_of_reset:	
  6320                           
  6321                           	psect	text7
  6322  0C1C                     __ptext7:	
  6323 ;; *************** function _i2c_master_write_u8 *****************
  6324 ;; Defined at:
  6325 ;;		line 73 in file "i2c_driver_stusb4500.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;  device          1    wreg     const unsigned char 
  6328 ;;  reg             1   14[BANK0 ] const unsigned char 
  6329 ;;  data            1   15[BANK0 ] const unsigned char 
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;  device          1   17[BANK0 ] const unsigned char 
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  2   14[BANK0 ] int 
  6334 ;; Registers used:
  6335 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6341 ;;      Params:         0       2       0       0       0       0       0       0
  6342 ;;      Locals:         0       1       0       0       0       0       0       0
  6343 ;;      Temps:          0       1       0       0       0       0       0       0
  6344 ;;      Totals:         0       4       0       0       0       0       0       0
  6345 ;;Total ram usage:        4 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; Hardware stack levels required when called:    5
  6348 ;; This function calls:
  6349 ;;		_i2c_master_write
  6350 ;; This function is called by:
  6351 ;;		_reset
  6352 ;;		_send_pd_message
  6353 ;;		_enter_write_mode
  6354 ;;		_enter_read_mode
  6355 ;;		_read_sector
  6356 ;;		_write_sector
  6357 ;;		_exit_rw_mode
  6358 ;; This function uses a non-reentrant model
  6359 ;;
  6360                           
  6361                           
  6362                           ;psect for function _i2c_master_write_u8
  6363  0C1C                     _i2c_master_write_u8:	
  6364                           
  6365                           ;incstack = 0
  6366                           ; Regs used in _i2c_master_write_u8: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6367                           ;i2c_master_write_u8@device stored from wreg
  6368  0C1C  0140               	movlb	0	; select bank0
  6369  0C1D  00B2               	movwf	i2c_master_write_u8@device
  6370  0C1E                     l2841:	
  6371                           
  6372                           ;i2c_driver_stusb4500.c: 75: return i2c_master_write(device, reg, &data, 1);
  6373  0C1E  082F               	movf	i2c_master_write_u8@reg,w
  6374  0C1F  00B1               	movwf	??_i2c_master_write_u8
  6375  0C20  0831               	movf	??_i2c_master_write_u8,w
  6376  0C21  00A5               	movwf	i2c_master_write@reg
  6377  0C22  3030               	movlw	low i2c_master_write_u8@data
  6378  0C23  00A6               	movwf	i2c_master_write@buf
  6379  0C24  3000               	movlw	high i2c_master_write_u8@data
  6380  0C25  00A7               	movwf	i2c_master_write@buf+1
  6381  0C26  3001               	movlw	1
  6382  0C27  00A8               	movwf	i2c_master_write@len
  6383  0C28  3000               	movlw	0
  6384  0C29  00A9               	movwf	i2c_master_write@len+1
  6385  0C2A  0832               	movf	i2c_master_write_u8@device,w
  6386  0C2B  318F  27A3  318C   	fcall	_i2c_master_write
  6387  0C2E  0140               	movlb	0	; select bank0
  6388  0C2F  0826               	movf	?_i2c_master_write+1,w
  6389  0C30  00B0               	movwf	?_i2c_master_write_u8+1
  6390  0C31  0825               	movf	?_i2c_master_write,w
  6391  0C32  00AF               	movwf	?_i2c_master_write_u8
  6392  0C33                     l654:	
  6393  0C33  0008               	return
  6394  0C34                     __end_of_i2c_master_write_u8:	
  6395                           
  6396                           	psect	text8
  6397  0C04                     __ptext8:	
  6398 ;; *************** function _i2c_master_read_u8 *****************
  6399 ;; Defined at:
  6400 ;;		line 111 in file "i2c_driver_stusb4500.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;  device          1    wreg     const unsigned char 
  6403 ;;  reg             1   13[BANK0 ] const unsigned char 
  6404 ;;  data            1   14[BANK0 ] PTR unsigned char 
  6405 ;;		 -> write_sector@buffer(1), read_sector@buffer(1), enter_write_mode@buffer(1), stusb_negotiate@buffer(40), 
  6406 ;;		 -> reset@res(1), 
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;  device          1   17[BANK0 ] const unsigned char 
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  2   13[BANK0 ] int 
  6411 ;; Registers used:
  6412 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6418 ;;      Params:         0       2       0       0       0       0       0       0
  6419 ;;      Locals:         0       1       0       0       0       0       0       0
  6420 ;;      Temps:          0       2       0       0       0       0       0       0
  6421 ;;      Totals:         0       5       0       0       0       0       0       0
  6422 ;;Total ram usage:        5 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; Hardware stack levels required when called:    5
  6425 ;; This function calls:
  6426 ;;		_i2c_master_read
  6427 ;; This function is called by:
  6428 ;;		_reset
  6429 ;;		_stusb_negotiate
  6430 ;;		_enter_write_mode
  6431 ;;		_read_sector
  6432 ;;		_write_sector
  6433 ;; This function uses a non-reentrant model
  6434 ;;
  6435                           
  6436                           
  6437                           ;psect for function _i2c_master_read_u8
  6438  0C04                     _i2c_master_read_u8:	
  6439                           
  6440                           ;incstack = 0
  6441                           ; Regs used in _i2c_master_read_u8: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6442                           ;i2c_master_read_u8@device stored from wreg
  6443  0C04  0140               	movlb	0	; select bank0
  6444  0C05  00B2               	movwf	i2c_master_read_u8@device
  6445  0C06                     l2845:	
  6446                           
  6447                           ;i2c_driver_stusb4500.c: 112: return i2c_master_read(device, reg, data, 1);
  6448  0C06  082E               	movf	i2c_master_read_u8@reg,w
  6449  0C07  00B0               	movwf	??_i2c_master_read_u8
  6450  0C08  0830               	movf	??_i2c_master_read_u8,w
  6451  0C09  00A5               	movwf	i2c_master_read@reg
  6452  0C0A  082F               	movf	i2c_master_read_u8@data,w
  6453  0C0B  00B1               	movwf	??_i2c_master_read_u8+1
  6454  0C0C  0831               	movf	??_i2c_master_read_u8+1,w
  6455  0C0D  00A6               	movwf	i2c_master_read@buf
  6456  0C0E  3001               	movlw	1
  6457  0C0F  00A7               	movwf	i2c_master_read@len
  6458  0C10  3000               	movlw	0
  6459  0C11  00A8               	movwf	i2c_master_read@len+1
  6460  0C12  0832               	movf	i2c_master_read_u8@device,w
  6461  0C13  3185  25B1  318C   	fcall	_i2c_master_read
  6462  0C16  0140               	movlb	0	; select bank0
  6463  0C17  0826               	movf	?_i2c_master_read+1,w
  6464  0C18  00AF               	movwf	?_i2c_master_read_u8+1
  6465  0C19  0825               	movf	?_i2c_master_read,w
  6466  0C1A  00AE               	movwf	?_i2c_master_read_u8
  6467  0C1B                     l675:	
  6468  0C1B  0008               	return
  6469  0C1C                     __end_of_i2c_master_read_u8:	
  6470                           
  6471                           	psect	text9
  6472  0BEC                     __ptext9:	
  6473 ;; *************** function _i2c_master_write_u32 *****************
  6474 ;; Defined at:
  6475 ;;		line 83 in file "i2c_driver_stusb4500.c"
  6476 ;; Parameters:    Size  Location     Type
  6477 ;;  device          1    wreg     const unsigned char 
  6478 ;;  reg             1   14[BANK0 ] const unsigned char 
  6479 ;;  data            4   15[BANK0 ] const unsigned long 
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;  device          1   20[BANK0 ] const unsigned char 
  6482 ;; Return value:  Size  Location     Type
  6483 ;;                  2   14[BANK0 ] int 
  6484 ;; Registers used:
  6485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6491 ;;      Params:         0       5       0       0       0       0       0       0
  6492 ;;      Locals:         0       1       0       0       0       0       0       0
  6493 ;;      Temps:          0       1       0       0       0       0       0       0
  6494 ;;      Totals:         0       7       0       0       0       0       0       0
  6495 ;;Total ram usage:        7 bytes
  6496 ;; Hardware stack levels used:    1
  6497 ;; Hardware stack levels required when called:    5
  6498 ;; This function calls:
  6499 ;;		_i2c_master_write
  6500 ;; This function is called by:
  6501 ;;		_write_pdo
  6502 ;; This function uses a non-reentrant model
  6503 ;;
  6504                           
  6505                           
  6506                           ;psect for function _i2c_master_write_u32
  6507  0BEC                     _i2c_master_write_u32:	
  6508                           
  6509                           ;incstack = 0
  6510                           ; Regs used in _i2c_master_write_u32: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6511                           ;i2c_master_write_u32@device stored from wreg
  6512  0BEC  0140               	movlb	0	; select bank0
  6513  0BED  00B5               	movwf	i2c_master_write_u32@device
  6514  0BEE                     l2909:	
  6515                           
  6516                           ;i2c_driver_stusb4500.c: 85: return i2c_master_write(device, reg, &data, 4);
  6517  0BEE  082F               	movf	i2c_master_write_u32@reg,w
  6518  0BEF  00B4               	movwf	??_i2c_master_write_u32
  6519  0BF0  0834               	movf	??_i2c_master_write_u32,w
  6520  0BF1  00A5               	movwf	i2c_master_write@reg
  6521  0BF2  3030               	movlw	low i2c_master_write_u32@data
  6522  0BF3  00A6               	movwf	i2c_master_write@buf
  6523  0BF4  3000               	movlw	high i2c_master_write_u32@data
  6524  0BF5  00A7               	movwf	i2c_master_write@buf+1
  6525  0BF6  3004               	movlw	4
  6526  0BF7  00A8               	movwf	i2c_master_write@len
  6527  0BF8  3000               	movlw	0
  6528  0BF9  00A9               	movwf	i2c_master_write@len+1
  6529  0BFA  0835               	movf	i2c_master_write_u32@device,w
  6530  0BFB  318F  27A3  318B   	fcall	_i2c_master_write
  6531  0BFE  0140               	movlb	0	; select bank0
  6532  0BFF  0826               	movf	?_i2c_master_write+1,w
  6533  0C00  00B0               	movwf	?_i2c_master_write_u32+1
  6534  0C01  0825               	movf	?_i2c_master_write,w
  6535  0C02  00AF               	movwf	?_i2c_master_write_u32
  6536  0C03                     l660:	
  6537  0C03  0008               	return
  6538  0C04                     __end_of_i2c_master_write_u32:	
  6539                           
  6540                           	psect	text10
  6541  0FA3                     __ptext10:	
  6542 ;; *************** function _i2c_master_write *****************
  6543 ;; Defined at:
  6544 ;;		line 54 in file "i2c_driver_stusb4500.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  device          1    wreg     const unsigned char 
  6547 ;;  reg             1    4[BANK0 ] const unsigned char 
  6548 ;;  buf             2    5[BANK0 ] PTR const void 
  6549 ;;		 -> nvm_config(40), i2c_master_write_u32@data(4), i2c_master_write_u16@data(2), i2c_master_write_u8@data(1), 
  6550 ;;  len             2    7[BANK0 ] unsigned int 
  6551 ;; Auto vars:     Size  Location     Type
  6552 ;;  device          1    9[BANK0 ] const unsigned char 
  6553 ;;  ok              2   12[BANK0 ] int 
  6554 ;;  data            2   10[BANK0 ] PTR unsigned char 
  6555 ;;		 -> nvm_config(40), i2c_master_write_u32@data(4), i2c_master_write_u16@data(2), i2c_master_write_u8@data(1), 
  6556 ;; Return value:  Size  Location     Type
  6557 ;;                  2    4[BANK0 ] int 
  6558 ;; Registers used:
  6559 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6565 ;;      Params:         0       5       0       0       0       0       0       0
  6566 ;;      Locals:         0       5       0       0       0       0       0       0
  6567 ;;      Temps:          0       0       0       0       0       0       0       0
  6568 ;;      Totals:         0      10       0       0       0       0       0       0
  6569 ;;Total ram usage:       10 bytes
  6570 ;; Hardware stack levels used:    1
  6571 ;; Hardware stack levels required when called:    4
  6572 ;; This function calls:
  6573 ;;		_i2c_master_send_byte
  6574 ;;		_i2c_master_start
  6575 ;;		_i2c_master_stop
  6576 ;;		_i2c_master_wait
  6577 ;; This function is called by:
  6578 ;;		_i2c_master_write_u8
  6579 ;;		_i2c_master_write_u32
  6580 ;;		_i2c_master_write_u16
  6581 ;;		_write_sector
  6582 ;; This function uses a non-reentrant model
  6583 ;;
  6584                           
  6585                           
  6586                           ;psect for function _i2c_master_write
  6587  0FA3                     _i2c_master_write:	
  6588                           
  6589                           ;incstack = 0
  6590                           ; Regs used in _i2c_master_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6591                           ;i2c_master_write@device stored from wreg
  6592  0FA3  0140               	movlb	0	; select bank0
  6593  0FA4  00AA               	movwf	i2c_master_write@device
  6594  0FA5                     l2797:	
  6595                           
  6596                           ;i2c_driver_stusb4500.c: 56: uint8_t* data = (uint8_t*)buf;
  6597  0FA5  0827               	movf	i2c_master_write@buf+1,w
  6598  0FA6  00AC               	movwf	i2c_master_write@data+1
  6599  0FA7  0826               	movf	i2c_master_write@buf,w
  6600  0FA8  00AB               	movwf	i2c_master_write@data
  6601  0FA9                     l2799:	
  6602                           
  6603                           ;i2c_driver_stusb4500.c: 57: if (!data) return -1;
  6604  0FA9  082B               	movf	i2c_master_write@data,w
  6605  0FAA  042C               	iorwf	i2c_master_write@data+1,w
  6606  0FAB  1D03               	btfss	3,2
  6607  0FAC  2FAE               	goto	u2041
  6608  0FAD  2FAF               	goto	u2040
  6609  0FAE                     u2041:	
  6610  0FAE  2FB4               	goto	l2805
  6611  0FAF                     u2040:	
  6612  0FAF                     l2801:	
  6613  0FAF  30FF               	movlw	255
  6614  0FB0  00A5               	movwf	?_i2c_master_write
  6615  0FB1  30FF               	movlw	255
  6616  0FB2  00A6               	movwf	?_i2c_master_write+1
  6617  0FB3  2FFF               	goto	l644
  6618  0FB4                     l2805:	
  6619  0FB4                     l2807:	
  6620                           
  6621                           ;i2c_driver_stusb4500.c: 61: i2c_master_wait();
  6622  0FB4  318B  235B  318F   	fcall	_i2c_master_wait
  6623  0FB7                     l2809:	
  6624                           
  6625                           ;i2c_driver_stusb4500.c: 62: i2c_master_start();
  6626  0FB7  318A  22F6  318F   	fcall	_i2c_master_start
  6627  0FBA                     l2811:	
  6628  0FBA                     l2813:	
  6629                           ;i2c_driver_stusb4500.c: 63: if (ok == 0) ok = i2c_master_send_byte((device << 1) | 0);
  6630                           
  6631  0FBA  0140               	movlb	0	; select bank0
  6632  0FBB  352A               	lslf	i2c_master_write@device,w
  6633  0FBC  318B  23BD  318F   	fcall	_i2c_master_send_byte
  6634  0FBF  0140               	movlb	0	; select bank0
  6635  0FC0  0822               	movf	?_i2c_master_send_byte+1,w
  6636  0FC1  00AE               	movwf	i2c_master_write@ok+1
  6637  0FC2  0821               	movf	?_i2c_master_send_byte,w
  6638  0FC3  00AD               	movwf	i2c_master_write@ok
  6639  0FC4                     l2815:	
  6640                           
  6641                           ;i2c_driver_stusb4500.c: 64: if (ok == 0) ok = i2c_master_send_byte(reg);
  6642  0FC4  082D               	movf	i2c_master_write@ok,w
  6643  0FC5  042E               	iorwf	i2c_master_write@ok+1,w
  6644  0FC6  1D03               	btfss	3,2
  6645  0FC7  2FC9               	goto	u2051
  6646  0FC8  2FCA               	goto	u2050
  6647  0FC9                     u2051:	
  6648  0FC9  2FE5               	goto	l2823
  6649  0FCA                     u2050:	
  6650  0FCA                     l2817:	
  6651  0FCA  0825               	movf	i2c_master_write@reg,w
  6652  0FCB  318B  23BD  318F   	fcall	_i2c_master_send_byte
  6653  0FCE  0140               	movlb	0	; select bank0
  6654  0FCF  0822               	movf	?_i2c_master_send_byte+1,w
  6655  0FD0  00AE               	movwf	i2c_master_write@ok+1
  6656  0FD1  0821               	movf	?_i2c_master_send_byte,w
  6657  0FD2  00AD               	movwf	i2c_master_write@ok
  6658  0FD3  2FE5               	goto	l2823
  6659  0FD4                     l2819:	
  6660                           
  6661                           ;i2c_driver_stusb4500.c: 66: ok = i2c_master_send_byte(*data++);
  6662  0FD4  082B               	movf	i2c_master_write@data,w
  6663  0FD5  0084               	movwf	4
  6664  0FD6  082C               	movf	i2c_master_write@data+1,w
  6665  0FD7  0085               	movwf	5
  6666  0FD8  0800               	movf	0,w	;code access
  6667  0FD9  318B  23BD  318F   	fcall	_i2c_master_send_byte
  6668  0FDC  0140               	movlb	0	; select bank0
  6669  0FDD  0822               	movf	?_i2c_master_send_byte+1,w
  6670  0FDE  00AE               	movwf	i2c_master_write@ok+1
  6671  0FDF  0821               	movf	?_i2c_master_send_byte,w
  6672  0FE0  00AD               	movwf	i2c_master_write@ok
  6673  0FE1                     l2821:	
  6674  0FE1  3001               	movlw	1
  6675  0FE2  07AB               	addwf	i2c_master_write@data,f
  6676  0FE3  3000               	movlw	0
  6677  0FE4  3DAC               	addwfc	i2c_master_write@data+1,f
  6678  0FE5                     l2823:	
  6679  0FE5  082D               	movf	i2c_master_write@ok,w
  6680  0FE6  042E               	iorwf	i2c_master_write@ok+1,w
  6681  0FE7  1D03               	btfss	3,2
  6682  0FE8  2FEA               	goto	u2061
  6683  0FE9  2FEB               	goto	u2060
  6684  0FEA                     u2061:	
  6685  0FEA  2FF7               	goto	l2827
  6686  0FEB                     u2060:	
  6687  0FEB                     l2825:	
  6688  0FEB  3001               	movlw	1
  6689  0FEC  02A8               	subwf	i2c_master_write@len,f
  6690  0FED  3000               	movlw	0
  6691  0FEE  3BA9               	subwfb	i2c_master_write@len+1,f
  6692  0FEF  0A28               	incf	i2c_master_write@len,w
  6693  0FF0  1D03               	skipz
  6694  0FF1  2FF6               	goto	u2071
  6695  0FF2  0A29               	incf	i2c_master_write@len+1,w
  6696  0FF3  1D03               	btfss	3,2
  6697  0FF4  2FF6               	goto	u2071
  6698  0FF5  2FF7               	goto	u2070
  6699  0FF6                     u2071:	
  6700  0FF6  2FD4               	goto	l2819
  6701  0FF7                     u2070:	
  6702  0FF7                     l2827:	
  6703                           
  6704                           ;i2c_driver_stusb4500.c: 67: };i2c_driver_stusb4500.c: 68: i2c_master_stop();
  6705  0FF7  318A  22FC  318F   	fcall	_i2c_master_stop
  6706  0FFA                     l2829:	
  6707                           
  6708                           ;i2c_driver_stusb4500.c: 70: return ok;
  6709  0FFA  0140               	movlb	0	; select bank0
  6710  0FFB  082E               	movf	i2c_master_write@ok+1,w
  6711  0FFC  00A6               	movwf	?_i2c_master_write+1
  6712  0FFD  082D               	movf	i2c_master_write@ok,w
  6713  0FFE  00A5               	movwf	?_i2c_master_write
  6714  0FFF                     l644:	
  6715  0FFF  0008               	return
  6716  1000                     __end_of_i2c_master_write:	
  6717                           
  6718                           	psect	text11
  6719  0E2C                     __ptext11:	
  6720 ;; *************** function ___lwdiv *****************
  6721 ;; Defined at:
  6722 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;  divisor         2    0[BANK0 ] unsigned int 
  6725 ;;  dividend        2    2[BANK0 ] unsigned int 
  6726 ;; Auto vars:     Size  Location     Type
  6727 ;;  quotient        2    5[BANK0 ] unsigned int 
  6728 ;;  counter         1    7[BANK0 ] unsigned char 
  6729 ;; Return value:  Size  Location     Type
  6730 ;;                  2    0[BANK0 ] unsigned int 
  6731 ;; Registers used:
  6732 ;;		wreg, status,2, status,0
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6738 ;;      Params:         0       4       0       0       0       0       0       0
  6739 ;;      Locals:         0       3       0       0       0       0       0       0
  6740 ;;      Temps:          0       1       0       0       0       0       0       0
  6741 ;;      Totals:         0       8       0       0       0       0       0       0
  6742 ;;Total ram usage:        8 bytes
  6743 ;; Hardware stack levels used:    1
  6744 ;; Hardware stack levels required when called:    2
  6745 ;; This function calls:
  6746 ;;		Nothing
  6747 ;; This function is called by:
  6748 ;;		_write_pdo
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           
  6753                           ;psect for function ___lwdiv
  6754  0E2C                     ___lwdiv:	
  6755  0E2C                     l2971:	
  6756                           ;incstack = 0
  6757                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6758                           
  6759  0E2C  0140               	movlb	0	; select bank0
  6760  0E2D  01A6               	clrf	___lwdiv@quotient
  6761  0E2E  01A7               	clrf	___lwdiv@quotient+1
  6762  0E2F                     l2973:	
  6763  0E2F  0821               	movf	___lwdiv@divisor,w
  6764  0E30  0422               	iorwf	___lwdiv@divisor+1,w
  6765  0E31  1903               	btfsc	3,2
  6766  0E32  2E34               	goto	u2311
  6767  0E33  2E35               	goto	u2310
  6768  0E34                     u2311:	
  6769  0E34  2E64               	goto	l2993
  6770  0E35                     u2310:	
  6771  0E35                     l2975:	
  6772  0E35  01A8               	clrf	___lwdiv@counter
  6773  0E36  0AA8               	incf	___lwdiv@counter,f
  6774  0E37  2E41               	goto	l2981
  6775  0E38                     l2977:	
  6776  0E38  3001               	movlw	1
  6777  0E39                     u2325:	
  6778  0E39  35A1               	lslf	___lwdiv@divisor,f
  6779  0E3A  0DA2               	rlf	___lwdiv@divisor+1,f
  6780  0E3B  0B89               	decfsz	9,f
  6781  0E3C  2E39               	goto	u2325
  6782  0E3D                     l2979:	
  6783  0E3D  3001               	movlw	1
  6784  0E3E  00A5               	movwf	??___lwdiv
  6785  0E3F  0825               	movf	??___lwdiv,w
  6786  0E40  07A8               	addwf	___lwdiv@counter,f
  6787  0E41                     l2981:	
  6788  0E41  1FA2               	btfss	___lwdiv@divisor+1,7
  6789  0E42  2E44               	goto	u2331
  6790  0E43  2E45               	goto	u2330
  6791  0E44                     u2331:	
  6792  0E44  2E38               	goto	l2977
  6793  0E45                     u2330:	
  6794  0E45                     l2983:	
  6795  0E45  3001               	movlw	1
  6796  0E46                     u2345:	
  6797  0E46  35A6               	lslf	___lwdiv@quotient,f
  6798  0E47  0DA7               	rlf	___lwdiv@quotient+1,f
  6799  0E48  0B89               	decfsz	9,f
  6800  0E49  2E46               	goto	u2345
  6801  0E4A  0822               	movf	___lwdiv@divisor+1,w
  6802  0E4B  0224               	subwf	___lwdiv@dividend+1,w
  6803  0E4C  1D03               	skipz
  6804  0E4D  2E50               	goto	u2355
  6805  0E4E  0821               	movf	___lwdiv@divisor,w
  6806  0E4F  0223               	subwf	___lwdiv@dividend,w
  6807  0E50                     u2355:	
  6808  0E50  1C03               	skipc
  6809  0E51  2E53               	goto	u2351
  6810  0E52  2E54               	goto	u2350
  6811  0E53                     u2351:	
  6812  0E53  2E59               	goto	l2989
  6813  0E54                     u2350:	
  6814  0E54                     l2985:	
  6815  0E54  0821               	movf	___lwdiv@divisor,w
  6816  0E55  02A3               	subwf	___lwdiv@dividend,f
  6817  0E56  0822               	movf	___lwdiv@divisor+1,w
  6818  0E57  3BA4               	subwfb	___lwdiv@dividend+1,f
  6819  0E58                     l2987:	
  6820  0E58  1426               	bsf	___lwdiv@quotient,0
  6821  0E59                     l2989:	
  6822  0E59  3001               	movlw	1
  6823  0E5A                     u2365:	
  6824  0E5A  36A2               	lsrf	___lwdiv@divisor+1,f
  6825  0E5B  0CA1               	rrf	___lwdiv@divisor,f
  6826  0E5C  0B89               	decfsz	9,f
  6827  0E5D  2E5A               	goto	u2365
  6828  0E5E                     l2991:	
  6829  0E5E  3001               	movlw	1
  6830  0E5F  02A8               	subwf	___lwdiv@counter,f
  6831  0E60  1D03               	btfss	3,2
  6832  0E61  2E63               	goto	u2371
  6833  0E62  2E64               	goto	u2370
  6834  0E63                     u2371:	
  6835  0E63  2E45               	goto	l2983
  6836  0E64                     u2370:	
  6837  0E64                     l2993:	
  6838  0E64  0827               	movf	___lwdiv@quotient+1,w
  6839  0E65  00A2               	movwf	?___lwdiv+1
  6840  0E66  0826               	movf	___lwdiv@quotient,w
  6841  0E67  00A1               	movwf	?___lwdiv
  6842  0E68                     l1131:	
  6843  0E68  0008               	return
  6844  0E69                     __end_of___lwdiv:	
  6845                           
  6846                           	psect	text12
  6847  0DF8                     __ptext12:	
  6848 ;; *************** function ___lmul *****************
  6849 ;; Defined at:
  6850 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  6851 ;; Parameters:    Size  Location     Type
  6852 ;;  multiplier      4    0[BANK0 ] unsigned long 
  6853 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  6854 ;; Auto vars:     Size  Location     Type
  6855 ;;  product         4    8[BANK0 ] unsigned long 
  6856 ;; Return value:  Size  Location     Type
  6857 ;;                  4    0[BANK0 ] unsigned long 
  6858 ;; Registers used:
  6859 ;;		wreg, status,2, status,0
  6860 ;; Tracked objects:
  6861 ;;		On entry : 0/0
  6862 ;;		On exit  : 0/0
  6863 ;;		Unchanged: 0/0
  6864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6865 ;;      Params:         0       8       0       0       0       0       0       0
  6866 ;;      Locals:         0       4       0       0       0       0       0       0
  6867 ;;      Temps:          0       0       0       0       0       0       0       0
  6868 ;;      Totals:         0      12       0       0       0       0       0       0
  6869 ;;Total ram usage:       12 bytes
  6870 ;; Hardware stack levels used:    1
  6871 ;; Hardware stack levels required when called:    2
  6872 ;; This function calls:
  6873 ;;		Nothing
  6874 ;; This function is called by:
  6875 ;;		_negotiate_optimal_pdo
  6876 ;; This function uses a non-reentrant model
  6877 ;;
  6878                           
  6879                           
  6880                           ;psect for function ___lmul
  6881  0DF8                     ___lmul:	
  6882  0DF8                     l3035:	
  6883                           ;incstack = 0
  6884                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6885                           
  6886  0DF8  3000               	movlw	0
  6887  0DF9  0140               	movlb	0	; select bank0
  6888  0DFA  00AC               	movwf	___lmul@product+3
  6889  0DFB  3000               	movlw	0
  6890  0DFC  00AB               	movwf	___lmul@product+2
  6891  0DFD  3000               	movlw	0
  6892  0DFE  00AA               	movwf	___lmul@product+1
  6893  0DFF  3000               	movlw	0
  6894  0E00  00A9               	movwf	___lmul@product
  6895  0E01                     l3037:	
  6896  0E01  1C21               	btfss	___lmul@multiplier,0
  6897  0E02  2E04               	goto	u2431
  6898  0E03  2E05               	goto	u2430
  6899  0E04                     u2431:	
  6900  0E04  2E0D               	goto	l3041
  6901  0E05                     u2430:	
  6902  0E05                     l3039:	
  6903  0E05  0825               	movf	___lmul@multiplicand,w
  6904  0E06  07A9               	addwf	___lmul@product,f
  6905  0E07  0826               	movf	___lmul@multiplicand+1,w
  6906  0E08  3DAA               	addwfc	___lmul@product+1,f
  6907  0E09  0827               	movf	___lmul@multiplicand+2,w
  6908  0E0A  3DAB               	addwfc	___lmul@product+2,f
  6909  0E0B  0828               	movf	___lmul@multiplicand+3,w
  6910  0E0C  3DAC               	addwfc	___lmul@product+3,f
  6911  0E0D                     l3041:	
  6912  0E0D  3001               	movlw	1
  6913  0E0E                     u2445:	
  6914  0E0E  35A5               	lslf	___lmul@multiplicand,f
  6915  0E0F  0DA6               	rlf	___lmul@multiplicand+1,f
  6916  0E10  0DA7               	rlf	___lmul@multiplicand+2,f
  6917  0E11  0DA8               	rlf	___lmul@multiplicand+3,f
  6918  0E12  0B89               	decfsz	9,f
  6919  0E13  2E0E               	goto	u2445
  6920  0E14                     l3043:	
  6921  0E14  3001               	movlw	1
  6922  0E15                     u2455:	
  6923  0E15  36A4               	lsrf	___lmul@multiplier+3,f
  6924  0E16  0CA3               	rrf	___lmul@multiplier+2,f
  6925  0E17  0CA2               	rrf	___lmul@multiplier+1,f
  6926  0E18  0CA1               	rrf	___lmul@multiplier,f
  6927  0E19  0B89               	decfsz	9,f
  6928  0E1A  2E15               	goto	u2455
  6929  0E1B  0824               	movf	___lmul@multiplier+3,w
  6930  0E1C  0423               	iorwf	___lmul@multiplier+2,w
  6931  0E1D  0422               	iorwf	___lmul@multiplier+1,w
  6932  0E1E  0421               	iorwf	___lmul@multiplier,w
  6933  0E1F  1D03               	skipz
  6934  0E20  2E22               	goto	u2461
  6935  0E21  2E23               	goto	u2460
  6936  0E22                     u2461:	
  6937  0E22  2E01               	goto	l3037
  6938  0E23                     u2460:	
  6939  0E23                     l3045:	
  6940  0E23  082C               	movf	___lmul@product+3,w
  6941  0E24  00A4               	movwf	?___lmul+3
  6942  0E25  082B               	movf	___lmul@product+2,w
  6943  0E26  00A3               	movwf	?___lmul+2
  6944  0E27  082A               	movf	___lmul@product+1,w
  6945  0E28  00A2               	movwf	?___lmul+1
  6946  0E29  0829               	movf	___lmul@product,w
  6947  0E2A  00A1               	movwf	?___lmul
  6948  0E2B                     l873:	
  6949  0E2B  0008               	return
  6950  0E2C                     __end_of___lmul:	
  6951                           
  6952                           	psect	text13
  6953  0BD4                     __ptext13:	
  6954 ;; *************** function _i2c_master_read_u16 *****************
  6955 ;; Defined at:
  6956 ;;		line 115 in file "i2c_driver_stusb4500.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;  device          1    wreg     const unsigned char 
  6959 ;;  reg             1   13[BANK0 ] const unsigned char 
  6960 ;;  data            1   14[BANK0 ] PTR unsigned int 
  6961 ;;		 -> stusb_negotiate@header(2), 
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;  device          1   17[BANK0 ] const unsigned char 
  6964 ;; Return value:  Size  Location     Type
  6965 ;;                  2   13[BANK0 ] int 
  6966 ;; Registers used:
  6967 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6968 ;; Tracked objects:
  6969 ;;		On entry : 0/0
  6970 ;;		On exit  : 0/0
  6971 ;;		Unchanged: 0/0
  6972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6973 ;;      Params:         0       2       0       0       0       0       0       0
  6974 ;;      Locals:         0       1       0       0       0       0       0       0
  6975 ;;      Temps:          0       2       0       0       0       0       0       0
  6976 ;;      Totals:         0       5       0       0       0       0       0       0
  6977 ;;Total ram usage:        5 bytes
  6978 ;; Hardware stack levels used:    1
  6979 ;; Hardware stack levels required when called:    5
  6980 ;; This function calls:
  6981 ;;		_i2c_master_read
  6982 ;; This function is called by:
  6983 ;;		_stusb_negotiate
  6984 ;; This function uses a non-reentrant model
  6985 ;;
  6986                           
  6987                           
  6988                           ;psect for function _i2c_master_read_u16
  6989  0BD4                     _i2c_master_read_u16:	
  6990                           
  6991                           ;incstack = 0
  6992                           ; Regs used in _i2c_master_read_u16: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6993                           ;i2c_master_read_u16@device stored from wreg
  6994  0BD4  0140               	movlb	0	; select bank0
  6995  0BD5  00B2               	movwf	i2c_master_read_u16@device
  6996  0BD6                     l3225:	
  6997                           
  6998                           ;i2c_driver_stusb4500.c: 117: return i2c_master_read(device, reg, (uint8_t*)data, 2);
  6999  0BD6  082E               	movf	i2c_master_read_u16@reg,w
  7000  0BD7  00B0               	movwf	??_i2c_master_read_u16
  7001  0BD8  0830               	movf	??_i2c_master_read_u16,w
  7002  0BD9  00A5               	movwf	i2c_master_read@reg
  7003  0BDA  082F               	movf	i2c_master_read_u16@data,w
  7004  0BDB  00B1               	movwf	??_i2c_master_read_u16+1
  7005  0BDC  0831               	movf	??_i2c_master_read_u16+1,w
  7006  0BDD  00A6               	movwf	i2c_master_read@buf
  7007  0BDE  3002               	movlw	2
  7008  0BDF  00A7               	movwf	i2c_master_read@len
  7009  0BE0  3000               	movlw	0
  7010  0BE1  00A8               	movwf	i2c_master_read@len+1
  7011  0BE2  0832               	movf	i2c_master_read_u16@device,w
  7012  0BE3  3185  25B1  318B   	fcall	_i2c_master_read
  7013  0BE6  0140               	movlb	0	; select bank0
  7014  0BE7  0826               	movf	?_i2c_master_read+1,w
  7015  0BE8  00AF               	movwf	?_i2c_master_read_u16+1
  7016  0BE9  0825               	movf	?_i2c_master_read,w
  7017  0BEA  00AE               	movwf	?_i2c_master_read_u16
  7018  0BEB                     l678:	
  7019  0BEB  0008               	return
  7020  0BEC                     __end_of_i2c_master_read_u16:	
  7021                           
  7022                           	psect	text14
  7023  05B1                     __ptext14:	
  7024 ;; *************** function _i2c_master_read *****************
  7025 ;; Defined at:
  7026 ;;		line 88 in file "i2c_driver_stusb4500.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  device          1    wreg     const unsigned char 
  7029 ;;  reg             1    4[BANK0 ] const unsigned char 
  7030 ;;  buf             1    5[BANK0 ] PTR void 
  7031 ;;		 -> nvm_read@sectors(40), write_sector@buffer(1), read_sector@buffer(1), enter_write_mode@buffer(1), 
  7032 ;;		 -> stusb_negotiate@header(2), stusb_negotiate@buffer(40), reset@res(1), 
  7033 ;;  len             2    6[BANK0 ] unsigned int 
  7034 ;; Auto vars:     Size  Location     Type
  7035 ;;  device          1    9[BANK0 ] const unsigned char 
  7036 ;;  ok              2   11[BANK0 ] int 
  7037 ;;  data            1   10[BANK0 ] PTR unsigned char 
  7038 ;;		 -> nvm_read@sectors(40), write_sector@buffer(1), read_sector@buffer(1), enter_write_mode@buffer(1), 
  7039 ;;		 -> stusb_negotiate@header(2), stusb_negotiate@buffer(40), reset@res(1), 
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  2    4[BANK0 ] int 
  7042 ;; Registers used:
  7043 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7049 ;;      Params:         0       4       0       0       0       0       0       0
  7050 ;;      Locals:         0       4       0       0       0       0       0       0
  7051 ;;      Temps:          0       1       0       0       0       0       0       0
  7052 ;;      Totals:         0       9       0       0       0       0       0       0
  7053 ;;Total ram usage:        9 bytes
  7054 ;; Hardware stack levels used:    1
  7055 ;; Hardware stack levels required when called:    4
  7056 ;; This function calls:
  7057 ;;		_i2c_master_receive_byte
  7058 ;;		_i2c_master_repeat_start
  7059 ;;		_i2c_master_send_byte
  7060 ;;		_i2c_master_start
  7061 ;;		_i2c_master_stop
  7062 ;;		_i2c_master_wait
  7063 ;; This function is called by:
  7064 ;;		_stusb_negotiate
  7065 ;;		_i2c_master_read_u8
  7066 ;;		_i2c_master_read_u16
  7067 ;;		_i2c_master_read_u32
  7068 ;;		_read_sector
  7069 ;; This function uses a non-reentrant model
  7070 ;;
  7071                           
  7072                           
  7073                           ;psect for function _i2c_master_read
  7074  05B1                     _i2c_master_read:	
  7075                           
  7076                           ;incstack = 0
  7077                           ; Regs used in _i2c_master_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7078                           ;i2c_master_read@device stored from wreg
  7079  05B1  0140               	movlb	0	; select bank0
  7080  05B2  00AA               	movwf	i2c_master_read@device
  7081  05B3                     l2751:	
  7082                           
  7083                           ;i2c_driver_stusb4500.c: 90: uint8_t* data = (uint8_t*)buf;
  7084  05B3  0826               	movf	i2c_master_read@buf,w
  7085  05B4  00A9               	movwf	??_i2c_master_read
  7086  05B5  0829               	movf	??_i2c_master_read,w
  7087  05B6  00AB               	movwf	i2c_master_read@data
  7088  05B7                     l2753:	
  7089                           
  7090                           ;i2c_driver_stusb4500.c: 91: if (!data) return -1;
  7091  05B7  082B               	movf	i2c_master_read@data,w
  7092  05B8  1D03               	btfss	3,2
  7093  05B9  2DBB               	goto	u1961
  7094  05BA  2DBC               	goto	u1960
  7095  05BB                     u1961:	
  7096  05BB  2DC1               	goto	l2759
  7097  05BC                     u1960:	
  7098  05BC                     l2755:	
  7099  05BC  30FF               	movlw	255
  7100  05BD  00A5               	movwf	?_i2c_master_read
  7101  05BE  30FF               	movlw	255
  7102  05BF  00A6               	movwf	?_i2c_master_read+1
  7103  05C0  2E2B               	goto	l664
  7104  05C1                     l2759:	
  7105  05C1                     l2761:	
  7106                           
  7107                           ;i2c_driver_stusb4500.c: 95: i2c_master_wait();
  7108  05C1  318B  235B  3185   	fcall	_i2c_master_wait
  7109  05C4                     l2763:	
  7110                           
  7111                           ;i2c_driver_stusb4500.c: 96: i2c_master_start();
  7112  05C4  318A  22F6  3185   	fcall	_i2c_master_start
  7113  05C7                     l2765:	
  7114  05C7                     l2767:	
  7115                           ;i2c_driver_stusb4500.c: 97: if (ok == 0) ok = i2c_master_send_byte((device << 1) | 0);
  7116                           
  7117  05C7  0140               	movlb	0	; select bank0
  7118  05C8  352A               	lslf	i2c_master_read@device,w
  7119  05C9  318B  23BD  3185   	fcall	_i2c_master_send_byte
  7120  05CC  0140               	movlb	0	; select bank0
  7121  05CD  0822               	movf	?_i2c_master_send_byte+1,w
  7122  05CE  00AD               	movwf	i2c_master_read@ok+1
  7123  05CF  0821               	movf	?_i2c_master_send_byte,w
  7124  05D0  00AC               	movwf	i2c_master_read@ok
  7125  05D1                     l2769:	
  7126                           
  7127                           ;i2c_driver_stusb4500.c: 98: if (ok == 0) ok = i2c_master_send_byte(reg);
  7128  05D1  082C               	movf	i2c_master_read@ok,w
  7129  05D2  042D               	iorwf	i2c_master_read@ok+1,w
  7130  05D3  1D03               	btfss	3,2
  7131  05D4  2DD6               	goto	u1971
  7132  05D5  2DD7               	goto	u1970
  7133  05D6                     u1971:	
  7134  05D6  2DE0               	goto	l2773
  7135  05D7                     u1970:	
  7136  05D7                     l2771:	
  7137  05D7  0825               	movf	i2c_master_read@reg,w
  7138  05D8  318B  23BD  3185   	fcall	_i2c_master_send_byte
  7139  05DB  0140               	movlb	0	; select bank0
  7140  05DC  0822               	movf	?_i2c_master_send_byte+1,w
  7141  05DD  00AD               	movwf	i2c_master_read@ok+1
  7142  05DE  0821               	movf	?_i2c_master_send_byte,w
  7143  05DF  00AC               	movwf	i2c_master_read@ok
  7144  05E0                     l2773:	
  7145                           
  7146                           ;i2c_driver_stusb4500.c: 99: if (ok == 0) i2c_master_repeat_start();
  7147  05E0  082C               	movf	i2c_master_read@ok,w
  7148  05E1  042D               	iorwf	i2c_master_read@ok+1,w
  7149  05E2  1D03               	btfss	3,2
  7150  05E3  2DE5               	goto	u1981
  7151  05E4  2DE6               	goto	u1980
  7152  05E5                     u1981:	
  7153  05E5  2DE9               	goto	l2777
  7154  05E6                     u1980:	
  7155  05E6                     l2775:	
  7156  05E6  318A  22F0  3185   	fcall	_i2c_master_repeat_start
  7157  05E9                     l2777:	
  7158                           
  7159                           ;i2c_driver_stusb4500.c: 100: if (ok == 0) ok = i2c_master_send_byte((device << 1) | 1);
  7160  05E9  0140               	movlb	0	; select bank0
  7161  05EA  082C               	movf	i2c_master_read@ok,w
  7162  05EB  042D               	iorwf	i2c_master_read@ok+1,w
  7163  05EC  1D03               	btfss	3,2
  7164  05ED  2DEF               	goto	u1991
  7165  05EE  2DF0               	goto	u1990
  7166  05EF                     u1991:	
  7167  05EF  2DFA               	goto	l2781
  7168  05F0                     u1990:	
  7169  05F0                     l2779:	
  7170  05F0  1403               	setc
  7171  05F1  0D2A               	rlf	i2c_master_read@device,w
  7172  05F2  318B  23BD  3185   	fcall	_i2c_master_send_byte
  7173  05F5  0140               	movlb	0	; select bank0
  7174  05F6  0822               	movf	?_i2c_master_send_byte+1,w
  7175  05F7  00AD               	movwf	i2c_master_read@ok+1
  7176  05F8  0821               	movf	?_i2c_master_send_byte,w
  7177  05F9  00AC               	movwf	i2c_master_read@ok
  7178  05FA                     l2781:	
  7179                           
  7180                           ;i2c_driver_stusb4500.c: 101: if (ok == 0) {
  7181  05FA  082C               	movf	i2c_master_read@ok,w
  7182  05FB  042D               	iorwf	i2c_master_read@ok+1,w
  7183  05FC  1D03               	btfss	3,2
  7184  05FD  2DFF               	goto	u2001
  7185  05FE  2E00               	goto	u2000
  7186  05FF                     u2001:	
  7187  05FF  2E23               	goto	l2791
  7188  0600                     u2000:	
  7189  0600  2E17               	goto	l2789
  7190  0601                     l2785:	
  7191                           
  7192                           ;i2c_driver_stusb4500.c: 103: *data++ = i2c_master_receive_byte(len ? 0 : 1);
  7193  0601  0827               	movf	i2c_master_read@len,w
  7194  0602  0428               	iorwf	i2c_master_read@len+1,w
  7195  0603  1903               	btfsc	3,2
  7196  0604  2E06               	goto	u2011
  7197  0605  2E08               	goto	u2010
  7198  0606                     u2011:	
  7199  0606  3001               	movlw	1
  7200  0607  2E09               	goto	u2020
  7201  0608                     u2010:	
  7202  0608  3000               	movlw	0
  7203  0609                     u2020:	
  7204  0609  318C  244D  3185   	fcall	_i2c_master_receive_byte
  7205  060C  0140               	movlb	0	; select bank0
  7206  060D  00A9               	movwf	??_i2c_master_read
  7207  060E  082B               	movf	i2c_master_read@data,w
  7208  060F  0086               	movwf	6
  7209  0610  0187               	clrf	7
  7210  0611  0829               	movf	??_i2c_master_read,w
  7211  0612  0081               	movwf	1
  7212  0613                     l2787:	
  7213  0613  3001               	movlw	1
  7214  0614  00A9               	movwf	??_i2c_master_read
  7215  0615  0829               	movf	??_i2c_master_read,w
  7216  0616  07AB               	addwf	i2c_master_read@data,f
  7217  0617                     l2789:	
  7218  0617  3001               	movlw	1
  7219  0618  02A7               	subwf	i2c_master_read@len,f
  7220  0619  3000               	movlw	0
  7221  061A  3BA8               	subwfb	i2c_master_read@len+1,f
  7222  061B  0A27               	incf	i2c_master_read@len,w
  7223  061C  1D03               	skipz
  7224  061D  2E22               	goto	u2031
  7225  061E  0A28               	incf	i2c_master_read@len+1,w
  7226  061F  1D03               	btfss	3,2
  7227  0620  2E22               	goto	u2031
  7228  0621  2E23               	goto	u2030
  7229  0622                     u2031:	
  7230  0622  2E01               	goto	l2785
  7231  0623                     u2030:	
  7232  0623                     l2791:	
  7233                           
  7234                           ;i2c_driver_stusb4500.c: 104: };i2c_driver_stusb4500.c: 105: };i2c_driver_stusb4500.c: 1
      +                          06: i2c_master_stop();
  7235  0623  318A  22FC  3185   	fcall	_i2c_master_stop
  7236  0626                     l2793:	
  7237                           
  7238                           ;i2c_driver_stusb4500.c: 108: return ok;
  7239  0626  0140               	movlb	0	; select bank0
  7240  0627  082D               	movf	i2c_master_read@ok+1,w
  7241  0628  00A6               	movwf	?_i2c_master_read+1
  7242  0629  082C               	movf	i2c_master_read@ok,w
  7243  062A  00A5               	movwf	?_i2c_master_read
  7244  062B                     l664:	
  7245  062B  0008               	return
  7246  062C                     __end_of_i2c_master_read:	
  7247                           
  7248                           	psect	text15
  7249  0AFC                     __ptext15:	
  7250 ;; *************** function _i2c_master_stop *****************
  7251 ;; Defined at:
  7252 ;;		line 22 in file "i2c_driver_stusb4500.c"
  7253 ;; Parameters:    Size  Location     Type
  7254 ;;		None
  7255 ;; Auto vars:     Size  Location     Type
  7256 ;;		None
  7257 ;; Return value:  Size  Location     Type
  7258 ;;                  1    wreg      void 
  7259 ;; Registers used:
  7260 ;;		wreg, status,2, status,0, pclath, cstack
  7261 ;; Tracked objects:
  7262 ;;		On entry : 0/0
  7263 ;;		On exit  : 0/0
  7264 ;;		Unchanged: 0/0
  7265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7266 ;;      Params:         0       0       0       0       0       0       0       0
  7267 ;;      Locals:         0       0       0       0       0       0       0       0
  7268 ;;      Temps:          0       0       0       0       0       0       0       0
  7269 ;;      Totals:         0       0       0       0       0       0       0       0
  7270 ;;Total ram usage:        0 bytes
  7271 ;; Hardware stack levels used:    1
  7272 ;; Hardware stack levels required when called:    3
  7273 ;; This function calls:
  7274 ;;		_i2c_master_wait
  7275 ;; This function is called by:
  7276 ;;		_i2c_master_write
  7277 ;;		_i2c_master_read
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281                           
  7282                           ;psect for function _i2c_master_stop
  7283  0AFC                     _i2c_master_stop:	
  7284  0AFC                     l2717:	
  7285                           ;incstack = 0
  7286                           ; Regs used in _i2c_master_stop: [wreg+status,2+status,0+pclath+cstack]
  7287                           
  7288                           
  7289                           ;i2c_driver_stusb4500.c: 23: SSP1CON2bits.PEN = 1;
  7290  0AFC  0143               	movlb	3	; select bank3
  7291  0AFD  1511               	bsf	17,2	;volatile
  7292  0AFE                     l2719:	
  7293                           
  7294                           ;i2c_driver_stusb4500.c: 24: i2c_master_wait();
  7295  0AFE  318B  235B  318A   	fcall	_i2c_master_wait
  7296  0B01                     l627:	
  7297  0B01  0008               	return
  7298  0B02                     __end_of_i2c_master_stop:	
  7299                           
  7300                           	psect	text16
  7301  0AF6                     __ptext16:	
  7302 ;; *************** function _i2c_master_start *****************
  7303 ;; Defined at:
  7304 ;;		line 12 in file "i2c_driver_stusb4500.c"
  7305 ;; Parameters:    Size  Location     Type
  7306 ;;		None
  7307 ;; Auto vars:     Size  Location     Type
  7308 ;;		None
  7309 ;; Return value:  Size  Location     Type
  7310 ;;                  1    wreg      void 
  7311 ;; Registers used:
  7312 ;;		wreg, status,2, status,0, pclath, cstack
  7313 ;; Tracked objects:
  7314 ;;		On entry : 0/0
  7315 ;;		On exit  : 0/0
  7316 ;;		Unchanged: 0/0
  7317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7318 ;;      Params:         0       0       0       0       0       0       0       0
  7319 ;;      Locals:         0       0       0       0       0       0       0       0
  7320 ;;      Temps:          0       0       0       0       0       0       0       0
  7321 ;;      Totals:         0       0       0       0       0       0       0       0
  7322 ;;Total ram usage:        0 bytes
  7323 ;; Hardware stack levels used:    1
  7324 ;; Hardware stack levels required when called:    3
  7325 ;; This function calls:
  7326 ;;		_i2c_master_wait
  7327 ;; This function is called by:
  7328 ;;		_i2c_master_write
  7329 ;;		_i2c_master_read
  7330 ;; This function uses a non-reentrant model
  7331 ;;
  7332                           
  7333                           
  7334                           ;psect for function _i2c_master_start
  7335  0AF6                     _i2c_master_start:	
  7336  0AF6                     l2709:	
  7337                           ;incstack = 0
  7338                           ; Regs used in _i2c_master_start: [wreg+status,2+status,0+pclath+cstack]
  7339                           
  7340                           
  7341                           ;i2c_driver_stusb4500.c: 13: SSP1CON2bits.SEN = 1;
  7342  0AF6  0143               	movlb	3	; select bank3
  7343  0AF7  1411               	bsf	17,0	;volatile
  7344  0AF8                     l2711:	
  7345                           
  7346                           ;i2c_driver_stusb4500.c: 14: i2c_master_wait();
  7347  0AF8  318B  235B  318A   	fcall	_i2c_master_wait
  7348  0AFB                     l621:	
  7349  0AFB  0008               	return
  7350  0AFC                     __end_of_i2c_master_start:	
  7351                           
  7352                           	psect	text17
  7353  0BBD                     __ptext17:	
  7354 ;; *************** function _i2c_master_send_byte *****************
  7355 ;; Defined at:
  7356 ;;		line 27 in file "i2c_driver_stusb4500.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;  data            1    wreg     const unsigned char 
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;  data            1    3[BANK0 ] const unsigned char 
  7361 ;; Return value:  Size  Location     Type
  7362 ;;                  2    0[BANK0 ] int 
  7363 ;; Registers used:
  7364 ;;		wreg, status,2, status,0, pclath, cstack
  7365 ;; Tracked objects:
  7366 ;;		On entry : 0/0
  7367 ;;		On exit  : 0/0
  7368 ;;		Unchanged: 0/0
  7369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7370 ;;      Params:         0       3       0       0       0       0       0       0
  7371 ;;      Locals:         0       1       0       0       0       0       0       0
  7372 ;;      Temps:          0       0       0       0       0       0       0       0
  7373 ;;      Totals:         0       4       0       0       0       0       0       0
  7374 ;;Total ram usage:        4 bytes
  7375 ;; Hardware stack levels used:    1
  7376 ;; Hardware stack levels required when called:    3
  7377 ;; This function calls:
  7378 ;;		_i2c_master_wait
  7379 ;; This function is called by:
  7380 ;;		_i2c_master_write
  7381 ;;		_i2c_master_read
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           
  7386                           ;psect for function _i2c_master_send_byte
  7387  0BBD                     _i2c_master_send_byte:	
  7388                           
  7389                           ;incstack = 0
  7390                           ; Regs used in _i2c_master_send_byte: [wreg+status,2+status,0+pclath+cstack]
  7391                           ;i2c_master_send_byte@data stored from wreg
  7392  0BBD  0140               	movlb	0	; select bank0
  7393  0BBE  00A4               	movwf	i2c_master_send_byte@data
  7394  0BBF                     l2721:	
  7395                           
  7396                           ;i2c_driver_stusb4500.c: 28: SSP1BUF = data;
  7397  0BBF  0824               	movf	i2c_master_send_byte@data,w
  7398  0BC0  0143               	movlb	3	; select bank3
  7399  0BC1  008C               	movwf	12	;volatile
  7400  0BC2                     l2723:	
  7401                           
  7402                           ;i2c_driver_stusb4500.c: 29: i2c_master_wait();
  7403  0BC2  318B  235B  318B   	fcall	_i2c_master_wait
  7404  0BC5                     l2725:	
  7405                           
  7406                           ;i2c_driver_stusb4500.c: 31: return SSP1CON2bits.ACKSTAT ? -1 : 0;
  7407  0BC5  0143               	movlb	3	; select bank3
  7408  0BC6  1B11               	btfsc	17,6	;volatile
  7409  0BC7  2BC9               	goto	u1951
  7410  0BC8  2BCA               	goto	u1950
  7411  0BC9                     u1951:	
  7412  0BC9  2BCE               	goto	l2729
  7413  0BCA                     u1950:	
  7414  0BCA                     l2727:	
  7415  0BCA  0140               	movlb	0	; select bank0
  7416  0BCB  01A1               	clrf	?_i2c_master_send_byte
  7417  0BCC  01A2               	clrf	?_i2c_master_send_byte+1
  7418  0BCD  2BD3               	goto	l634
  7419  0BCE                     l2729:	
  7420  0BCE  30FF               	movlw	255
  7421  0BCF  0140               	movlb	0	; select bank0
  7422  0BD0  00A1               	movwf	?_i2c_master_send_byte
  7423  0BD1  30FF               	movlw	255
  7424  0BD2  00A2               	movwf	?_i2c_master_send_byte+1
  7425  0BD3                     l634:	
  7426  0BD3  0008               	return
  7427  0BD4                     __end_of_i2c_master_send_byte:	
  7428                           
  7429                           	psect	text18
  7430  0AF0                     __ptext18:	
  7431 ;; *************** function _i2c_master_repeat_start *****************
  7432 ;; Defined at:
  7433 ;;		line 17 in file "i2c_driver_stusb4500.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;		None
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;		None
  7438 ;; Return value:  Size  Location     Type
  7439 ;;                  1    wreg      void 
  7440 ;; Registers used:
  7441 ;;		wreg, status,2, status,0, pclath, cstack
  7442 ;; Tracked objects:
  7443 ;;		On entry : 0/0
  7444 ;;		On exit  : 0/0
  7445 ;;		Unchanged: 0/0
  7446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7447 ;;      Params:         0       0       0       0       0       0       0       0
  7448 ;;      Locals:         0       0       0       0       0       0       0       0
  7449 ;;      Temps:          0       0       0       0       0       0       0       0
  7450 ;;      Totals:         0       0       0       0       0       0       0       0
  7451 ;;Total ram usage:        0 bytes
  7452 ;; Hardware stack levels used:    1
  7453 ;; Hardware stack levels required when called:    3
  7454 ;; This function calls:
  7455 ;;		_i2c_master_wait
  7456 ;; This function is called by:
  7457 ;;		_i2c_master_read
  7458 ;; This function uses a non-reentrant model
  7459 ;;
  7460                           
  7461                           
  7462                           ;psect for function _i2c_master_repeat_start
  7463  0AF0                     _i2c_master_repeat_start:	
  7464  0AF0                     l2713:	
  7465                           ;incstack = 0
  7466                           ; Regs used in _i2c_master_repeat_start: [wreg+status,2+status,0+pclath+cstack]
  7467                           
  7468                           
  7469                           ;i2c_driver_stusb4500.c: 18: SSP1CON2bits.RSEN = 1;
  7470  0AF0  0143               	movlb	3	; select bank3
  7471  0AF1  1491               	bsf	17,1	;volatile
  7472  0AF2                     l2715:	
  7473                           
  7474                           ;i2c_driver_stusb4500.c: 19: i2c_master_wait();
  7475  0AF2  318B  235B  318A   	fcall	_i2c_master_wait
  7476  0AF5                     l624:	
  7477  0AF5  0008               	return
  7478  0AF6                     __end_of_i2c_master_repeat_start:	
  7479                           
  7480                           	psect	text19
  7481  0C4D                     __ptext19:	
  7482 ;; *************** function _i2c_master_receive_byte *****************
  7483 ;; Defined at:
  7484 ;;		line 34 in file "i2c_driver_stusb4500.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;  ack             1    wreg     const unsigned char 
  7487 ;; Auto vars:     Size  Location     Type
  7488 ;;  ack             1    1[BANK0 ] const unsigned char 
  7489 ;;  data            1    2[BANK0 ] unsigned char 
  7490 ;; Return value:  Size  Location     Type
  7491 ;;                  1    wreg      unsigned char 
  7492 ;; Registers used:
  7493 ;;		wreg, status,2, status,0, pclath, cstack
  7494 ;; Tracked objects:
  7495 ;;		On entry : 0/0
  7496 ;;		On exit  : 0/0
  7497 ;;		Unchanged: 0/0
  7498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7499 ;;      Params:         0       0       0       0       0       0       0       0
  7500 ;;      Locals:         0       2       0       0       0       0       0       0
  7501 ;;      Temps:          0       1       0       0       0       0       0       0
  7502 ;;      Totals:         0       3       0       0       0       0       0       0
  7503 ;;Total ram usage:        3 bytes
  7504 ;; Hardware stack levels used:    1
  7505 ;; Hardware stack levels required when called:    3
  7506 ;; This function calls:
  7507 ;;		_i2c_master_wait
  7508 ;; This function is called by:
  7509 ;;		_i2c_master_read
  7510 ;; This function uses a non-reentrant model
  7511 ;;
  7512                           
  7513                           
  7514                           ;psect for function _i2c_master_receive_byte
  7515  0C4D                     _i2c_master_receive_byte:	
  7516                           
  7517                           ;incstack = 0
  7518                           ; Regs used in _i2c_master_receive_byte: [wreg+status,2+status,0+pclath+cstack]
  7519                           ;i2c_master_receive_byte@ack stored from wreg
  7520  0C4D  0140               	movlb	0	; select bank0
  7521  0C4E  00A2               	movwf	i2c_master_receive_byte@ack
  7522  0C4F                     l2733:	
  7523                           
  7524                           ;i2c_driver_stusb4500.c: 35: SSP1CON2bits.RCEN = 1;
  7525  0C4F  0143               	movlb	3	; select bank3
  7526  0C50  1591               	bsf	17,3	;volatile
  7527  0C51                     l2735:	
  7528                           
  7529                           ;i2c_driver_stusb4500.c: 36: i2c_master_wait();
  7530  0C51  318B  235B  318C   	fcall	_i2c_master_wait
  7531  0C54                     l2737:	
  7532                           
  7533                           ;i2c_driver_stusb4500.c: 37: uint8_t data = SSP1BUF;
  7534  0C54  0143               	movlb	3	; select bank3
  7535  0C55  080C               	movf	12,w	;volatile
  7536  0C56  0140               	movlb	0	; select bank0
  7537  0C57  00A1               	movwf	??_i2c_master_receive_byte
  7538  0C58  0821               	movf	??_i2c_master_receive_byte,w
  7539  0C59  00A3               	movwf	i2c_master_receive_byte@data
  7540  0C5A                     l2739:	
  7541                           
  7542                           ;i2c_driver_stusb4500.c: 38: i2c_master_wait();
  7543  0C5A  318B  235B  318C   	fcall	_i2c_master_wait
  7544  0C5D                     l2741:	
  7545                           
  7546                           ;i2c_driver_stusb4500.c: 39: SSP1CON2bits.ACKDT = ack;
  7547  0C5D  0140               	movlb	0	; select bank0
  7548  0C5E  0C22               	rrf	i2c_master_receive_byte@ack,w
  7549  0C5F  0143               	movlb	3	; select bank3
  7550  0C60  1C03               	skipc
  7551  0C61  1291               	bcf	17,5	;volatile
  7552  0C62  1803               	skipnc
  7553  0C63  1691               	bsf	17,5	;volatile
  7554  0C64                     l2743:	
  7555                           
  7556                           ;i2c_driver_stusb4500.c: 40: SSP1CON2bits.ACKEN = 1;
  7557  0C64  1611               	bsf	17,4	;volatile
  7558  0C65                     l2745:	
  7559                           
  7560                           ;i2c_driver_stusb4500.c: 41: i2c_master_wait();
  7561  0C65  318B  235B  318C   	fcall	_i2c_master_wait
  7562  0C68                     l2747:	
  7563                           
  7564                           ;i2c_driver_stusb4500.c: 43: return data;
  7565  0C68  0140               	movlb	0	; select bank0
  7566  0C69  0823               	movf	i2c_master_receive_byte@data,w
  7567  0C6A                     l637:	
  7568  0C6A  0008               	return
  7569  0C6B                     __end_of_i2c_master_receive_byte:	
  7570                           
  7571                           	psect	text20
  7572  0B5B                     __ptext20:	
  7573 ;; *************** function _i2c_master_wait *****************
  7574 ;; Defined at:
  7575 ;;		line 7 in file "i2c_driver_stusb4500.c"
  7576 ;; Parameters:    Size  Location     Type
  7577 ;;		None
  7578 ;; Auto vars:     Size  Location     Type
  7579 ;;		None
  7580 ;; Return value:  Size  Location     Type
  7581 ;;                  1    wreg      void 
  7582 ;; Registers used:
  7583 ;;		wreg, status,2
  7584 ;; Tracked objects:
  7585 ;;		On entry : 0/0
  7586 ;;		On exit  : 0/0
  7587 ;;		Unchanged: 0/0
  7588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7589 ;;      Params:         0       0       0       0       0       0       0       0
  7590 ;;      Locals:         0       0       0       0       0       0       0       0
  7591 ;;      Temps:          0       0       0       0       0       0       0       0
  7592 ;;      Totals:         0       0       0       0       0       0       0       0
  7593 ;;Total ram usage:        0 bytes
  7594 ;; Hardware stack levels used:    1
  7595 ;; Hardware stack levels required when called:    2
  7596 ;; This function calls:
  7597 ;;		Nothing
  7598 ;; This function is called by:
  7599 ;;		_i2c_master_start
  7600 ;;		_i2c_master_repeat_start
  7601 ;;		_i2c_master_stop
  7602 ;;		_i2c_master_send_byte
  7603 ;;		_i2c_master_receive_byte
  7604 ;;		_i2c_master_write
  7605 ;;		_i2c_master_read
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           
  7610                           ;psect for function _i2c_master_wait
  7611  0B5B                     _i2c_master_wait:	
  7612  0B5B                     l2705:	
  7613                           ;incstack = 0
  7614                           ; Regs used in _i2c_master_wait: [wreg+status,2]
  7615                           
  7616  0B5B                     l615:	
  7617                           ;i2c_driver_stusb4500.c: 9: ;
  7618                           
  7619  0B5B  0143               	movlb	3	; select bank3
  7620  0B5C  190F               	btfsc	15,2	;volatile
  7621  0B5D  2B5F               	goto	u1931
  7622  0B5E  2B60               	goto	u1930
  7623  0B5F                     u1931:	
  7624  0B5F  2B5B               	goto	l615
  7625  0B60                     u1930:	
  7626  0B60                     l2707:	
  7627  0B60  0811               	movf	17,w	;volatile
  7628  0B61  391F               	andlw	31
  7629  0B62  1D03               	btfss	3,2
  7630  0B63  2B65               	goto	u1941
  7631  0B64  2B66               	goto	u1940
  7632  0B65                     u1941:	
  7633  0B65  2B5B               	goto	l615
  7634  0B66                     u1940:	
  7635  0B66                     l618:	
  7636  0B66  0008               	return
  7637  0B67                     __end_of_i2c_master_wait:	
  7638                           
  7639                           	psect	text21
  7640  0D46                     __ptext21:	
  7641 ;; *************** function _led_modes *****************
  7642 ;; Defined at:
  7643 ;;		line 156 in file "LED_INTERFACE.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;		None
  7646 ;; Auto vars:     Size  Location     Type
  7647 ;;		None
  7648 ;; Return value:  Size  Location     Type
  7649 ;;                  1    wreg      void 
  7650 ;; Registers used:
  7651 ;;		wreg, status,2, status,0, pclath, cstack
  7652 ;; Tracked objects:
  7653 ;;		On entry : 0/0
  7654 ;;		On exit  : 0/0
  7655 ;;		Unchanged: 0/0
  7656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7657 ;;      Params:         0       0       0       0       0       0       0       0
  7658 ;;      Locals:         0       0       0       0       0       0       0       0
  7659 ;;      Temps:          0       0       0       0       0       0       0       0
  7660 ;;      Totals:         0       0       0       0       0       0       0       0
  7661 ;;Total ram usage:        0 bytes
  7662 ;; Hardware stack levels used:    1
  7663 ;; Hardware stack levels required when called:    5
  7664 ;; This function calls:
  7665 ;;		_RGB_fade
  7666 ;;		_battery_fade
  7667 ;;		_flash_led
  7668 ;; This function is called by:
  7669 ;;		_main
  7670 ;; This function uses a non-reentrant model
  7671 ;;
  7672                           
  7673                           
  7674                           ;psect for function _led_modes
  7675  0D46                     _led_modes:	
  7676  0D46                     l3517:	
  7677                           ;incstack = 0
  7678                           ; Regs used in _led_modes: [wreg+status,2+status,0+pclath+cstack]
  7679                           
  7680                           
  7681                           ;LED_INTERFACE.c: 158: if(mode == 0) {
  7682  0D46  0140               	movlb	0	; select bank0
  7683  0D47  086F               	movf	_mode,w
  7684  0D48  1D03               	btfss	3,2
  7685  0D49  2D4B               	goto	u3051
  7686  0D4A  2D4C               	goto	u3050
  7687  0D4B                     u3051:	
  7688  0D4B  2D51               	goto	l3521
  7689  0D4C                     u3050:	
  7690  0D4C                     l3519:	
  7691                           
  7692                           ;LED_INTERFACE.c: 159: PWM3DCH = 0;
  7693  0D4C  0146               	movlb	6	; select bank6
  7694  0D4D  0195               	clrf	21	;volatile
  7695                           
  7696                           ;LED_INTERFACE.c: 160: PWM4DCH = 0;
  7697  0D4E  0199               	clrf	25	;volatile
  7698                           
  7699                           ;LED_INTERFACE.c: 161: PWM5DCH = 0;
  7700  0D4F  019D               	clrf	29	;volatile
  7701                           
  7702                           ;LED_INTERFACE.c: 162: }
  7703  0D50  2D6F               	goto	l501
  7704  0D51                     l3521:	
  7705                           
  7706                           ;LED_INTERFACE.c: 163: else if(mode == 1) {
  7707  0D51  036F               	decf	_mode,w
  7708  0D52  1D03               	btfss	3,2
  7709  0D53  2D55               	goto	u3061
  7710  0D54  2D56               	goto	u3060
  7711  0D55                     u3061:	
  7712  0D55  2D5A               	goto	l3525
  7713  0D56                     u3060:	
  7714  0D56                     l3523:	
  7715                           
  7716                           ;LED_INTERFACE.c: 164: RGB_fade();
  7717  0D56  3186  262C  318D   	fcall	_RGB_fade
  7718                           
  7719                           ;LED_INTERFACE.c: 165: }
  7720  0D59  2D6F               	goto	l501
  7721  0D5A                     l3525:	
  7722                           
  7723                           ;LED_INTERFACE.c: 166: else if(mode == 2) {
  7724  0D5A  3002               	movlw	2
  7725  0D5B  066F               	xorwf	_mode,w
  7726  0D5C  1D03               	btfss	3,2
  7727  0D5D  2D5F               	goto	u3071
  7728  0D5E  2D60               	goto	u3070
  7729  0D5F                     u3071:	
  7730  0D5F  2D64               	goto	l3529
  7731  0D60                     u3070:	
  7732  0D60                     l3527:	
  7733                           
  7734                           ;LED_INTERFACE.c: 167: battery_fade();
  7735  0D60  3186  26A5  318D   	fcall	_battery_fade
  7736                           
  7737                           ;LED_INTERFACE.c: 168: }
  7738  0D63  2D6F               	goto	l501
  7739  0D64                     l3529:	
  7740                           
  7741                           ;LED_INTERFACE.c: 169: else if(mode == 3) {
  7742  0D64  3003               	movlw	3
  7743  0D65  066F               	xorwf	_mode,w
  7744  0D66  1D03               	btfss	3,2
  7745  0D67  2D69               	goto	u3081
  7746  0D68  2D6A               	goto	u3080
  7747  0D69                     u3081:	
  7748  0D69  2D6E               	goto	l3533
  7749  0D6A                     u3080:	
  7750  0D6A                     l3531:	
  7751                           
  7752                           ;LED_INTERFACE.c: 170: flash_led();
  7753  0D6A  318E  26F7  318D   	fcall	_flash_led
  7754                           
  7755                           ;LED_INTERFACE.c: 171: }
  7756  0D6D  2D6F               	goto	l501
  7757  0D6E                     l3533:	
  7758                           
  7759                           ;LED_INTERFACE.c: 172: else {;LED_INTERFACE.c: 173: mode = 0;
  7760  0D6E  01EF               	clrf	_mode
  7761  0D6F                     l501:	
  7762  0D6F  0008               	return
  7763  0D70                     __end_of_led_modes:	
  7764                           
  7765                           	psect	text22
  7766  0EF7                     __ptext22:	
  7767 ;; *************** function _flash_led *****************
  7768 ;; Defined at:
  7769 ;;		line 137 in file "LED_INTERFACE.c"
  7770 ;; Parameters:    Size  Location     Type
  7771 ;;		None
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;		None
  7774 ;; Return value:  Size  Location     Type
  7775 ;;                  1    wreg      void 
  7776 ;; Registers used:
  7777 ;;		wreg, status,2, status,0, pclath, cstack
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7783 ;;      Params:         0       0       0       0       0       0       0       0
  7784 ;;      Locals:         0       0       0       0       0       0       0       0
  7785 ;;      Temps:          0       1       0       0       0       0       0       0
  7786 ;;      Totals:         0       1       0       0       0       0       0       0
  7787 ;;Total ram usage:        1 bytes
  7788 ;; Hardware stack levels used:    1
  7789 ;; Hardware stack levels required when called:    3
  7790 ;; This function calls:
  7791 ;;		_get_time
  7792 ;;		_timer_diff
  7793 ;; This function is called by:
  7794 ;;		_led_modes
  7795 ;; This function uses a non-reentrant model
  7796 ;;
  7797                           
  7798                           
  7799                           ;psect for function _flash_led
  7800  0EF7                     _flash_led:	
  7801  0EF7                     l3171:	
  7802                           ;incstack = 0
  7803                           ; Regs used in _flash_led: [wreg+status,2+status,0+pclath+cstack]
  7804                           
  7805                           
  7806                           ;LED_INTERFACE.c: 138: if(timer_diff(flash_time) >= 50) {
  7807  0EF7  0142               	movlb	2	; select bank2
  7808  0EF8  0823               	movf	(_flash_time+3)^(0+256),w
  7809  0EF9  0140               	movlb	0	; select bank0
  7810  0EFA  00A4               	movwf	timer_diff@t+3
  7811  0EFB  0142               	movlb	2	; select bank2
  7812  0EFC  0822               	movf	(_flash_time+2)^(0+256),w
  7813  0EFD  0140               	movlb	0	; select bank0
  7814  0EFE  00A3               	movwf	timer_diff@t+2
  7815  0EFF  0142               	movlb	2	; select bank2
  7816  0F00  0821               	movf	(_flash_time+1)^(0+256),w
  7817  0F01  0140               	movlb	0	; select bank0
  7818  0F02  00A2               	movwf	timer_diff@t+1
  7819  0F03  0142               	movlb	2	; select bank2
  7820  0F04  0820               	movf	_flash_time^(0+256),w
  7821  0F05  0140               	movlb	0	; select bank0
  7822  0F06  00A1               	movwf	timer_diff@t
  7823  0F07  318B  2390  318E   	fcall	_timer_diff
  7824  0F0A  0140               	movlb	0	; select bank0
  7825  0F0B  0824               	movf	?_timer_diff+3,w
  7826  0F0C  1D03               	btfss	3,2
  7827  0F0D  2F1A               	goto	u2670
  7828  0F0E  0823               	movf	?_timer_diff+2,w
  7829  0F0F  1D03               	btfss	3,2
  7830  0F10  2F1A               	goto	u2670
  7831  0F11  0822               	movf	?_timer_diff+1,w
  7832  0F12  1D03               	btfss	3,2
  7833  0F13  2F1A               	goto	u2670
  7834  0F14  3032               	movlw	50
  7835  0F15  0221               	subwf	?_timer_diff,w
  7836  0F16  1C03               	btfss	3,0
  7837  0F17  2F19               	goto	u2671
  7838  0F18  2F1A               	goto	u2670
  7839  0F19                     u2671:	
  7840  0F19  2F37               	goto	l3177
  7841  0F1A                     u2670:	
  7842  0F1A                     l3173:	
  7843                           
  7844                           ;LED_INTERFACE.c: 139: flash_state = !flash_state;
  7845  0F1A  0860               	movf	_flash_state,w
  7846  0F1B  1903               	btfsc	3,2
  7847  0F1C  2F1E               	goto	u2681
  7848  0F1D  2F20               	goto	u2680
  7849  0F1E                     u2681:	
  7850  0F1E  3001               	movlw	1
  7851  0F1F  2F21               	goto	u2690
  7852  0F20                     u2680:	
  7853  0F20  3000               	movlw	0
  7854  0F21                     u2690:	
  7855  0F21  00A9               	movwf	??_flash_led
  7856  0F22  0829               	movf	??_flash_led,w
  7857  0F23  00E0               	movwf	_flash_state
  7858  0F24                     l3175:	
  7859                           
  7860                           ;LED_INTERFACE.c: 140: flash_time = get_time();
  7861  0F24  318B  2339  318E   	fcall	_get_time
  7862  0F27  0140               	movlb	0	; select bank0
  7863  0F28  0824               	movf	?_get_time+3,w
  7864  0F29  0142               	movlb	2	; select bank2
  7865  0F2A  00A3               	movwf	(_flash_time+3)^(0+256)
  7866  0F2B  0140               	movlb	0	; select bank0
  7867  0F2C  0823               	movf	?_get_time+2,w
  7868  0F2D  0142               	movlb	2	; select bank2
  7869  0F2E  00A2               	movwf	(_flash_time+2)^(0+256)
  7870  0F2F  0140               	movlb	0	; select bank0
  7871  0F30  0822               	movf	?_get_time+1,w
  7872  0F31  0142               	movlb	2	; select bank2
  7873  0F32  00A1               	movwf	(_flash_time+1)^(0+256)
  7874  0F33  0140               	movlb	0	; select bank0
  7875  0F34  0821               	movf	?_get_time,w
  7876  0F35  0142               	movlb	2	; select bank2
  7877  0F36  00A0               	movwf	_flash_time^(0+256)
  7878  0F37                     l3177:	
  7879                           
  7880                           ;LED_INTERFACE.c: 141: };LED_INTERFACE.c: 142: if(flash_state) {
  7881  0F37  0140               	movlb	0	; select bank0
  7882  0F38  0860               	movf	_flash_state,w
  7883  0F39  1903               	btfsc	3,2
  7884  0F3A  2F3C               	goto	u2701
  7885  0F3B  2F3D               	goto	u2700
  7886  0F3C                     u2701:	
  7887  0F3C  2F43               	goto	l3183
  7888  0F3D                     u2700:	
  7889  0F3D                     l3179:	
  7890                           
  7891                           ;LED_INTERFACE.c: 143: PWM3DCH = 0;
  7892  0F3D  0146               	movlb	6	; select bank6
  7893  0F3E  0195               	clrf	21	;volatile
  7894                           
  7895                           ;LED_INTERFACE.c: 144: PWM4DCH = 0;
  7896  0F3F  0199               	clrf	25	;volatile
  7897  0F40                     l3181:	
  7898                           
  7899                           ;LED_INTERFACE.c: 145: PWM5DCH = 255;
  7900  0F40  30FF               	movlw	255
  7901  0F41  009D               	movwf	29	;volatile
  7902                           
  7903                           ;LED_INTERFACE.c: 146: }
  7904  0F42  2F47               	goto	l488
  7905  0F43                     l3183:	
  7906                           
  7907                           ;LED_INTERFACE.c: 147: else {;LED_INTERFACE.c: 148: PWM3DCH = 0;
  7908  0F43  0146               	movlb	6	; select bank6
  7909  0F44  0195               	clrf	21	;volatile
  7910                           
  7911                           ;LED_INTERFACE.c: 149: PWM4DCH = 0;
  7912  0F45  0199               	clrf	25	;volatile
  7913                           
  7914                           ;LED_INTERFACE.c: 150: PWM5DCH = 0;
  7915  0F46  019D               	clrf	29	;volatile
  7916  0F47                     l488:	
  7917  0F47  0008               	return
  7918  0F48                     __end_of_flash_led:	
  7919                           
  7920                           	psect	text23
  7921  06A5                     __ptext23:	
  7922 ;; *************** function _battery_fade *****************
  7923 ;; Defined at:
  7924 ;;		line 53 in file "LED_INTERFACE.c"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;		None
  7927 ;; Auto vars:     Size  Location     Type
  7928 ;;  v               1   31[BANK0 ] unsigned char 
  7929 ;;  battery_max     1    0        unsigned char 
  7930 ;;  battery_min     1    0        unsigned char 
  7931 ;; Return value:  Size  Location     Type
  7932 ;;                  1    wreg      void 
  7933 ;; Registers used:
  7934 ;;		wreg, status,2, status,0, pclath, cstack
  7935 ;; Tracked objects:
  7936 ;;		On entry : 0/0
  7937 ;;		On exit  : 0/0
  7938 ;;		Unchanged: 0/0
  7939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7940 ;;      Params:         0       0       0       0       0       0       0       0
  7941 ;;      Locals:         0       3       0       0       0       0       0       0
  7942 ;;      Temps:          0       6       0       0       0       0       0       0
  7943 ;;      Totals:         0       9       0       0       0       0       0       0
  7944 ;;Total ram usage:        9 bytes
  7945 ;; Hardware stack levels used:    1
  7946 ;; Hardware stack levels required when called:    4
  7947 ;; This function calls:
  7948 ;;		_Map
  7949 ;; This function is called by:
  7950 ;;		_led_modes
  7951 ;; This function uses a non-reentrant model
  7952 ;;
  7953                           
  7954                           
  7955                           ;psect for function _battery_fade
  7956  06A5                     _battery_fade:	
  7957  06A5                     l3137:	
  7958                           ;incstack = 0
  7959                           ; Regs used in _battery_fade: [wreg+status,2+status,0+pclath+cstack]
  7960                           
  7961                           
  7962                           ;LED_INTERFACE.c: 56: char v = BATTERY_VOLTAGE;
  7963  06A5  0140               	movlb	0	; select bank0
  7964  06A6  086D               	movf	_BATTERY_VOLTAGE,w
  7965  06A7  00B8               	movwf	??_battery_fade
  7966  06A8  0838               	movf	??_battery_fade,w
  7967  06A9  00C0               	movwf	battery_fade@v
  7968  06AA                     l3139:	
  7969  06AA                     l3141:	
  7970  06AA                     l3143:	
  7971                           
  7972                           ;LED_INTERFACE.c: 62: if (v > battery_max) {
  7973  06AA  3063               	movlw	99
  7974  06AB  0240               	subwf	battery_fade@v,w
  7975  06AC  1C03               	skipc
  7976  06AD  2EAF               	goto	u2641
  7977  06AE  2EB0               	goto	u2640
  7978  06AF                     u2641:	
  7979  06AF  2EB4               	goto	l3149
  7980  06B0                     u2640:	
  7981  06B0                     l3145:	
  7982                           
  7983                           ;LED_INTERFACE.c: 63: v = battery_max;
  7984  06B0  3062               	movlw	98
  7985  06B1  00B8               	movwf	??_battery_fade
  7986  06B2  0838               	movf	??_battery_fade,w
  7987  06B3  00C0               	movwf	battery_fade@v
  7988  06B4                     l3149:	
  7989                           
  7990                           ;LED_INTERFACE.c: 67: };LED_INTERFACE.c: 69: v = Map(v, battery_min, battery_max, 0, 127
      +                          );
  7991  06B4  0840               	movf	battery_fade@v,w
  7992  06B5  00B8               	movwf	??_battery_fade
  7993  06B6  01B9               	clrf	??_battery_fade+1
  7994  06B7  0838               	movf	??_battery_fade,w
  7995  06B8  00B0               	movwf	Map@x
  7996  06B9  0839               	movf	??_battery_fade+1,w
  7997  06BA  00B1               	movwf	Map@x+1
  7998  06BB  01B2               	clrf	Map@inMin
  7999  06BC  3062               	movlw	98
  8000  06BD  00BA               	movwf	??_battery_fade+2
  8001  06BE  083A               	movf	??_battery_fade+2,w
  8002  06BF  00B3               	movwf	Map@inMax
  8003  06C0  01B4               	clrf	Map@outMin
  8004  06C1  307F               	movlw	127
  8005  06C2  00BB               	movwf	??_battery_fade+3
  8006  06C3  083B               	movf	??_battery_fade+3,w
  8007  06C4  00B5               	movwf	Map@outMax
  8008  06C5  318C  24CF  3186   	fcall	_Map
  8009  06C8  0140               	movlb	0	; select bank0
  8010  06C9  00BC               	movwf	??_battery_fade+4
  8011  06CA  083C               	movf	??_battery_fade+4,w
  8012  06CB  00C0               	movwf	battery_fade@v
  8013  06CC                     l3151:	
  8014                           
  8015                           ;LED_INTERFACE.c: 72: if (v <= 63) {
  8016  06CC  3040               	movlw	64
  8017  06CD  0240               	subwf	battery_fade@v,w
  8018  06CE  1803               	skipnc
  8019  06CF  2ED1               	goto	u2651
  8020  06D0  2ED2               	goto	u2650
  8021  06D1                     u2651:	
  8022  06D1  2EF3               	goto	l3161
  8023  06D2                     u2650:	
  8024  06D2                     l3153:	
  8025                           
  8026                           ;LED_INTERFACE.c: 73: v = Map(v, 0, 63, 0, 255);
  8027  06D2  0840               	movf	battery_fade@v,w
  8028  06D3  00B8               	movwf	??_battery_fade
  8029  06D4  01B9               	clrf	??_battery_fade+1
  8030  06D5  0838               	movf	??_battery_fade,w
  8031  06D6  00B0               	movwf	Map@x
  8032  06D7  0839               	movf	??_battery_fade+1,w
  8033  06D8  00B1               	movwf	Map@x+1
  8034  06D9  01B2               	clrf	Map@inMin
  8035  06DA  303F               	movlw	63
  8036  06DB  00BA               	movwf	??_battery_fade+2
  8037  06DC  083A               	movf	??_battery_fade+2,w
  8038  06DD  00B3               	movwf	Map@inMax
  8039  06DE  01B4               	clrf	Map@outMin
  8040  06DF  30FF               	movlw	255
  8041  06E0  00BB               	movwf	??_battery_fade+3
  8042  06E1  083B               	movf	??_battery_fade+3,w
  8043  06E2  00B5               	movwf	Map@outMax
  8044  06E3  318C  24CF  3186   	fcall	_Map
  8045  06E6  0140               	movlb	0	; select bank0
  8046  06E7  00BC               	movwf	??_battery_fade+4
  8047  06E8  083C               	movf	??_battery_fade+4,w
  8048  06E9  00C0               	movwf	battery_fade@v
  8049  06EA                     l3155:	
  8050                           
  8051                           ;LED_INTERFACE.c: 74: PWM3DCH = 0;
  8052  06EA  0146               	movlb	6	; select bank6
  8053  06EB  0195               	clrf	21	;volatile
  8054  06EC                     l3157:	
  8055                           
  8056                           ;LED_INTERFACE.c: 75: PWM4DCH = v;
  8057  06EC  0140               	movlb	0	; select bank0
  8058  06ED  0840               	movf	battery_fade@v,w
  8059  06EE  0146               	movlb	6	; select bank6
  8060  06EF  0099               	movwf	25	;volatile
  8061  06F0                     l3159:	
  8062                           
  8063                           ;LED_INTERFACE.c: 76: PWM5DCH = 255;
  8064  06F0  30FF               	movlw	255
  8065  06F1  009D               	movwf	29	;volatile
  8066                           
  8067                           ;LED_INTERFACE.c: 77: }
  8068  06F2  2F1C               	goto	l459
  8069  06F3                     l3161:	
  8070                           
  8071                           ;LED_INTERFACE.c: 79: else if (v >= 63) {
  8072  06F3  303F               	movlw	63
  8073  06F4  0240               	subwf	battery_fade@v,w
  8074  06F5  1C03               	skipc
  8075  06F6  2EF8               	goto	u2661
  8076  06F7  2EF9               	goto	u2660
  8077  06F8                     u2661:	
  8078  06F8  2F1C               	goto	l459
  8079  06F9                     u2660:	
  8080  06F9                     l3163:	
  8081                           
  8082                           ;LED_INTERFACE.c: 80: v = Map(v, 63, 127, 0, 255);
  8083  06F9  0840               	movf	battery_fade@v,w
  8084  06FA  00B8               	movwf	??_battery_fade
  8085  06FB  01B9               	clrf	??_battery_fade+1
  8086  06FC  0838               	movf	??_battery_fade,w
  8087  06FD  00B0               	movwf	Map@x
  8088  06FE  0839               	movf	??_battery_fade+1,w
  8089  06FF  00B1               	movwf	Map@x+1
  8090  0700  303F               	movlw	63
  8091  0701  00BA               	movwf	??_battery_fade+2
  8092  0702  083A               	movf	??_battery_fade+2,w
  8093  0703  00B2               	movwf	Map@inMin
  8094  0704  307F               	movlw	127
  8095  0705  00BB               	movwf	??_battery_fade+3
  8096  0706  083B               	movf	??_battery_fade+3,w
  8097  0707  00B3               	movwf	Map@inMax
  8098  0708  01B4               	clrf	Map@outMin
  8099  0709  30FF               	movlw	255
  8100  070A  00BC               	movwf	??_battery_fade+4
  8101  070B  083C               	movf	??_battery_fade+4,w
  8102  070C  00B5               	movwf	Map@outMax
  8103  070D  318C  24CF  3186   	fcall	_Map
  8104  0710  0140               	movlb	0	; select bank0
  8105  0711  00BD               	movwf	??_battery_fade+5
  8106  0712  083D               	movf	??_battery_fade+5,w
  8107  0713  00C0               	movwf	battery_fade@v
  8108  0714                     l3165:	
  8109                           
  8110                           ;LED_INTERFACE.c: 81: PWM3DCH = 0;
  8111  0714  0146               	movlb	6	; select bank6
  8112  0715  0195               	clrf	21	;volatile
  8113  0716                     l3167:	
  8114                           
  8115                           ;LED_INTERFACE.c: 82: PWM4DCH = 255;
  8116  0716  30FF               	movlw	255
  8117  0717  0099               	movwf	25	;volatile
  8118  0718                     l3169:	
  8119                           
  8120                           ;LED_INTERFACE.c: 83: PWM5DCH = 255 - v;
  8121  0718  0140               	movlb	0	; select bank0
  8122  0719  0940               	comf	battery_fade@v,w
  8123  071A  0146               	movlb	6	; select bank6
  8124  071B  009D               	movwf	29	;volatile
  8125  071C                     l459:	
  8126  071C  0008               	return
  8127  071D                     __end_of_battery_fade:	
  8128                           
  8129                           	psect	text24
  8130  0CCF                     __ptext24:	
  8131 ;; *************** function _Map *****************
  8132 ;; Defined at:
  8133 ;;		line 48 in file "LED_INTERFACE.c"
  8134 ;; Parameters:    Size  Location     Type
  8135 ;;  x               2   15[BANK0 ] int 
  8136 ;;  inMin           1   17[BANK0 ] unsigned char 
  8137 ;;  inMax           1   18[BANK0 ] unsigned char 
  8138 ;;  outMin          1   19[BANK0 ] unsigned char 
  8139 ;;  outMax          1   20[BANK0 ] unsigned char 
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;		None
  8142 ;; Return value:  Size  Location     Type
  8143 ;;                  1    wreg      unsigned char 
  8144 ;; Registers used:
  8145 ;;		wreg, status,2, status,0, pclath, cstack
  8146 ;; Tracked objects:
  8147 ;;		On entry : 0/0
  8148 ;;		On exit  : 0/0
  8149 ;;		Unchanged: 0/0
  8150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8151 ;;      Params:         0       6       0       0       0       0       0       0
  8152 ;;      Locals:         0       0       0       0       0       0       0       0
  8153 ;;      Temps:          0       2       0       0       0       0       0       0
  8154 ;;      Totals:         0       8       0       0       0       0       0       0
  8155 ;;Total ram usage:        8 bytes
  8156 ;; Hardware stack levels used:    1
  8157 ;; Hardware stack levels required when called:    3
  8158 ;; This function calls:
  8159 ;;		___awdiv
  8160 ;;		___wmul
  8161 ;; This function is called by:
  8162 ;;		_battery_fade
  8163 ;; This function uses a non-reentrant model
  8164 ;;
  8165                           
  8166                           
  8167                           ;psect for function _Map
  8168  0CCF                     _Map:	
  8169  0CCF                     l3011:	
  8170                           ;incstack = 0
  8171                           ; Regs used in _Map: [wreg+status,2+status,0+pclath+cstack]
  8172                           
  8173                           
  8174                           ;LED_INTERFACE.c: 50: return (((x - inMin) * (outMax - outMin)) / (inMax - inMin)) +outM
      +                          in;
  8175  0CCF  0140               	movlb	0	; select bank0
  8176  0CD0  0832               	movf	Map@inMin,w
  8177  0CD1  0233               	subwf	Map@inMax,w
  8178  0CD2  00A7               	movwf	___awdiv@divisor
  8179  0CD3  01A8               	clrf	___awdiv@divisor+1
  8180  0CD4  1C03               	skipc
  8181  0CD5  03A8               	decf	___awdiv@divisor+1,f
  8182  0CD6  0832               	movf	Map@inMin,w
  8183  0CD7  00B6               	movwf	??_Map
  8184  0CD8  01B7               	clrf	??_Map+1
  8185  0CD9  0836               	movf	??_Map,w
  8186  0CDA  0230               	subwf	Map@x,w
  8187  0CDB  00A1               	movwf	___wmul@multiplier
  8188  0CDC  0837               	movf	??_Map+1,w
  8189  0CDD  3B31               	subwfb	Map@x+1,w
  8190  0CDE  00A2               	movwf	___wmul@multiplier+1
  8191  0CDF  0834               	movf	Map@outMin,w
  8192  0CE0  0235               	subwf	Map@outMax,w
  8193  0CE1  00A3               	movwf	___wmul@multiplicand
  8194  0CE2  01A4               	clrf	___wmul@multiplicand+1
  8195  0CE3  1C03               	skipc
  8196  0CE4  03A4               	decf	___wmul@multiplicand+1,f
  8197  0CE5  318C  246B  318C   	fcall	___wmul
  8198  0CE8  0140               	movlb	0	; select bank0
  8199  0CE9  0822               	movf	?___wmul+1,w
  8200  0CEA  00AA               	movwf	___awdiv@dividend+1
  8201  0CEB  0821               	movf	?___wmul,w
  8202  0CEC  00A9               	movwf	___awdiv@dividend
  8203  0CED  3187  2786  318C   	fcall	___awdiv
  8204  0CF0  0140               	movlb	0	; select bank0
  8205  0CF1  0827               	movf	?___awdiv,w
  8206  0CF2  0734               	addwf	Map@outMin,w
  8207  0CF3                     l451:	
  8208  0CF3  0008               	return
  8209  0CF4                     __end_of_Map:	
  8210                           
  8211                           	psect	text25
  8212  0C6B                     __ptext25:	
  8213 ;; *************** function ___wmul *****************
  8214 ;; Defined at:
  8215 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  8216 ;; Parameters:    Size  Location     Type
  8217 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8218 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8219 ;; Auto vars:     Size  Location     Type
  8220 ;;  product         2    4[BANK0 ] unsigned int 
  8221 ;; Return value:  Size  Location     Type
  8222 ;;                  2    0[BANK0 ] unsigned int 
  8223 ;; Registers used:
  8224 ;;		wreg, status,2, status,0
  8225 ;; Tracked objects:
  8226 ;;		On entry : 0/0
  8227 ;;		On exit  : 0/0
  8228 ;;		Unchanged: 0/0
  8229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8230 ;;      Params:         0       4       0       0       0       0       0       0
  8231 ;;      Locals:         0       2       0       0       0       0       0       0
  8232 ;;      Temps:          0       0       0       0       0       0       0       0
  8233 ;;      Totals:         0       6       0       0       0       0       0       0
  8234 ;;Total ram usage:        6 bytes
  8235 ;; Hardware stack levels used:    1
  8236 ;; Hardware stack levels required when called:    2
  8237 ;; This function calls:
  8238 ;;		Nothing
  8239 ;; This function is called by:
  8240 ;;		_Map
  8241 ;;		_negotiate_optimal_pdo
  8242 ;; This function uses a non-reentrant model
  8243 ;;
  8244                           
  8245                           
  8246                           ;psect for function ___wmul
  8247  0C6B                     ___wmul:	
  8248  0C6B                     l2913:	
  8249                           ;incstack = 0
  8250                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8251                           
  8252  0C6B  0140               	movlb	0	; select bank0
  8253  0C6C  01A5               	clrf	___wmul@product
  8254  0C6D  01A6               	clrf	___wmul@product+1
  8255  0C6E                     l2915:	
  8256  0C6E  1C21               	btfss	___wmul@multiplier,0
  8257  0C6F  2C71               	goto	u2171
  8258  0C70  2C72               	goto	u2170
  8259  0C71                     u2171:	
  8260  0C71  2C76               	goto	l859
  8261  0C72                     u2170:	
  8262  0C72                     l2917:	
  8263  0C72  0823               	movf	___wmul@multiplicand,w
  8264  0C73  07A5               	addwf	___wmul@product,f
  8265  0C74  0824               	movf	___wmul@multiplicand+1,w
  8266  0C75  3DA6               	addwfc	___wmul@product+1,f
  8267  0C76                     l859:	
  8268  0C76  3001               	movlw	1
  8269  0C77                     u2185:	
  8270  0C77  35A3               	lslf	___wmul@multiplicand,f
  8271  0C78  0DA4               	rlf	___wmul@multiplicand+1,f
  8272  0C79  0B89               	decfsz	9,f
  8273  0C7A  2C77               	goto	u2185
  8274  0C7B                     l2919:	
  8275  0C7B  3001               	movlw	1
  8276  0C7C                     u2195:	
  8277  0C7C  36A2               	lsrf	___wmul@multiplier+1,f
  8278  0C7D  0CA1               	rrf	___wmul@multiplier,f
  8279  0C7E  0B89               	decfsz	9,f
  8280  0C7F  2C7C               	goto	u2195
  8281  0C80                     l2921:	
  8282  0C80  0821               	movf	___wmul@multiplier,w
  8283  0C81  0422               	iorwf	___wmul@multiplier+1,w
  8284  0C82  1D03               	btfss	3,2
  8285  0C83  2C85               	goto	u2201
  8286  0C84  2C86               	goto	u2200
  8287  0C85                     u2201:	
  8288  0C85  2C6E               	goto	l2915
  8289  0C86                     u2200:	
  8290  0C86                     l2923:	
  8291  0C86  0826               	movf	___wmul@product+1,w
  8292  0C87  00A2               	movwf	?___wmul+1
  8293  0C88  0825               	movf	___wmul@product,w
  8294  0C89  00A1               	movwf	?___wmul
  8295  0C8A                     l861:	
  8296  0C8A  0008               	return
  8297  0C8B                     __end_of___wmul:	
  8298                           
  8299                           	psect	text26
  8300  0786                     __ptext26:	
  8301 ;; *************** function ___awdiv *****************
  8302 ;; Defined at:
  8303 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  8304 ;; Parameters:    Size  Location     Type
  8305 ;;  divisor         2    6[BANK0 ] int 
  8306 ;;  dividend        2    8[BANK0 ] int 
  8307 ;; Auto vars:     Size  Location     Type
  8308 ;;  quotient        2   13[BANK0 ] int 
  8309 ;;  sign            1   12[BANK0 ] unsigned char 
  8310 ;;  counter         1   11[BANK0 ] unsigned char 
  8311 ;; Return value:  Size  Location     Type
  8312 ;;                  2    6[BANK0 ] int 
  8313 ;; Registers used:
  8314 ;;		wreg, status,2, status,0
  8315 ;; Tracked objects:
  8316 ;;		On entry : 0/0
  8317 ;;		On exit  : 0/0
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8320 ;;      Params:         0       4       0       0       0       0       0       0
  8321 ;;      Locals:         0       4       0       0       0       0       0       0
  8322 ;;      Temps:          0       1       0       0       0       0       0       0
  8323 ;;      Totals:         0       9       0       0       0       0       0       0
  8324 ;;Total ram usage:        9 bytes
  8325 ;; Hardware stack levels used:    1
  8326 ;; Hardware stack levels required when called:    2
  8327 ;; This function calls:
  8328 ;;		Nothing
  8329 ;; This function is called by:
  8330 ;;		_Map
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           
  8334                           
  8335                           ;psect for function ___awdiv
  8336  0786                     ___awdiv:	
  8337  0786                     l2927:	
  8338                           ;incstack = 0
  8339                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8340                           
  8341  0786  0140               	movlb	0	; select bank0
  8342  0787  01AD               	clrf	___awdiv@sign
  8343  0788                     l2929:	
  8344  0788  1FA8               	btfss	___awdiv@divisor+1,7
  8345  0789  2F8B               	goto	u2211
  8346  078A  2F8C               	goto	u2210
  8347  078B                     u2211:	
  8348  078B  2F93               	goto	l2935
  8349  078C                     u2210:	
  8350  078C                     l2931:	
  8351  078C  09A7               	comf	___awdiv@divisor,f
  8352  078D  09A8               	comf	___awdiv@divisor+1,f
  8353  078E  0AA7               	incf	___awdiv@divisor,f
  8354  078F  1903               	skipnz
  8355  0790  0AA8               	incf	___awdiv@divisor+1,f
  8356  0791                     l2933:	
  8357  0791  01AD               	clrf	___awdiv@sign
  8358  0792  0AAD               	incf	___awdiv@sign,f
  8359  0793                     l2935:	
  8360  0793  1FAA               	btfss	___awdiv@dividend+1,7
  8361  0794  2F96               	goto	u2221
  8362  0795  2F97               	goto	u2220
  8363  0796                     u2221:	
  8364  0796  2FA0               	goto	l2941
  8365  0797                     u2220:	
  8366  0797                     l2937:	
  8367  0797  09A9               	comf	___awdiv@dividend,f
  8368  0798  09AA               	comf	___awdiv@dividend+1,f
  8369  0799  0AA9               	incf	___awdiv@dividend,f
  8370  079A  1903               	skipnz
  8371  079B  0AAA               	incf	___awdiv@dividend+1,f
  8372  079C                     l2939:	
  8373  079C  3001               	movlw	1
  8374  079D  00AB               	movwf	??___awdiv
  8375  079E  082B               	movf	??___awdiv,w
  8376  079F  06AD               	xorwf	___awdiv@sign,f
  8377  07A0                     l2941:	
  8378  07A0  01AE               	clrf	___awdiv@quotient
  8379  07A1  01AF               	clrf	___awdiv@quotient+1
  8380  07A2                     l2943:	
  8381  07A2  0827               	movf	___awdiv@divisor,w
  8382  07A3  0428               	iorwf	___awdiv@divisor+1,w
  8383  07A4  1903               	btfsc	3,2
  8384  07A5  2FA7               	goto	u2231
  8385  07A6  2FA8               	goto	u2230
  8386  07A7                     u2231:	
  8387  07A7  2FD7               	goto	l2963
  8388  07A8                     u2230:	
  8389  07A8                     l2945:	
  8390  07A8  01AC               	clrf	___awdiv@counter
  8391  07A9  0AAC               	incf	___awdiv@counter,f
  8392  07AA  2FB4               	goto	l2951
  8393  07AB                     l2947:	
  8394  07AB  3001               	movlw	1
  8395  07AC                     u2245:	
  8396  07AC  35A7               	lslf	___awdiv@divisor,f
  8397  07AD  0DA8               	rlf	___awdiv@divisor+1,f
  8398  07AE  0B89               	decfsz	9,f
  8399  07AF  2FAC               	goto	u2245
  8400  07B0                     l2949:	
  8401  07B0  3001               	movlw	1
  8402  07B1  00AB               	movwf	??___awdiv
  8403  07B2  082B               	movf	??___awdiv,w
  8404  07B3  07AC               	addwf	___awdiv@counter,f
  8405  07B4                     l2951:	
  8406  07B4  1FA8               	btfss	___awdiv@divisor+1,7
  8407  07B5  2FB7               	goto	u2251
  8408  07B6  2FB8               	goto	u2250
  8409  07B7                     u2251:	
  8410  07B7  2FAB               	goto	l2947
  8411  07B8                     u2250:	
  8412  07B8                     l2953:	
  8413  07B8  3001               	movlw	1
  8414  07B9                     u2265:	
  8415  07B9  35AE               	lslf	___awdiv@quotient,f
  8416  07BA  0DAF               	rlf	___awdiv@quotient+1,f
  8417  07BB  0B89               	decfsz	9,f
  8418  07BC  2FB9               	goto	u2265
  8419  07BD  0828               	movf	___awdiv@divisor+1,w
  8420  07BE  022A               	subwf	___awdiv@dividend+1,w
  8421  07BF  1D03               	skipz
  8422  07C0  2FC3               	goto	u2275
  8423  07C1  0827               	movf	___awdiv@divisor,w
  8424  07C2  0229               	subwf	___awdiv@dividend,w
  8425  07C3                     u2275:	
  8426  07C3  1C03               	skipc
  8427  07C4  2FC6               	goto	u2271
  8428  07C5  2FC7               	goto	u2270
  8429  07C6                     u2271:	
  8430  07C6  2FCC               	goto	l2959
  8431  07C7                     u2270:	
  8432  07C7                     l2955:	
  8433  07C7  0827               	movf	___awdiv@divisor,w
  8434  07C8  02A9               	subwf	___awdiv@dividend,f
  8435  07C9  0828               	movf	___awdiv@divisor+1,w
  8436  07CA  3BAA               	subwfb	___awdiv@dividend+1,f
  8437  07CB                     l2957:	
  8438  07CB  142E               	bsf	___awdiv@quotient,0
  8439  07CC                     l2959:	
  8440  07CC  3001               	movlw	1
  8441  07CD                     u2285:	
  8442  07CD  36A8               	lsrf	___awdiv@divisor+1,f
  8443  07CE  0CA7               	rrf	___awdiv@divisor,f
  8444  07CF  0B89               	decfsz	9,f
  8445  07D0  2FCD               	goto	u2285
  8446  07D1                     l2961:	
  8447  07D1  3001               	movlw	1
  8448  07D2  02AC               	subwf	___awdiv@counter,f
  8449  07D3  1D03               	btfss	3,2
  8450  07D4  2FD6               	goto	u2291
  8451  07D5  2FD7               	goto	u2290
  8452  07D6                     u2291:	
  8453  07D6  2FB8               	goto	l2953
  8454  07D7                     u2290:	
  8455  07D7                     l2963:	
  8456  07D7  082D               	movf	___awdiv@sign,w
  8457  07D8  1903               	btfsc	3,2
  8458  07D9  2FDB               	goto	u2301
  8459  07DA  2FDC               	goto	u2300
  8460  07DB                     u2301:	
  8461  07DB  2FE1               	goto	l2967
  8462  07DC                     u2300:	
  8463  07DC                     l2965:	
  8464  07DC  09AE               	comf	___awdiv@quotient,f
  8465  07DD  09AF               	comf	___awdiv@quotient+1,f
  8466  07DE  0AAE               	incf	___awdiv@quotient,f
  8467  07DF  1903               	skipnz
  8468  07E0  0AAF               	incf	___awdiv@quotient+1,f
  8469  07E1                     l2967:	
  8470  07E1  082F               	movf	___awdiv@quotient+1,w
  8471  07E2  00A8               	movwf	?___awdiv+1
  8472  07E3  082E               	movf	___awdiv@quotient,w
  8473  07E4  00A7               	movwf	?___awdiv
  8474  07E5                     l1012:	
  8475  07E5  0008               	return
  8476  07E6                     __end_of___awdiv:	
  8477                           
  8478                           	psect	text27
  8479  062C                     __ptext27:	
  8480 ;; *************** function _RGB_fade *****************
  8481 ;; Defined at:
  8482 ;;		line 18 in file "LED_INTERFACE.c"
  8483 ;; Parameters:    Size  Location     Type
  8484 ;;		None
  8485 ;; Auto vars:     Size  Location     Type
  8486 ;;		None
  8487 ;; Return value:  Size  Location     Type
  8488 ;;                  1    wreg      void 
  8489 ;; Registers used:
  8490 ;;		wreg, status,2, status,0, pclath, cstack
  8491 ;; Tracked objects:
  8492 ;;		On entry : 0/0
  8493 ;;		On exit  : 0/0
  8494 ;;		Unchanged: 0/0
  8495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8496 ;;      Params:         0       0       0       0       0       0       0       0
  8497 ;;      Locals:         0       0       0       0       0       0       0       0
  8498 ;;      Temps:          0       1       0       0       0       0       0       0
  8499 ;;      Totals:         0       1       0       0       0       0       0       0
  8500 ;;Total ram usage:        1 bytes
  8501 ;; Hardware stack levels used:    1
  8502 ;; Hardware stack levels required when called:    3
  8503 ;; This function calls:
  8504 ;;		_get_time
  8505 ;;		_timer_diff
  8506 ;; This function is called by:
  8507 ;;		_led_modes
  8508 ;; This function uses a non-reentrant model
  8509 ;;
  8510                           
  8511                           
  8512                           ;psect for function _RGB_fade
  8513  062C                     _RGB_fade:	
  8514  062C                     l3103:	
  8515                           ;incstack = 0
  8516                           ; Regs used in _RGB_fade: [wreg+status,2+status,0+pclath+cstack]
  8517                           
  8518                           
  8519                           ;LED_INTERFACE.c: 20: if(timer_diff(rgb_delay) >= 2) {
  8520  062C  0142               	movlb	2	; select bank2
  8521  062D  082B               	movf	(_rgb_delay+3)^(0+256),w
  8522  062E  0140               	movlb	0	; select bank0
  8523  062F  00A4               	movwf	timer_diff@t+3
  8524  0630  0142               	movlb	2	; select bank2
  8525  0631  082A               	movf	(_rgb_delay+2)^(0+256),w
  8526  0632  0140               	movlb	0	; select bank0
  8527  0633  00A3               	movwf	timer_diff@t+2
  8528  0634  0142               	movlb	2	; select bank2
  8529  0635  0829               	movf	(_rgb_delay+1)^(0+256),w
  8530  0636  0140               	movlb	0	; select bank0
  8531  0637  00A2               	movwf	timer_diff@t+1
  8532  0638  0142               	movlb	2	; select bank2
  8533  0639  0828               	movf	_rgb_delay^(0+256),w
  8534  063A  0140               	movlb	0	; select bank0
  8535  063B  00A1               	movwf	timer_diff@t
  8536  063C  318B  2390  3186   	fcall	_timer_diff
  8537  063F  0140               	movlb	0	; select bank0
  8538  0640  0824               	movf	?_timer_diff+3,w
  8539  0641  1D03               	btfss	3,2
  8540  0642  2E4F               	goto	u2580
  8541  0643  0823               	movf	?_timer_diff+2,w
  8542  0644  1D03               	btfss	3,2
  8543  0645  2E4F               	goto	u2580
  8544  0646  0822               	movf	?_timer_diff+1,w
  8545  0647  1D03               	btfss	3,2
  8546  0648  2E4F               	goto	u2580
  8547  0649  3002               	movlw	2
  8548  064A  0221               	subwf	?_timer_diff,w
  8549  064B  1C03               	btfss	3,0
  8550  064C  2E4E               	goto	u2581
  8551  064D  2E4F               	goto	u2580
  8552  064E                     u2581:	
  8553  064E  2EA4               	goto	l448
  8554  064F                     u2580:	
  8555  064F                     l3105:	
  8556                           
  8557                           ;LED_INTERFACE.c: 21: rgb_delay = get_time();
  8558  064F  318B  2339  3186   	fcall	_get_time
  8559  0652  0140               	movlb	0	; select bank0
  8560  0653  0824               	movf	?_get_time+3,w
  8561  0654  0142               	movlb	2	; select bank2
  8562  0655  00AB               	movwf	(_rgb_delay+3)^(0+256)
  8563  0656  0140               	movlb	0	; select bank0
  8564  0657  0823               	movf	?_get_time+2,w
  8565  0658  0142               	movlb	2	; select bank2
  8566  0659  00AA               	movwf	(_rgb_delay+2)^(0+256)
  8567  065A  0140               	movlb	0	; select bank0
  8568  065B  0822               	movf	?_get_time+1,w
  8569  065C  0142               	movlb	2	; select bank2
  8570  065D  00A9               	movwf	(_rgb_delay+1)^(0+256)
  8571  065E  0140               	movlb	0	; select bank0
  8572  065F  0821               	movf	?_get_time,w
  8573  0660  0142               	movlb	2	; select bank2
  8574  0661  00A8               	movwf	_rgb_delay^(0+256)
  8575  0662                     l3107:	
  8576                           
  8577                           ;LED_INTERFACE.c: 22: if (i >= 255) {
  8578  0662  0140               	movlb	0	; select bank0
  8579  0663  0A64               	incf	_i,w
  8580  0664  1D03               	btfss	3,2
  8581  0665  2E67               	goto	u2591
  8582  0666  2E68               	goto	u2590
  8583  0667                     u2591:	
  8584  0667  2E74               	goto	l3117
  8585  0668                     u2590:	
  8586  0668                     l3109:	
  8587                           
  8588                           ;LED_INTERFACE.c: 23: i = 0;
  8589  0668  01E4               	clrf	_i
  8590  0669                     l3111:	
  8591                           
  8592                           ;LED_INTERFACE.c: 24: color++;
  8593  0669  3001               	movlw	1
  8594  066A  00A9               	movwf	??_RGB_fade
  8595  066B  0829               	movf	??_RGB_fade,w
  8596  066C  07E2               	addwf	_color,f
  8597  066D                     l3113:	
  8598                           
  8599                           ;LED_INTERFACE.c: 25: if (color > 2) {
  8600  066D  3003               	movlw	3
  8601  066E  0262               	subwf	_color,w
  8602  066F  1C03               	skipc
  8603  0670  2E72               	goto	u2601
  8604  0671  2E73               	goto	u2600
  8605  0672                     u2601:	
  8606  0672  2E74               	goto	l3117
  8607  0673                     u2600:	
  8608  0673                     l3115:	
  8609                           
  8610                           ;LED_INTERFACE.c: 26: color = 0;
  8611  0673  01E2               	clrf	_color
  8612  0674                     l3117:	
  8613                           
  8614                           ;LED_INTERFACE.c: 27: };LED_INTERFACE.c: 28: };LED_INTERFACE.c: 29: i++;
  8615  0674  3001               	movlw	1
  8616  0675  00A9               	movwf	??_RGB_fade
  8617  0676  0829               	movf	??_RGB_fade,w
  8618  0677  07E4               	addwf	_i,f
  8619  0678                     l3119:	
  8620                           
  8621                           ;LED_INTERFACE.c: 30: if (color == 0) {
  8622  0678  0862               	movf	_color,w
  8623  0679  1D03               	btfss	3,2
  8624  067A  2E7C               	goto	u2611
  8625  067B  2E7D               	goto	u2610
  8626  067C                     u2611:	
  8627  067C  2E85               	goto	l3125
  8628  067D                     u2610:	
  8629  067D                     l3121:	
  8630                           
  8631                           ;LED_INTERFACE.c: 31: PWM3DCH = 255 - i;
  8632  067D  0964               	comf	_i,w
  8633  067E  0146               	movlb	6	; select bank6
  8634  067F  0095               	movwf	21	;volatile
  8635  0680                     l3123:	
  8636                           
  8637                           ;LED_INTERFACE.c: 32: PWM4DCH = i;
  8638  0680  0140               	movlb	0	; select bank0
  8639  0681  0864               	movf	_i,w
  8640  0682  0146               	movlb	6	; select bank6
  8641  0683  0099               	movwf	25	;volatile
  8642                           
  8643                           ;LED_INTERFACE.c: 33: PWM5DCH = 0;
  8644  0684  019D               	clrf	29	;volatile
  8645  0685                     l3125:	
  8646                           
  8647                           ;LED_INTERFACE.c: 34: };LED_INTERFACE.c: 35: if (color == 1) {
  8648  0685  0140               	movlb	0	; select bank0
  8649  0686  0362               	decf	_color,w
  8650  0687  1D03               	btfss	3,2
  8651  0688  2E8A               	goto	u2621
  8652  0689  2E8B               	goto	u2620
  8653  068A                     u2621:	
  8654  068A  2E95               	goto	l3131
  8655  068B                     u2620:	
  8656  068B                     l3127:	
  8657                           
  8658                           ;LED_INTERFACE.c: 36: PWM3DCH = 0;
  8659  068B  0146               	movlb	6	; select bank6
  8660  068C  0195               	clrf	21	;volatile
  8661  068D                     l3129:	
  8662                           
  8663                           ;LED_INTERFACE.c: 37: PWM4DCH = 255 - i;
  8664  068D  0140               	movlb	0	; select bank0
  8665  068E  0964               	comf	_i,w
  8666  068F  0146               	movlb	6	; select bank6
  8667  0690  0099               	movwf	25	;volatile
  8668                           
  8669                           ;LED_INTERFACE.c: 38: PWM5DCH = i;
  8670  0691  0140               	movlb	0	; select bank0
  8671  0692  0864               	movf	_i,w
  8672  0693  0146               	movlb	6	; select bank6
  8673  0694  009D               	movwf	29	;volatile
  8674  0695                     l3131:	
  8675                           
  8676                           ;LED_INTERFACE.c: 39: };LED_INTERFACE.c: 40: if (color == 2) {
  8677  0695  3002               	movlw	2
  8678  0696  0140               	movlb	0	; select bank0
  8679  0697  0662               	xorwf	_color,w
  8680  0698  1D03               	btfss	3,2
  8681  0699  2E9B               	goto	u2631
  8682  069A  2E9C               	goto	u2630
  8683  069B                     u2631:	
  8684  069B  2EA4               	goto	l448
  8685  069C                     u2630:	
  8686  069C                     l3133:	
  8687                           
  8688                           ;LED_INTERFACE.c: 41: PWM3DCH = i;
  8689  069C  0864               	movf	_i,w
  8690  069D  0146               	movlb	6	; select bank6
  8691  069E  0095               	movwf	21	;volatile
  8692  069F                     l3135:	
  8693                           
  8694                           ;LED_INTERFACE.c: 42: PWM4DCH = 0;
  8695  069F  0199               	clrf	25	;volatile
  8696                           
  8697                           ;LED_INTERFACE.c: 43: PWM5DCH = 255 - i;
  8698  06A0  0140               	movlb	0	; select bank0
  8699  06A1  0964               	comf	_i,w
  8700  06A2  0146               	movlb	6	; select bank6
  8701  06A3  009D               	movwf	29	;volatile
  8702  06A4                     l448:	
  8703  06A4  0008               	return
  8704  06A5                     __end_of_RGB_fade:	
  8705                           
  8706                           	psect	text28
  8707  04B2                     __ptext28:	
  8708 ;; *************** function _chrg_led *****************
  8709 ;; Defined at:
  8710 ;;		line 90 in file "LED_INTERFACE.c"
  8711 ;; Parameters:    Size  Location     Type
  8712 ;;		None
  8713 ;; Auto vars:     Size  Location     Type
  8714 ;;		None
  8715 ;; Return value:  Size  Location     Type
  8716 ;;                  1    wreg      void 
  8717 ;; Registers used:
  8718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8719 ;; Tracked objects:
  8720 ;;		On entry : 0/0
  8721 ;;		On exit  : 0/0
  8722 ;;		Unchanged: 0/0
  8723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8724 ;;      Params:         0       0       0       0       0       0       0       0
  8725 ;;      Locals:         0       0       0       0       0       0       0       0
  8726 ;;      Temps:          0       1       0       0       0       0       0       0
  8727 ;;      Totals:         0       1       0       0       0       0       0       0
  8728 ;;Total ram usage:        1 bytes
  8729 ;; Hardware stack levels used:    1
  8730 ;; Hardware stack levels required when called:    3
  8731 ;; This function calls:
  8732 ;;		_get_time
  8733 ;;		_timer_diff
  8734 ;; This function is called by:
  8735 ;;		_main
  8736 ;; This function uses a non-reentrant model
  8737 ;;
  8738                           
  8739                           
  8740                           ;psect for function _chrg_led
  8741  04B2                     _chrg_led:	
  8742  04B2                     l3535:	
  8743                           ;incstack = 0
  8744                           ; Regs used in _chrg_led: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8745                           
  8746                           
  8747                           ;LED_INTERFACE.c: 92: if(timer_diff(chrg_delay) >= 2) {
  8748  04B2  0142               	movlb	2	; select bank2
  8749  04B3  0827               	movf	(_chrg_delay+3)^(0+256),w
  8750  04B4  0140               	movlb	0	; select bank0
  8751  04B5  00A4               	movwf	timer_diff@t+3
  8752  04B6  0142               	movlb	2	; select bank2
  8753  04B7  0826               	movf	(_chrg_delay+2)^(0+256),w
  8754  04B8  0140               	movlb	0	; select bank0
  8755  04B9  00A3               	movwf	timer_diff@t+2
  8756  04BA  0142               	movlb	2	; select bank2
  8757  04BB  0825               	movf	(_chrg_delay+1)^(0+256),w
  8758  04BC  0140               	movlb	0	; select bank0
  8759  04BD  00A2               	movwf	timer_diff@t+1
  8760  04BE  0142               	movlb	2	; select bank2
  8761  04BF  0824               	movf	_chrg_delay^(0+256),w
  8762  04C0  0140               	movlb	0	; select bank0
  8763  04C1  00A1               	movwf	timer_diff@t
  8764  04C2  318B  2390  3184   	fcall	_timer_diff
  8765  04C5  0140               	movlb	0	; select bank0
  8766  04C6  0824               	movf	?_timer_diff+3,w
  8767  04C7  1D03               	btfss	3,2
  8768  04C8  2CD5               	goto	u3090
  8769  04C9  0823               	movf	?_timer_diff+2,w
  8770  04CA  1D03               	btfss	3,2
  8771  04CB  2CD5               	goto	u3090
  8772  04CC  0822               	movf	?_timer_diff+1,w
  8773  04CD  1D03               	btfss	3,2
  8774  04CE  2CD5               	goto	u3090
  8775  04CF  3002               	movlw	2
  8776  04D0  0221               	subwf	?_timer_diff,w
  8777  04D1  1C03               	btfss	3,0
  8778  04D2  2CD4               	goto	u3091
  8779  04D3  2CD5               	goto	u3090
  8780  04D4                     u3091:	
  8781  04D4  2D33               	goto	l478
  8782  04D5                     u3090:	
  8783  04D5                     l3537:	
  8784                           
  8785                           ;LED_INTERFACE.c: 93: chrg_delay = get_time();
  8786  04D5  318B  2339  3184   	fcall	_get_time
  8787  04D8  0140               	movlb	0	; select bank0
  8788  04D9  0824               	movf	?_get_time+3,w
  8789  04DA  0142               	movlb	2	; select bank2
  8790  04DB  00A7               	movwf	(_chrg_delay+3)^(0+256)
  8791  04DC  0140               	movlb	0	; select bank0
  8792  04DD  0823               	movf	?_get_time+2,w
  8793  04DE  0142               	movlb	2	; select bank2
  8794  04DF  00A6               	movwf	(_chrg_delay+2)^(0+256)
  8795  04E0  0140               	movlb	0	; select bank0
  8796  04E1  0822               	movf	?_get_time+1,w
  8797  04E2  0142               	movlb	2	; select bank2
  8798  04E3  00A5               	movwf	(_chrg_delay+1)^(0+256)
  8799  04E4  0140               	movlb	0	; select bank0
  8800  04E5  0821               	movf	?_get_time,w
  8801  04E6  0142               	movlb	2	; select bank2
  8802  04E7  00A4               	movwf	_chrg_delay^(0+256)
  8803  04E8                     l3539:	
  8804                           
  8805                           ;LED_INTERFACE.c: 94: if(c >= 255) {
  8806  04E8  0140               	movlb	0	; select bank0
  8807  04E9  0A63               	incf	_c,w
  8808  04EA  1D03               	btfss	3,2
  8809  04EB  2CED               	goto	u3101
  8810  04EC  2CEE               	goto	u3100
  8811  04ED                     u3101:	
  8812  04ED  2CEF               	goto	l3543
  8813  04EE                     u3100:	
  8814  04EE                     l3541:	
  8815                           
  8816                           ;LED_INTERFACE.c: 95: dir = 0;
  8817  04EE  01E1               	clrf	_dir
  8818  04EF                     l3543:	
  8819                           
  8820                           ;LED_INTERFACE.c: 96: };LED_INTERFACE.c: 97: if(c <= 1) {
  8821  04EF  3002               	movlw	2
  8822  04F0  0263               	subwf	_c,w
  8823  04F1  1803               	skipnc
  8824  04F2  2CF4               	goto	u3111
  8825  04F3  2CF5               	goto	u3110
  8826  04F4                     u3111:	
  8827  04F4  2CF7               	goto	l3547
  8828  04F5                     u3110:	
  8829  04F5                     l3545:	
  8830                           
  8831                           ;LED_INTERFACE.c: 98: dir = 1;
  8832  04F5  01E1               	clrf	_dir
  8833  04F6  0AE1               	incf	_dir,f
  8834  04F7                     l3547:	
  8835                           
  8836                           ;LED_INTERFACE.c: 99: };LED_INTERFACE.c: 100: if(dir == 1) {
  8837  04F7  0361               	decf	_dir,w
  8838  04F8  1D03               	btfss	3,2
  8839  04F9  2CFB               	goto	u3121
  8840  04FA  2CFC               	goto	u3120
  8841  04FB                     u3121:	
  8842  04FB  2D01               	goto	l3551
  8843  04FC                     u3120:	
  8844  04FC                     l3549:	
  8845                           
  8846                           ;LED_INTERFACE.c: 101: c++;
  8847  04FC  3001               	movlw	1
  8848  04FD  00A9               	movwf	??_chrg_led
  8849  04FE  0829               	movf	??_chrg_led,w
  8850  04FF  07E3               	addwf	_c,f
  8851                           
  8852                           ;LED_INTERFACE.c: 102: }
  8853  0500  2D25               	goto	l3573
  8854  0501                     l3551:	
  8855                           
  8856                           ;LED_INTERFACE.c: 103: else if(dir == 0) {
  8857  0501  0861               	movf	_dir,w
  8858  0502  1D03               	btfss	3,2
  8859  0503  2D05               	goto	u3131
  8860  0504  2D06               	goto	u3130
  8861  0505                     u3131:	
  8862  0505  2D25               	goto	l3573
  8863  0506                     u3130:	
  8864  0506                     l3553:	
  8865                           
  8866                           ;LED_INTERFACE.c: 104: c--;
  8867  0506  3001               	movlw	1
  8868  0507  02E3               	subwf	_c,f
  8869  0508  2D25               	goto	l3573
  8870  0509                     l3555:	
  8871                           
  8872                           ;LED_INTERFACE.c: 110: PWM3DCH = 0;
  8873  0509  0146               	movlb	6	; select bank6
  8874  050A  0195               	clrf	21	;volatile
  8875                           
  8876                           ;LED_INTERFACE.c: 111: PWM4DCH = 0;
  8877  050B  0199               	clrf	25	;volatile
  8878  050C                     l3557:	
  8879                           
  8880                           ;LED_INTERFACE.c: 112: PWM5DCH = c;
  8881  050C  0140               	movlb	0	; select bank0
  8882  050D  0863               	movf	_c,w
  8883  050E  0146               	movlb	6	; select bank6
  8884  050F  009D               	movwf	29	;volatile
  8885                           
  8886                           ;LED_INTERFACE.c: 113: break;
  8887  0510  2D33               	goto	l478
  8888  0511                     l3559:	
  8889                           
  8890                           ;LED_INTERFACE.c: 116: PWM3DCH = 0;
  8891  0511  0146               	movlb	6	; select bank6
  8892  0512  0195               	clrf	21	;volatile
  8893  0513                     l3561:	
  8894                           
  8895                           ;LED_INTERFACE.c: 117: PWM4DCH = c;
  8896  0513  0140               	movlb	0	; select bank0
  8897  0514  0863               	movf	_c,w
  8898  0515  0146               	movlb	6	; select bank6
  8899  0516  0099               	movwf	25	;volatile
  8900  0517  2D0C               	goto	l3557
  8901  0518                     l3565:	
  8902                           
  8903                           ;LED_INTERFACE.c: 122: PWM3DCH = 0;
  8904  0518  0146               	movlb	6	; select bank6
  8905  0519  0195               	clrf	21	;volatile
  8906  051A                     l3567:	
  8907                           
  8908                           ;LED_INTERFACE.c: 123: PWM4DCH = c;
  8909  051A  0140               	movlb	0	; select bank0
  8910  051B  0863               	movf	_c,w
  8911  051C  0146               	movlb	6	; select bank6
  8912  051D  0099               	movwf	25	;volatile
  8913  051E                     l3569:	
  8914                           
  8915                           ;LED_INTERFACE.c: 124: PWM5DCH = 0;
  8916  051E  019D               	clrf	29	;volatile
  8917                           
  8918                           ;LED_INTERFACE.c: 125: break;
  8919  051F  2D33               	goto	l478
  8920  0520                     l3571:	
  8921                           
  8922                           ;LED_INTERFACE.c: 127: PWM3DCH = 0;
  8923  0520  0146               	movlb	6	; select bank6
  8924  0521  0195               	clrf	21	;volatile
  8925                           
  8926                           ;LED_INTERFACE.c: 128: PWM4DCH = 0;
  8927  0522  0199               	clrf	25	;volatile
  8928                           
  8929                           ;LED_INTERFACE.c: 129: PWM5DCH = 0;
  8930  0523  019D               	clrf	29	;volatile
  8931                           
  8932                           ;LED_INTERFACE.c: 130: }
  8933  0524  2D33               	goto	l478
  8934  0525                     l3573:	
  8935  0525  0A6E               	incf	_VBUS_CHRG_STATE,w
  8936  0526  0086               	movwf	6
  8937  0527  0187               	clrf	7
  8938  0528  0801               	movf	1,w
  8939                           
  8940                           ; Switch size 1, requested type "simple"
  8941                           ; Number of cases is 3, Range of values is 1 to 3
  8942                           ; switch strategies available:
  8943                           ; Name         Instructions Cycles
  8944                           ; simple_byte           10     6 (average)
  8945                           ; direct_byte           15     9 (fixed)
  8946                           ; jumptable            263     9 (fixed)
  8947                           ;	Chosen strategy is simple_byte
  8948  0529  3A01               	xorlw	1	; case 1
  8949  052A  1903               	skipnz
  8950  052B  2D09               	goto	l3555
  8951  052C  3A03               	xorlw	3	; case 2
  8952  052D  1903               	skipnz
  8953  052E  2D11               	goto	l3559
  8954  052F  3A01               	xorlw	1	; case 3
  8955  0530  1903               	skipnz
  8956  0531  2D18               	goto	l3565
  8957  0532  2D20               	goto	l3571
  8958  0533                     l478:	
  8959  0533  0008               	return
  8960  0534                     __end_of_chrg_led:	
  8961                           
  8962                           	psect	text29
  8963  0B4F                     __ptext29:	
  8964 ;; *************** function _PWM_power_down *****************
  8965 ;; Defined at:
  8966 ;;		line 59 in file "PWM.c"
  8967 ;; Parameters:    Size  Location     Type
  8968 ;;		None
  8969 ;; Auto vars:     Size  Location     Type
  8970 ;;		None
  8971 ;; Return value:  Size  Location     Type
  8972 ;;                  1    wreg      void 
  8973 ;; Registers used:
  8974 ;;		status,2
  8975 ;; Tracked objects:
  8976 ;;		On entry : 0/0
  8977 ;;		On exit  : 0/0
  8978 ;;		Unchanged: 0/0
  8979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8980 ;;      Params:         0       0       0       0       0       0       0       0
  8981 ;;      Locals:         0       0       0       0       0       0       0       0
  8982 ;;      Temps:          0       0       0       0       0       0       0       0
  8983 ;;      Totals:         0       0       0       0       0       0       0       0
  8984 ;;Total ram usage:        0 bytes
  8985 ;; Hardware stack levels used:    1
  8986 ;; Hardware stack levels required when called:    2
  8987 ;; This function calls:
  8988 ;;		Nothing
  8989 ;; This function is called by:
  8990 ;;		_main
  8991 ;; This function uses a non-reentrant model
  8992 ;;
  8993                           
  8994                           
  8995                           ;psect for function _PWM_power_down
  8996  0B4F                     _PWM_power_down:	
  8997  0B4F                     l3613:	
  8998                           ;incstack = 0
  8999                           ; Regs used in _PWM_power_down: [status,2]
  9000                           
  9001                           
  9002                           ;PWM.c: 61: PWM3DCH = 0;
  9003  0B4F  0146               	movlb	6	; select bank6
  9004  0B50  0195               	clrf	21	;volatile
  9005                           
  9006                           ;PWM.c: 62: PWM4DCH = 0;
  9007  0B51  0199               	clrf	25	;volatile
  9008                           
  9009                           ;PWM.c: 63: PWM5DCH = 0;
  9010  0B52  019D               	clrf	29	;volatile
  9011  0B53                     l3615:	
  9012                           
  9013                           ;PWM.c: 64: PWM3CONbits.EN = 0;
  9014  0B53  1396               	bcf	22,7	;volatile
  9015  0B54                     l3617:	
  9016                           
  9017                           ;PWM.c: 65: PWM4CONbits.EN = 0;
  9018  0B54  139A               	bcf	26,7	;volatile
  9019  0B55                     l3619:	
  9020                           
  9021                           ;PWM.c: 66: PWM5CONbits.EN = 0;
  9022  0B55  139E               	bcf	30,7	;volatile
  9023  0B56                     l3621:	
  9024                           
  9025                           ;PWM.c: 67: RC2 = 0;
  9026  0B56  0140               	movlb	0	; select bank0
  9027  0B57  110E               	bcf	14,2	;volatile
  9028  0B58                     l3623:	
  9029                           
  9030                           ;PWM.c: 68: RC3 = 0;
  9031  0B58  118E               	bcf	14,3	;volatile
  9032  0B59                     l3625:	
  9033                           
  9034                           ;PWM.c: 69: RC4 = 0;
  9035  0B59  120E               	bcf	14,4	;volatile
  9036  0B5A                     l233:	
  9037  0B5A  0008               	return
  9038  0B5B                     __end_of_PWM_power_down:	
  9039                           
  9040                           	psect	text30
  9041  0E69                     __ptext30:	
  9042 ;; *************** function _PWM_INIT *****************
  9043 ;; Defined at:
  9044 ;;		line 11 in file "PWM.c"
  9045 ;; Parameters:    Size  Location     Type
  9046 ;;		None
  9047 ;; Auto vars:     Size  Location     Type
  9048 ;;		None
  9049 ;; Return value:  Size  Location     Type
  9050 ;;                  1    wreg      void 
  9051 ;; Registers used:
  9052 ;;		wreg, status,2, status,0, pclath, cstack
  9053 ;; Tracked objects:
  9054 ;;		On entry : 0/0
  9055 ;;		On exit  : 0/0
  9056 ;;		Unchanged: 0/0
  9057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9058 ;;      Params:         0       0       0       0       0       0       0       0
  9059 ;;      Locals:         0       0       0       0       0       0       0       0
  9060 ;;      Temps:          0       0       0       0       0       0       0       0
  9061 ;;      Totals:         0       0       0       0       0       0       0       0
  9062 ;;Total ram usage:        0 bytes
  9063 ;; Hardware stack levels used:    1
  9064 ;; Hardware stack levels required when called:    3
  9065 ;; This function calls:
  9066 ;;		_PPS_lock
  9067 ;;		_PPS_unlock
  9068 ;; This function is called by:
  9069 ;;		_main
  9070 ;; This function uses a non-reentrant model
  9071 ;;
  9072                           
  9073                           
  9074                           ;psect for function _PWM_INIT
  9075  0E69                     _PWM_INIT:	
  9076  0E69                     l3427:	
  9077                           ;incstack = 0
  9078                           ; Regs used in _PWM_INIT: [wreg+status,2+status,0+pclath+cstack]
  9079                           
  9080                           
  9081                           ;PWM.c: 13: PPS_unlock();
  9082  0E69  318B  230E  318E   	fcall	_PPS_unlock
  9083  0E6C                     l3429:	
  9084                           
  9085                           ;PWM.c: 14: RC2PPS = 0x0B;
  9086  0E6C  300B               	movlw	11
  9087  0E6D  017E               	movlb	62	; select bank62
  9088  0E6E  00A2               	movwf	34	;volatile
  9089  0E6F                     l3431:	
  9090                           
  9091                           ;PWM.c: 15: RC3PPS = 0x0C;
  9092  0E6F  300C               	movlw	12
  9093  0E70  00A3               	movwf	35	;volatile
  9094  0E71                     l3433:	
  9095                           
  9096                           ;PWM.c: 16: RC4PPS = 0x0D;
  9097  0E71  300D               	movlw	13
  9098  0E72  00A4               	movwf	36	;volatile
  9099  0E73                     l3435:	
  9100                           
  9101                           ;PWM.c: 17: PPS_lock();
  9102  0E73  318B  2315  318E   	fcall	_PPS_lock
  9103  0E76                     l3437:	
  9104                           
  9105                           ;PWM.c: 19: PWM3CON = 0;
  9106  0E76  0146               	movlb	6	; select bank6
  9107  0E77  0196               	clrf	22	;volatile
  9108  0E78                     l3439:	
  9109                           
  9110                           ;PWM.c: 20: PR2 = 255;
  9111  0E78  30FF               	movlw	255
  9112  0E79  0145               	movlb	5	; select bank5
  9113  0E7A  008D               	movwf	13	;volatile
  9114                           
  9115                           ;PWM.c: 21: PWM3DCH = 0;
  9116  0E7B  0146               	movlb	6	; select bank6
  9117  0E7C  0195               	clrf	21	;volatile
  9118  0E7D                     l3441:	
  9119                           
  9120                           ;PWM.c: 22: PWM3DCL = 0b00111111;
  9121  0E7D  303F               	movlw	63
  9122  0E7E  0094               	movwf	20	;volatile
  9123  0E7F                     l3443:	
  9124                           
  9125                           ;PWM.c: 23: PWM3CON = 0b10000000;
  9126  0E7F  3080               	movlw	128
  9127  0E80  0096               	movwf	22	;volatile
  9128  0E81                     l3445:	
  9129                           
  9130                           ;PWM.c: 24: TRISCbits.TRISC2 = 0;
  9131  0E81  0140               	movlb	0	; select bank0
  9132  0E82  1114               	bcf	20,2	;volatile
  9133  0E83                     l3447:	
  9134                           
  9135                           ;PWM.c: 25: PWM3CON = 0b11100000;
  9136  0E83  30E0               	movlw	224
  9137  0E84  0146               	movlb	6	; select bank6
  9138  0E85  0096               	movwf	22	;volatile
  9139  0E86                     l3449:	
  9140                           
  9141                           ;PWM.c: 27: PWM4CON = 0;
  9142  0E86  019A               	clrf	26	;volatile
  9143  0E87                     l3451:	
  9144                           
  9145                           ;PWM.c: 28: PWM4DCH = 0;
  9146  0E87  0199               	clrf	25	;volatile
  9147  0E88                     l3453:	
  9148                           
  9149                           ;PWM.c: 29: PWM4DCL = 0b00111111;
  9150  0E88  303F               	movlw	63
  9151  0E89  0098               	movwf	24	;volatile
  9152  0E8A                     l3455:	
  9153                           
  9154                           ;PWM.c: 30: PWM4CON = 0b10000000;
  9155  0E8A  3080               	movlw	128
  9156  0E8B  009A               	movwf	26	;volatile
  9157  0E8C                     l3457:	
  9158                           
  9159                           ;PWM.c: 31: TRISCbits.TRISC3 = 0;
  9160  0E8C  0140               	movlb	0	; select bank0
  9161  0E8D  1194               	bcf	20,3	;volatile
  9162  0E8E                     l3459:	
  9163                           
  9164                           ;PWM.c: 32: PWM4CON = 0b11100000;
  9165  0E8E  30E0               	movlw	224
  9166  0E8F  0146               	movlb	6	; select bank6
  9167  0E90  009A               	movwf	26	;volatile
  9168                           
  9169                           ;PWM.c: 34: PWM5CON = 0;
  9170  0E91  019E               	clrf	30	;volatile
  9171                           
  9172                           ;PWM.c: 35: PWM5DCH = 0;
  9173  0E92  019D               	clrf	29	;volatile
  9174  0E93                     l3461:	
  9175                           
  9176                           ;PWM.c: 36: PWM5DCL = 0b00111111;
  9177  0E93  303F               	movlw	63
  9178  0E94  009C               	movwf	28	;volatile
  9179  0E95                     l3463:	
  9180                           
  9181                           ;PWM.c: 37: PWM5CON = 0b10000000;
  9182  0E95  3080               	movlw	128
  9183  0E96  009E               	movwf	30	;volatile
  9184  0E97                     l3465:	
  9185                           
  9186                           ;PWM.c: 38: TRISCbits.TRISC4 = 0;
  9187  0E97  0140               	movlb	0	; select bank0
  9188  0E98  1214               	bcf	20,4	;volatile
  9189  0E99                     l3467:	
  9190                           
  9191                           ;PWM.c: 39: PWM5CON = 0b11100000;
  9192  0E99  30E0               	movlw	224
  9193  0E9A  0146               	movlb	6	; select bank6
  9194  0E9B  009E               	movwf	30	;volatile
  9195  0E9C                     l3469:	
  9196                           
  9197                           ;PWM.c: 42: T2CLKCON = 0b00000011;
  9198  0E9C  3003               	movlw	3
  9199  0E9D  0145               	movlb	5	; select bank5
  9200  0E9E  0090               	movwf	16	;volatile
  9201  0E9F                     l3471:	
  9202                           
  9203                           ;PWM.c: 43: TMR2ON = 1;
  9204  0E9F  178E               	bsf	14,7	;volatile
  9205  0EA0                     l3473:	
  9206                           
  9207                           ;PWM.c: 44: T2CKPS0 = 0;
  9208  0EA0  120E               	bcf	14,4	;volatile
  9209  0EA1                     l3475:	
  9210                           
  9211                           ;PWM.c: 45: T2CKPS1 = 0;
  9212  0EA1  128E               	bcf	14,5	;volatile
  9213  0EA2                     l3477:	
  9214                           
  9215                           ;PWM.c: 46: T2CKPS2 = 1;
  9216  0EA2  170E               	bsf	14,6	;volatile
  9217  0EA3                     l3479:	
  9218                           
  9219                           ;PWM.c: 48: T2OUTPS0 = 1;
  9220  0EA3  140E               	bsf	14,0	;volatile
  9221  0EA4                     l3481:	
  9222                           
  9223                           ;PWM.c: 49: T2OUTPS1 = 1;
  9224  0EA4  148E               	bsf	14,1	;volatile
  9225  0EA5                     l3483:	
  9226                           
  9227                           ;PWM.c: 50: T2OUTPS2 = 1;
  9228  0EA5  150E               	bsf	14,2	;volatile
  9229  0EA6                     l3485:	
  9230                           
  9231                           ;PWM.c: 51: T2OUTPS3 = 1;
  9232  0EA6  158E               	bsf	14,3	;volatile
  9233                           
  9234                           ;PWM.c: 53: TMR2 = 0;
  9235  0EA7  018C               	clrf	12	;volatile
  9236  0EA8                     l3487:	
  9237                           
  9238                           ;PWM.c: 54: PR2 = 255;
  9239  0EA8  30FF               	movlw	255
  9240  0EA9  008D               	movwf	13	;volatile
  9241  0EAA                     l3489:	
  9242                           
  9243                           ;PWM.c: 55: TMR2IF = 0;
  9244  0EAA  014E               	movlb	14	; select bank14
  9245  0EAB  1090               	bcf	16,1	;volatile
  9246  0EAC                     l230:	
  9247  0EAC  0008               	return
  9248  0EAD                     __end_of_PWM_INIT:	
  9249                           
  9250                           	psect	text31
  9251  0B0E                     __ptext31:	
  9252 ;; *************** function _PPS_unlock *****************
  9253 ;; Defined at:
  9254 ;;		line 11 in file "PPS.c"
  9255 ;; Parameters:    Size  Location     Type
  9256 ;;		None
  9257 ;; Auto vars:     Size  Location     Type
  9258 ;;		None
  9259 ;; Return value:  Size  Location     Type
  9260 ;;                  1    wreg      void 
  9261 ;; Registers used:
  9262 ;;		wreg, status,2
  9263 ;; Tracked objects:
  9264 ;;		On entry : 0/0
  9265 ;;		On exit  : 0/0
  9266 ;;		Unchanged: 0/0
  9267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9268 ;;      Params:         0       0       0       0       0       0       0       0
  9269 ;;      Locals:         0       0       0       0       0       0       0       0
  9270 ;;      Temps:          0       0       0       0       0       0       0       0
  9271 ;;      Totals:         0       0       0       0       0       0       0       0
  9272 ;;Total ram usage:        0 bytes
  9273 ;; Hardware stack levels used:    1
  9274 ;; Hardware stack levels required when called:    2
  9275 ;; This function calls:
  9276 ;;		Nothing
  9277 ;; This function is called by:
  9278 ;;		_main
  9279 ;;		_PWM_INIT
  9280 ;; This function uses a non-reentrant model
  9281 ;;
  9282                           
  9283                           
  9284                           ;psect for function _PPS_unlock
  9285  0B0E                     _PPS_unlock:	
  9286  0B0E                     l3087:	
  9287                           ;incstack = 0
  9288                           ; Regs used in _PPS_unlock: [wreg+status,2]
  9289                           
  9290                           
  9291                           ;PPS.c: 12: PPSLOCK = 0x55;
  9292  0B0E  3055               	movlw	85
  9293  0B0F  017D               	movlb	61	; select bank61
  9294  0B10  008F               	movwf	15	;volsfr
  9295                           
  9296                           ;PPS.c: 13: PPSLOCK = 0xAA;
  9297  0B11  30AA               	movlw	170
  9298  0B12  008F               	movwf	15	;volsfr
  9299  0B13                     l3089:	
  9300                           
  9301                           ;PPS.c: 14: PPSLOCK = 0;
  9302  0B13  018F               	clrf	15	;volsfr
  9303  0B14                     l241:	
  9304  0B14  0008               	return
  9305  0B15                     __end_of_PPS_unlock:	
  9306                           
  9307                           	psect	text32
  9308  0B15                     __ptext32:	
  9309 ;; *************** function _PPS_lock *****************
  9310 ;; Defined at:
  9311 ;;		line 17 in file "PPS.c"
  9312 ;; Parameters:    Size  Location     Type
  9313 ;;		None
  9314 ;; Auto vars:     Size  Location     Type
  9315 ;;		None
  9316 ;; Return value:  Size  Location     Type
  9317 ;;                  1    wreg      void 
  9318 ;; Registers used:
  9319 ;;		wreg
  9320 ;; Tracked objects:
  9321 ;;		On entry : 0/0
  9322 ;;		On exit  : 0/0
  9323 ;;		Unchanged: 0/0
  9324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9325 ;;      Params:         0       0       0       0       0       0       0       0
  9326 ;;      Locals:         0       0       0       0       0       0       0       0
  9327 ;;      Temps:          0       0       0       0       0       0       0       0
  9328 ;;      Totals:         0       0       0       0       0       0       0       0
  9329 ;;Total ram usage:        0 bytes
  9330 ;; Hardware stack levels used:    1
  9331 ;; Hardware stack levels required when called:    2
  9332 ;; This function calls:
  9333 ;;		Nothing
  9334 ;; This function is called by:
  9335 ;;		_main
  9336 ;;		_PWM_INIT
  9337 ;; This function uses a non-reentrant model
  9338 ;;
  9339                           
  9340                           
  9341                           ;psect for function _PPS_lock
  9342  0B15                     _PPS_lock:	
  9343  0B15                     l3091:	
  9344                           ;incstack = 0
  9345                           ; Regs used in _PPS_lock: [wreg]
  9346                           
  9347                           
  9348                           ;PPS.c: 18: PPSLOCK = 0x55;
  9349  0B15  3055               	movlw	85
  9350  0B16  017D               	movlb	61	; select bank61
  9351  0B17  008F               	movwf	15	;volsfr
  9352                           
  9353                           ;PPS.c: 19: PPSLOCK = 0xAA;
  9354  0B18  30AA               	movlw	170
  9355  0B19  008F               	movwf	15	;volsfr
  9356                           
  9357                           ;PPS.c: 20: PPSLOCK = 1;
  9358  0B1A  3001               	movlw	1
  9359  0B1B  008F               	movwf	15	;volsfr
  9360  0B1C                     l244:	
  9361  0B1C  0008               	return
  9362  0B1D                     __end_of_PPS_lock:	
  9363                           
  9364                           	psect	text33
  9365  0D70                     __ptext33:	
  9366 ;; *************** function _PIC_SETUP *****************
  9367 ;; Defined at:
  9368 ;;		line 25 in file "main.c"
  9369 ;; Parameters:    Size  Location     Type
  9370 ;;		None
  9371 ;; Auto vars:     Size  Location     Type
  9372 ;;		None
  9373 ;; Return value:  Size  Location     Type
  9374 ;;                  1    wreg      void 
  9375 ;; Registers used:
  9376 ;;		wreg, status,2, status,0
  9377 ;; Tracked objects:
  9378 ;;		On entry : 0/0
  9379 ;;		On exit  : 0/0
  9380 ;;		Unchanged: 0/0
  9381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9382 ;;      Params:         0       0       0       0       0       0       0       0
  9383 ;;      Locals:         0       0       0       0       0       0       0       0
  9384 ;;      Temps:          0       0       0       0       0       0       0       0
  9385 ;;      Totals:         0       0       0       0       0       0       0       0
  9386 ;;Total ram usage:        0 bytes
  9387 ;; Hardware stack levels used:    1
  9388 ;; Hardware stack levels required when called:    2
  9389 ;; This function calls:
  9390 ;;		Nothing
  9391 ;; This function is called by:
  9392 ;;		_main
  9393 ;; This function uses a non-reentrant model
  9394 ;;
  9395                           
  9396                           
  9397                           ;psect for function _PIC_SETUP
  9398  0D70                     _PIC_SETUP:	
  9399  0D70                     l3339:	
  9400                           ;incstack = 0
  9401                           ; Regs used in _PIC_SETUP: [wreg+status,2+status,0]
  9402                           
  9403                           
  9404                           ;main.c: 27: CPUDOZEbits.IDLEN = 0;
  9405  0D70  0151               	movlb	17	; select bank17
  9406  0D71  138C               	bcf	12,7	;volatile
  9407  0D72                     l3341:	
  9408                           
  9409                           ;main.c: 28: VREGCON = 0b00000011;
  9410  0D72  3003               	movlw	3
  9411  0D73  0150               	movlb	16	; select bank16
  9412  0D74  0092               	movwf	18	;volatile
  9413                           
  9414                           ;main.c: 31: TRISA = 0xFF;
  9415  0D75  30FF               	movlw	255
  9416  0D76  0140               	movlb	0	; select bank0
  9417  0D77  0092               	movwf	18	;volatile
  9418                           
  9419                           ;main.c: 32: TRISC = 0xFF;
  9420  0D78  30FF               	movlw	255
  9421  0D79  0094               	movwf	20	;volatile
  9422  0D7A                     l3343:	
  9423                           
  9424                           ;main.c: 33: ANSELA = 0;
  9425  0D7A  017E               	movlb	62	; select bank62
  9426  0D7B  01B8               	clrf	56	;volatile
  9427  0D7C                     l3345:	
  9428                           
  9429                           ;main.c: 34: ANSELC = 0;
  9430  0D7C  01CE               	clrf	78	;volatile
  9431  0D7D                     l3347:	
  9432                           
  9433                           ;main.c: 35: ANSELAbits.ANSA4 = 1;
  9434  0D7D  1638               	bsf	56,4	;volatile
  9435                           
  9436                           ;main.c: 36: WPUA = 0b00100000;
  9437  0D7E  3020               	movlw	32
  9438  0D7F  00B9               	movwf	57	;volatile
  9439  0D80                     l3349:	
  9440                           
  9441                           ;main.c: 39: T1CONbits.CKPS = 0b00;
  9442  0D80  30CF               	movlw	-49
  9443  0D81  0144               	movlb	4	; select bank4
  9444  0D82  058E               	andwf	14,f	;volatile
  9445  0D83                     l3351:	
  9446                           
  9447                           ;main.c: 40: T1CONbits.nSYNC = 0;
  9448  0D83  110E               	bcf	14,2	;volatile
  9449  0D84                     l3353:	
  9450                           
  9451                           ;main.c: 41: T1CONbits.RD16 = 1;
  9452  0D84  148E               	bsf	14,1	;volatile
  9453  0D85                     l3355:	
  9454                           
  9455                           ;main.c: 42: T1GCONbits.GE = 0;
  9456  0D85  138F               	bcf	15,7	;volatile
  9457  0D86                     l3357:	
  9458                           
  9459                           ;main.c: 43: T1CLK = 0b00000100;
  9460  0D86  3004               	movlw	4
  9461  0D87  0091               	movwf	17	;volatile
  9462  0D88                     l3359:	
  9463                           
  9464                           ;main.c: 44: TMR1 = 65228;
  9465  0D88  30FE               	movlw	254
  9466  0D89  008D               	movwf	13	;volatile
  9467  0D8A  30CC               	movlw	204
  9468  0D8B  008C               	movwf	12	;volatile
  9469  0D8C                     l3361:	
  9470                           
  9471                           ;main.c: 45: PIE4bits.TMR1IE = 1;
  9472  0D8C  014E               	movlb	14	; select bank14
  9473  0D8D  141A               	bsf	26,0	;volatile
  9474  0D8E                     l3363:	
  9475                           
  9476                           ;main.c: 46: T1CONbits.ON = 1;
  9477  0D8E  0144               	movlb	4	; select bank4
  9478  0D8F  140E               	bsf	14,0	;volatile
  9479  0D90                     l3365:	
  9480                           
  9481                           ;main.c: 49: PIE0bits.IOCIE = 1;
  9482  0D90  014E               	movlb	14	; select bank14
  9483  0D91  1616               	bsf	22,4	;volatile
  9484  0D92                     l3367:	
  9485                           
  9486                           ;main.c: 50: IOCAP = 0b00100000;
  9487  0D92  3020               	movlw	32
  9488  0D93  017E               	movlb	62	; select bank62
  9489  0D94  00BD               	movwf	61	;volatile
  9490  0D95                     l3369:	
  9491                           
  9492                           ;main.c: 51: IOCAN = 0b00100000;
  9493  0D95  3020               	movlw	32
  9494  0D96  00BE               	movwf	62	;volatile
  9495  0D97                     l3371:	
  9496                           
  9497                           ;main.c: 52: IOCAF = 0x00;
  9498  0D97  01BF               	clrf	63	;volatile
  9499  0D98                     l3373:	
  9500                           
  9501                           ;main.c: 54: INTCONbits.GIE = 1;
  9502  0D98  178B               	bsf	11,7	;volatile
  9503  0D99                     l3375:	
  9504                           
  9505                           ;main.c: 55: INTCONbits.PEIE = 1;
  9506  0D99  170B               	bsf	11,6	;volatile
  9507  0D9A                     l107:	
  9508  0D9A  0008               	return
  9509  0D9B                     __end_of_PIC_SETUP:	
  9510                           
  9511                           	psect	text34
  9512  0EAD                     __ptext34:	
  9513 ;; *************** function _I2C_bus_reset *****************
  9514 ;; Defined at:
  9515 ;;		line 12 in file "I2C.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;		None
  9518 ;; Auto vars:     Size  Location     Type
  9519 ;;  i               1    1[BANK0 ] unsigned char 
  9520 ;; Return value:  Size  Location     Type
  9521 ;;                  1    wreg      void 
  9522 ;; Registers used:
  9523 ;;		wreg, status,2, status,0
  9524 ;; Tracked objects:
  9525 ;;		On entry : 0/0
  9526 ;;		On exit  : 0/0
  9527 ;;		Unchanged: 0/0
  9528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9529 ;;      Params:         0       0       0       0       0       0       0       0
  9530 ;;      Locals:         0       1       0       0       0       0       0       0
  9531 ;;      Temps:          0       1       0       0       0       0       0       0
  9532 ;;      Totals:         0       2       0       0       0       0       0       0
  9533 ;;Total ram usage:        2 bytes
  9534 ;; Hardware stack levels used:    1
  9535 ;; Hardware stack levels required when called:    2
  9536 ;; This function calls:
  9537 ;;		Nothing
  9538 ;; This function is called by:
  9539 ;;		_main
  9540 ;; This function uses a non-reentrant model
  9541 ;;
  9542                           
  9543                           
  9544                           ;psect for function _I2C_bus_reset
  9545  0EAD                     _I2C_bus_reset:	
  9546  0EAD                     l3385:	
  9547                           ;incstack = 0
  9548                           ; Regs used in _I2C_bus_reset: [wreg+status,2+status,0]
  9549                           
  9550                           
  9551                           ;I2C.c: 14: TRISCbits.TRISC0 = 1;
  9552  0EAD  0140               	movlb	0	; select bank0
  9553  0EAE  1414               	bsf	20,0	;volatile
  9554                           
  9555                           ;I2C.c: 15: TRISCbits.TRISC1 = 1;
  9556  0EAF  1494               	bsf	20,1	;volatile
  9557  0EB0                     l3387:	
  9558                           
  9559                           ;I2C.c: 17: char i = 0;
  9560  0EB0  01A2               	clrf	I2C_bus_reset@i
  9561                           
  9562                           ;I2C.c: 19: while(i < 10) {
  9563  0EB1  2EF0               	goto	l3411
  9564  0EB2                     l3389:	
  9565                           
  9566                           ;I2C.c: 20: i++;
  9567  0EB2  3001               	movlw	1
  9568  0EB3  00A1               	movwf	??_I2C_bus_reset
  9569  0EB4  0821               	movf	??_I2C_bus_reset,w
  9570  0EB5  07A2               	addwf	I2C_bus_reset@i,f
  9571  0EB6                     l3391:	
  9572                           
  9573                           ;I2C.c: 22: if(!RC1) {
  9574  0EB6  188E               	btfsc	14,1	;volatile
  9575  0EB7  2EB9               	goto	u2951
  9576  0EB8  2EBA               	goto	u2950
  9577  0EB9                     u2951:	
  9578  0EB9  2ED0               	goto	l3399
  9579  0EBA                     u2950:	
  9580  0EBA                     l3393:	
  9581                           
  9582                           ;I2C.c: 24: TRISCbits.TRISC0 = 0;
  9583  0EBA  1014               	bcf	20,0	;volatile
  9584                           
  9585                           ;I2C.c: 25: RC0 = 0;
  9586  0EBB  100E               	bcf	14,0	;volatile
  9587  0EBC                     l3395:	
  9588                           
  9589                           ;I2C.c: 26: _delay((unsigned long)((1)*(32000000/4000.0)));
  9590  0EBC  300B               	movlw	11
  9591  0EBD  0140               	movlb	0	; select bank0
  9592  0EBE  00A1               	movwf	??_I2C_bus_reset
  9593  0EBF  3062               	movlw	98
  9594  0EC0                     u3997:	
  9595  0EC0  0B89               	decfsz	9,f
  9596  0EC1  2EC0               	goto	u3997
  9597  0EC2  0BA1               	decfsz	??_I2C_bus_reset,f
  9598  0EC3  2EC0               	goto	u3997
  9599  0EC4  0000               	nop
  9600  0EC5                     l3397:	
  9601                           
  9602                           ;I2C.c: 27: TRISCbits.TRISC0 = 1;
  9603  0EC5  0140               	movlb	0	; select bank0
  9604  0EC6  1414               	bsf	20,0	;volatile
  9605                           
  9606                           ;I2C.c: 28: _delay((unsigned long)((1)*(32000000/4000.0)));
  9607  0EC7  300B               	movlw	11
  9608  0EC8  0140               	movlb	0	; select bank0
  9609  0EC9  00A1               	movwf	??_I2C_bus_reset
  9610  0ECA  3062               	movlw	98
  9611  0ECB                     u4007:	
  9612  0ECB  0B89               	decfsz	9,f
  9613  0ECC  2ECB               	goto	u4007
  9614  0ECD  0BA1               	decfsz	??_I2C_bus_reset,f
  9615  0ECE  2ECB               	goto	u4007
  9616  0ECF  0000               	nop
  9617  0ED0                     l3399:	
  9618                           
  9619                           ;I2C.c: 29: };I2C.c: 30: if(RC1) {
  9620  0ED0  0140               	movlb	0	; select bank0
  9621  0ED1  1C8E               	btfss	14,1	;volatile
  9622  0ED2  2ED4               	goto	u2961
  9623  0ED3  2ED5               	goto	u2960
  9624  0ED4                     u2961:	
  9625  0ED4  2EB6               	goto	l3391
  9626  0ED5                     u2960:	
  9627  0ED5                     l3401:	
  9628                           
  9629                           ;I2C.c: 32: TRISCbits.TRISC1 = 0;
  9630  0ED5  1094               	bcf	20,1	;volatile
  9631                           
  9632                           ;I2C.c: 33: RC1 = 0;
  9633  0ED6  108E               	bcf	14,1	;volatile
  9634  0ED7                     l3403:	
  9635                           
  9636                           ;I2C.c: 34: _delay((unsigned long)((1)*(32000000/4000.0)));
  9637  0ED7  300B               	movlw	11
  9638  0ED8  0140               	movlb	0	; select bank0
  9639  0ED9  00A1               	movwf	??_I2C_bus_reset
  9640  0EDA  3062               	movlw	98
  9641  0EDB                     u4017:	
  9642  0EDB  0B89               	decfsz	9,f
  9643  0EDC  2EDB               	goto	u4017
  9644  0EDD  0BA1               	decfsz	??_I2C_bus_reset,f
  9645  0EDE  2EDB               	goto	u4017
  9646  0EDF  0000               	nop
  9647  0EE0                     l3405:	
  9648                           
  9649                           ;I2C.c: 35: TRISCbits.TRISC1 = 1;
  9650  0EE0  0140               	movlb	0	; select bank0
  9651  0EE1  1494               	bsf	20,1	;volatile
  9652                           
  9653                           ;I2C.c: 36: _delay((unsigned long)((1)*(32000000/4000.0)));
  9654  0EE2  300B               	movlw	11
  9655  0EE3  0140               	movlb	0	; select bank0
  9656  0EE4  00A1               	movwf	??_I2C_bus_reset
  9657  0EE5  3062               	movlw	98
  9658  0EE6                     u4027:	
  9659  0EE6  0B89               	decfsz	9,f
  9660  0EE7  2EE6               	goto	u4027
  9661  0EE8  0BA1               	decfsz	??_I2C_bus_reset,f
  9662  0EE9  2EE6               	goto	u4027
  9663  0EEA  0000               	nop
  9664  0EEB                     l3407:	
  9665                           
  9666                           ;I2C.c: 37: if(RC1) {
  9667  0EEB  0140               	movlb	0	; select bank0
  9668  0EEC  1C8E               	btfss	14,1	;volatile
  9669  0EED  2EEF               	goto	u2971
  9670  0EEE  2EF0               	goto	u2970
  9671  0EEF                     u2971:	
  9672  0EEF  2EB6               	goto	l3391
  9673  0EF0                     u2970:	
  9674  0EF0                     l3411:	
  9675  0EF0  300A               	movlw	10
  9676  0EF1  0222               	subwf	I2C_bus_reset@i,w
  9677  0EF2  1C03               	skipc
  9678  0EF3  2EF5               	goto	u2981
  9679  0EF4  2EF6               	goto	u2980
  9680  0EF5                     u2981:	
  9681  0EF5  2EB2               	goto	l3389
  9682  0EF6                     u2980:	
  9683  0EF6                     l276:	
  9684  0EF6  0008               	return
  9685  0EF7                     __end_of_I2C_bus_reset:	
  9686                           
  9687                           	psect	text35
  9688  0DC9                     __ptext35:	
  9689 ;; *************** function _I2C_Master_Init *****************
  9690 ;; Defined at:
  9691 ;;		line 45 in file "I2C.c"
  9692 ;; Parameters:    Size  Location     Type
  9693 ;;  clk             4   26[BANK0 ] const unsigned long 
  9694 ;; Auto vars:     Size  Location     Type
  9695 ;;		None
  9696 ;; Return value:  Size  Location     Type
  9697 ;;                  1    wreg      void 
  9698 ;; Registers used:
  9699 ;;		wreg, status,2, status,0, pclath, cstack
  9700 ;; Tracked objects:
  9701 ;;		On entry : 0/0
  9702 ;;		On exit  : 0/0
  9703 ;;		Unchanged: 0/0
  9704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9705 ;;      Params:         0       4       0       0       0       0       0       0
  9706 ;;      Locals:         0       0       0       0       0       0       0       0
  9707 ;;      Temps:          0       4       0       0       0       0       0       0
  9708 ;;      Totals:         0       8       0       0       0       0       0       0
  9709 ;;Total ram usage:        8 bytes
  9710 ;; Hardware stack levels used:    1
  9711 ;; Hardware stack levels required when called:    3
  9712 ;; This function calls:
  9713 ;;		___lldiv
  9714 ;; This function is called by:
  9715 ;;		_main
  9716 ;; This function uses a non-reentrant model
  9717 ;;
  9718                           
  9719                           
  9720                           ;psect for function _I2C_Master_Init
  9721  0DC9                     _I2C_Master_Init:	
  9722  0DC9                     l3413:	
  9723                           ;incstack = 0
  9724                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  9725                           
  9726                           
  9727                           ;I2C.c: 47: SSP1CON1 = 0b00101000;
  9728  0DC9  3028               	movlw	40
  9729  0DCA  0143               	movlb	3	; select bank3
  9730  0DCB  0090               	movwf	16	;volatile
  9731  0DCC                     l3415:	
  9732                           
  9733                           ;I2C.c: 48: SSP1CON2 = 0x00;
  9734  0DCC  0191               	clrf	17	;volatile
  9735  0DCD                     l3417:	
  9736                           
  9737                           ;I2C.c: 49: SSP1ADD = (32000000 / (4*clk)) - 1;
  9738  0DCD  0140               	movlb	0	; select bank0
  9739  0DCE  083B               	movf	I2C_Master_Init@clk,w
  9740  0DCF  00BF               	movwf	??_I2C_Master_Init
  9741  0DD0  083C               	movf	I2C_Master_Init@clk+1,w
  9742  0DD1  00C0               	movwf	??_I2C_Master_Init+1
  9743  0DD2  083D               	movf	I2C_Master_Init@clk+2,w
  9744  0DD3  00C1               	movwf	??_I2C_Master_Init+2
  9745  0DD4  083E               	movf	I2C_Master_Init@clk+3,w
  9746  0DD5  00C2               	movwf	??_I2C_Master_Init+3
  9747  0DD6  3002               	movlw	2
  9748  0DD7                     u2995:	
  9749  0DD7  35BF               	lslf	??_I2C_Master_Init,f
  9750  0DD8  0DC0               	rlf	??_I2C_Master_Init+1,f
  9751  0DD9  0DC1               	rlf	??_I2C_Master_Init+2,f
  9752  0DDA  0DC2               	rlf	??_I2C_Master_Init+3,f
  9753  0DDB                     u2990:	
  9754  0DDB  0B89               	decfsz	9,f
  9755  0DDC  2DD7               	goto	u2995
  9756  0DDD  0842               	movf	??_I2C_Master_Init+3,w
  9757  0DDE  00B0               	movwf	___lldiv@divisor+3
  9758  0DDF  0841               	movf	??_I2C_Master_Init+2,w
  9759  0DE0  00AF               	movwf	___lldiv@divisor+2
  9760  0DE1  0840               	movf	??_I2C_Master_Init+1,w
  9761  0DE2  00AE               	movwf	___lldiv@divisor+1
  9762  0DE3  083F               	movf	??_I2C_Master_Init,w
  9763  0DE4  00AD               	movwf	___lldiv@divisor
  9764  0DE5  3001               	movlw	1
  9765  0DE6  00B4               	movwf	___lldiv@dividend+3
  9766  0DE7  30E8               	movlw	232
  9767  0DE8  00B3               	movwf	___lldiv@dividend+2
  9768  0DE9  3048               	movlw	72
  9769  0DEA  00B2               	movwf	___lldiv@dividend+1
  9770  0DEB  3000               	movlw	0
  9771  0DEC  00B1               	movwf	___lldiv@dividend
  9772  0DED  318F  2748  318D   	fcall	___lldiv
  9773  0DF0  0140               	movlb	0	; select bank0
  9774  0DF1  082D               	movf	?___lldiv,w
  9775  0DF2  3EFF               	addlw	255
  9776  0DF3  0143               	movlb	3	; select bank3
  9777  0DF4  008D               	movwf	13	;volatile
  9778  0DF5                     l3419:	
  9779                           
  9780                           ;I2C.c: 50: SSP1STAT = 0b10000000;
  9781  0DF5  3080               	movlw	128
  9782  0DF6  008F               	movwf	15	;volatile
  9783  0DF7                     l279:	
  9784  0DF7  0008               	return
  9785  0DF8                     __end_of_I2C_Master_Init:	
  9786                           
  9787                           	psect	text36
  9788  0F48                     __ptext36:	
  9789 ;; *************** function ___lldiv *****************
  9790 ;; Defined at:
  9791 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  9792 ;; Parameters:    Size  Location     Type
  9793 ;;  divisor         4   12[BANK0 ] unsigned long 
  9794 ;;  dividend        4   16[BANK0 ] unsigned long 
  9795 ;; Auto vars:     Size  Location     Type
  9796 ;;  quotient        4   21[BANK0 ] unsigned long 
  9797 ;;  counter         1   25[BANK0 ] unsigned char 
  9798 ;; Return value:  Size  Location     Type
  9799 ;;                  4   12[BANK0 ] unsigned long 
  9800 ;; Registers used:
  9801 ;;		wreg, status,2, status,0
  9802 ;; Tracked objects:
  9803 ;;		On entry : 0/0
  9804 ;;		On exit  : 0/0
  9805 ;;		Unchanged: 0/0
  9806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9807 ;;      Params:         0       8       0       0       0       0       0       0
  9808 ;;      Locals:         0       5       0       0       0       0       0       0
  9809 ;;      Temps:          0       1       0       0       0       0       0       0
  9810 ;;      Totals:         0      14       0       0       0       0       0       0
  9811 ;;Total ram usage:       14 bytes
  9812 ;; Hardware stack levels used:    1
  9813 ;; Hardware stack levels required when called:    2
  9814 ;; This function calls:
  9815 ;;		Nothing
  9816 ;; This function is called by:
  9817 ;;		_I2C_Master_Init
  9818 ;;		_negotiate_optimal_pdo
  9819 ;;		_i2c_master_init
  9820 ;; This function uses a non-reentrant model
  9821 ;;
  9822                           
  9823                           
  9824                           ;psect for function ___lldiv
  9825  0F48                     ___lldiv:	
  9826  0F48                     l3049:	
  9827                           ;incstack = 0
  9828                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  9829                           
  9830  0F48  3000               	movlw	0
  9831  0F49  0140               	movlb	0	; select bank0
  9832  0F4A  00B9               	movwf	___lldiv@quotient+3
  9833  0F4B  3000               	movlw	0
  9834  0F4C  00B8               	movwf	___lldiv@quotient+2
  9835  0F4D  3000               	movlw	0
  9836  0F4E  00B7               	movwf	___lldiv@quotient+1
  9837  0F4F  3000               	movlw	0
  9838  0F50  00B6               	movwf	___lldiv@quotient
  9839  0F51  0830               	movf	___lldiv@divisor+3,w
  9840  0F52  042F               	iorwf	___lldiv@divisor+2,w
  9841  0F53  042E               	iorwf	___lldiv@divisor+1,w
  9842  0F54  042D               	iorwf	___lldiv@divisor,w
  9843  0F55  1903               	skipnz
  9844  0F56  2F58               	goto	u2471
  9845  0F57  2F59               	goto	u2470
  9846  0F58                     u2471:	
  9847  0F58  2F9A               	goto	l3069
  9848  0F59                     u2470:	
  9849  0F59                     l3051:	
  9850  0F59  01BA               	clrf	___lldiv@counter
  9851  0F5A  0ABA               	incf	___lldiv@counter,f
  9852  0F5B  2F67               	goto	l3055
  9853  0F5C                     l3053:	
  9854  0F5C  3001               	movlw	1
  9855  0F5D                     u2485:	
  9856  0F5D  35AD               	lslf	___lldiv@divisor,f
  9857  0F5E  0DAE               	rlf	___lldiv@divisor+1,f
  9858  0F5F  0DAF               	rlf	___lldiv@divisor+2,f
  9859  0F60  0DB0               	rlf	___lldiv@divisor+3,f
  9860  0F61  0B89               	decfsz	9,f
  9861  0F62  2F5D               	goto	u2485
  9862  0F63  3001               	movlw	1
  9863  0F64  00B5               	movwf	??___lldiv
  9864  0F65  0835               	movf	??___lldiv,w
  9865  0F66  07BA               	addwf	___lldiv@counter,f
  9866  0F67                     l3055:	
  9867  0F67  1FB0               	btfss	___lldiv@divisor+3,7
  9868  0F68  2F6A               	goto	u2491
  9869  0F69  2F6B               	goto	u2490
  9870  0F6A                     u2491:	
  9871  0F6A  2F5C               	goto	l3053
  9872  0F6B                     u2490:	
  9873  0F6B                     l3057:	
  9874  0F6B  3001               	movlw	1
  9875  0F6C                     u2505:	
  9876  0F6C  35B6               	lslf	___lldiv@quotient,f
  9877  0F6D  0DB7               	rlf	___lldiv@quotient+1,f
  9878  0F6E  0DB8               	rlf	___lldiv@quotient+2,f
  9879  0F6F  0DB9               	rlf	___lldiv@quotient+3,f
  9880  0F70  0B89               	decfsz	9,f
  9881  0F71  2F6C               	goto	u2505
  9882  0F72                     l3059:	
  9883  0F72  0830               	movf	___lldiv@divisor+3,w
  9884  0F73  0234               	subwf	___lldiv@dividend+3,w
  9885  0F74  1D03               	skipz
  9886  0F75  2F80               	goto	u2515
  9887  0F76  082F               	movf	___lldiv@divisor+2,w
  9888  0F77  0233               	subwf	___lldiv@dividend+2,w
  9889  0F78  1D03               	skipz
  9890  0F79  2F80               	goto	u2515
  9891  0F7A  082E               	movf	___lldiv@divisor+1,w
  9892  0F7B  0232               	subwf	___lldiv@dividend+1,w
  9893  0F7C  1D03               	skipz
  9894  0F7D  2F80               	goto	u2515
  9895  0F7E  082D               	movf	___lldiv@divisor,w
  9896  0F7F  0231               	subwf	___lldiv@dividend,w
  9897  0F80                     u2515:	
  9898  0F80  1C03               	skipc
  9899  0F81  2F83               	goto	u2511
  9900  0F82  2F84               	goto	u2510
  9901  0F83                     u2511:	
  9902  0F83  2F8D               	goto	l3065
  9903  0F84                     u2510:	
  9904  0F84                     l3061:	
  9905  0F84  082D               	movf	___lldiv@divisor,w
  9906  0F85  02B1               	subwf	___lldiv@dividend,f
  9907  0F86  082E               	movf	___lldiv@divisor+1,w
  9908  0F87  3BB2               	subwfb	___lldiv@dividend+1,f
  9909  0F88  082F               	movf	___lldiv@divisor+2,w
  9910  0F89  3BB3               	subwfb	___lldiv@dividend+2,f
  9911  0F8A  0830               	movf	___lldiv@divisor+3,w
  9912  0F8B  3BB4               	subwfb	___lldiv@dividend+3,f
  9913  0F8C                     l3063:	
  9914  0F8C  1436               	bsf	___lldiv@quotient,0
  9915  0F8D                     l3065:	
  9916  0F8D  3001               	movlw	1
  9917  0F8E                     u2525:	
  9918  0F8E  36B0               	lsrf	___lldiv@divisor+3,f
  9919  0F8F  0CAF               	rrf	___lldiv@divisor+2,f
  9920  0F90  0CAE               	rrf	___lldiv@divisor+1,f
  9921  0F91  0CAD               	rrf	___lldiv@divisor,f
  9922  0F92  0B89               	decfsz	9,f
  9923  0F93  2F8E               	goto	u2525
  9924  0F94                     l3067:	
  9925  0F94  3001               	movlw	1
  9926  0F95  02BA               	subwf	___lldiv@counter,f
  9927  0F96  1D03               	btfss	3,2
  9928  0F97  2F99               	goto	u2531
  9929  0F98  2F9A               	goto	u2530
  9930  0F99                     u2531:	
  9931  0F99  2F6B               	goto	l3057
  9932  0F9A                     u2530:	
  9933  0F9A                     l3069:	
  9934  0F9A  0839               	movf	___lldiv@quotient+3,w
  9935  0F9B  00B0               	movwf	?___lldiv+3
  9936  0F9C  0838               	movf	___lldiv@quotient+2,w
  9937  0F9D  00AF               	movwf	?___lldiv+2
  9938  0F9E  0837               	movf	___lldiv@quotient+1,w
  9939  0F9F  00AE               	movwf	?___lldiv+1
  9940  0FA0  0836               	movf	___lldiv@quotient,w
  9941  0FA1  00AD               	movwf	?___lldiv
  9942  0FA2                     l895:	
  9943  0FA2  0008               	return
  9944  0FA3                     __end_of___lldiv:	
  9945                           
  9946                           	psect	text37
  9947  0411                     __ptext37:	
  9948 ;; *************** function _BQ_UPDATE *****************
  9949 ;; Defined at:
  9950 ;;		line 60 in file "BQ25895M.c"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;		None
  9953 ;; Auto vars:     Size  Location     Type
  9954 ;;		None
  9955 ;; Return value:  Size  Location     Type
  9956 ;;                  1    wreg      void 
  9957 ;; Registers used:
  9958 ;;		wreg, status,2, status,0, pclath, cstack
  9959 ;; Tracked objects:
  9960 ;;		On entry : 0/0
  9961 ;;		On exit  : 0/0
  9962 ;;		Unchanged: 0/0
  9963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9964 ;;      Params:         0       0       0       0       0       0       0       0
  9965 ;;      Locals:         0       0       0       0       0       0       0       0
  9966 ;;      Temps:          0       1       0       0       0       0       0       0
  9967 ;;      Totals:         0       1       0       0       0       0       0       0
  9968 ;;Total ram usage:        1 bytes
  9969 ;; Hardware stack levels used:    1
  9970 ;; Hardware stack levels required when called:    6
  9971 ;; This function calls:
  9972 ;;		_BQ_Read
  9973 ;;		_BQ_Write
  9974 ;;		_BQ_get_chrg_state
  9975 ;;		_get_time
  9976 ;;		_timer_diff
  9977 ;; This function is called by:
  9978 ;;		_main
  9979 ;; This function uses a non-reentrant model
  9980 ;;
  9981                           
  9982                           
  9983                           ;psect for function _BQ_UPDATE
  9984  0411                     _BQ_UPDATE:	
  9985  0411                     l3491:	
  9986                           ;incstack = 0
  9987                           ; Regs used in _BQ_UPDATE: [wreg+status,2+status,0+pclath+cstack]
  9988                           
  9989                           
  9990                           ;BQ25895M.c: 61: if(BQ_adc_state == 0) {
  9991  0411  0140               	movlb	0	; select bank0
  9992  0412  086C               	movf	_BQ_adc_state,w
  9993  0413  1D03               	btfss	3,2
  9994  0414  2C16               	goto	u3001
  9995  0415  2C17               	goto	u3000
  9996  0416                     u3001:	
  9997  0416  2C3D               	goto	l3499
  9998  0417                     u3000:	
  9999  0417                     l3493:	
 10000                           
 10001                           ;BQ25895M.c: 62: VBUS_CHRG_STATE = BQ_get_chrg_state();
 10002  0417  318C  248B  3184   	fcall	_BQ_get_chrg_state
 10003  041A  0140               	movlb	0	; select bank0
 10004  041B  00AF               	movwf	??_BQ_UPDATE
 10005  041C  082F               	movf	??_BQ_UPDATE,w
 10006  041D  00EE               	movwf	_VBUS_CHRG_STATE
 10007                           
 10008                           ;BQ25895M.c: 63: BQ_Write(0x02, 0b10010001);
 10009  041E  3091               	movlw	145
 10010  041F  00AF               	movwf	??_BQ_UPDATE
 10011  0420  082F               	movf	??_BQ_UPDATE,w
 10012  0421  00A2               	movwf	BQ_Write@data
 10013  0422  3002               	movlw	2
 10014  0423  318B  23A6  3184   	fcall	_BQ_Write
 10015  0426                     l3495:	
 10016                           
 10017                           ;BQ25895M.c: 64: BQ_adc_time = get_time();
 10018  0426  318B  2339  3184   	fcall	_get_time
 10019  0429  0140               	movlb	0	; select bank0
 10020  042A  0824               	movf	?_get_time+3,w
 10021  042B  0142               	movlb	2	; select bank2
 10022  042C  00AF               	movwf	(_BQ_adc_time+3)^(0+256)
 10023  042D  0140               	movlb	0	; select bank0
 10024  042E  0823               	movf	?_get_time+2,w
 10025  042F  0142               	movlb	2	; select bank2
 10026  0430  00AE               	movwf	(_BQ_adc_time+2)^(0+256)
 10027  0431  0140               	movlb	0	; select bank0
 10028  0432  0822               	movf	?_get_time+1,w
 10029  0433  0142               	movlb	2	; select bank2
 10030  0434  00AD               	movwf	(_BQ_adc_time+1)^(0+256)
 10031  0435  0140               	movlb	0	; select bank0
 10032  0436  0821               	movf	?_get_time,w
 10033  0437  0142               	movlb	2	; select bank2
 10034  0438  00AC               	movwf	_BQ_adc_time^(0+256)
 10035  0439                     l3497:	
 10036                           
 10037                           ;BQ25895M.c: 65: BQ_adc_state = 1;
 10038  0439  0140               	movlb	0	; select bank0
 10039  043A  01EC               	clrf	_BQ_adc_state
 10040  043B  0AEC               	incf	_BQ_adc_state,f
 10041                           
 10042                           ;BQ25895M.c: 66: }
 10043  043C  2CB1               	goto	l353
 10044  043D                     l3499:	
 10045                           
 10046                           ;BQ25895M.c: 67: else if(BQ_adc_state == 1) {
 10047  043D  036C               	decf	_BQ_adc_state,w
 10048  043E  1D03               	btfss	3,2
 10049  043F  2C41               	goto	u3011
 10050  0440  2C42               	goto	u3010
 10051  0441                     u3011:	
 10052  0441  2C86               	goto	l3509
 10053  0442                     u3010:	
 10054  0442                     l3501:	
 10055                           
 10056                           ;BQ25895M.c: 68: if(timer_diff(BQ_adc_time) >= 80) {
 10057  0442  0142               	movlb	2	; select bank2
 10058  0443  082F               	movf	(_BQ_adc_time+3)^(0+256),w
 10059  0444  0140               	movlb	0	; select bank0
 10060  0445  00A4               	movwf	timer_diff@t+3
 10061  0446  0142               	movlb	2	; select bank2
 10062  0447  082E               	movf	(_BQ_adc_time+2)^(0+256),w
 10063  0448  0140               	movlb	0	; select bank0
 10064  0449  00A3               	movwf	timer_diff@t+2
 10065  044A  0142               	movlb	2	; select bank2
 10066  044B  082D               	movf	(_BQ_adc_time+1)^(0+256),w
 10067  044C  0140               	movlb	0	; select bank0
 10068  044D  00A2               	movwf	timer_diff@t+1
 10069  044E  0142               	movlb	2	; select bank2
 10070  044F  082C               	movf	_BQ_adc_time^(0+256),w
 10071  0450  0140               	movlb	0	; select bank0
 10072  0451  00A1               	movwf	timer_diff@t
 10073  0452  318B  2390  3184   	fcall	_timer_diff
 10074  0455  0140               	movlb	0	; select bank0
 10075  0456  0824               	movf	?_timer_diff+3,w
 10076  0457  1D03               	btfss	3,2
 10077  0458  2C65               	goto	u3020
 10078  0459  0823               	movf	?_timer_diff+2,w
 10079  045A  1D03               	btfss	3,2
 10080  045B  2C65               	goto	u3020
 10081  045C  0822               	movf	?_timer_diff+1,w
 10082  045D  1D03               	btfss	3,2
 10083  045E  2C65               	goto	u3020
 10084  045F  3050               	movlw	80
 10085  0460  0221               	subwf	?_timer_diff,w
 10086  0461  1C03               	btfss	3,0
 10087  0462  2C64               	goto	u3021
 10088  0463  2C65               	goto	u3020
 10089  0464                     u3021:	
 10090  0464  2CB1               	goto	l353
 10091  0465                     u3020:	
 10092  0465                     l3503:	
 10093                           
 10094                           ;BQ25895M.c: 69: BATTERY_VOLTAGE = BQ_Read(0x0E);
 10095  0465  300E               	movlw	14
 10096  0466  318C  24F4  3184   	fcall	_BQ_Read
 10097  0469  0140               	movlb	0	; select bank0
 10098  046A  0824               	movf	?_BQ_Read,w
 10099  046B  00AF               	movwf	??_BQ_UPDATE
 10100  046C  082F               	movf	??_BQ_UPDATE,w
 10101  046D  00ED               	movwf	_BATTERY_VOLTAGE
 10102  046E                     l3505:	
 10103                           
 10104                           ;BQ25895M.c: 70: BQ_adc_state = 2;
 10105  046E  3002               	movlw	2
 10106  046F  00AF               	movwf	??_BQ_UPDATE
 10107  0470  082F               	movf	??_BQ_UPDATE,w
 10108  0471  00EC               	movwf	_BQ_adc_state
 10109  0472                     l3507:	
 10110                           
 10111                           ;BQ25895M.c: 71: BQ_adc_time = get_time();
 10112  0472  318B  2339  3184   	fcall	_get_time
 10113  0475  0140               	movlb	0	; select bank0
 10114  0476  0824               	movf	?_get_time+3,w
 10115  0477  0142               	movlb	2	; select bank2
 10116  0478  00AF               	movwf	(_BQ_adc_time+3)^(0+256)
 10117  0479  0140               	movlb	0	; select bank0
 10118  047A  0823               	movf	?_get_time+2,w
 10119  047B  0142               	movlb	2	; select bank2
 10120  047C  00AE               	movwf	(_BQ_adc_time+2)^(0+256)
 10121  047D  0140               	movlb	0	; select bank0
 10122  047E  0822               	movf	?_get_time+1,w
 10123  047F  0142               	movlb	2	; select bank2
 10124  0480  00AD               	movwf	(_BQ_adc_time+1)^(0+256)
 10125  0481  0140               	movlb	0	; select bank0
 10126  0482  0821               	movf	?_get_time,w
 10127  0483  0142               	movlb	2	; select bank2
 10128  0484  00AC               	movwf	_BQ_adc_time^(0+256)
 10129  0485  2CB1               	goto	l353
 10130  0486                     l3509:	
 10131                           
 10132                           ;BQ25895M.c: 74: else if(BQ_adc_state == 2) {
 10133  0486  3002               	movlw	2
 10134  0487  066C               	xorwf	_BQ_adc_state,w
 10135  0488  1D03               	btfss	3,2
 10136  0489  2C8B               	goto	u3031
 10137  048A  2C8C               	goto	u3030
 10138  048B                     u3031:	
 10139  048B  2CAF               	goto	l3513
 10140  048C                     u3030:	
 10141  048C                     l3511:	
 10142                           
 10143                           ;BQ25895M.c: 75: if(timer_diff(BQ_adc_time) >= 20) {
 10144  048C  0142               	movlb	2	; select bank2
 10145  048D  082F               	movf	(_BQ_adc_time+3)^(0+256),w
 10146  048E  0140               	movlb	0	; select bank0
 10147  048F  00A4               	movwf	timer_diff@t+3
 10148  0490  0142               	movlb	2	; select bank2
 10149  0491  082E               	movf	(_BQ_adc_time+2)^(0+256),w
 10150  0492  0140               	movlb	0	; select bank0
 10151  0493  00A3               	movwf	timer_diff@t+2
 10152  0494  0142               	movlb	2	; select bank2
 10153  0495  082D               	movf	(_BQ_adc_time+1)^(0+256),w
 10154  0496  0140               	movlb	0	; select bank0
 10155  0497  00A2               	movwf	timer_diff@t+1
 10156  0498  0142               	movlb	2	; select bank2
 10157  0499  082C               	movf	_BQ_adc_time^(0+256),w
 10158  049A  0140               	movlb	0	; select bank0
 10159  049B  00A1               	movwf	timer_diff@t
 10160  049C  318B  2390  3184   	fcall	_timer_diff
 10161  049F  0140               	movlb	0	; select bank0
 10162  04A0  0824               	movf	?_timer_diff+3,w
 10163  04A1  1D03               	btfss	3,2
 10164  04A2  2CAF               	goto	u3040
 10165  04A3  0823               	movf	?_timer_diff+2,w
 10166  04A4  1D03               	btfss	3,2
 10167  04A5  2CAF               	goto	u3040
 10168  04A6  0822               	movf	?_timer_diff+1,w
 10169  04A7  1D03               	btfss	3,2
 10170  04A8  2CAF               	goto	u3040
 10171  04A9  3014               	movlw	20
 10172  04AA  0221               	subwf	?_timer_diff,w
 10173  04AB  1C03               	btfss	3,0
 10174  04AC  2CAE               	goto	u3041
 10175  04AD  2CAF               	goto	u3040
 10176  04AE                     u3041:	
 10177  04AE  2CB1               	goto	l349
 10178  04AF                     u3040:	
 10179  04AF                     l3513:	
 10180                           
 10181                           ;BQ25895M.c: 76: BQ_adc_state = 0;
 10182  04AF  01EC               	clrf	_BQ_adc_state
 10183  04B0  2CB1               	goto	l353
 10184  04B1                     l349:	
 10185  04B1                     l353:	
 10186  04B1  0008               	return
 10187  04B2                     __end_of_BQ_UPDATE:	
 10188                           
 10189                           	psect	text38
 10190  0B90                     __ptext38:	
 10191 ;; *************** function _timer_diff *****************
 10192 ;; Defined at:
 10193 ;;		line 17 in file "time.c"
 10194 ;; Parameters:    Size  Location     Type
 10195 ;;  t               4    0[BANK0 ] unsigned long 
 10196 ;; Auto vars:     Size  Location     Type
 10197 ;;		None
 10198 ;; Return value:  Size  Location     Type
 10199 ;;                  4    0[BANK0 ] unsigned long 
 10200 ;; Registers used:
 10201 ;;		wreg
 10202 ;; Tracked objects:
 10203 ;;		On entry : 0/0
 10204 ;;		On exit  : 0/0
 10205 ;;		Unchanged: 0/0
 10206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10207 ;;      Params:         0       4       0       0       0       0       0       0
 10208 ;;      Locals:         0       0       0       0       0       0       0       0
 10209 ;;      Temps:          0       4       0       0       0       0       0       0
 10210 ;;      Totals:         0       8       0       0       0       0       0       0
 10211 ;;Total ram usage:        8 bytes
 10212 ;; Hardware stack levels used:    1
 10213 ;; Hardware stack levels required when called:    2
 10214 ;; This function calls:
 10215 ;;		Nothing
 10216 ;; This function is called by:
 10217 ;;		_main
 10218 ;;		_BQ_UPDATE
 10219 ;;		_RGB_fade
 10220 ;;		_chrg_led
 10221 ;;		_flash_led
 10222 ;; This function uses a non-reentrant model
 10223 ;;
 10224                           
 10225                           
 10226                           ;psect for function _timer_diff
 10227  0B90                     _timer_diff:	
 10228  0B90                     l3001:	
 10229                           ;incstack = 0
 10230                           ; Regs used in _timer_diff: [wreg]
 10231                           
 10232                           
 10233                           ;time.c: 18: return timer_counter - t;
 10234  0B90  0140               	movlb	0	; select bank0
 10235  0B91  0821               	movf	timer_diff@t,w
 10236  0B92  0278               	subwf	_timer_counter,w
 10237  0B93  00A5               	movwf	??_timer_diff
 10238  0B94  0822               	movf	timer_diff@t+1,w
 10239  0B95  3B79               	subwfb	_timer_counter+1,w
 10240  0B96  00A6               	movwf	??_timer_diff+1
 10241  0B97  0823               	movf	timer_diff@t+2,w
 10242  0B98  3B7A               	subwfb	_timer_counter+2,w
 10243  0B99  00A7               	movwf	??_timer_diff+2
 10244  0B9A  0824               	movf	timer_diff@t+3,w
 10245  0B9B  3B7B               	subwfb	_timer_counter+3,w
 10246  0B9C  00A8               	movwf	??_timer_diff+3
 10247  0B9D  0828               	movf	??_timer_diff+3,w
 10248  0B9E  00A4               	movwf	?_timer_diff+3
 10249  0B9F  0827               	movf	??_timer_diff+2,w
 10250  0BA0  00A3               	movwf	?_timer_diff+2
 10251  0BA1  0826               	movf	??_timer_diff+1,w
 10252  0BA2  00A2               	movwf	?_timer_diff+1
 10253  0BA3  0825               	movf	??_timer_diff,w
 10254  0BA4  00A1               	movwf	?_timer_diff
 10255  0BA5                     l791:	
 10256  0BA5  0008               	return
 10257  0BA6                     __end_of_timer_diff:	
 10258                           
 10259                           	psect	text39
 10260  0B39                     __ptext39:	
 10261 ;; *************** function _get_time *****************
 10262 ;; Defined at:
 10263 ;;		line 13 in file "time.c"
 10264 ;; Parameters:    Size  Location     Type
 10265 ;;		None
 10266 ;; Auto vars:     Size  Location     Type
 10267 ;;		None
 10268 ;; Return value:  Size  Location     Type
 10269 ;;                  4    0[BANK0 ] unsigned long 
 10270 ;; Registers used:
 10271 ;;		wreg
 10272 ;; Tracked objects:
 10273 ;;		On entry : 0/0
 10274 ;;		On exit  : 0/0
 10275 ;;		Unchanged: 0/0
 10276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10277 ;;      Params:         0       4       0       0       0       0       0       0
 10278 ;;      Locals:         0       0       0       0       0       0       0       0
 10279 ;;      Temps:          0       0       0       0       0       0       0       0
 10280 ;;      Totals:         0       4       0       0       0       0       0       0
 10281 ;;Total ram usage:        4 bytes
 10282 ;; Hardware stack levels used:    1
 10283 ;; Hardware stack levels required when called:    2
 10284 ;; This function calls:
 10285 ;;		Nothing
 10286 ;; This function is called by:
 10287 ;;		_main
 10288 ;;		_BQ_UPDATE
 10289 ;;		_RGB_fade
 10290 ;;		_chrg_led
 10291 ;;		_flash_led
 10292 ;; This function uses a non-reentrant model
 10293 ;;
 10294                           
 10295                           
 10296                           ;psect for function _get_time
 10297  0B39                     _get_time:	
 10298  0B39                     l2997:	
 10299                           ;incstack = 0
 10300                           ; Regs used in _get_time: [wreg]
 10301                           
 10302                           
 10303                           ;time.c: 14: return timer_counter;
 10304  0B39  087B               	movf	_timer_counter+3,w
 10305  0B3A  0140               	movlb	0	; select bank0
 10306  0B3B  00A4               	movwf	?_get_time+3
 10307  0B3C  087A               	movf	_timer_counter+2,w
 10308  0B3D  00A3               	movwf	?_get_time+2
 10309  0B3E  0879               	movf	_timer_counter+1,w
 10310  0B3F  00A2               	movwf	?_get_time+1
 10311  0B40  0878               	movf	_timer_counter,w
 10312  0B41  00A1               	movwf	?_get_time
 10313  0B42                     l788:	
 10314  0B42  0008               	return
 10315  0B43                     __end_of_get_time:	
 10316                           
 10317                           	psect	text40
 10318  0C8B                     __ptext40:	
 10319 ;; *************** function _BQ_get_chrg_state *****************
 10320 ;; Defined at:
 10321 ;;		line 43 in file "BQ25895M.c"
 10322 ;; Parameters:    Size  Location     Type
 10323 ;;		None
 10324 ;; Auto vars:     Size  Location     Type
 10325 ;;  data            2   11[BANK0 ] unsigned char [2]
 10326 ;;  temp            1   13[BANK0 ] unsigned char 
 10327 ;; Return value:  Size  Location     Type
 10328 ;;                  1    wreg      PTR unsigned char 
 10329 ;; Registers used:
 10330 ;;		wreg, status,2, status,0, pclath, cstack
 10331 ;; Tracked objects:
 10332 ;;		On entry : 0/0
 10333 ;;		On exit  : 0/0
 10334 ;;		Unchanged: 0/0
 10335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10336 ;;      Params:         0       0       0       0       0       0       0       0
 10337 ;;      Locals:         0       3       0       0       0       0       0       0
 10338 ;;      Temps:          0       2       0       0       0       0       0       0
 10339 ;;      Totals:         0       5       0       0       0       0       0       0
 10340 ;;Total ram usage:        5 bytes
 10341 ;; Hardware stack levels used:    1
 10342 ;; Hardware stack levels required when called:    5
 10343 ;; This function calls:
 10344 ;;		_BQ_Read
 10345 ;; This function is called by:
 10346 ;;		_BQ_UPDATE
 10347 ;; This function uses a non-reentrant model
 10348 ;;
 10349                           
 10350                           
 10351                           ;psect for function _BQ_get_chrg_state
 10352  0C8B                     _BQ_get_chrg_state:	
 10353  0C8B                     l3093:	
 10354                           ;incstack = 0
 10355                           ; Regs used in _BQ_get_chrg_state: [wreg+status,2+status,0+pclath+cstack]
 10356                           
 10357                           
 10358                           ;BQ25895M.c: 45: char data[2];;BQ25895M.c: 46: char temp = BQ_Read(0x0B);
 10359  0C8B  300B               	movlw	11
 10360  0C8C  318C  24F4  318C   	fcall	_BQ_Read
 10361  0C8F  0140               	movlb	0	; select bank0
 10362  0C90  0824               	movf	?_BQ_Read,w
 10363  0C91  00AA               	movwf	??_BQ_get_chrg_state
 10364  0C92  082A               	movf	??_BQ_get_chrg_state,w
 10365  0C93  00AE               	movwf	BQ_get_chrg_state@temp
 10366  0C94                     l3095:	
 10367                           
 10368                           ;BQ25895M.c: 48: data[0] = (temp >> 4) & 0b00000111;
 10369  0C94  082E               	movf	BQ_get_chrg_state@temp,w
 10370  0C95  00AA               	movwf	??_BQ_get_chrg_state
 10371  0C96  3004               	movlw	4
 10372  0C97                     u2565:	
 10373  0C97  36AA               	lsrf	??_BQ_get_chrg_state,f
 10374  0C98  0B89               	decfsz	9,f
 10375  0C99  2C97               	goto	u2565
 10376  0C9A  082A               	movf	??_BQ_get_chrg_state,w
 10377  0C9B  3907               	andlw	7
 10378  0C9C  00AB               	movwf	??_BQ_get_chrg_state+1
 10379  0C9D  082B               	movf	??_BQ_get_chrg_state+1,w
 10380  0C9E  00AC               	movwf	BQ_get_chrg_state@data
 10381  0C9F                     l3097:	
 10382                           
 10383                           ;BQ25895M.c: 49: data[1] = (temp >> 2) & 0b00000011;
 10384  0C9F  082E               	movf	BQ_get_chrg_state@temp,w
 10385  0CA0  00AA               	movwf	??_BQ_get_chrg_state
 10386  0CA1  3002               	movlw	2
 10387  0CA2                     u2575:	
 10388  0CA2  36AA               	lsrf	??_BQ_get_chrg_state,f
 10389  0CA3  0B89               	decfsz	9,f
 10390  0CA4  2CA2               	goto	u2575
 10391  0CA5  082A               	movf	??_BQ_get_chrg_state,w
 10392  0CA6  3903               	andlw	3
 10393  0CA7  00AB               	movwf	??_BQ_get_chrg_state+1
 10394  0CA8  082B               	movf	??_BQ_get_chrg_state+1,w
 10395  0CA9  00AD               	movwf	BQ_get_chrg_state@data+1
 10396  0CAA                     l3099:	
 10397                           
 10398                           ;BQ25895M.c: 51: return data;
 10399  0CAA  302C               	movlw	(low (BQ_get_chrg_state@data| 0))& (0+255)
 10400  0CAB                     l334:	
 10401  0CAB  0008               	return
 10402  0CAC                     __end_of_BQ_get_chrg_state:	
 10403                           
 10404                           	psect	text41
 10405  0CF4                     __ptext41:	
 10406 ;; *************** function _BQ_Read *****************
 10407 ;; Defined at:
 10408 ;;		line 24 in file "BQ25895M.c"
 10409 ;; Parameters:    Size  Location     Type
 10410 ;;  reg             1    wreg     unsigned char 
 10411 ;; Auto vars:     Size  Location     Type
 10412 ;;  reg             1    7[BANK0 ] unsigned char 
 10413 ;;  data            1    8[BANK0 ] unsigned char 
 10414 ;; Return value:  Size  Location     Type
 10415 ;;                  2    3[BANK0 ] unsigned short 
 10416 ;; Registers used:
 10417 ;;		wreg, status,2, status,0, pclath, cstack
 10418 ;; Tracked objects:
 10419 ;;		On entry : 0/0
 10420 ;;		On exit  : 0/0
 10421 ;;		Unchanged: 0/0
 10422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10423 ;;      Params:         0       2       0       0       0       0       0       0
 10424 ;;      Locals:         0       2       0       0       0       0       0       0
 10425 ;;      Temps:          0       2       0       0       0       0       0       0
 10426 ;;      Totals:         0       6       0       0       0       0       0       0
 10427 ;;Total ram usage:        6 bytes
 10428 ;; Hardware stack levels used:    1
 10429 ;; Hardware stack levels required when called:    4
 10430 ;; This function calls:
 10431 ;;		_I2C_Master_Read
 10432 ;;		_I2C_Master_Start
 10433 ;;		_I2C_Master_Stop
 10434 ;;		_I2C_Master_Write
 10435 ;; This function is called by:
 10436 ;;		_BQ_get_chrg_state
 10437 ;;		_BQ_UPDATE
 10438 ;;		_BQ_read_adc
 10439 ;; This function uses a non-reentrant model
 10440 ;;
 10441                           
 10442                           
 10443                           ;psect for function _BQ_Read
 10444  0CF4                     _BQ_Read:	
 10445                           
 10446                           ;incstack = 0
 10447                           ; Regs used in _BQ_Read: [wreg+status,2+status,0+pclath+cstack]
 10448                           ;BQ_Read@reg stored from wreg
 10449  0CF4  0140               	movlb	0	; select bank0
 10450  0CF5  00A8               	movwf	BQ_Read@reg
 10451  0CF6                     l3005:	
 10452                           
 10453                           ;BQ25895M.c: 25: unsigned char data;;BQ25895M.c: 27: I2C_Master_Start();
 10454  0CF6  318A  22E4  318C   	fcall	_I2C_Master_Start
 10455                           
 10456                           ;BQ25895M.c: 28: I2C_Master_Write(0x6A << 1);
 10457  0CF9  30D4               	movlw	212
 10458  0CFA  318B  232F  318C   	fcall	_I2C_Master_Write
 10459                           
 10460                           ;BQ25895M.c: 29: I2C_Master_Write(reg);
 10461  0CFD  0140               	movlb	0	; select bank0
 10462  0CFE  0828               	movf	BQ_Read@reg,w
 10463  0CFF  318B  232F  318C   	fcall	_I2C_Master_Write
 10464                           
 10465                           ;BQ25895M.c: 30: I2C_Master_Start();
 10466  0D02  318A  22E4  318C   	fcall	_I2C_Master_Start
 10467                           
 10468                           ;BQ25895M.c: 31: I2C_Master_Write(0b11010101);
 10469  0D05  30D5               	movlw	213
 10470  0D06  318B  232F  318C   	fcall	_I2C_Master_Write
 10471                           
 10472                           ;BQ25895M.c: 32: data=I2C_Master_Read(1);
 10473  0D09  3001               	movlw	1
 10474  0D0A  318C  24AC  318C   	fcall	_I2C_Master_Read
 10475  0D0D  0140               	movlb	0	; select bank0
 10476  0D0E  00A6               	movwf	??_BQ_Read
 10477  0D0F  0826               	movf	??_BQ_Read,w
 10478  0D10  00A9               	movwf	BQ_Read@data
 10479                           
 10480                           ;BQ25895M.c: 33: I2C_Master_Stop();
 10481  0D11  318A  22EA  318C   	fcall	_I2C_Master_Stop
 10482  0D14                     l3007:	
 10483                           
 10484                           ;BQ25895M.c: 34: return data;
 10485  0D14  0140               	movlb	0	; select bank0
 10486  0D15  0829               	movf	BQ_Read@data,w
 10487  0D16  00A6               	movwf	??_BQ_Read
 10488  0D17  01A7               	clrf	??_BQ_Read+1
 10489  0D18  0826               	movf	??_BQ_Read,w
 10490  0D19  00A4               	movwf	?_BQ_Read
 10491  0D1A  0827               	movf	??_BQ_Read+1,w
 10492  0D1B  00A5               	movwf	?_BQ_Read+1
 10493  0D1C                     l328:	
 10494  0D1C  0008               	return
 10495  0D1D                     __end_of_BQ_Read:	
 10496                           
 10497                           	psect	text42
 10498  0CAC                     __ptext42:	
 10499 ;; *************** function _I2C_Master_Read *****************
 10500 ;; Defined at:
 10501 ;;		line 94 in file "I2C.c"
 10502 ;; Parameters:    Size  Location     Type
 10503 ;;  ack             1    wreg     unsigned char 
 10504 ;; Auto vars:     Size  Location     Type
 10505 ;;  ack             1    1[BANK0 ] unsigned char 
 10506 ;;  data            1    2[BANK0 ] unsigned char 
 10507 ;; Return value:  Size  Location     Type
 10508 ;;                  1    wreg      unsigned char 
 10509 ;; Registers used:
 10510 ;;		wreg, status,2, status,0, pclath, cstack
 10511 ;; Tracked objects:
 10512 ;;		On entry : 0/0
 10513 ;;		On exit  : 0/0
 10514 ;;		Unchanged: 0/0
 10515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10516 ;;      Params:         0       0       0       0       0       0       0       0
 10517 ;;      Locals:         0       2       0       0       0       0       0       0
 10518 ;;      Temps:          0       1       0       0       0       0       0       0
 10519 ;;      Totals:         0       3       0       0       0       0       0       0
 10520 ;;Total ram usage:        3 bytes
 10521 ;; Hardware stack levels used:    1
 10522 ;; Hardware stack levels required when called:    3
 10523 ;; This function calls:
 10524 ;;		_I2C_Master_Ack
 10525 ;;		_I2C_Master_Wait
 10526 ;;		_I2C_Master_nAck
 10527 ;; This function is called by:
 10528 ;;		_BQ_Read
 10529 ;; This function uses a non-reentrant model
 10530 ;;
 10531                           
 10532                           
 10533                           ;psect for function _I2C_Master_Read
 10534  0CAC                     _I2C_Master_Read:	
 10535                           
 10536                           ;incstack = 0
 10537                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 10538                           ;I2C_Master_Read@ack stored from wreg
 10539  0CAC  0140               	movlb	0	; select bank0
 10540  0CAD  00A2               	movwf	I2C_Master_Read@ack
 10541  0CAE                     l2861:	
 10542                           
 10543                           ;I2C.c: 96: I2C_Master_Wait();
 10544  0CAE  318B  2343  318C   	fcall	_I2C_Master_Wait
 10545  0CB1                     l2863:	
 10546                           
 10547                           ;I2C.c: 97: SSP1CON2bits.RCEN = 1;
 10548  0CB1  0143               	movlb	3	; select bank3
 10549  0CB2  1591               	bsf	17,3	;volatile
 10550                           
 10551                           ;I2C.c: 98: I2C_Master_Wait();
 10552  0CB3  318B  2343  318C   	fcall	_I2C_Master_Wait
 10553  0CB6                     l2865:	
 10554                           
 10555                           ;I2C.c: 100: unsigned char data = SSP1BUF;
 10556  0CB6  0143               	movlb	3	; select bank3
 10557  0CB7  080C               	movf	12,w	;volatile
 10558  0CB8  0140               	movlb	0	; select bank0
 10559  0CB9  00A1               	movwf	??_I2C_Master_Read
 10560  0CBA  0821               	movf	??_I2C_Master_Read,w
 10561  0CBB  00A3               	movwf	I2C_Master_Read@data
 10562  0CBC                     l2867:	
 10563                           
 10564                           ;I2C.c: 101: I2C_Master_Wait();
 10565  0CBC  318B  2343  318C   	fcall	_I2C_Master_Wait
 10566  0CBF                     l2869:	
 10567                           
 10568                           ;I2C.c: 103: if (ack)
 10569  0CBF  0140               	movlb	0	; select bank0
 10570  0CC0  0822               	movf	I2C_Master_Read@ack,w
 10571  0CC1  1903               	btfsc	3,2
 10572  0CC2  2CC4               	goto	u2101
 10573  0CC3  2CC5               	goto	u2100
 10574  0CC4                     u2101:	
 10575  0CC4  2CC9               	goto	l2873
 10576  0CC5                     u2100:	
 10577  0CC5                     l2871:	
 10578                           
 10579                           ;I2C.c: 104: I2C_Master_nAck();
 10580  0CC5  318A  22E0  318C   	fcall	_I2C_Master_nAck
 10581  0CC8  2CCC               	goto	l2875
 10582  0CC9                     l2873:	
 10583                           
 10584                           ;I2C.c: 105: else;I2C.c: 106: I2C_Master_Ack();
 10585  0CC9  318A  22DC  318C   	fcall	_I2C_Master_Ack
 10586  0CCC                     l2875:	
 10587                           
 10588                           ;I2C.c: 108: return data;
 10589  0CCC  0140               	movlb	0	; select bank0
 10590  0CCD  0823               	movf	I2C_Master_Read@data,w
 10591  0CCE                     l308:	
 10592  0CCE  0008               	return
 10593  0CCF                     __end_of_I2C_Master_Read:	
 10594                           
 10595                           	psect	text43
 10596  0AE0                     __ptext43:	
 10597 ;; *************** function _I2C_Master_nAck *****************
 10598 ;; Defined at:
 10599 ;;		line 88 in file "I2C.c"
 10600 ;; Parameters:    Size  Location     Type
 10601 ;;		None
 10602 ;; Auto vars:     Size  Location     Type
 10603 ;;		None
 10604 ;; Return value:  Size  Location     Type
 10605 ;;                  1    wreg      void 
 10606 ;; Registers used:
 10607 ;;		None
 10608 ;; Tracked objects:
 10609 ;;		On entry : 0/0
 10610 ;;		On exit  : 0/0
 10611 ;;		Unchanged: 0/0
 10612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10613 ;;      Params:         0       0       0       0       0       0       0       0
 10614 ;;      Locals:         0       0       0       0       0       0       0       0
 10615 ;;      Temps:          0       0       0       0       0       0       0       0
 10616 ;;      Totals:         0       0       0       0       0       0       0       0
 10617 ;;Total ram usage:        0 bytes
 10618 ;; Hardware stack levels used:    1
 10619 ;; Hardware stack levels required when called:    2
 10620 ;; This function calls:
 10621 ;;		Nothing
 10622 ;; This function is called by:
 10623 ;;		_I2C_Master_Read
 10624 ;; This function uses a non-reentrant model
 10625 ;;
 10626                           
 10627                           
 10628                           ;psect for function _I2C_Master_nAck
 10629  0AE0                     _I2C_Master_nAck:	
 10630  0AE0                     l2839:	
 10631                           ;incstack = 0
 10632                           ; Regs used in _I2C_Master_nAck: []
 10633                           
 10634                           
 10635                           ;I2C.c: 90: SSP1CON2bits.ACKDT = 1;
 10636  0AE0  0143               	movlb	3	; select bank3
 10637  0AE1  1691               	bsf	17,5	;volatile
 10638                           
 10639                           ;I2C.c: 91: SSP1CON2bits.ACKEN = 1;
 10640  0AE2  1611               	bsf	17,4	;volatile
 10641  0AE3                     l303:	
 10642  0AE3  0008               	return
 10643  0AE4                     __end_of_I2C_Master_nAck:	
 10644                           
 10645                           	psect	text44
 10646  0ADC                     __ptext44:	
 10647 ;; *************** function _I2C_Master_Ack *****************
 10648 ;; Defined at:
 10649 ;;		line 82 in file "I2C.c"
 10650 ;; Parameters:    Size  Location     Type
 10651 ;;		None
 10652 ;; Auto vars:     Size  Location     Type
 10653 ;;		None
 10654 ;; Return value:  Size  Location     Type
 10655 ;;                  1    wreg      void 
 10656 ;; Registers used:
 10657 ;;		None
 10658 ;; Tracked objects:
 10659 ;;		On entry : 0/0
 10660 ;;		On exit  : 0/0
 10661 ;;		Unchanged: 0/0
 10662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10663 ;;      Params:         0       0       0       0       0       0       0       0
 10664 ;;      Locals:         0       0       0       0       0       0       0       0
 10665 ;;      Temps:          0       0       0       0       0       0       0       0
 10666 ;;      Totals:         0       0       0       0       0       0       0       0
 10667 ;;Total ram usage:        0 bytes
 10668 ;; Hardware stack levels used:    1
 10669 ;; Hardware stack levels required when called:    2
 10670 ;; This function calls:
 10671 ;;		Nothing
 10672 ;; This function is called by:
 10673 ;;		_I2C_Master_Read
 10674 ;; This function uses a non-reentrant model
 10675 ;;
 10676                           
 10677                           
 10678                           ;psect for function _I2C_Master_Ack
 10679  0ADC                     _I2C_Master_Ack:	
 10680  0ADC                     l2837:	
 10681                           ;incstack = 0
 10682                           ; Regs used in _I2C_Master_Ack: []
 10683                           
 10684                           
 10685                           ;I2C.c: 84: SSP1CON2bits.ACKDT = 0;
 10686  0ADC  0143               	movlb	3	; select bank3
 10687  0ADD  1291               	bcf	17,5	;volatile
 10688                           
 10689                           ;I2C.c: 85: SSP1CON2bits.ACKEN = 1;
 10690  0ADE  1611               	bsf	17,4	;volatile
 10691  0ADF                     l300:	
 10692  0ADF  0008               	return
 10693  0AE0                     __end_of_I2C_Master_Ack:	
 10694                           
 10695                           	psect	text45
 10696  0D9B                     __ptext45:	
 10697 ;; *************** function _BQ_INIT *****************
 10698 ;; Defined at:
 10699 ;;		line 124 in file "BQ25895M.c"
 10700 ;; Parameters:    Size  Location     Type
 10701 ;;		None
 10702 ;; Auto vars:     Size  Location     Type
 10703 ;;		None
 10704 ;; Return value:  Size  Location     Type
 10705 ;;                  1    wreg      void 
 10706 ;; Registers used:
 10707 ;;		wreg, status,2, status,0, pclath, cstack
 10708 ;; Tracked objects:
 10709 ;;		On entry : 0/0
 10710 ;;		On exit  : 0/0
 10711 ;;		Unchanged: 0/0
 10712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10713 ;;      Params:         0       0       0       0       0       0       0       0
 10714 ;;      Locals:         0       0       0       0       0       0       0       0
 10715 ;;      Temps:          0       1       0       0       0       0       0       0
 10716 ;;      Totals:         0       1       0       0       0       0       0       0
 10717 ;;Total ram usage:        1 bytes
 10718 ;; Hardware stack levels used:    1
 10719 ;; Hardware stack levels required when called:    5
 10720 ;; This function calls:
 10721 ;;		_BQ_Write
 10722 ;; This function is called by:
 10723 ;;		_main
 10724 ;; This function uses a non-reentrant model
 10725 ;;
 10726                           
 10727                           
 10728                           ;psect for function _BQ_INIT
 10729  0D9B                     _BQ_INIT:	
 10730  0D9B                     l3425:	
 10731                           ;incstack = 0
 10732                           ; Regs used in _BQ_INIT: [wreg+status,2+status,0+pclath+cstack]
 10733                           
 10734                           
 10735                           ;BQ25895M.c: 125: BQ_Write(0x00, REG00_config);
 10736  0D9B  0140               	movlb	0	; select bank0
 10737  0D9C  0868               	movf	_REG00_config,w
 10738  0D9D  00A4               	movwf	??_BQ_INIT
 10739  0D9E  0824               	movf	??_BQ_INIT,w
 10740  0D9F  00A2               	movwf	BQ_Write@data
 10741  0DA0  3000               	movlw	0
 10742  0DA1  318B  23A6  318D   	fcall	_BQ_Write
 10743                           
 10744                           ;BQ25895M.c: 126: BQ_Write(0x03, REG03_config);
 10745  0DA4  0140               	movlb	0	; select bank0
 10746  0DA5  0867               	movf	_REG03_config,w
 10747  0DA6  00A4               	movwf	??_BQ_INIT
 10748  0DA7  0824               	movf	??_BQ_INIT,w
 10749  0DA8  00A2               	movwf	BQ_Write@data
 10750  0DA9  3003               	movlw	3
 10751  0DAA  318B  23A6  318D   	fcall	_BQ_Write
 10752                           
 10753                           ;BQ25895M.c: 127: BQ_Write(0x04, REG04_config);
 10754  0DAD  0140               	movlb	0	; select bank0
 10755  0DAE  0866               	movf	_REG04_config,w
 10756  0DAF  00A4               	movwf	??_BQ_INIT
 10757  0DB0  0824               	movf	??_BQ_INIT,w
 10758  0DB1  00A2               	movwf	BQ_Write@data
 10759  0DB2  3004               	movlw	4
 10760  0DB3  318B  23A6  318D   	fcall	_BQ_Write
 10761                           
 10762                           ;BQ25895M.c: 128: BQ_Write(0x07, REG07_config);
 10763  0DB6  0140               	movlb	0	; select bank0
 10764  0DB7  0865               	movf	_REG07_config,w
 10765  0DB8  00A4               	movwf	??_BQ_INIT
 10766  0DB9  0824               	movf	??_BQ_INIT,w
 10767  0DBA  00A2               	movwf	BQ_Write@data
 10768  0DBB  3007               	movlw	7
 10769  0DBC  318B  23A6  318D   	fcall	_BQ_Write
 10770                           
 10771                           ;BQ25895M.c: 129: BQ_Write(0x08, REG08_config);
 10772  0DBF  087C               	movf	_REG08_config,w
 10773  0DC0  0140               	movlb	0	; select bank0
 10774  0DC1  00A4               	movwf	??_BQ_INIT
 10775  0DC2  0824               	movf	??_BQ_INIT,w
 10776  0DC3  00A2               	movwf	BQ_Write@data
 10777  0DC4  3008               	movlw	8
 10778  0DC5  318B  23A6  318D   	fcall	_BQ_Write
 10779  0DC8                     l401:	
 10780  0DC8  0008               	return
 10781  0DC9                     __end_of_BQ_INIT:	
 10782                           
 10783                           	psect	text46
 10784  0BA6                     __ptext46:	
 10785 ;; *************** function _BQ_Write *****************
 10786 ;; Defined at:
 10787 ;;		line 16 in file "BQ25895M.c"
 10788 ;; Parameters:    Size  Location     Type
 10789 ;;  reg             1    wreg     unsigned char 
 10790 ;;  data            1    1[BANK0 ] unsigned char 
 10791 ;; Auto vars:     Size  Location     Type
 10792 ;;  reg             1    2[BANK0 ] unsigned char 
 10793 ;; Return value:  Size  Location     Type
 10794 ;;                  1    wreg      void 
 10795 ;; Registers used:
 10796 ;;		wreg, status,2, status,0, pclath, cstack
 10797 ;; Tracked objects:
 10798 ;;		On entry : 0/0
 10799 ;;		On exit  : 0/0
 10800 ;;		Unchanged: 0/0
 10801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10802 ;;      Params:         0       1       0       0       0       0       0       0
 10803 ;;      Locals:         0       1       0       0       0       0       0       0
 10804 ;;      Temps:          0       0       0       0       0       0       0       0
 10805 ;;      Totals:         0       2       0       0       0       0       0       0
 10806 ;;Total ram usage:        2 bytes
 10807 ;; Hardware stack levels used:    1
 10808 ;; Hardware stack levels required when called:    4
 10809 ;; This function calls:
 10810 ;;		_I2C_Master_Start
 10811 ;;		_I2C_Master_Stop
 10812 ;;		_I2C_Master_Write
 10813 ;; This function is called by:
 10814 ;;		_thermal_protection
 10815 ;;		_main
 10816 ;;		_BQ_UPDATE
 10817 ;;		_BQ_INIT
 10818 ;;		_BQ_read_adc
 10819 ;; This function uses a non-reentrant model
 10820 ;;
 10821                           
 10822                           
 10823                           ;psect for function _BQ_Write
 10824  0BA6                     _BQ_Write:	
 10825                           
 10826                           ;incstack = 0
 10827                           ; Regs used in _BQ_Write: [wreg+status,2+status,0+pclath+cstack]
 10828                           ;BQ_Write@reg stored from wreg
 10829  0BA6  0140               	movlb	0	; select bank0
 10830  0BA7  00A3               	movwf	BQ_Write@reg
 10831  0BA8                     l3085:	
 10832                           
 10833                           ;BQ25895M.c: 17: I2C_Master_Start();
 10834  0BA8  318A  22E4  318B   	fcall	_I2C_Master_Start
 10835                           
 10836                           ;BQ25895M.c: 18: I2C_Master_Write(0x6A << 1);
 10837  0BAB  30D4               	movlw	212
 10838  0BAC  318B  232F  318B   	fcall	_I2C_Master_Write
 10839                           
 10840                           ;BQ25895M.c: 19: I2C_Master_Write(reg);
 10841  0BAF  0140               	movlb	0	; select bank0
 10842  0BB0  0823               	movf	BQ_Write@reg,w
 10843  0BB1  318B  232F  318B   	fcall	_I2C_Master_Write
 10844                           
 10845                           ;BQ25895M.c: 20: I2C_Master_Write(data);
 10846  0BB4  0140               	movlb	0	; select bank0
 10847  0BB5  0822               	movf	BQ_Write@data,w
 10848  0BB6  318B  232F  318B   	fcall	_I2C_Master_Write
 10849                           
 10850                           ;BQ25895M.c: 21: I2C_Master_Stop();
 10851  0BB9  318A  22EA  318B   	fcall	_I2C_Master_Stop
 10852  0BBC                     l325:	
 10853  0BBC  0008               	return
 10854  0BBD                     __end_of_BQ_Write:	
 10855                           
 10856                           	psect	text47
 10857  0B2F                     __ptext47:	
 10858 ;; *************** function _I2C_Master_Write *****************
 10859 ;; Defined at:
 10860 ;;		line 76 in file "I2C.c"
 10861 ;; Parameters:    Size  Location     Type
 10862 ;;  data            1    wreg     unsigned char 
 10863 ;; Auto vars:     Size  Location     Type
 10864 ;;  data            1    0[BANK0 ] unsigned char 
 10865 ;; Return value:  Size  Location     Type
 10866 ;;                  1    wreg      void 
 10867 ;; Registers used:
 10868 ;;		wreg, status,2, status,0, pclath, cstack
 10869 ;; Tracked objects:
 10870 ;;		On entry : 0/0
 10871 ;;		On exit  : 0/0
 10872 ;;		Unchanged: 0/0
 10873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10874 ;;      Params:         0       0       0       0       0       0       0       0
 10875 ;;      Locals:         0       1       0       0       0       0       0       0
 10876 ;;      Temps:          0       0       0       0       0       0       0       0
 10877 ;;      Totals:         0       1       0       0       0       0       0       0
 10878 ;;Total ram usage:        1 bytes
 10879 ;; Hardware stack levels used:    1
 10880 ;; Hardware stack levels required when called:    3
 10881 ;; This function calls:
 10882 ;;		_I2C_Master_Wait
 10883 ;; This function is called by:
 10884 ;;		_BQ_Write
 10885 ;;		_BQ_Read
 10886 ;; This function uses a non-reentrant model
 10887 ;;
 10888                           
 10889                           
 10890                           ;psect for function _I2C_Master_Write
 10891  0B2F                     _I2C_Master_Write:	
 10892                           
 10893                           ;incstack = 0
 10894                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 10895                           ;I2C_Master_Write@data stored from wreg
 10896  0B2F  0140               	movlb	0	; select bank0
 10897  0B30  00A1               	movwf	I2C_Master_Write@data
 10898  0B31                     l2857:	
 10899                           
 10900                           ;I2C.c: 78: I2C_Master_Wait();
 10901  0B31  318B  2343  318B   	fcall	_I2C_Master_Wait
 10902  0B34                     l2859:	
 10903                           
 10904                           ;I2C.c: 79: SSP1BUF = data;
 10905  0B34  0140               	movlb	0	; select bank0
 10906  0B35  0821               	movf	I2C_Master_Write@data,w
 10907  0B36  0143               	movlb	3	; select bank3
 10908  0B37  008C               	movwf	12	;volatile
 10909  0B38                     l297:	
 10910  0B38  0008               	return
 10911  0B39                     __end_of_I2C_Master_Write:	
 10912                           
 10913                           	psect	text48
 10914  0AEA                     __ptext48:	
 10915 ;; *************** function _I2C_Master_Stop *****************
 10916 ;; Defined at:
 10917 ;;		line 70 in file "I2C.c"
 10918 ;; Parameters:    Size  Location     Type
 10919 ;;		None
 10920 ;; Auto vars:     Size  Location     Type
 10921 ;;		None
 10922 ;; Return value:  Size  Location     Type
 10923 ;;                  1    wreg      void 
 10924 ;; Registers used:
 10925 ;;		wreg, status,2, status,0, pclath, cstack
 10926 ;; Tracked objects:
 10927 ;;		On entry : 0/0
 10928 ;;		On exit  : 0/0
 10929 ;;		Unchanged: 0/0
 10930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10931 ;;      Params:         0       0       0       0       0       0       0       0
 10932 ;;      Locals:         0       0       0       0       0       0       0       0
 10933 ;;      Temps:          0       0       0       0       0       0       0       0
 10934 ;;      Totals:         0       0       0       0       0       0       0       0
 10935 ;;Total ram usage:        0 bytes
 10936 ;; Hardware stack levels used:    1
 10937 ;; Hardware stack levels required when called:    3
 10938 ;; This function calls:
 10939 ;;		_I2C_Master_Wait
 10940 ;; This function is called by:
 10941 ;;		_BQ_Write
 10942 ;;		_BQ_Read
 10943 ;; This function uses a non-reentrant model
 10944 ;;
 10945                           
 10946                           
 10947                           ;psect for function _I2C_Master_Stop
 10948  0AEA                     _I2C_Master_Stop:	
 10949  0AEA                     l2853:	
 10950                           ;incstack = 0
 10951                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 10952                           
 10953                           
 10954                           ;I2C.c: 72: I2C_Master_Wait();
 10955  0AEA  318B  2343  318A   	fcall	_I2C_Master_Wait
 10956  0AED                     l2855:	
 10957                           
 10958                           ;I2C.c: 73: SSP1CON2bits.PEN = 1;
 10959  0AED  0143               	movlb	3	; select bank3
 10960  0AEE  1511               	bsf	17,2	;volatile
 10961  0AEF                     l294:	
 10962  0AEF  0008               	return
 10963  0AF0                     __end_of_I2C_Master_Stop:	
 10964                           
 10965                           	psect	text49
 10966  0AE4                     __ptext49:	
 10967 ;; *************** function _I2C_Master_Start *****************
 10968 ;; Defined at:
 10969 ;;		line 58 in file "I2C.c"
 10970 ;; Parameters:    Size  Location     Type
 10971 ;;		None
 10972 ;; Auto vars:     Size  Location     Type
 10973 ;;		None
 10974 ;; Return value:  Size  Location     Type
 10975 ;;                  1    wreg      void 
 10976 ;; Registers used:
 10977 ;;		wreg, status,2, status,0, pclath, cstack
 10978 ;; Tracked objects:
 10979 ;;		On entry : 0/0
 10980 ;;		On exit  : 0/0
 10981 ;;		Unchanged: 0/0
 10982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10983 ;;      Params:         0       0       0       0       0       0       0       0
 10984 ;;      Locals:         0       0       0       0       0       0       0       0
 10985 ;;      Temps:          0       0       0       0       0       0       0       0
 10986 ;;      Totals:         0       0       0       0       0       0       0       0
 10987 ;;Total ram usage:        0 bytes
 10988 ;; Hardware stack levels used:    1
 10989 ;; Hardware stack levels required when called:    3
 10990 ;; This function calls:
 10991 ;;		_I2C_Master_Wait
 10992 ;; This function is called by:
 10993 ;;		_BQ_Write
 10994 ;;		_BQ_Read
 10995 ;; This function uses a non-reentrant model
 10996 ;;
 10997                           
 10998                           
 10999                           ;psect for function _I2C_Master_Start
 11000  0AE4                     _I2C_Master_Start:	
 11001  0AE4                     l2849:	
 11002                           ;incstack = 0
 11003                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 11004                           
 11005                           
 11006                           ;I2C.c: 60: I2C_Master_Wait();
 11007  0AE4  318B  2343  318A   	fcall	_I2C_Master_Wait
 11008  0AE7                     l2851:	
 11009                           
 11010                           ;I2C.c: 61: SSP1CON2bits.SEN = 1;
 11011  0AE7  0143               	movlb	3	; select bank3
 11012  0AE8  1411               	bsf	17,0	;volatile
 11013  0AE9                     l288:	
 11014  0AE9  0008               	return
 11015  0AEA                     __end_of_I2C_Master_Start:	
 11016                           
 11017                           	psect	text50
 11018  0B43                     __ptext50:	
 11019 ;; *************** function _I2C_Master_Wait *****************
 11020 ;; Defined at:
 11021 ;;		line 53 in file "I2C.c"
 11022 ;; Parameters:    Size  Location     Type
 11023 ;;		None
 11024 ;; Auto vars:     Size  Location     Type
 11025 ;;		None
 11026 ;; Return value:  Size  Location     Type
 11027 ;;                  1    wreg      void 
 11028 ;; Registers used:
 11029 ;;		wreg, status,2
 11030 ;; Tracked objects:
 11031 ;;		On entry : 0/0
 11032 ;;		On exit  : 0/0
 11033 ;;		Unchanged: 0/0
 11034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11035 ;;      Params:         0       0       0       0       0       0       0       0
 11036 ;;      Locals:         0       0       0       0       0       0       0       0
 11037 ;;      Temps:          0       0       0       0       0       0       0       0
 11038 ;;      Totals:         0       0       0       0       0       0       0       0
 11039 ;;Total ram usage:        0 bytes
 11040 ;; Hardware stack levels used:    1
 11041 ;; Hardware stack levels required when called:    2
 11042 ;; This function calls:
 11043 ;;		Nothing
 11044 ;; This function is called by:
 11045 ;;		_I2C_Master_Start
 11046 ;;		_I2C_Master_Stop
 11047 ;;		_I2C_Master_Write
 11048 ;;		_I2C_Master_Read
 11049 ;;		_I2C_Master_Repeated_Start
 11050 ;; This function uses a non-reentrant model
 11051 ;;
 11052                           
 11053                           
 11054                           ;psect for function _I2C_Master_Wait
 11055  0B43                     _I2C_Master_Wait:	
 11056  0B43                     l2833:	
 11057                           ;incstack = 0
 11058                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 11059                           
 11060  0B43                     l282:	
 11061                           ;I2C.c: 55: while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
 11062                           
 11063  0B43  0143               	movlb	3	; select bank3
 11064  0B44  190F               	btfsc	15,2	;volatile
 11065  0B45  2B47               	goto	u2081
 11066  0B46  2B48               	goto	u2080
 11067  0B47                     u2081:	
 11068  0B47  2B43               	goto	l282
 11069  0B48                     u2080:	
 11070  0B48                     l2835:	
 11071  0B48  0811               	movf	17,w	;volatile
 11072  0B49  391F               	andlw	31
 11073  0B4A  1D03               	btfss	3,2
 11074  0B4B  2B4D               	goto	u2091
 11075  0B4C  2B4E               	goto	u2090
 11076  0B4D                     u2091:	
 11077  0B4D  2B43               	goto	l282
 11078  0B4E                     u2090:	
 11079  0B4E                     l285:	
 11080  0B4E  0008               	return
 11081  0B4F                     __end_of_I2C_Master_Wait:	
 11082                           
 11083                           	psect	text51
 11084  0B67                     __ptext51:	
 11085 ;; *************** function _BQ_CONFIG_INIT *****************
 11086 ;; Defined at:
 11087 ;;		line 116 in file "BQ25895M.c"
 11088 ;; Parameters:    Size  Location     Type
 11089 ;;		None
 11090 ;; Auto vars:     Size  Location     Type
 11091 ;;		None
 11092 ;; Return value:  Size  Location     Type
 11093 ;;                  1    wreg      void 
 11094 ;; Registers used:
 11095 ;;		wreg
 11096 ;; Tracked objects:
 11097 ;;		On entry : 0/0
 11098 ;;		On exit  : 0/0
 11099 ;;		Unchanged: 0/0
 11100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11101 ;;      Params:         0       0       0       0       0       0       0       0
 11102 ;;      Locals:         0       0       0       0       0       0       0       0
 11103 ;;      Temps:          0       1       0       0       0       0       0       0
 11104 ;;      Totals:         0       1       0       0       0       0       0       0
 11105 ;;Total ram usage:        1 bytes
 11106 ;; Hardware stack levels used:    1
 11107 ;; Hardware stack levels required when called:    2
 11108 ;; This function calls:
 11109 ;;		Nothing
 11110 ;; This function is called by:
 11111 ;;		_main
 11112 ;; This function uses a non-reentrant model
 11113 ;;
 11114                           
 11115                           
 11116                           ;psect for function _BQ_CONFIG_INIT
 11117  0B67                     _BQ_CONFIG_INIT:	
 11118  0B67                     l3421:	
 11119                           ;incstack = 0
 11120                           ; Regs used in _BQ_CONFIG_INIT: [wreg]
 11121                           
 11122                           
 11123                           ;BQ25895M.c: 117: REG00_config = (EN_HIZ<<7)|(EN_ILIM<<6)|(INILIM);
 11124  0B67  307A               	movlw	122
 11125  0B68  0140               	movlb	0	; select bank0
 11126  0B69  00A1               	movwf	??_BQ_CONFIG_INIT
 11127  0B6A  0821               	movf	??_BQ_CONFIG_INIT,w
 11128  0B6B  00E8               	movwf	_REG00_config
 11129                           
 11130                           ;BQ25895M.c: 118: REG03_config = (WD_RST<<6)|(OTG_CONFIG<<5)|(CHG_CONFIG<<4)|(SYS_MIN<<1
      +                          );
 11131  0B6C  301A               	movlw	26
 11132  0B6D  00A1               	movwf	??_BQ_CONFIG_INIT
 11133  0B6E  0821               	movf	??_BQ_CONFIG_INIT,w
 11134  0B6F  00E7               	movwf	_REG03_config
 11135                           
 11136                           ;BQ25895M.c: 119: REG04_config = (ICHG);
 11137  0B70  3060               	movlw	96
 11138  0B71  00A1               	movwf	??_BQ_CONFIG_INIT
 11139  0B72  0821               	movf	??_BQ_CONFIG_INIT,w
 11140  0B73  00E6               	movwf	_REG04_config
 11141                           
 11142                           ;BQ25895M.c: 120: REG07_config = (EN_TERM<<7)|(STAT_DIS<<6)|(WATCHDOG<<4)|(EN_TIMER<<3)|
      +                          (CHG_TIMER<<1)|0b1;
 11143  0B74  30DD               	movlw	221
 11144  0B75  00A1               	movwf	??_BQ_CONFIG_INIT
 11145  0B76  0821               	movf	??_BQ_CONFIG_INIT,w
 11146  0B77  00E5               	movwf	_REG07_config
 11147  0B78                     l3423:	
 11148                           
 11149                           ;BQ25895M.c: 121: REG08_config = (BAT_COMP<<5)|(VCLAMP<<2)|TREG;
 11150  0B78  01FC               	clrf	_REG08_config
 11151  0B79  0AFC               	incf	_REG08_config,f
 11152  0B7A                     l398:	
 11153  0B7A  0008               	return
 11154  0B7B                     __end_of_BQ_CONFIG_INIT:	
 11155                           
 11156                           	psect	intentry
 11157  0004                     __pintentry:	
 11158 ;; *************** function _ISR *****************
 11159 ;; Defined at:
 11160 ;;		line 63 in file "main.c"
 11161 ;; Parameters:    Size  Location     Type
 11162 ;;		None
 11163 ;; Auto vars:     Size  Location     Type
 11164 ;;		None
 11165 ;; Return value:  Size  Location     Type
 11166 ;;                  1    wreg      void 
 11167 ;; Registers used:
 11168 ;;		wreg, status,2, status,0, pclath, cstack
 11169 ;; Tracked objects:
 11170 ;;		On entry : 0/0
 11171 ;;		On exit  : 0/0
 11172 ;;		Unchanged: 0/0
 11173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11174 ;;      Params:         0       0       0       0       0       0       0       0
 11175 ;;      Locals:         0       0       0       0       0       0       0       0
 11176 ;;      Temps:          0       0       0       0       0       0       0       0
 11177 ;;      Totals:         0       0       0       0       0       0       0       0
 11178 ;;Total ram usage:        0 bytes
 11179 ;; Hardware stack levels used:    1
 11180 ;; Hardware stack levels required when called:    1
 11181 ;; This function calls:
 11182 ;;		i1_get_time
 11183 ;;		i1_timer_diff
 11184 ;; This function is called by:
 11185 ;;		Interrupt level 1
 11186 ;; This function uses a non-reentrant model
 11187 ;;
 11188                           
 11189  0004                     _ISR:	
 11190                           
 11191                           ;incstack = 0
 11192  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 11193                           
 11194                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
 11195  0005  3180               	pagesel	$
 11196  0006                     i1l3867:	
 11197                           
 11198                           ;main.c: 65: if(TMR1IF) {
 11199  0006  014E               	movlb	14	; select bank14
 11200  0007  1C10               	btfss	16,0	;volatile
 11201  0008  280A               	goto	u361_21
 11202  0009  280B               	goto	u361_20
 11203  000A                     u361_21:	
 11204  000A  2819               	goto	i1l3873
 11205  000B                     u361_20:	
 11206  000B                     i1l3869:	
 11207                           
 11208                           ;main.c: 66: TMR1IF = 0;
 11209  000B  1010               	bcf	16,0	;volatile
 11210                           
 11211                           ;main.c: 67: TMR1 = 65228;
 11212  000C  30FE               	movlw	254
 11213  000D  0144               	movlb	4	; select bank4
 11214  000E  008D               	movwf	13	;volatile
 11215  000F  30CC               	movlw	204
 11216  0010  008C               	movwf	12	;volatile
 11217  0011                     i1l3871:	
 11218                           
 11219                           ;main.c: 68: timer_counter++;
 11220  0011  3001               	movlw	1
 11221  0012  07F8               	addwf	_timer_counter,f
 11222  0013  3000               	movlw	0
 11223  0014  3DF9               	addwfc	_timer_counter+1,f
 11224  0015  3000               	movlw	0
 11225  0016  3DFA               	addwfc	_timer_counter+2,f
 11226  0017  3000               	movlw	0
 11227  0018  3DFB               	addwfc	_timer_counter+3,f
 11228  0019                     i1l3873:	
 11229                           
 11230                           ;main.c: 69: };main.c: 71: if(IOCAF5) {
 11231  0019  017E               	movlb	62	; select bank62
 11232  001A  1EBF               	btfss	63,5	;volatile
 11233  001B  281D               	goto	u362_21
 11234  001C  281E               	goto	u362_20
 11235  001D                     u362_21:	
 11236  001D  281F               	goto	i1l121
 11237  001E                     u362_20:	
 11238  001E                     i1l3875:	
 11239                           
 11240                           ;main.c: 72: IOCAF5 = 0;
 11241  001E  12BF               	bcf	63,5	;volatile
 11242  001F                     i1l121:	
 11243                           
 11244                           ;main.c: 73: };main.c: 75: if(!RA5) {
 11245  001F  0140               	movlb	0	; select bank0
 11246  0020  1A8C               	btfsc	12,5	;volatile
 11247  0021  2823               	goto	u363_21
 11248  0022  2824               	goto	u363_20
 11249  0023                     u363_21:	
 11250  0023  2838               	goto	i1l3883
 11251  0024                     u363_20:	
 11252  0024                     i1l3877:	
 11253                           
 11254                           ;main.c: 76: if(!btn_is_pressed) {
 11255  0024  087D               	movf	_btn_is_pressed,w
 11256  0025  1D03               	btfss	3,2
 11257  0026  2828               	goto	u364_21
 11258  0027  2829               	goto	u364_20
 11259  0028                     u364_21:	
 11260  0028  2835               	goto	i1l3881
 11261  0029                     u364_20:	
 11262  0029                     i1l3879:	
 11263                           
 11264                           ;main.c: 77: btn_time_start = get_time();
 11265  0029  318B  231D  3180   	fcall	i1_get_time
 11266  002C  0873               	movf	?i1_get_time+3,w
 11267  002D  0142               	movlb	2	; select bank2
 11268  002E  00BB               	movwf	(_btn_time_start+3)^(0+256)
 11269  002F  0872               	movf	?i1_get_time+2,w
 11270  0030  00BA               	movwf	(_btn_time_start+2)^(0+256)
 11271  0031  0871               	movf	?i1_get_time+1,w
 11272  0032  00B9               	movwf	(_btn_time_start+1)^(0+256)
 11273  0033  0870               	movf	?i1_get_time,w
 11274  0034  00B8               	movwf	_btn_time_start^(0+256)
 11275  0035                     i1l3881:	
 11276                           
 11277                           ;main.c: 78: };main.c: 79: btn_is_pressed = 1;
 11278  0035  01FD               	clrf	_btn_is_pressed
 11279  0036  0AFD               	incf	_btn_is_pressed,f
 11280                           
 11281                           ;main.c: 80: }
 11282  0037  2865               	goto	i1l127
 11283  0038                     i1l3883:	
 11284                           
 11285                           ;main.c: 81: else {;main.c: 82: if(btn_is_pressed) {
 11286  0038  087D               	movf	_btn_is_pressed,w
 11287  0039  1903               	btfsc	3,2
 11288  003A  283C               	goto	u365_21
 11289  003B  283D               	goto	u365_20
 11290  003C                     u365_21:	
 11291  003C  2864               	goto	i1l3891
 11292  003D                     u365_20:	
 11293  003D                     i1l3885:	
 11294                           
 11295                           ;main.c: 83: btn_time = timer_diff(btn_time_start);
 11296  003D  0142               	movlb	2	; select bank2
 11297  003E  083B               	movf	(_btn_time_start+3)^(0+256),w
 11298  003F  00F3               	movwf	i1timer_diff@t+3
 11299  0040  083A               	movf	(_btn_time_start+2)^(0+256),w
 11300  0041  00F2               	movwf	i1timer_diff@t+2
 11301  0042  0839               	movf	(_btn_time_start+1)^(0+256),w
 11302  0043  00F1               	movwf	i1timer_diff@t+1
 11303  0044  0838               	movf	_btn_time_start^(0+256),w
 11304  0045  00F0               	movwf	i1timer_diff@t
 11305  0046  318B  237B  3180   	fcall	i1_timer_diff
 11306  0049  0873               	movf	?i1_timer_diff+3,w
 11307  004A  0142               	movlb	2	; select bank2
 11308  004B  00B7               	movwf	(_btn_time+3)^(0+256)
 11309  004C  0872               	movf	?i1_timer_diff+2,w
 11310  004D  00B6               	movwf	(_btn_time+2)^(0+256)
 11311  004E  0871               	movf	?i1_timer_diff+1,w
 11312  004F  00B5               	movwf	(_btn_time+1)^(0+256)
 11313  0050  0870               	movf	?i1_timer_diff,w
 11314  0051  00B4               	movwf	_btn_time^(0+256)
 11315  0052                     i1l3887:	
 11316                           
 11317                           ;main.c: 84: if(btn_time >= 5) {
 11318  0052  0837               	movf	(_btn_time+3)^(0+256),w
 11319  0053  1D03               	btfss	3,2
 11320  0054  2861               	goto	u366_20
 11321  0055  0836               	movf	(_btn_time+2)^(0+256),w
 11322  0056  1D03               	btfss	3,2
 11323  0057  2861               	goto	u366_20
 11324  0058  0835               	movf	(_btn_time+1)^(0+256),w
 11325  0059  1D03               	btfss	3,2
 11326  005A  2861               	goto	u366_20
 11327  005B  3005               	movlw	5
 11328  005C  0234               	subwf	_btn_time^(0+256),w
 11329  005D  1C03               	btfss	3,0
 11330  005E  2860               	goto	u366_21
 11331  005F  2861               	goto	u366_20
 11332  0060                     u366_21:	
 11333  0060  2864               	goto	i1l3891
 11334  0061                     u366_20:	
 11335  0061                     i1l3889:	
 11336                           
 11337                           ;main.c: 85: btn_is_debounced = 1;
 11338  0061  0140               	movlb	0	; select bank0
 11339  0062  01EA               	clrf	_btn_is_debounced
 11340  0063  0AEA               	incf	_btn_is_debounced,f
 11341  0064                     i1l3891:	
 11342                           
 11343                           ;main.c: 86: };main.c: 87: };main.c: 88: btn_is_pressed = 0;
 11344  0064  01FD               	clrf	_btn_is_pressed
 11345  0065                     i1l127:	
 11346  0065  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 11347  0066  0009               	retfie
 11348  0067                     __end_of_ISR:	
 11349                           
 11350                           	psect	text53
 11351  0B7B                     __ptext53:	
 11352 ;; *************** function i1_timer_diff *****************
 11353 ;; Defined at:
 11354 ;;		line 17 in file "time.c"
 11355 ;; Parameters:    Size  Location     Type
 11356 ;;  t               4    0[COMMON] unsigned long 
 11357 ;; Auto vars:     Size  Location     Type
 11358 ;;		None
 11359 ;; Return value:  Size  Location     Type
 11360 ;;                  4    0[COMMON] unsigned long 
 11361 ;; Registers used:
 11362 ;;		wreg
 11363 ;; Tracked objects:
 11364 ;;		On entry : 0/0
 11365 ;;		On exit  : 0/0
 11366 ;;		Unchanged: 0/0
 11367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11368 ;;      Params:         4       0       0       0       0       0       0       0
 11369 ;;      Locals:         0       0       0       0       0       0       0       0
 11370 ;;      Temps:          4       0       0       0       0       0       0       0
 11371 ;;      Totals:         8       0       0       0       0       0       0       0
 11372 ;;Total ram usage:        8 bytes
 11373 ;; Hardware stack levels used:    1
 11374 ;; This function calls:
 11375 ;;		Nothing
 11376 ;; This function is called by:
 11377 ;;		_ISR
 11378 ;; This function uses a non-reentrant model
 11379 ;;
 11380                           
 11381                           
 11382                           ;psect for function i1_timer_diff
 11383  0B7B                     i1_timer_diff:	
 11384  0B7B                     i1l3863:	
 11385                           ;incstack = 0
 11386                           ; Regs used in i1_timer_diff: [wreg]
 11387                           
 11388                           
 11389                           ;time.c: 18: return timer_counter - t;
 11390  0B7B  0870               	movf	i1timer_diff@t,w
 11391  0B7C  0278               	subwf	_timer_counter,w
 11392  0B7D  00F4               	movwf	??i1_timer_diff
 11393  0B7E  0871               	movf	i1timer_diff@t+1,w
 11394  0B7F  3B79               	subwfb	_timer_counter+1,w
 11395  0B80  00F5               	movwf	??i1_timer_diff+1
 11396  0B81  0872               	movf	i1timer_diff@t+2,w
 11397  0B82  3B7A               	subwfb	_timer_counter+2,w
 11398  0B83  00F6               	movwf	??i1_timer_diff+2
 11399  0B84  0873               	movf	i1timer_diff@t+3,w
 11400  0B85  3B7B               	subwfb	_timer_counter+3,w
 11401  0B86  00F7               	movwf	??i1_timer_diff+3
 11402  0B87  0877               	movf	??i1_timer_diff+3,w
 11403  0B88  00F3               	movwf	?i1_timer_diff+3
 11404  0B89  0876               	movf	??i1_timer_diff+2,w
 11405  0B8A  00F2               	movwf	?i1_timer_diff+2
 11406  0B8B  0875               	movf	??i1_timer_diff+1,w
 11407  0B8C  00F1               	movwf	?i1_timer_diff+1
 11408  0B8D  0874               	movf	??i1_timer_diff,w
 11409  0B8E  00F0               	movwf	?i1_timer_diff
 11410  0B8F                     i1l791:	
 11411  0B8F  0008               	return
 11412  0B90                     __end_ofi1_timer_diff:	
 11413                           
 11414                           	psect	text54
 11415  0B1D                     __ptext54:	
 11416 ;; *************** function i1_get_time *****************
 11417 ;; Defined at:
 11418 ;;		line 13 in file "time.c"
 11419 ;; Parameters:    Size  Location     Type
 11420 ;;		None
 11421 ;; Auto vars:     Size  Location     Type
 11422 ;;		None
 11423 ;; Return value:  Size  Location     Type
 11424 ;;                  4    0[COMMON] unsigned long 
 11425 ;; Registers used:
 11426 ;;		wreg
 11427 ;; Tracked objects:
 11428 ;;		On entry : 0/0
 11429 ;;		On exit  : 0/0
 11430 ;;		Unchanged: 0/0
 11431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11432 ;;      Params:         4       0       0       0       0       0       0       0
 11433 ;;      Locals:         0       0       0       0       0       0       0       0
 11434 ;;      Temps:          0       0       0       0       0       0       0       0
 11435 ;;      Totals:         4       0       0       0       0       0       0       0
 11436 ;;Total ram usage:        4 bytes
 11437 ;; Hardware stack levels used:    1
 11438 ;; This function calls:
 11439 ;;		Nothing
 11440 ;; This function is called by:
 11441 ;;		_ISR
 11442 ;; This function uses a non-reentrant model
 11443 ;;
 11444                           
 11445                           
 11446                           ;psect for function i1_get_time
 11447  0B1D                     i1_get_time:	
 11448  0B1D                     i1l3859:	
 11449                           ;incstack = 0
 11450                           ; Regs used in i1_get_time: [wreg]
 11451                           
 11452                           
 11453                           ;time.c: 14: return timer_counter;
 11454  0B1D  087B               	movf	_timer_counter+3,w
 11455  0B1E  00F3               	movwf	?i1_get_time+3
 11456  0B1F  087A               	movf	_timer_counter+2,w
 11457  0B20  00F2               	movwf	?i1_get_time+2
 11458  0B21  0879               	movf	_timer_counter+1,w
 11459  0B22  00F1               	movwf	?i1_get_time+1
 11460  0B23  0878               	movf	_timer_counter,w
 11461  0B24  00F0               	movwf	?i1_get_time
 11462  0B25                     i1l788:	
 11463  0B25  0008               	return
 11464  0B26                     __end_ofi1_get_time:	
 11465  007E                     btemp	set	126	;btemp
 11466  007E                     int$flags	set	126
 11467  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    40
    Data        11
    BSS         55
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            79     63      79
    BANK1            80     67      80
    BANK2            80      0      31
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    i2c_master_read_u16@data	PTR unsigned int  size(1) Largest target is 2
		 -> stusb_negotiate@header(BANK1[2]), 

    i2c_master_read_u8@data	PTR unsigned char  size(1) Largest target is 40
		 -> write_sector@buffer(COMMON[1]), read_sector@buffer(COMMON[1]), enter_write_mode@buffer(COMMON[1]), stusb_negotiate@buffer(BANK1[40]), 
		 -> reset@res(BANK0[1]), 

    i2c_master_read@buf	PTR void  size(1) Largest target is 40
		 -> nvm_read@sectors(BANK0[40]), write_sector@buffer(COMMON[1]), read_sector@buffer(COMMON[1]), enter_write_mode@buffer(COMMON[1]), 
		 -> stusb_negotiate@header(BANK1[2]), stusb_negotiate@buffer(BANK1[40]), reset@res(BANK0[1]), 

    i2c_master_read@data	PTR unsigned char  size(1) Largest target is 40
		 -> nvm_read@sectors(BANK0[40]), write_sector@buffer(COMMON[1]), read_sector@buffer(COMMON[1]), enter_write_mode@buffer(COMMON[1]), 
		 -> stusb_negotiate@header(BANK1[2]), stusb_negotiate@buffer(BANK1[40]), reset@res(BANK0[1]), 

    i2c_master_write@buf	PTR const void  size(2) Largest target is 40
		 -> nvm_config(CODE[40]), i2c_master_write_u32@data(BANK0[4]), i2c_master_write_u16@data(COMMON[2]), i2c_master_write_u8@data(BANK0[1]), 

    i2c_master_write@data	PTR unsigned char  size(2) Largest target is 40
		 -> nvm_config(CODE[40]), i2c_master_write_u32@data(BANK0[4]), i2c_master_write_u16@data(COMMON[2]), i2c_master_write_u8@data(BANK0[1]), 

    negotiate_optimal_pdo@src_pdos	PTR unsigned long  size(1) Largest target is 40
		 -> stusb_negotiate@buffer(BANK1[40]), 

    sp__BQ_get_chrg_state	PTR unsigned char  size(1) Largest target is 2
		 -> BQ_get_chrg_state@data(BANK0[2]), 

    VBUS_CHRG_STATE	PTR unsigned char  size(1) Largest target is 2
		 -> NULL(NULL[0]), BQ_get_chrg_state@data(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_timer_diff

Critical Paths under _main in BANK0

    _main->_stusb_negotiate
    _thermal_protection->_readADC
    _stusb_negotiate->_negotiate_optimal_pdo
    _negotiate_optimal_pdo->_write_pdo
    _write_pdo->_reset
    _reset->_i2c_master_read_u8
    _reset->_i2c_master_write_u8
    _i2c_master_write_u8->_i2c_master_write
    _i2c_master_read_u8->_i2c_master_read
    _i2c_master_write_u32->_i2c_master_write
    _i2c_master_write->_i2c_master_send_byte
    _i2c_master_read_u16->_i2c_master_read
    _i2c_master_read->_i2c_master_send_byte
    _led_modes->_battery_fade
    _flash_led->_timer_diff
    _battery_fade->_Map
    _Map->___awdiv
    ___awdiv->___wmul
    _RGB_fade->_timer_diff
    _chrg_led->_timer_diff
    _I2C_Master_Init->___lldiv
    ___lldiv->___lmul
    _BQ_UPDATE->_BQ_get_chrg_state
    _BQ_get_chrg_state->_BQ_Read
    _BQ_Read->_I2C_Master_Read
    _BQ_INIT->_BQ_Write
    _BQ_Write->_I2C_Master_Write

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_stusb_negotiate
    _stusb_negotiate->_negotiate_optimal_pdo

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   37759
                                             62 BANK0      1     1      0
                     _BQ_CONFIG_INIT
                            _BQ_INIT
                          _BQ_UPDATE
                           _BQ_Write
                    _I2C_Master_Init
                      _I2C_bus_reset
                          _PIC_SETUP
                           _PPS_lock
                         _PPS_unlock
                           _PWM_INIT
                     _PWM_power_down
                           _chrg_led
                           _get_time
                          _led_modes
                    _stusb_negotiate
                 _thermal_protection
                         _timer_diff
 ---------------------------------------------------------------------------------
 (1) _thermal_protection                                   1     1      0     772
                                              5 BANK0      1     1      0
                           _BQ_Write
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              5     3      2      22
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _stusb_negotiate                                     48    48      0   28404
                                             56 BANK0      6     6      0
                                             25 BANK1     42    42      0
                    _i2c_master_read
                _i2c_master_read_u16
                 _i2c_master_read_u8
              _negotiate_optimal_pdo
                              _reset
 ---------------------------------------------------------------------------------
 (2) _negotiate_optimal_pdo                               35    33      2   12952
                                             46 BANK0     10     8      2
                                              0 BANK1     25    25      0
                            ___lldiv
                             ___lmul
                             ___wmul
                          _write_pdo
 ---------------------------------------------------------------------------------
 (3) _write_pdo                                           21    16      5   10978
                                             25 BANK0     21    16      5
                            ___lwdiv
               _i2c_master_write_u32
                              _reset
 ---------------------------------------------------------------------------------
 (2) _reset                                                7     5      2    8772
                                             18 BANK0      7     5      2
                 _i2c_master_read_u8
                _i2c_master_write_u8
 ---------------------------------------------------------------------------------
 (3) _i2c_master_write_u8                                  4     2      2    5483
                                             14 BANK0      4     2      2
                   _i2c_master_write
 ---------------------------------------------------------------------------------
 (3) _i2c_master_read_u8                                   5     3      2    3107
                                             13 BANK0      5     3      2
                    _i2c_master_read
 ---------------------------------------------------------------------------------
 (4) _i2c_master_write_u32                                 7     2      5    1379
                                             14 BANK0      7     2      5
                   _i2c_master_write
 ---------------------------------------------------------------------------------
 (4) _i2c_master_write                                    10     5      5    1160
                                              4 BANK0     10     5      5
               _i2c_master_send_byte
                   _i2c_master_start
                    _i2c_master_stop
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     466
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) _i2c_master_read_u16                                  5     3      2    1739
                                             13 BANK0      5     3      2
                    _i2c_master_read
 ---------------------------------------------------------------------------------
 (4) _i2c_master_read                                      9     5      4    1521
                                              4 BANK0      9     5      4
            _i2c_master_receive_byte
            _i2c_master_repeat_start
               _i2c_master_send_byte
                   _i2c_master_start
                    _i2c_master_stop
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_stop                                      0     0      0       0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_start                                     0     0      0       0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_send_byte                                 4     1      3      22
                                              0 BANK0      4     1      3
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_repeat_start                              0     0      0       0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_receive_byte                              3     3      0      45
                                              0 BANK0      3     3      0
                    _i2c_master_wait
 ---------------------------------------------------------------------------------
 (5) _i2c_master_wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_modes                                            0     0      0    3688
                           _RGB_fade
                       _battery_fade
                          _flash_led
 ---------------------------------------------------------------------------------
 (2) _flash_led                                            1     1      0     528
                                              8 BANK0      1     1      0
                           _get_time
                         _timer_diff
 ---------------------------------------------------------------------------------
 (2) _battery_fade                                         9     9      0    2632
                                             23 BANK0      9     9      0
                                _Map
 ---------------------------------------------------------------------------------
 (3) _Map                                                  8     2      6    2294
                                             15 BANK0      8     2      6
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     452
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _RGB_fade                                             1     1      0     528
                                              8 BANK0      1     1      0
                           _get_time
                         _timer_diff
 ---------------------------------------------------------------------------------
 (1) _chrg_led                                             1     1      0     528
                                              8 BANK0      1     1      0
                           _get_time
                         _timer_diff
 ---------------------------------------------------------------------------------
 (1) _PWM_power_down                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_INIT                                             0     0      0       0
                           _PPS_lock
                         _PPS_unlock
 ---------------------------------------------------------------------------------
 (2) _PPS_unlock                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PPS_lock                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIC_SETUP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_bus_reset                                        2     2      0      24
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     716
                                             26 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                             12 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _BQ_UPDATE                                            1     1      0    1599
                                             14 BANK0      1     1      0
                            _BQ_Read
                           _BQ_Write
                  _BQ_get_chrg_state
                           _get_time
                         _timer_diff
 ---------------------------------------------------------------------------------
 (1) _timer_diff                                           8     4      4     528
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (3) _get_time                                             4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _BQ_get_chrg_state                                    5     5      0     209
                                              9 BANK0      5     5      0
                            _BQ_Read
 ---------------------------------------------------------------------------------
 (3) _BQ_Read                                              6     4      2     112
                                              3 BANK0      6     4      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Read                                      3     3      0      45
                                              0 BANK0      3     3      0
                     _I2C_Master_Ack
                    _I2C_Master_Wait
                    _I2C_Master_nAck
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_nAck                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Ack                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BQ_INIT                                              1     1      0     750
                                              3 BANK0      1     1      0
                           _BQ_Write
 ---------------------------------------------------------------------------------
 (2) _BQ_Write                                             2     1      1     750
                                              1 BANK0      2     1      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     1     1      0      22
                                              0 BANK0      1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BQ_CONFIG_INIT                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  0     0      0      48
                         i1_get_time
                       i1_timer_diff
 ---------------------------------------------------------------------------------
 (10) i1_timer_diff                                        8     4      4      48
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (10) i1_get_time                                          4     0      4       0
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BQ_CONFIG_INIT
   _BQ_INIT
     _BQ_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _BQ_UPDATE
     _BQ_Read
       _I2C_Master_Read
         _I2C_Master_Ack
         _I2C_Master_Wait
         _I2C_Master_nAck
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BQ_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _BQ_get_chrg_state
       _BQ_Read
         _I2C_Master_Read
           _I2C_Master_Ack
           _I2C_Master_Wait
           _I2C_Master_nAck
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _get_time
     _timer_diff
   _BQ_Write
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _I2C_Master_Init
     ___lldiv
       ___lmul (ARG)
   _I2C_bus_reset
   _PIC_SETUP
   _PPS_lock
   _PPS_unlock
   _PWM_INIT
     _PPS_lock
     _PPS_unlock
   _PWM_power_down
   _chrg_led
     _get_time
     _timer_diff
   _get_time
   _led_modes
     _RGB_fade
       _get_time
       _timer_diff
     _battery_fade
       _Map
         ___awdiv
           ___wmul (ARG)
         ___wmul
     _flash_led
       _get_time
       _timer_diff
   _stusb_negotiate
     _i2c_master_read
       _i2c_master_receive_byte
         _i2c_master_wait
       _i2c_master_repeat_start
         _i2c_master_wait
       _i2c_master_send_byte
         _i2c_master_wait
       _i2c_master_start
         _i2c_master_wait
       _i2c_master_stop
         _i2c_master_wait
       _i2c_master_wait
     _i2c_master_read_u16
       _i2c_master_read
         _i2c_master_receive_byte
           _i2c_master_wait
         _i2c_master_repeat_start
           _i2c_master_wait
         _i2c_master_send_byte
           _i2c_master_wait
         _i2c_master_start
           _i2c_master_wait
         _i2c_master_stop
           _i2c_master_wait
         _i2c_master_wait
     _i2c_master_read_u8
       _i2c_master_read
         _i2c_master_receive_byte
           _i2c_master_wait
         _i2c_master_repeat_start
           _i2c_master_wait
         _i2c_master_send_byte
           _i2c_master_wait
         _i2c_master_start
           _i2c_master_wait
         _i2c_master_stop
           _i2c_master_wait
         _i2c_master_wait
     _negotiate_optimal_pdo
       ___lldiv
         ___lmul (ARG)
       ___lmul
       ___wmul
       _write_pdo
         ___lwdiv
         _i2c_master_write_u32
           _i2c_master_write
             _i2c_master_send_byte
               _i2c_master_wait
             _i2c_master_start
               _i2c_master_wait
             _i2c_master_stop
               _i2c_master_wait
             _i2c_master_wait
         _reset
           _i2c_master_read_u8
             _i2c_master_read
               _i2c_master_receive_byte
                 _i2c_master_wait
               _i2c_master_repeat_start
                 _i2c_master_wait
               _i2c_master_send_byte
                 _i2c_master_wait
               _i2c_master_start
                 _i2c_master_wait
               _i2c_master_stop
                 _i2c_master_wait
               _i2c_master_wait
           _i2c_master_write_u8
             _i2c_master_write
               _i2c_master_send_byte
                 _i2c_master_wait
               _i2c_master_start
                 _i2c_master_wait
               _i2c_master_stop
                 _i2c_master_wait
               _i2c_master_wait
     _reset
       _i2c_master_read_u8
         _i2c_master_read
           _i2c_master_receive_byte
             _i2c_master_wait
           _i2c_master_repeat_start
             _i2c_master_wait
           _i2c_master_send_byte
             _i2c_master_wait
           _i2c_master_start
             _i2c_master_wait
           _i2c_master_stop
             _i2c_master_wait
           _i2c_master_wait
       _i2c_master_write_u8
         _i2c_master_write
           _i2c_master_send_byte
             _i2c_master_wait
           _i2c_master_start
             _i2c_master_wait
           _i2c_master_stop
             _i2c_master_wait
           _i2c_master_wait
   _thermal_protection
     _BQ_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _readADC
   _timer_diff

 _ISR (ROOT)
   i1_get_time
   i1_timer_diff

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1EF      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      CC       4        0.0%
BITBANK0            4F      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               4F     3F      4F       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     43      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      1F      10       38.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      CC      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 02 07:18:54 2019

                                   _c 0063                                     _i 0064  
                   _BQ_get_chrg_state 0C8B                           __CFG_CP$OFF 0000  
                        ___awdiv@sign 002D                   ___wmul@multiplicand 0023  
                  ?_BQ_get_chrg_state 0070                  __end_ofi1_timer_diff 0B90  
                          _PPS_unlock 0B0E                                   l107 0D9A  
                                 l131 0C4C                                   l300 0ADF  
                                 l230 0EAC                                   l303 0AE3  
                                 l143 0224                                   l401 0DC8  
                                 l241 0B14                                   l233 0B5A  
                                 l154 02A5                                   l146 024E  
                                 l308 0CCE                                   l244 0B1C  
                                 l325 0BBC                                   l501 0D6F  
                                 l334 0CAB                                   l414 0D39  
                                 l328 0D1C                                   l353 04B1  
                                 l417 0D45                                   l282 0B43  
                                 l451 0CF3                                   l276 0EF6  
                                 l285 0B4E                                   l349 04B1  
                                 l621 0AFB                                   l294 0AEF  
                                 l279 0DF7                                   l615 0B5B  
                                 l288 0AE9                                   l448 06A4  
                                 l624 0AF5                                   l560 0785  
                                 l297 0B38                                   l618 0B66  
                                 l634 0BD3                                   l459 071C  
                                 l627 0B01                                   l644 0FFF  
                                 l660 0C03                                   l637 0C6A  
                                 l398 0B7A                                   l478 0533  
                                 l654 0C33                                   l566 05B0  
                                 l488 0F47                                   l664 062B  
                                 l585 0410                                   l675 0C1B  
                                 l579 01F6                                   l588 034F  
                                 l861 0C8A                                   l678 0BEB  
                                 l791 0BA5                                   l873 0E2B  
                                 l859 0C76                                   l788 0B42  
                                 l895 0FA2                                   _RA2 0062  
                                 _RC0 0070                                   _RA5 0065  
                                 _RC1 0071                                   _RC2 0072  
                                 _RC3 0073                                   _RC4 0074  
                                 _RC5 0075                                   _PR2 028D  
                                 _ISR 0004                                   _Map 0CCF  
                                 _dir 0061                          __CFG_BORV$LO 0000  
                                 wreg 0009                   ??_BQ_get_chrg_state 002A  
                          i1_get_time 0B1D                         __CFG_BBEN$OFF 0000  
                          _SYS_ENABLE 006B                          __CFG_LVP$OFF 0000  
                     __end_of_BQ_INIT 0DC9                                  ?_ISR 0070  
                       i1timer_diff@t 0070                          __CFG_ZCD$OFF 0000  
                                ?_Map 0030                                  l1012 07E5  
                                l1131 0E68                                  l3001 0B90  
                                l3011 0CCF                                  l3005 0CF6  
                                l3007 0D14                                  l3111 0669  
                                l3103 062C                                  l3031 05A8  
                                l3023 0545                                  l3015 0534  
                                l3121 067D                                  l3113 066D  
                                l3105 064F                                  l3041 0E0D  
                                l3025 0588                                  l3017 053A  
                                l3201 014E                                  l3051 0F59  
                                l3131 0695                                  l3123 0680  
                                l3115 0673                                  l3107 0662  
                                l3043 0E14                                  l3035 0DF8  
                                l3019 0540                                  l3211 01B4  
                                l3203 017E                                  l3061 0F84  
                                l3053 0F5C                                  l3133 069C  
                                l3125 0685                                  l3109 0668  
                                l3117 0674                                  l3141 06AA  
                                l3045 0E23                                  l3037 0E01  
                                l3221 01EF                                  l3205 0188  
                                l3213 01B6                                  l3063 0F8C  
                                l3055 0F67                                  l3135 069F  
                                l3127 068B                                  l3119 0678  
                                l3151 06CC                                  l3143 06AA  
                                l3039 0E05                                  l3207 0192  
                                l3215 01BB                                  l3065 0F8D  
                                l3057 0F6B                                  l3049 0F48  
                                l3401 0ED5                                  l3129 068D  
                                l3153 06D2                                  l3161 06F3  
                                l3145 06B0                                  l3137 06A5  
                                l3225 0BD6                                  l3217 01CA  
                                l3209 01A4                                  l3081 0D3D  
                                l3073 0D1F                                  l3067 0F94  
                                l3059 0F72                                  l3403 0ED7  
                                l3411 0EF0                                  l3091 0B15  
                                l3163 06F9                                  l3155 06EA  
                                l3139 06AA                                  l3171 0EF7  
                                l3219 01D1                                  l3075 0D22  
                                l3421 0B67                                  l3085 0BA8  
                                l3093 0C8B                                  l3501 0442  
                                l3069 0F9A                                  l3413 0DC9  
                                l3405 0EE0                                  l3341 0D72  
                                l3165 0714                                  l3157 06EC  
                                l3149 06B4                                  l3181 0F40  
                                l3173 0F1A                                  l3077 0D2E  
                                l3423 0B78                                  l3095 0C94  
                                l3511 048C                                  l3503 0465  
                                l3415 0DCC                                  l3407 0EEB  
                                l3351 0D83                                  l3343 0D7A  
                                l3087 0B0E                                  l3431 0E6F  
                                l3167 0716                                  l3159 06F0  
                                l3183 0F43                                  l3175 0F24  
                                l2711 0AF8                                  l3191 00B2  
                                l3079 0D37                                  l3425 0D9B  
                                l3097 0C9F                                  l3513 04AF  
                                l3505 046E                                  l3417 0DCD  
                                l3361 0D8C                                  l3353 0D84  
                                l3345 0D7C                                  l3089 0B13  
                                l3441 0E7D                                  l3433 0E71  
                                l3169 0718                                  l3177 0F37  
                                l3521 0D51                                  l2705 0B5B  
                                l2713 0AF0                                  l2721 0BBF  
                                l2801 0FAF                                  l3193 00B5  
                                l3185 00A2                                  l3601 03A7  
                                l3099 0CAA                                  l3507 0472  
                                l3419 0DF5                                  l3371 0D97  
                                l3363 0D8E                                  l3355 0D85  
                                l3347 0D7D                                  l3339 0D70  
                                l3451 0E87                                  l3443 0E7F  
                                l3435 0E73                                  l3427 0E69  
                                l3179 0F3D                                  l3531 0D6A  
                                l3523 0D56                                  l2707 0B60  
                                l2715 0AF2                                  l2723 0BC2  
                                l2811 0FBA                                  l3195 00CF  
                                l3187 00A6           __size_of_i2c_master_read_u8 0018  
                     __end_of_BQ_Read 0D1D                                  l3509 0486  
                                l3373 0D98                                  l3365 0D90  
                                l3357 0D86                                  l3349 0D80  
                                l3461 0E93                                  l3453 0E88  
                                l3445 0E81                                  l3437 0E76  
                                l3429 0E6C                                  l3621 0B56  
                                l3613 0B4F                                  l3541 04EE  
                                l3533 0D6E                                  l3525 0D5A  
                                l3517 0D46                                  l2741 0C5D  
                                l2733 0C4F                                  l2725 0BC5  
                                l2709 0AF6                                  l2717 0AFC  
                                l2821 0FE1                                  l2813 0FBA  
                                l2805 0FB4                                  l2901 0778  
                                l3197 00E7                                  l3189 00AA  
                                l3605 03CD                                  l3381 0C43  
                                l3391 0EB6                                  l3375 0D99  
                                l3367 0D92                                  l3359 0D88  
                                l3471 0E9F                                  l3463 0E95  
                                l3455 0E8A                                  l3447 0E83  
                                l3439 0E78                                  l3623 0B58  
                                l3615 0B53                                  l3551 0501  
                                l3543 04EF                                  l3535 04B2  
                                l3527 0D60                                  l3519 0D4C  
                                l2743 0C64                                  l2735 0C51  
                                l2727 0BCA                                  l2719 0AFE  
                                l2751 05B3                                  l2823 0FE5  
                                l2815 0FC4                                  l2807 0FB4  
                                l2903 077E                                  l3199 0112  
                                l3383 0C44                                  l2833 0B43  
                                l3393 0EBA                                  l3385 0EAD  
                                l3369 0D95                                  l3481 0EA4  
                                l3473 0EA0                                  l3465 0E97  
                                l3457 0E8C                                  l3449 0E86  
                                l3625 0B59                                  l3617 0B54  
                                l3561 0513                                  l3553 0506  
                                l3545 04F5                                  l3537 04D5  
                                l2921 0C80                                  l2913 0C6B  
                                l3529 0D64                                  l2745 0C65  
                                l2737 0C54                                  l2729 0BCE  
                                l2761 05C1                                  l2753 05B7  
                                l2825 0FEB                                  l2817 0FCA  
                                l2809 0FB7                                  l2841 0C1E  
                                l2905 0783                                  l3609 03FB  
                                l3377 0C34                                  l2835 0B48  
                                l2851 0AE7                                  l3491 0411  
                                l3395 0EBC                                  l3387 0EB0  
                                l3483 0EA5                                  l3475 0EA1  
                                l3467 0E99                                  l3459 0E8E  
                                l3619 0B55                                  l3571 0520  
                                l3555 0509                                  l3547 04F7  
                                l3539 04E8                                  l2931 078C  
                                l2923 0C86                                  l2915 0C6E  
                                l2747 0C68                                  l2739 0C5A  
                                l2771 05D7                                  l2763 05C4  
                                l2755 05BC                                  l2827 0FF7  
                                l2819 0FD4                                  l3379 0C42  
                                l2853 0AEA                                  l2837 0ADC  
                                l2861 0CAE                                  l3493 0417  
                                l3397 0EC5                                  l3389 0EB2  
                                l3485 0EA6                                  l3477 0EA2  
                                l3469 0E9C                                  l3565 0518  
                                l3557 050C                                  l3573 0525  
                                l3549 04FC                                  l2941 07A0  
                                l2933 0791                                  l2917 0C72  
                                l2781 05FA                                  l2773 05E0  
                                l2765 05C7                                  l2829 0FFA  
                                l2909 0BEE                                  l2845 0C06  
                                l3901 0209                                  l2855 0AED  
                                l2839 0AE0                                  l2871 0CC5  
                                l2863 0CB1                                  l3495 0426  
                                l3399 0ED0                                  l3487 0EA8  
                                l3479 0EA3                                  l3567 051A  
                                l3559 0511                                  l2951 07B4  
                                l2943 07A2                                  l2935 0793  
                                l2927 0786                                  l2919 0C7B  
                                l2791 0623                                  l2775 05E6  
                                l2767 05C7                                  l2759 05C1  
                                l3583 033A                                  l3575 0315  
                                l3911 024F                                  l3903 0225  
                                l2849 0AE4                                  l2857 0B31  
                                l2873 0CC9                                  l2865 0CB6  
                                l3497 0439                                  l3489 0EAA  
                                l3569 051E                                  l2961 07D1  
                                l2953 07B8                                  l2945 07A8  
                                l2937 0797                                  l2929 0788  
                                l2793 0626                                  l2785 0601  
                                l2777 05E9                                  l2769 05D1  
                                l2881 071D                                  l3593 036A  
                                l3577 0329                                  l3921 027D  
                                l3913 0255                                  l3905 022B  
                                l2859 0B34                                  l2875 0CCC  
                                l2867 0CBC                                  l3499 043D  
                                l2955 07C7                                  l2947 07AB  
                                l2963 07D7                                  l2939 079C  
                                l2787 0613                                  l2779 05F0  
                                l2971 0E2C                                  l2891 074A  
                                l2883 071D                                  l3595 0382  
                                l3579 032F                                  l3931 0291  
                                l3923 0283                                  l3907 023B  
                                l3915 025E                                  l2869 0CBF  
                                l2965 07DC                                  l2957 07CB  
                                l2949 07B0                                  l2789 0617  
                                l2981 0E41                                  l2973 0E2F  
                                l2797 0FA5                                  l2893 0750  
                                l2885 072D                                  l3597 0393  
                                l3589 0355                                  l3941 02C9  
                                l3933 0294                                  l3925 0288  
                                l3917 0264                                  l3909 024B  
                                l2967 07E1                                  l2959 07CC  
                                l2991 0E5E                                  l2983 0E45  
                                l2975 0E35                                  l2799 0FA9  
                                l2895 0756                                  l2887 0733  
                                l2879 071D                                  l3943 02CC  
                                l3951 02EB                                  l3935 029D  
                                l3919 0274                                  l3927 028C  
                                l2985 0E54                                  l2977 0E38  
                                l2993 0E64                                  l2897 0763  
                                l2889 0744                                  l3961 0307  
                                l3953 02F1                                  l3945 02D2  
                                l3937 02A2                                  l3929 028E  
                                l2987 0E58                                  l2979 0E3D  
                                l2899 076A                                  l3963 030C  
                                l3955 02F9                                  l3947 02D5  
                                l3939 02C7                                  l2997 0B39  
                                l2989 0E59                                  l3957 02FE  
                                l3949 02D8                                  l3893 01F7  
                                l3959 0302                                  l3895 0200  
                                l3897 0203                                  l3899 0206  
                        __CFG_WDTE$ON 0000                                  _ICHG 00E7  
                                u2000 0600                                  u2001 05FF  
                                u2010 0608                                  u2011 0606  
                                u2100 0CC5                                  u2020 0609  
                                u2101 0CC4                                  u2030 0623  
                                u2110 0733                                  u2031 0622  
                                u2111 0732                                  u3000 0417  
                                u2200 0C86                                  u2040 0FAF  
                                u2120 074A                                  u3001 0416  
                                u2201 0C85                                  u2041 0FAE  
                                u2121 0749                                  u3010 0442  
                                u2210 078C                                  u2050 0FCA  
                                u2130 0750                                  u3011 0441  
                                u2211 078B                                  u2051 0FC9  
                                u2131 074F                                  u3020 0465  
                                u3100 04EE                                  u2300 07DC  
                                u2220 0797                                  u2060 0FEB  
                                u2140 0756                                  u3021 0464  
                                u3101 04ED                                  u2301 07DB  
                                u2221 0796                                  u2061 0FEA  
                                u2141 0755                                  u3030 048C  
                                u3110 04F5                                  u2230 07A8  
                                u2310 0E35                                  u2070 0FF7  
                                u2150 076A                                  u3031 048B  
                                u3111 04F4                                  u2231 07A7  
                                u2311 0E34                                  u2071 0FF6  
                                u2151 0769                                  u2080 0B48  
                                u3040 04AF                                  u3120 04FC  
                                u2160 077E                                  u2400 0562  
                                u3200 0382                                  u2081 0B47  
                                u3041 04AE                                  u3121 04FB  
                                u2161 077D                                  u3201 0381  
                                u2090 0B4E                                  u3130 0506  
                                u2250 07B8                                  u2170 0C72  
                                u3050 0D4C                                  u2330 0E45  
                                u3210 0392                                  u2091 0B4D  
                                u3131 0505                                  u2251 07B7  
                                u2171 0C71                                  u3051 0D4B  
                                u2331 0E44                                  u3211 0391  
                                u3060 0D56                                  u2420 05A7  
                                u3220 03A6                                  u3140 0329  
                                u2245 07AC                                  u3061 0D55  
                                u2325 0E39                                  u2421 05A6  
                                u2405 055E                                  u3221 03A5  
                                u3141 0328                                  u2510 0F84  
                                u2270 07C7                                  u3070 0D60  
                                u2430 0E05                                  u2350 0E54  
                                u3230 03CC                                  u3150 032E  
                                u2511 0F83                                  u4007 0ECB  
                                u2271 07C6                                  u3071 0D5F  
                                u2431 0E04                                  u2351 0E53  
                                u2415 058B                                  u3231 03CB  
                                u3151 032D                                  u2600 0673  
                                u3080 0D6A                                  u3240 03FA  
                                u3160 0339                                  u2505 0F6C  
                                u4017 0EDB                                  u2601 0672  
                                u2265 07B9                                  u2185 0C77  
                                u3081 0D69                                  u2345 0E46  
                                u3241 03F9                                  u3161 0338  
                                u2530 0F9A                                  u3090 04D5  
                                u2610 067D                                  u2290 07D7  
                                u2370 0E64                                  u3170 034E  
                                u2531 0F99                                  u2515 0F80  
                                u4027 0EE6                                  u3091 04D4  
                                u2611 067C                                  u2291 07D6  
                                u2275 07C3                                  u2195 0C7C  
                                u2371 0E63                                  u2355 0E50  
                                u3235 03C8                                  u3171 034D  
                                u2620 068B                                  u2700 0F3D  
                                u2460 0E23                                  u2380 053A  
                                u3180 0354                                  u2525 0F8E  
                                u2621 068A                                  u2285 07CD  
                                u2701 0F3C                                  u2461 0E22  
                                u2445 0E0E                                  u2365 0E5A  
                                u2381 0539                                  u3181 0353  
                                u2470 0F59                                  u2630 069C  
                                u2390 0540                                  u3190 0369  
                                u2550 0D3D                                  u2471 0F58  
                                u2631 069B                                  u2455 0E15  
                                u2391 053F                                  u3191 0368  
                                u2551 0D3C                                  u2640 06B0  
                                u2720 00FB                                  u2641 06AF  
                                u2545 0D26                                  u2490 0F6B  
                                u2650 06D2                                  u1930 0B60  
                                u2730 016C                                  u2491 0F6A  
                                u2651 06D1                                  u1931 0B5F  
                                u2715 00BA                                  u2580 064F  
                                u2660 06F9                                  u1940 0B66  
                                u2740 017E                                  u3700 0243  
                                u2565 0C97                                  u2485 0F5D  
                                u2581 064E                                  u2661 06F8  
                                u1941 0B65                                  u2741 017D  
                                u2725 00F7                                  u2590 0668  
                                u2670 0F1A                                  u1950 0BCA  
                                u2750 0188                                  u3710 024B  
                                u2575 0CA2                                  u2591 0667  
                                u2671 0F19                                  u1951 0BC9  
                                u2751 0187                                  u2735 0168  
                                u3711 024A                                  u2680 0F20  
                                u1960 05BC                                  u2760 0191  
                                u3800 02D2                                  u3720 0255  
                                u2681 0F1E                                  u1961 05BB  
                                u2761 0190                                  u3801 02D1  
                                u3721 0254                                  u2690 0F21  
                                u1970 05D7                                  u2770 01A4  
                                u3810 02F1                                  u3730 0264  
                                u1971 05D6                                  u2771 01A3  
                                u3811 02F0                                  u3731 0263  
                                u1980 05E6                                  u2780 01CA  
                                u2940 0C42                                  u3820 02F9  
                                u3740 0274                                  u1981 05E5  
                                u2781 01C9                                  u2941 0C41  
                                u3821 02F8                                  u3741 0273  
                                u2950 0EBA                                  u1990 05F0  
                                u2790 01D1                                  u3830 02FE  
                                u3750 027D                                  u3670 022B  
                                u2951 0EB9                                  u1991 05EF  
                                u2791 01D0                                  u2775 01A0  
                                u3831 02FD                                  u3751 027C  
                                u3671 022A                                  u2960 0ED5  
                                u3840 0302                                  u3760 0283  
                                u3680 023B                                  u2961 0ED4  
                                u2785 01C6                                  u3841 0301  
                                u3761 0282                                  u3681 023A  
                                u2970 0EF0                                  u3850 0307  
                                u3770 029D                                  u3690 0242  
                                u2971 0EEF                                  u3851 0306  
                                u3771 029C                                  u3691 0240  
                                u2980 0EF6                                  u3860 030C  
                                u3780 02A2                                  u2981 0EF5  
                                u3861 030B                                  u3781 02A1  
                                u2990 0DDB                                  u3790 02C7  
                                u3791 02C6                                  u2995 0DD7  
                                u3977 0D32                                  u3987 075C  
                                u3997 0EC0                                  Map@x 0030  
                                _TMR1 020C                                  _TMR2 028C  
                                _TREG 013E                                  _WPUA 1F39  
                       __CFG_FCMEN$ON 0000                                  _main 01F7  
                                _mode 006F                                  fsr0h 0005  
                                fsr1h 0007                                  indf0 0000  
                                fsr0l 0004                                  indf1 0001  
                                fsr1l 0006                                  btemp 007E  
                       __CFG_BOREN$ON 0000                    __size_of_BQ_UPDATE 00A1  
                                start 0067                        _btn_time_start 0138  
                       __CFG_CSWEN$ON 0000             __end_of_BQ_get_chrg_state 0CAC  
                               ??_ISR 0078                                 ??_Map 0036  
                     _VBUS_CHRG_STATE 006E      __size_of_i2c_master_repeat_start 0006  
                  __size_of_PIC_SETUP 002B                  __end_of_battery_fade 071D  
                    ?_I2C_Master_Init 003B                      ?_I2C_Master_Read 0070  
                    ?_I2C_Master_Wait 0070                      ?_I2C_Master_nAck 0070  
                    ?_I2C_Master_Stop 0070          __size_of_i2c_master_read_u16 0018  
                               ?_main 0070                       __end_of___awdiv 07E6  
                     __end_of___lldiv 0FA3                                 _T1CLK 0211  
                     ___awdiv@divisor 0027                                 _IOCAF 1F3F  
                               _IOCAN 1F3E                                 _IOCAP 1F3D  
  negotiate_optimal_pdo@opt_pdo_power 00A0                       __end_of___lwdiv 0E69  
                    __end_of_BQ_Write 0BBD                                 i1l121 001F  
                               i1l127 0065                                 i1l791 0B8F  
                               i1l788 0B25                       ___awdiv@counter 002C  
             ??_negotiate_optimal_pdo 0051                                 _TRISA 0012  
                               _TRISC 0014                   ___lmul@multiplicand 0025  
                    __end_of_RGB_fade 06A5                         __CFG_WRTB$OFF 0000  
                       __CFG_WRTC$OFF 0000                       __end_of_readADC 0D46  
            __size_of_stusb_negotiate 00FC                                 _color 0062  
                               _reset 071D                      __end_of_PWM_INIT 0EAD  
                    __end_of_PPS_lock 0B1D                negotiate_optimal_pdo@i 00AF  
        __size_of_i2c_master_write_u8 0018                                 status 0003  
                               wtemp0 007E                        __CFG_MCLRE$OFF 0000  
                     __initialization 006C                          __end_of_main 0315  
       negotiate_optimal_pdo@num_pdos 004F                        __CFG_SAFEN$OFF 0000  
       negotiate_optimal_pdo@src_pdos 00A8           __size_of_thermal_protection 0019  
                         ?_PPS_unlock 0070                                ??_main 005F  
                           ??_BQ_INIT 0024                     __end_of_BQ_UPDATE 04B2  
                           ??_BQ_Read 0026                     ?_I2C_Master_Start 0070  
                   ?_I2C_Master_Write 0070                           ?i1_get_time 0070  
                         BQ_Read@data 0029                    ??_I2C_Master_Start 0021  
                              _ADCON0 009D                                _ADCON1 009E  
                  ??_I2C_Master_Write 0021                                _ADRESH 009C  
                              ?_reset 0033                      ___awdiv@dividend 0029  
                              _ANSELA 1F38                                _ANSELC 1F4E  
                              _IOCAF5 F9FD               _i2c_master_receive_byte 0C4D  
                              _RC0PPS 1F20                                _RC1PPS 1F21  
                              _RC2PPS 1F22                                _RC3PPS 1F23  
                              _RC4PPS 1F24                                _INILIM 00EA  
                              i1l3863 0B7B                                i1l3871 0011  
                              i1l3881 0035                                i1l3873 0019  
                              i1l3859 0B1D                                i1l3891 0064  
                              i1l3883 0038                                i1l3875 001E  
                              i1l3867 0006                                i1l3885 003D  
                              i1l3877 0024                                i1l3869 000B  
                              i1l3887 0052                                i1l3879 0029  
                              i1l3889 0061                                _EN_HIZ 00EF  
                   __end_of_PIC_SETUP 0D9B                                u361_20 000B  
                              u361_21 000A                                u362_20 001E  
                              u362_21 001D                                u363_20 0024  
                              u363_21 0023                                u364_20 0029  
                              u364_21 0028                                u365_20 003D  
                              u365_21 003C                                u366_20 0061  
                              u366_21 0060                                _VCLAMP 013C  
                              _TMR1IF 3880                                _TMR2IF 3881  
                              _TMR2ON 1477                      ??_BQ_CONFIG_INIT 0021  
                              _WD_RST 00EE         __size_of_i2c_master_send_byte 0017  
                      __CFG_PWRTE$OFF 0000                      __end_of_chrg_led 0534  
          __size_of_BQ_get_chrg_state 0021                      __end_of_get_time 0B43  
               __size_ofi1_timer_diff 0015                                ___lmul 0DF8  
                              ___wmul 0C6B                             ??___awdiv 002B  
                      __CFG_STVREN$ON 0000                       _i2c_master_read 05B1  
                           ??___lldiv 0035                       _i2c_master_wait 0B5B  
                     _i2c_master_stop 0AFC                             ??___lwdiv 0025  
            i2c_master_send_byte@data 0024                      ___awdiv@quotient 002E  
             __size_of_I2C_Master_Ack 0004             __size_of_i2c_master_start 0006  
           __size_of_i2c_master_write 005D                             ??_readADC 0023  
             negotiate_optimal_pdo@ok 00B1                __size_of_I2C_bus_reset 004A  
       __size_of_i2c_master_write_u32 0018                           BQ_Write@reg 0023  
             __end_of__initialization 009C                          i1_timer_diff 0B7B  
                   ??_stusb_negotiate 0059                   __size_of_PPS_unlock 0007  
                           ?_BQ_Write 0022                 __size_of_battery_fade 0078  
                      __pcstackCOMMON 0070                             ?_RGB_fade 0070  
                        __pidataBANK0 0003                          __pidataBANK1 0B26  
                        __pidataBANK2 0ADB                   __size_ofi1_get_time 0009  
             _i2c_master_repeat_start 0AF0                         __end_of_reset 0786  
                     _BATTERY_VOLTAGE 006D                             ?_PWM_INIT 0070  
                           ?_PPS_lock 0070                    __size_of_flash_led 0051  
           ??_i2c_master_receive_byte 0021                    __size_of_led_modes 002A  
                             ??_reset 0035                            __pbssBANK0 0060  
                          __pbssBANK1 00EC                            __pbssBANK2 0120  
                        _battery_fade 06A5                   _i2c_master_read_u16 0BD4  
             __end_of_i2c_master_read 062C               __end_of_i2c_master_wait 0B67  
             __end_of_i2c_master_stop 0B02                            ??_BQ_Write 0023  
                       _I2C_bus_reset 0EAD                            __pmaintext 01F7  
                          ??_RGB_fade 0029                               ?___lmul 0021  
                             ?___wmul 0021                            _chrg_delay 0124  
                          __pintentry 0004                        ___lmul@product 0029  
                          ??_PWM_INIT 0021                  ?_i2c_master_read_u16 002E  
                 __CFG_RSTOSC$HFINT32 0000                   _i2c_master_write_u8 0C1C  
                          ??_PPS_lock 0021                               _T2CKPS0 1474  
                             _T2CKPS1 1475                               _T2CKPS2 1476  
                             _BQ_INIT 0D9B                               _EN_ILIM 00EB  
             __size_of_PWM_power_down 000C                               _EN_TERM 00E6  
                             _BQ_Read 0CF4                            _flash_time 0120  
      __size_of_negotiate_optimal_pdo 0157         __end_of_negotiate_optimal_pdo 01F7  
          __end_of_i2c_master_read_u8 0C1C                               _NVMADRH 081B  
                             _NVMADRL 081A                               _PWM3DCH 0315  
                             _NVMDATL 081C                               _PWM3DCL 0314  
                             _PWM4DCH 0319                               _NVMCON2 081F  
                             _PWM4DCL 0318                               _PWM5DCH 031D  
                           ?_chrg_led 0070                               _PWM5DCL 031C  
                             _PWM3CON 0316                               _PWM4CON 031A  
                             _PWM5CON 031E                               _SSP1ADD 018D  
                             _PPSLOCK 1E8F                               _SSP1BUF 018C  
                             _VREGCON 0812                i2c_master_read_u16@reg 002E  
                           ?_get_time 0021                               _SYS_MIN 00E8  
               BQ_get_chrg_state@data 002C                i2c_master_read_u8@data 002F  
               BQ_get_chrg_state@temp 002E                  ?_i2c_master_write_u8 002F  
                  __size_of_write_pdo 007D                        ?_I2C_bus_reset 0070  
           ??_i2c_master_repeat_start 0021                     __end_of_flash_led 0F48  
                             ___awdiv 0786                       __size_of___lmul 0034  
                           _CHG_TIMER 00E3                               ___lldiv 0F48  
                   __end_of_led_modes 0D70                       __size_of___wmul 0020  
                             ___lwdiv 0E2C                        _I2C_Master_Ack 0ADC  
               ??_i2c_master_read_u16 0030                          ??_PPS_unlock 0021  
                    _i2c_master_start 0AF6                               __ptext1 0C34  
                             __ptext2 0D1D                               __ptext3 0315  
                             __ptext4 00A0                               __ptext5 0534  
                             __ptext6 071D                               __ptext7 0C1C  
                             __ptext8 0C04                               __ptext9 0BEC  
                    _i2c_master_write 0FA3                       __CFG_WRTAPP$OFF 0000  
                             _readADC 0D1D                          __size_of_ISR 0063  
                           _T1CONbits 020E                          __size_of_Map 0025  
                     __CFG_WRTSAF$OFF 0000              __size_of_I2C_Master_Init 002F  
            __size_of_I2C_Master_Read 0023                          ??i1_get_time 0074  
            __size_of_I2C_Master_Wait 000C              __size_of_I2C_Master_nAck 0004  
            __size_of_I2C_Master_Stop 0006                            ??_chrg_led 0029  
                           _BQ_UPDATE 0411                               clrloop0 0B03  
                          ??_get_time 0025                  end_of_initialization 009C  
               ??_i2c_master_write_u8 0031                      write_pdo@pdo_num 003E  
                             init_ram 0B08                               initloop 0B09  
                    ?_i2c_master_read 0025             __size_of_I2C_Master_Start 0006  
                  __end_of_PPS_unlock 0B15                      ?_i2c_master_wait 0070  
                           _PIC_SETUP 0D70             __size_of_I2C_Master_Write 000A  
                     ___lldiv@divisor 002D                      ?_i2c_master_stop 0070  
            negotiate_optimal_pdo@pdo 00B3                               reset@ok 0038  
                     ___lldiv@counter 003A                __end_of_I2C_Master_Ack 0AE0  
          __end_of_thermal_protection 0C4D                    __end_ofi1_get_time 0B26  
                          _nvm_config 07E6                          BQ_Write@data 0022  
               __CFG_WDTCPS$WDTCPS_13 0000                             Map@outMax 0035  
                           Map@outMin 0034                            _timer_diff 0B90  
        __end_of_i2c_master_send_byte 0BD4                          _REG00_config 0068  
                   __end_of_write_pdo 05B1                  __CFG_WDTCCS$LFINTOSC 0000  
                           _TRISAbits 0012                       _stusb_negotiate 0315  
                        _REG03_config 0067                             _TRISCbits 0014  
                        _REG04_config 0066                           timer_diff@t 0021  
                          ?_BQ_UPDATE 0070                          _REG07_config 0065  
                    __CFG_FEXTOSC$OFF 0000                          _REG08_config 007C  
                     ??_I2C_bus_reset 0021                            ?_PIC_SETUP 0070  
                        write_pdo@pdo 004B  negotiate_optimal_pdo@opt_pdo_current 00A4  
                       battery_fade@v 0040          __end_of_i2c_master_write_u32 0C04  
            i2c_master_read_u8@device 0032                       ?_I2C_Master_Ack 0070  
                   __size_of_BQ_Write 0017            i2c_master_receive_byte@ack 0022  
negotiate_optimal_pdo@opt_pdo_voltage 00A6                        __end_of___lmul 0E2C  
                      __end_of___wmul 0C8B                     __size_of_RGB_fade 0079  
                   __size_of_PWM_INIT 0044                        _PWM_power_down 0B4F  
                   __size_of_PPS_lock 0008                   start_initialization 006C  
                         __end_of_ISR 0067                           __end_of_Map 0CF4  
           i2c_master_read_u16@device 0032                   write_pdo@current_mA 003A  
                   ??_I2C_Master_Init 003F                     ??_I2C_Master_Read 0021  
                   ??_I2C_Master_Wait 0021                     ??_I2C_Master_nAck 0021  
                          BQ_Read@reg 0028                     ??_I2C_Master_Stop 0021  
                    __CFG_LPBOREN$OFF 0000                              ??___lmul 0029  
                            ??___wmul 0025                           __pdataBANK0 006F  
                         __pdataBANK1 00E3                           __pdataBANK2 013E  
             __size_of_BQ_CONFIG_INIT 0014               __end_of_stusb_negotiate 0411  
                         ?_timer_diff 0021                __end_of_PWM_power_down 0B5B  
                            ?_BQ_INIT 0070                           __pbssCOMMON 0078  
                            ?_BQ_Read 0024                             ___latbits 0001  
                       __pcstackBANK0 0021                         __pcstackBANK1 00A0  
                         ??_BQ_UPDATE 002F                     __size_of_chrg_led 0082  
                   __size_of_get_time 000A              __end_of_i2c_master_start 0AFC  
            __end_of_i2c_master_write 1000                      _I2C_Master_Start 0AE4  
                _i2c_master_send_byte 0BBD                    _i2c_master_read_u8 0C04  
                         ??_PIC_SETUP 0021                      _I2C_Master_Write 0B2F  
                    ___lwdiv@dividend 0023              i2c_master_write_u32@data 0030  
               i2c_master_read@device 002A           i2c_master_receive_byte@data 0023  
                            ?___awdiv 0027                              ?___lldiv 002D  
                 ?_i2c_master_read_u8 002E                              ?___lwdiv 0021  
                        _BQ_adc_state 006C                      __CFG_PPS1WAY$OFF 0000  
                           _flash_led 0EF7                  I2C_Master_Write@data 0021  
                     ?_PWM_power_down 0070                             _led_modes 0D46  
                            ?_readADC 0021              ?_i2c_master_receive_byte 0070  
               i2c_master_read_u8@reg 002E                   write_pdo@voltage_mV 003C  
                            _BAT_COMP 013D                  _i2c_master_write_u32 0BEC  
                    ___lwdiv@quotient 0026                  ??_i2c_master_read_u8 0030  
                         _CPUDOZEbits 088C                              _T2CLKCON 0290  
               _negotiate_optimal_pdo 00A0                        __size_of_reset 0069  
                           _rgb_delay 0128                              _T2OUTPS0 1470  
                            _T2OUTPS1 1471                              _T2OUTPS2 1472  
                            _T2OUTPS3 1473                        ___wmul@product 0025  
                 __size_of_timer_diff 0016                              _EN_TIMER 00E4  
               ?_i2c_master_send_byte 0021                             clear_ram0 0B02  
                            _PIE0bits 0716                              _PIE4bits 071A  
                            _BQ_Write 0BA6                           _flash_state 0060  
         __end_of_i2c_master_read_u16 0BEC                              _WATCHDOG 00EC  
                            _RGB_fade 062C                     __CFG_BBSIZE$BB512 0000  
                            Map@inMax 0033                              Map@inMin 0032  
                            _SSP1CON1 0190                              _SSP1CON2 0191  
                            _SSP1CON3 0192                              _SSP1STAT 018F  
             i2c_master_read_u16@data 002F                              _STAT_DIS 00E5  
                          ?_flash_led 0070                              _PWM_INIT 0E69  
                    ?_stusb_negotiate 0070                            _ADCON0bits 009D  
                            _PPS_lock 0B15                     ___wmul@multiplier 0021  
                          ?_led_modes 0070                      __size_of_BQ_INIT 002E  
                  _thermal_protection 0C34           __end_of_i2c_master_write_u8 0C34  
                    __size_of_BQ_Read 0029                 ?_i2c_master_write_u32 002F  
                 I2C_Master_Read@data 0023                     ___lmul@multiplier 0021  
                           _write_pdo 0534                   ?_thermal_protection 0070  
            ?_i2c_master_repeat_start 0070                         ?i1_timer_diff 0070  
                    ??_I2C_Master_Ack 0021                         _set_stusb4500 0069  
                          _CHG_CONFIG 00E9                        _BQ_CONFIG_INIT 0B67  
     __end_of_i2c_master_receive_byte 0C6B                      __size_of___awdiv 0060  
            __size_of_i2c_master_read 007B                      __size_of___lldiv 005B  
                ??_thermal_protection 0026              __size_of_i2c_master_wait 000C  
                    __size_of___lwdiv 003D              __size_of_i2c_master_stop 0006  
                      readADC@channel 0025                            _ANSELAbits 1F38  
                     _I2C_Master_Init 0DC9                      __size_of_readADC 0029  
                     _I2C_Master_Read 0CAC                       _I2C_Master_Wait 0B43  
                     _I2C_Master_nAck 0AE0                       _I2C_Master_Stop 0AEA  
                     ___lwdiv@divisor 0021               i2c_master_write_u32@reg 002F  
                            _chrg_led 04B2                       ___lwdiv@counter 0028  
              ?_negotiate_optimal_pdo 004F                              __ptext10 0FA3  
                            __ptext11 0E2C                              __ptext20 0B5B  
                            __ptext12 0DF8                              __ptext21 0D46  
                            __ptext13 0BD4                            _T1GCONbits 020F  
                            __ptext30 0E69                              __ptext22 0EF7  
                            __ptext14 05B1                              __ptext31 0B0E  
                            __ptext23 06A5                              __ptext15 0AFC  
                            __ptext40 0C8B                              __ptext32 0B15  
                            __ptext24 0CCF                              __ptext16 0AF6  
                            __ptext41 0CF4                              __ptext33 0D70  
                            __ptext25 0C6B                              __ptext17 0BBD  
                            __ptext50 0B43                              __ptext42 0CAC  
                            __ptext34 0EAD                              __ptext26 0786  
                            __ptext18 0AF0                              __ptext51 0B67  
                            __ptext43 0AE0                              __ptext35 0DC9  
                            __ptext27 062C                              __ptext19 0C4D  
                            __ptext44 0ADC                              __ptext36 0F48  
                            __ptext28 04B2                              __ptext53 0B7B  
                            __ptext45 0D9B                              __ptext37 0411  
                            __ptext29 0B4F                              __ptext54 0B1D  
                            __ptext46 0BA6                              __ptext38 0B90  
                            __ptext47 0B2F                              __ptext39 0B39  
                            __ptext48 0AEA                              __ptext49 0AE4  
                         _BQ_adc_time 012C                          _SSP1CON2bits 0191  
                          ?_write_pdo 003A                              _get_time 0B39  
                            _btn_time 0134               i2c_master_write_u8@data 0030  
                       ?_battery_fade 0070                        ??i1_timer_diff 0074  
      negotiate_optimal_pdo@pdo_power 00A9                ??_i2c_master_send_byte 0024  
                       __size_of_main 011E            i2c_master_write_u32@device 0035  
                __CFG_WDTCWS$WDTCWS_7 0000                 __end_of_I2C_bus_reset 0EF7  
                   _stusb4500_timeout 0130                        I2C_bus_reset@i 0022  
              __end_of_BQ_CONFIG_INIT 0B7B                              int$flags 007E  
                         ??_flash_led 0029                         _timer_counter 0078  
                        ??_timer_diff 0025                    I2C_Master_Init@clk 003B  
                  I2C_Master_Read@ack 0022                           ??_led_modes 0041  
            __end_of_I2C_Master_Start 0AEA              __end_of_I2C_Master_Write 0B39  
                          _INTCONbits 000B                ??_i2c_master_write_u32 0034  
                         _NVMCON1bits 081E                i2c_master_write@device 002A  
                         _PWM3CONbits 0316                           _PWM4CONbits 031A  
     __end_of_i2c_master_repeat_start 0AF6                           _PWM5CONbits 031E  
                      ??_battery_fade 0038                              intlevel1 0000  
                    _btn_is_debounced 006A                   i2c_master_read@data 002B  
                    ___lldiv@dividend 0031                    __end_of_nvm_config 080E  
                   ?_i2c_master_start 0070                     __CFG_CLKOUTEN$OFF 0000  
                   ?_i2c_master_write 0025                i2c_master_write_u8@reg 002F  
                            reset@res 0037                    __end_of_timer_diff 0BA6  
                  ??_i2c_master_start 0021                    ??_i2c_master_write 002A  
                     ?_BQ_CONFIG_INIT 0070                      ??_PWM_power_down 0021  
             __end_of_I2C_Master_Init 0DF8               __end_of_I2C_Master_Read 0CCF  
             __end_of_I2C_Master_Wait 0B4F               __end_of_I2C_Master_nAck 0AE4  
             __end_of_I2C_Master_Stop 0AF0                         __pstringtext1 07E6  
               stusb_negotiate@header 00E1                 stusb_negotiate@buffer 00B9  
                          _SSP1DATPPS 1EC6                    i2c_master_read@buf 0026  
                  i2c_master_read@len 0027                    i2c_master_read@reg 0025  
                          _SSP1CLKPPS 1EC5                            _OTG_CONFIG 00ED  
                    ___lldiv@quotient 0036                     ??_i2c_master_read 0029  
                   ??_i2c_master_wait 0021                     ??_i2c_master_stop 0021  
    negotiate_optimal_pdo@pdo_current 00AD                           ??_write_pdo 003F  
                i2c_master_write@data 002B             i2c_master_write_u8@device 0032  
                   i2c_master_read@ok 002C      __size_of_i2c_master_receive_byte 001E  
    negotiate_optimal_pdo@pdo_voltage 00B7                   i2c_master_write@buf 0026  
                 i2c_master_write@len 0028                   i2c_master_write@reg 0025  
                  i2c_master_write@ok 002D                        _btn_is_pressed 007D  
