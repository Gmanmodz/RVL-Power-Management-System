

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Sep 14 23:25:48 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F15324
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	intentry,global,class=CODE,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	text38,local,class=CODE,merge=1,delta=2
    50                           	psect	text39,local,class=CODE,merge=1,delta=2
    51                           	psect	text40,local,class=CODE,merge=1,delta=2
    52                           	psect	text41,local,class=CODE,merge=1,delta=2
    53                           	psect	text42,local,class=CODE,merge=1,delta=2
    54                           	psect	text43,local,class=CODE,merge=1,delta=2
    55                           	psect	text44,local,class=CODE,merge=1,delta=2
    56                           	psect	text45,local,class=CODE,merge=1,delta=2
    57                           	psect	text46,local,class=CODE,merge=1,delta=2
    58                           	psect	text47,local,class=CODE,merge=1,delta=2
    59                           	psect	text48,local,class=CODE,merge=1,delta=2
    60                           	psect	text49,local,class=CODE,merge=1,delta=2
    61                           	psect	text50,local,class=CODE,merge=1,delta=2
    62                           	psect	text51,local,class=CODE,merge=1,delta=2
    63                           	dabs	1,0x7E,2
    64  0000                     
    65                           ; Version 2.10
    66                           ; Generated 31/07/2019 GMT
    67                           ; 
    68                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC16F15324 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  0007                     	;# 
   107  0008                     	;# 
   108  0009                     	;# 
   109  000A                     	;# 
   110  000B                     	;# 
   111  000C                     	;# 
   112  000E                     	;# 
   113  0012                     	;# 
   114  0014                     	;# 
   115  0018                     	;# 
   116  001A                     	;# 
   117  009B                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0119                     	;# 
   124  0119                     	;# 
   125  0119                     	;# 
   126  011A                     	;# 
   127  011A                     	;# 
   128  011A                     	;# 
   129  011B                     	;# 
   130  011B                     	;# 
   131  011B                     	;# 
   132  011B                     	;# 
   133  011B                     	;# 
   134  011C                     	;# 
   135  011C                     	;# 
   136  011C                     	;# 
   137  011D                     	;# 
   138  011D                     	;# 
   139  011D                     	;# 
   140  011E                     	;# 
   141  011E                     	;# 
   142  011E                     	;# 
   143  011F                     	;# 
   144  011F                     	;# 
   145  011F                     	;# 
   146  011F                     	;# 
   147  011F                     	;# 
   148  018C                     	;# 
   149  018D                     	;# 
   150  018E                     	;# 
   151  018F                     	;# 
   152  0190                     	;# 
   153  0191                     	;# 
   154  0192                     	;# 
   155  020C                     	;# 
   156  020C                     	;# 
   157  020D                     	;# 
   158  020E                     	;# 
   159  020F                     	;# 
   160  020F                     	;# 
   161  0210                     	;# 
   162  0210                     	;# 
   163  0211                     	;# 
   164  0211                     	;# 
   165  028C                     	;# 
   166  028C                     	;# 
   167  028D                     	;# 
   168  028D                     	;# 
   169  028E                     	;# 
   170  028F                     	;# 
   171  0290                     	;# 
   172  0291                     	;# 
   173  030C                     	;# 
   174  030C                     	;# 
   175  030D                     	;# 
   176  030E                     	;# 
   177  030F                     	;# 
   178  0310                     	;# 
   179  0310                     	;# 
   180  0311                     	;# 
   181  0312                     	;# 
   182  0313                     	;# 
   183  0314                     	;# 
   184  0314                     	;# 
   185  0315                     	;# 
   186  0316                     	;# 
   187  0318                     	;# 
   188  0318                     	;# 
   189  0319                     	;# 
   190  031A                     	;# 
   191  031C                     	;# 
   192  031C                     	;# 
   193  031D                     	;# 
   194  031E                     	;# 
   195  038C                     	;# 
   196  038C                     	;# 
   197  038D                     	;# 
   198  038E                     	;# 
   199  058C                     	;# 
   200  058C                     	;# 
   201  058D                     	;# 
   202  058E                     	;# 
   203  058F                     	;# 
   204  058F                     	;# 
   205  0590                     	;# 
   206  0591                     	;# 
   207  0592                     	;# 
   208  0593                     	;# 
   209  059C                     	;# 
   210  059C                     	;# 
   211  059D                     	;# 
   212  059D                     	;# 
   213  059E                     	;# 
   214  059F                     	;# 
   215  060C                     	;# 
   216  060D                     	;# 
   217  060E                     	;# 
   218  060F                     	;# 
   219  0610                     	;# 
   220  0611                     	;# 
   221  0612                     	;# 
   222  0613                     	;# 
   223  0614                     	;# 
   224  070C                     	;# 
   225  070D                     	;# 
   226  070E                     	;# 
   227  070F                     	;# 
   228  0710                     	;# 
   229  0711                     	;# 
   230  0712                     	;# 
   231  0713                     	;# 
   232  0716                     	;# 
   233  0717                     	;# 
   234  0718                     	;# 
   235  0719                     	;# 
   236  071A                     	;# 
   237  071B                     	;# 
   238  071C                     	;# 
   239  071D                     	;# 
   240  0796                     	;# 
   241  0797                     	;# 
   242  0798                     	;# 
   243  0799                     	;# 
   244  079A                     	;# 
   245  079B                     	;# 
   246  080C                     	;# 
   247  080D                     	;# 
   248  080E                     	;# 
   249  080F                     	;# 
   250  0810                     	;# 
   251  0811                     	;# 
   252  0812                     	;# 
   253  0813                     	;# 
   254  0814                     	;# 
   255  081A                     	;# 
   256  081A                     	;# 
   257  081B                     	;# 
   258  081C                     	;# 
   259  081C                     	;# 
   260  081D                     	;# 
   261  081E                     	;# 
   262  081F                     	;# 
   263  088C                     	;# 
   264  088D                     	;# 
   265  088E                     	;# 
   266  088F                     	;# 
   267  0890                     	;# 
   268  0891                     	;# 
   269  0892                     	;# 
   270  0893                     	;# 
   271  0895                     	;# 
   272  0896                     	;# 
   273  090C                     	;# 
   274  090E                     	;# 
   275  090F                     	;# 
   276  091F                     	;# 
   277  098F                     	;# 
   278  098F                     	;# 
   279  0990                     	;# 
   280  0991                     	;# 
   281  0992                     	;# 
   282  0993                     	;# 
   283  0994                     	;# 
   284  0995                     	;# 
   285  0996                     	;# 
   286  0997                     	;# 
   287  0A19                     	;# 
   288  0A19                     	;# 
   289  0A1A                     	;# 
   290  0A1A                     	;# 
   291  0A1B                     	;# 
   292  0A1B                     	;# 
   293  0A1B                     	;# 
   294  0A1C                     	;# 
   295  0A1C                     	;# 
   296  0A1D                     	;# 
   297  0A1D                     	;# 
   298  0A1E                     	;# 
   299  0A1E                     	;# 
   300  0A1F                     	;# 
   301  0A1F                     	;# 
   302  0A1F                     	;# 
   303  1E0F                     	;# 
   304  1E10                     	;# 
   305  1E11                     	;# 
   306  1E12                     	;# 
   307  1E13                     	;# 
   308  1E14                     	;# 
   309  1E15                     	;# 
   310  1E16                     	;# 
   311  1E17                     	;# 
   312  1E18                     	;# 
   313  1E19                     	;# 
   314  1E1A                     	;# 
   315  1E1B                     	;# 
   316  1E1C                     	;# 
   317  1E1D                     	;# 
   318  1E1E                     	;# 
   319  1E1F                     	;# 
   320  1E20                     	;# 
   321  1E21                     	;# 
   322  1E22                     	;# 
   323  1E23                     	;# 
   324  1E24                     	;# 
   325  1E25                     	;# 
   326  1E26                     	;# 
   327  1E27                     	;# 
   328  1E28                     	;# 
   329  1E29                     	;# 
   330  1E2A                     	;# 
   331  1E2B                     	;# 
   332  1E2C                     	;# 
   333  1E2D                     	;# 
   334  1E2E                     	;# 
   335  1E2F                     	;# 
   336  1E30                     	;# 
   337  1E31                     	;# 
   338  1E32                     	;# 
   339  1E33                     	;# 
   340  1E34                     	;# 
   341  1E35                     	;# 
   342  1E36                     	;# 
   343  1E37                     	;# 
   344  1E8F                     	;# 
   345  1E90                     	;# 
   346  1E91                     	;# 
   347  1E92                     	;# 
   348  1E93                     	;# 
   349  1E9C                     	;# 
   350  1EA1                     	;# 
   351  1EA2                     	;# 
   352  1EB1                     	;# 
   353  1EBB                     	;# 
   354  1EBC                     	;# 
   355  1EBD                     	;# 
   356  1EBE                     	;# 
   357  1EC3                     	;# 
   358  1EC5                     	;# 
   359  1EC6                     	;# 
   360  1EC7                     	;# 
   361  1ECB                     	;# 
   362  1ECC                     	;# 
   363  1ECD                     	;# 
   364  1ECE                     	;# 
   365  1F10                     	;# 
   366  1F11                     	;# 
   367  1F12                     	;# 
   368  1F13                     	;# 
   369  1F14                     	;# 
   370  1F15                     	;# 
   371  1F20                     	;# 
   372  1F21                     	;# 
   373  1F22                     	;# 
   374  1F23                     	;# 
   375  1F24                     	;# 
   376  1F25                     	;# 
   377  1F38                     	;# 
   378  1F39                     	;# 
   379  1F3A                     	;# 
   380  1F3B                     	;# 
   381  1F3C                     	;# 
   382  1F3D                     	;# 
   383  1F3E                     	;# 
   384  1F3F                     	;# 
   385  1F4E                     	;# 
   386  1F4F                     	;# 
   387  1F50                     	;# 
   388  1F51                     	;# 
   389  1F52                     	;# 
   390  1F53                     	;# 
   391  1F54                     	;# 
   392  1F55                     	;# 
   393  1FE4                     	;# 
   394  1FE5                     	;# 
   395  1FE6                     	;# 
   396  1FE7                     	;# 
   397  1FE8                     	;# 
   398  1FE8                     	;# 
   399  1FE9                     	;# 
   400  1FEA                     	;# 
   401  1FEA                     	;# 
   402  1FEB                     	;# 
   403  1FED                     	;# 
   404  1FEE                     	;# 
   405  1FEF                     	;# 
   406  0000                     	;# 
   407  0001                     	;# 
   408  0002                     	;# 
   409  0003                     	;# 
   410  0004                     	;# 
   411  0005                     	;# 
   412  0006                     	;# 
   413  0007                     	;# 
   414  0008                     	;# 
   415  0009                     	;# 
   416  000A                     	;# 
   417  000B                     	;# 
   418  000C                     	;# 
   419  000E                     	;# 
   420  0012                     	;# 
   421  0014                     	;# 
   422  0018                     	;# 
   423  001A                     	;# 
   424  009B                     	;# 
   425  009B                     	;# 
   426  009C                     	;# 
   427  009D                     	;# 
   428  009E                     	;# 
   429  009F                     	;# 
   430  0119                     	;# 
   431  0119                     	;# 
   432  0119                     	;# 
   433  011A                     	;# 
   434  011A                     	;# 
   435  011A                     	;# 
   436  011B                     	;# 
   437  011B                     	;# 
   438  011B                     	;# 
   439  011B                     	;# 
   440  011B                     	;# 
   441  011C                     	;# 
   442  011C                     	;# 
   443  011C                     	;# 
   444  011D                     	;# 
   445  011D                     	;# 
   446  011D                     	;# 
   447  011E                     	;# 
   448  011E                     	;# 
   449  011E                     	;# 
   450  011F                     	;# 
   451  011F                     	;# 
   452  011F                     	;# 
   453  011F                     	;# 
   454  011F                     	;# 
   455  018C                     	;# 
   456  018D                     	;# 
   457  018E                     	;# 
   458  018F                     	;# 
   459  0190                     	;# 
   460  0191                     	;# 
   461  0192                     	;# 
   462  020C                     	;# 
   463  020C                     	;# 
   464  020D                     	;# 
   465  020E                     	;# 
   466  020F                     	;# 
   467  020F                     	;# 
   468  0210                     	;# 
   469  0210                     	;# 
   470  0211                     	;# 
   471  0211                     	;# 
   472  028C                     	;# 
   473  028C                     	;# 
   474  028D                     	;# 
   475  028D                     	;# 
   476  028E                     	;# 
   477  028F                     	;# 
   478  0290                     	;# 
   479  0291                     	;# 
   480  030C                     	;# 
   481  030C                     	;# 
   482  030D                     	;# 
   483  030E                     	;# 
   484  030F                     	;# 
   485  0310                     	;# 
   486  0310                     	;# 
   487  0311                     	;# 
   488  0312                     	;# 
   489  0313                     	;# 
   490  0314                     	;# 
   491  0314                     	;# 
   492  0315                     	;# 
   493  0316                     	;# 
   494  0318                     	;# 
   495  0318                     	;# 
   496  0319                     	;# 
   497  031A                     	;# 
   498  031C                     	;# 
   499  031C                     	;# 
   500  031D                     	;# 
   501  031E                     	;# 
   502  038C                     	;# 
   503  038C                     	;# 
   504  038D                     	;# 
   505  038E                     	;# 
   506  058C                     	;# 
   507  058C                     	;# 
   508  058D                     	;# 
   509  058E                     	;# 
   510  058F                     	;# 
   511  058F                     	;# 
   512  0590                     	;# 
   513  0591                     	;# 
   514  0592                     	;# 
   515  0593                     	;# 
   516  059C                     	;# 
   517  059C                     	;# 
   518  059D                     	;# 
   519  059D                     	;# 
   520  059E                     	;# 
   521  059F                     	;# 
   522  060C                     	;# 
   523  060D                     	;# 
   524  060E                     	;# 
   525  060F                     	;# 
   526  0610                     	;# 
   527  0611                     	;# 
   528  0612                     	;# 
   529  0613                     	;# 
   530  0614                     	;# 
   531  070C                     	;# 
   532  070D                     	;# 
   533  070E                     	;# 
   534  070F                     	;# 
   535  0710                     	;# 
   536  0711                     	;# 
   537  0712                     	;# 
   538  0713                     	;# 
   539  0716                     	;# 
   540  0717                     	;# 
   541  0718                     	;# 
   542  0719                     	;# 
   543  071A                     	;# 
   544  071B                     	;# 
   545  071C                     	;# 
   546  071D                     	;# 
   547  0796                     	;# 
   548  0797                     	;# 
   549  0798                     	;# 
   550  0799                     	;# 
   551  079A                     	;# 
   552  079B                     	;# 
   553  080C                     	;# 
   554  080D                     	;# 
   555  080E                     	;# 
   556  080F                     	;# 
   557  0810                     	;# 
   558  0811                     	;# 
   559  0812                     	;# 
   560  0813                     	;# 
   561  0814                     	;# 
   562  081A                     	;# 
   563  081A                     	;# 
   564  081B                     	;# 
   565  081C                     	;# 
   566  081C                     	;# 
   567  081D                     	;# 
   568  081E                     	;# 
   569  081F                     	;# 
   570  088C                     	;# 
   571  088D                     	;# 
   572  088E                     	;# 
   573  088F                     	;# 
   574  0890                     	;# 
   575  0891                     	;# 
   576  0892                     	;# 
   577  0893                     	;# 
   578  0895                     	;# 
   579  0896                     	;# 
   580  090C                     	;# 
   581  090E                     	;# 
   582  090F                     	;# 
   583  091F                     	;# 
   584  098F                     	;# 
   585  098F                     	;# 
   586  0990                     	;# 
   587  0991                     	;# 
   588  0992                     	;# 
   589  0993                     	;# 
   590  0994                     	;# 
   591  0995                     	;# 
   592  0996                     	;# 
   593  0997                     	;# 
   594  0A19                     	;# 
   595  0A19                     	;# 
   596  0A1A                     	;# 
   597  0A1A                     	;# 
   598  0A1B                     	;# 
   599  0A1B                     	;# 
   600  0A1B                     	;# 
   601  0A1C                     	;# 
   602  0A1C                     	;# 
   603  0A1D                     	;# 
   604  0A1D                     	;# 
   605  0A1E                     	;# 
   606  0A1E                     	;# 
   607  0A1F                     	;# 
   608  0A1F                     	;# 
   609  0A1F                     	;# 
   610  1E0F                     	;# 
   611  1E10                     	;# 
   612  1E11                     	;# 
   613  1E12                     	;# 
   614  1E13                     	;# 
   615  1E14                     	;# 
   616  1E15                     	;# 
   617  1E16                     	;# 
   618  1E17                     	;# 
   619  1E18                     	;# 
   620  1E19                     	;# 
   621  1E1A                     	;# 
   622  1E1B                     	;# 
   623  1E1C                     	;# 
   624  1E1D                     	;# 
   625  1E1E                     	;# 
   626  1E1F                     	;# 
   627  1E20                     	;# 
   628  1E21                     	;# 
   629  1E22                     	;# 
   630  1E23                     	;# 
   631  1E24                     	;# 
   632  1E25                     	;# 
   633  1E26                     	;# 
   634  1E27                     	;# 
   635  1E28                     	;# 
   636  1E29                     	;# 
   637  1E2A                     	;# 
   638  1E2B                     	;# 
   639  1E2C                     	;# 
   640  1E2D                     	;# 
   641  1E2E                     	;# 
   642  1E2F                     	;# 
   643  1E30                     	;# 
   644  1E31                     	;# 
   645  1E32                     	;# 
   646  1E33                     	;# 
   647  1E34                     	;# 
   648  1E35                     	;# 
   649  1E36                     	;# 
   650  1E37                     	;# 
   651  1E8F                     	;# 
   652  1E90                     	;# 
   653  1E91                     	;# 
   654  1E92                     	;# 
   655  1E93                     	;# 
   656  1E9C                     	;# 
   657  1EA1                     	;# 
   658  1EA2                     	;# 
   659  1EB1                     	;# 
   660  1EBB                     	;# 
   661  1EBC                     	;# 
   662  1EBD                     	;# 
   663  1EBE                     	;# 
   664  1EC3                     	;# 
   665  1EC5                     	;# 
   666  1EC6                     	;# 
   667  1EC7                     	;# 
   668  1ECB                     	;# 
   669  1ECC                     	;# 
   670  1ECD                     	;# 
   671  1ECE                     	;# 
   672  1F10                     	;# 
   673  1F11                     	;# 
   674  1F12                     	;# 
   675  1F13                     	;# 
   676  1F14                     	;# 
   677  1F15                     	;# 
   678  1F20                     	;# 
   679  1F21                     	;# 
   680  1F22                     	;# 
   681  1F23                     	;# 
   682  1F24                     	;# 
   683  1F25                     	;# 
   684  1F38                     	;# 
   685  1F39                     	;# 
   686  1F3A                     	;# 
   687  1F3B                     	;# 
   688  1F3C                     	;# 
   689  1F3D                     	;# 
   690  1F3E                     	;# 
   691  1F3F                     	;# 
   692  1F4E                     	;# 
   693  1F4F                     	;# 
   694  1F50                     	;# 
   695  1F51                     	;# 
   696  1F52                     	;# 
   697  1F53                     	;# 
   698  1F54                     	;# 
   699  1F55                     	;# 
   700  1FE4                     	;# 
   701  1FE5                     	;# 
   702  1FE6                     	;# 
   703  1FE7                     	;# 
   704  1FE8                     	;# 
   705  1FE8                     	;# 
   706  1FE9                     	;# 
   707  1FEA                     	;# 
   708  1FEA                     	;# 
   709  1FEB                     	;# 
   710  1FED                     	;# 
   711  1FEE                     	;# 
   712  1FEF                     	;# 
   713  0000                     	;# 
   714  0001                     	;# 
   715  0002                     	;# 
   716  0003                     	;# 
   717  0004                     	;# 
   718  0005                     	;# 
   719  0006                     	;# 
   720  0007                     	;# 
   721  0008                     	;# 
   722  0009                     	;# 
   723  000A                     	;# 
   724  000B                     	;# 
   725  000C                     	;# 
   726  000E                     	;# 
   727  0012                     	;# 
   728  0014                     	;# 
   729  0018                     	;# 
   730  001A                     	;# 
   731  009B                     	;# 
   732  009B                     	;# 
   733  009C                     	;# 
   734  009D                     	;# 
   735  009E                     	;# 
   736  009F                     	;# 
   737  0119                     	;# 
   738  0119                     	;# 
   739  0119                     	;# 
   740  011A                     	;# 
   741  011A                     	;# 
   742  011A                     	;# 
   743  011B                     	;# 
   744  011B                     	;# 
   745  011B                     	;# 
   746  011B                     	;# 
   747  011B                     	;# 
   748  011C                     	;# 
   749  011C                     	;# 
   750  011C                     	;# 
   751  011D                     	;# 
   752  011D                     	;# 
   753  011D                     	;# 
   754  011E                     	;# 
   755  011E                     	;# 
   756  011E                     	;# 
   757  011F                     	;# 
   758  011F                     	;# 
   759  011F                     	;# 
   760  011F                     	;# 
   761  011F                     	;# 
   762  018C                     	;# 
   763  018D                     	;# 
   764  018E                     	;# 
   765  018F                     	;# 
   766  0190                     	;# 
   767  0191                     	;# 
   768  0192                     	;# 
   769  020C                     	;# 
   770  020C                     	;# 
   771  020D                     	;# 
   772  020E                     	;# 
   773  020F                     	;# 
   774  020F                     	;# 
   775  0210                     	;# 
   776  0210                     	;# 
   777  0211                     	;# 
   778  0211                     	;# 
   779  028C                     	;# 
   780  028C                     	;# 
   781  028D                     	;# 
   782  028D                     	;# 
   783  028E                     	;# 
   784  028F                     	;# 
   785  0290                     	;# 
   786  0291                     	;# 
   787  030C                     	;# 
   788  030C                     	;# 
   789  030D                     	;# 
   790  030E                     	;# 
   791  030F                     	;# 
   792  0310                     	;# 
   793  0310                     	;# 
   794  0311                     	;# 
   795  0312                     	;# 
   796  0313                     	;# 
   797  0314                     	;# 
   798  0314                     	;# 
   799  0315                     	;# 
   800  0316                     	;# 
   801  0318                     	;# 
   802  0318                     	;# 
   803  0319                     	;# 
   804  031A                     	;# 
   805  031C                     	;# 
   806  031C                     	;# 
   807  031D                     	;# 
   808  031E                     	;# 
   809  038C                     	;# 
   810  038C                     	;# 
   811  038D                     	;# 
   812  038E                     	;# 
   813  058C                     	;# 
   814  058C                     	;# 
   815  058D                     	;# 
   816  058E                     	;# 
   817  058F                     	;# 
   818  058F                     	;# 
   819  0590                     	;# 
   820  0591                     	;# 
   821  0592                     	;# 
   822  0593                     	;# 
   823  059C                     	;# 
   824  059C                     	;# 
   825  059D                     	;# 
   826  059D                     	;# 
   827  059E                     	;# 
   828  059F                     	;# 
   829  060C                     	;# 
   830  060D                     	;# 
   831  060E                     	;# 
   832  060F                     	;# 
   833  0610                     	;# 
   834  0611                     	;# 
   835  0612                     	;# 
   836  0613                     	;# 
   837  0614                     	;# 
   838  070C                     	;# 
   839  070D                     	;# 
   840  070E                     	;# 
   841  070F                     	;# 
   842  0710                     	;# 
   843  0711                     	;# 
   844  0712                     	;# 
   845  0713                     	;# 
   846  0716                     	;# 
   847  0717                     	;# 
   848  0718                     	;# 
   849  0719                     	;# 
   850  071A                     	;# 
   851  071B                     	;# 
   852  071C                     	;# 
   853  071D                     	;# 
   854  0796                     	;# 
   855  0797                     	;# 
   856  0798                     	;# 
   857  0799                     	;# 
   858  079A                     	;# 
   859  079B                     	;# 
   860  080C                     	;# 
   861  080D                     	;# 
   862  080E                     	;# 
   863  080F                     	;# 
   864  0810                     	;# 
   865  0811                     	;# 
   866  0812                     	;# 
   867  0813                     	;# 
   868  0814                     	;# 
   869  081A                     	;# 
   870  081A                     	;# 
   871  081B                     	;# 
   872  081C                     	;# 
   873  081C                     	;# 
   874  081D                     	;# 
   875  081E                     	;# 
   876  081F                     	;# 
   877  088C                     	;# 
   878  088D                     	;# 
   879  088E                     	;# 
   880  088F                     	;# 
   881  0890                     	;# 
   882  0891                     	;# 
   883  0892                     	;# 
   884  0893                     	;# 
   885  0895                     	;# 
   886  0896                     	;# 
   887  090C                     	;# 
   888  090E                     	;# 
   889  090F                     	;# 
   890  091F                     	;# 
   891  098F                     	;# 
   892  098F                     	;# 
   893  0990                     	;# 
   894  0991                     	;# 
   895  0992                     	;# 
   896  0993                     	;# 
   897  0994                     	;# 
   898  0995                     	;# 
   899  0996                     	;# 
   900  0997                     	;# 
   901  0A19                     	;# 
   902  0A19                     	;# 
   903  0A1A                     	;# 
   904  0A1A                     	;# 
   905  0A1B                     	;# 
   906  0A1B                     	;# 
   907  0A1B                     	;# 
   908  0A1C                     	;# 
   909  0A1C                     	;# 
   910  0A1D                     	;# 
   911  0A1D                     	;# 
   912  0A1E                     	;# 
   913  0A1E                     	;# 
   914  0A1F                     	;# 
   915  0A1F                     	;# 
   916  0A1F                     	;# 
   917  1E0F                     	;# 
   918  1E10                     	;# 
   919  1E11                     	;# 
   920  1E12                     	;# 
   921  1E13                     	;# 
   922  1E14                     	;# 
   923  1E15                     	;# 
   924  1E16                     	;# 
   925  1E17                     	;# 
   926  1E18                     	;# 
   927  1E19                     	;# 
   928  1E1A                     	;# 
   929  1E1B                     	;# 
   930  1E1C                     	;# 
   931  1E1D                     	;# 
   932  1E1E                     	;# 
   933  1E1F                     	;# 
   934  1E20                     	;# 
   935  1E21                     	;# 
   936  1E22                     	;# 
   937  1E23                     	;# 
   938  1E24                     	;# 
   939  1E25                     	;# 
   940  1E26                     	;# 
   941  1E27                     	;# 
   942  1E28                     	;# 
   943  1E29                     	;# 
   944  1E2A                     	;# 
   945  1E2B                     	;# 
   946  1E2C                     	;# 
   947  1E2D                     	;# 
   948  1E2E                     	;# 
   949  1E2F                     	;# 
   950  1E30                     	;# 
   951  1E31                     	;# 
   952  1E32                     	;# 
   953  1E33                     	;# 
   954  1E34                     	;# 
   955  1E35                     	;# 
   956  1E36                     	;# 
   957  1E37                     	;# 
   958  1E8F                     	;# 
   959  1E90                     	;# 
   960  1E91                     	;# 
   961  1E92                     	;# 
   962  1E93                     	;# 
   963  1E9C                     	;# 
   964  1EA1                     	;# 
   965  1EA2                     	;# 
   966  1EB1                     	;# 
   967  1EBB                     	;# 
   968  1EBC                     	;# 
   969  1EBD                     	;# 
   970  1EBE                     	;# 
   971  1EC3                     	;# 
   972  1EC5                     	;# 
   973  1EC6                     	;# 
   974  1EC7                     	;# 
   975  1ECB                     	;# 
   976  1ECC                     	;# 
   977  1ECD                     	;# 
   978  1ECE                     	;# 
   979  1F10                     	;# 
   980  1F11                     	;# 
   981  1F12                     	;# 
   982  1F13                     	;# 
   983  1F14                     	;# 
   984  1F15                     	;# 
   985  1F20                     	;# 
   986  1F21                     	;# 
   987  1F22                     	;# 
   988  1F23                     	;# 
   989  1F24                     	;# 
   990  1F25                     	;# 
   991  1F38                     	;# 
   992  1F39                     	;# 
   993  1F3A                     	;# 
   994  1F3B                     	;# 
   995  1F3C                     	;# 
   996  1F3D                     	;# 
   997  1F3E                     	;# 
   998  1F3F                     	;# 
   999  1F4E                     	;# 
  1000  1F4F                     	;# 
  1001  1F50                     	;# 
  1002  1F51                     	;# 
  1003  1F52                     	;# 
  1004  1F53                     	;# 
  1005  1F54                     	;# 
  1006  1F55                     	;# 
  1007  1FE4                     	;# 
  1008  1FE5                     	;# 
  1009  1FE6                     	;# 
  1010  1FE7                     	;# 
  1011  1FE8                     	;# 
  1012  1FE8                     	;# 
  1013  1FE9                     	;# 
  1014  1FEA                     	;# 
  1015  1FEA                     	;# 
  1016  1FEB                     	;# 
  1017  1FED                     	;# 
  1018  1FEE                     	;# 
  1019  1FEF                     	;# 
  1020  0000                     	;# 
  1021  0001                     	;# 
  1022  0002                     	;# 
  1023  0003                     	;# 
  1024  0004                     	;# 
  1025  0005                     	;# 
  1026  0006                     	;# 
  1027  0007                     	;# 
  1028  0008                     	;# 
  1029  0009                     	;# 
  1030  000A                     	;# 
  1031  000B                     	;# 
  1032  000C                     	;# 
  1033  000E                     	;# 
  1034  0012                     	;# 
  1035  0014                     	;# 
  1036  0018                     	;# 
  1037  001A                     	;# 
  1038  009B                     	;# 
  1039  009B                     	;# 
  1040  009C                     	;# 
  1041  009D                     	;# 
  1042  009E                     	;# 
  1043  009F                     	;# 
  1044  0119                     	;# 
  1045  0119                     	;# 
  1046  0119                     	;# 
  1047  011A                     	;# 
  1048  011A                     	;# 
  1049  011A                     	;# 
  1050  011B                     	;# 
  1051  011B                     	;# 
  1052  011B                     	;# 
  1053  011B                     	;# 
  1054  011B                     	;# 
  1055  011C                     	;# 
  1056  011C                     	;# 
  1057  011C                     	;# 
  1058  011D                     	;# 
  1059  011D                     	;# 
  1060  011D                     	;# 
  1061  011E                     	;# 
  1062  011E                     	;# 
  1063  011E                     	;# 
  1064  011F                     	;# 
  1065  011F                     	;# 
  1066  011F                     	;# 
  1067  011F                     	;# 
  1068  011F                     	;# 
  1069  018C                     	;# 
  1070  018D                     	;# 
  1071  018E                     	;# 
  1072  018F                     	;# 
  1073  0190                     	;# 
  1074  0191                     	;# 
  1075  0192                     	;# 
  1076  020C                     	;# 
  1077  020C                     	;# 
  1078  020D                     	;# 
  1079  020E                     	;# 
  1080  020F                     	;# 
  1081  020F                     	;# 
  1082  0210                     	;# 
  1083  0210                     	;# 
  1084  0211                     	;# 
  1085  0211                     	;# 
  1086  028C                     	;# 
  1087  028C                     	;# 
  1088  028D                     	;# 
  1089  028D                     	;# 
  1090  028E                     	;# 
  1091  028F                     	;# 
  1092  0290                     	;# 
  1093  0291                     	;# 
  1094  030C                     	;# 
  1095  030C                     	;# 
  1096  030D                     	;# 
  1097  030E                     	;# 
  1098  030F                     	;# 
  1099  0310                     	;# 
  1100  0310                     	;# 
  1101  0311                     	;# 
  1102  0312                     	;# 
  1103  0313                     	;# 
  1104  0314                     	;# 
  1105  0314                     	;# 
  1106  0315                     	;# 
  1107  0316                     	;# 
  1108  0318                     	;# 
  1109  0318                     	;# 
  1110  0319                     	;# 
  1111  031A                     	;# 
  1112  031C                     	;# 
  1113  031C                     	;# 
  1114  031D                     	;# 
  1115  031E                     	;# 
  1116  038C                     	;# 
  1117  038C                     	;# 
  1118  038D                     	;# 
  1119  038E                     	;# 
  1120  058C                     	;# 
  1121  058C                     	;# 
  1122  058D                     	;# 
  1123  058E                     	;# 
  1124  058F                     	;# 
  1125  058F                     	;# 
  1126  0590                     	;# 
  1127  0591                     	;# 
  1128  0592                     	;# 
  1129  0593                     	;# 
  1130  059C                     	;# 
  1131  059C                     	;# 
  1132  059D                     	;# 
  1133  059D                     	;# 
  1134  059E                     	;# 
  1135  059F                     	;# 
  1136  060C                     	;# 
  1137  060D                     	;# 
  1138  060E                     	;# 
  1139  060F                     	;# 
  1140  0610                     	;# 
  1141  0611                     	;# 
  1142  0612                     	;# 
  1143  0613                     	;# 
  1144  0614                     	;# 
  1145  070C                     	;# 
  1146  070D                     	;# 
  1147  070E                     	;# 
  1148  070F                     	;# 
  1149  0710                     	;# 
  1150  0711                     	;# 
  1151  0712                     	;# 
  1152  0713                     	;# 
  1153  0716                     	;# 
  1154  0717                     	;# 
  1155  0718                     	;# 
  1156  0719                     	;# 
  1157  071A                     	;# 
  1158  071B                     	;# 
  1159  071C                     	;# 
  1160  071D                     	;# 
  1161  0796                     	;# 
  1162  0797                     	;# 
  1163  0798                     	;# 
  1164  0799                     	;# 
  1165  079A                     	;# 
  1166  079B                     	;# 
  1167  080C                     	;# 
  1168  080D                     	;# 
  1169  080E                     	;# 
  1170  080F                     	;# 
  1171  0810                     	;# 
  1172  0811                     	;# 
  1173  0812                     	;# 
  1174  0813                     	;# 
  1175  0814                     	;# 
  1176  081A                     	;# 
  1177  081A                     	;# 
  1178  081B                     	;# 
  1179  081C                     	;# 
  1180  081C                     	;# 
  1181  081D                     	;# 
  1182  081E                     	;# 
  1183  081F                     	;# 
  1184  088C                     	;# 
  1185  088D                     	;# 
  1186  088E                     	;# 
  1187  088F                     	;# 
  1188  0890                     	;# 
  1189  0891                     	;# 
  1190  0892                     	;# 
  1191  0893                     	;# 
  1192  0895                     	;# 
  1193  0896                     	;# 
  1194  090C                     	;# 
  1195  090E                     	;# 
  1196  090F                     	;# 
  1197  091F                     	;# 
  1198  098F                     	;# 
  1199  098F                     	;# 
  1200  0990                     	;# 
  1201  0991                     	;# 
  1202  0992                     	;# 
  1203  0993                     	;# 
  1204  0994                     	;# 
  1205  0995                     	;# 
  1206  0996                     	;# 
  1207  0997                     	;# 
  1208  0A19                     	;# 
  1209  0A19                     	;# 
  1210  0A1A                     	;# 
  1211  0A1A                     	;# 
  1212  0A1B                     	;# 
  1213  0A1B                     	;# 
  1214  0A1B                     	;# 
  1215  0A1C                     	;# 
  1216  0A1C                     	;# 
  1217  0A1D                     	;# 
  1218  0A1D                     	;# 
  1219  0A1E                     	;# 
  1220  0A1E                     	;# 
  1221  0A1F                     	;# 
  1222  0A1F                     	;# 
  1223  0A1F                     	;# 
  1224  1E0F                     	;# 
  1225  1E10                     	;# 
  1226  1E11                     	;# 
  1227  1E12                     	;# 
  1228  1E13                     	;# 
  1229  1E14                     	;# 
  1230  1E15                     	;# 
  1231  1E16                     	;# 
  1232  1E17                     	;# 
  1233  1E18                     	;# 
  1234  1E19                     	;# 
  1235  1E1A                     	;# 
  1236  1E1B                     	;# 
  1237  1E1C                     	;# 
  1238  1E1D                     	;# 
  1239  1E1E                     	;# 
  1240  1E1F                     	;# 
  1241  1E20                     	;# 
  1242  1E21                     	;# 
  1243  1E22                     	;# 
  1244  1E23                     	;# 
  1245  1E24                     	;# 
  1246  1E25                     	;# 
  1247  1E26                     	;# 
  1248  1E27                     	;# 
  1249  1E28                     	;# 
  1250  1E29                     	;# 
  1251  1E2A                     	;# 
  1252  1E2B                     	;# 
  1253  1E2C                     	;# 
  1254  1E2D                     	;# 
  1255  1E2E                     	;# 
  1256  1E2F                     	;# 
  1257  1E30                     	;# 
  1258  1E31                     	;# 
  1259  1E32                     	;# 
  1260  1E33                     	;# 
  1261  1E34                     	;# 
  1262  1E35                     	;# 
  1263  1E36                     	;# 
  1264  1E37                     	;# 
  1265  1E8F                     	;# 
  1266  1E90                     	;# 
  1267  1E91                     	;# 
  1268  1E92                     	;# 
  1269  1E93                     	;# 
  1270  1E9C                     	;# 
  1271  1EA1                     	;# 
  1272  1EA2                     	;# 
  1273  1EB1                     	;# 
  1274  1EBB                     	;# 
  1275  1EBC                     	;# 
  1276  1EBD                     	;# 
  1277  1EBE                     	;# 
  1278  1EC3                     	;# 
  1279  1EC5                     	;# 
  1280  1EC6                     	;# 
  1281  1EC7                     	;# 
  1282  1ECB                     	;# 
  1283  1ECC                     	;# 
  1284  1ECD                     	;# 
  1285  1ECE                     	;# 
  1286  1F10                     	;# 
  1287  1F11                     	;# 
  1288  1F12                     	;# 
  1289  1F13                     	;# 
  1290  1F14                     	;# 
  1291  1F15                     	;# 
  1292  1F20                     	;# 
  1293  1F21                     	;# 
  1294  1F22                     	;# 
  1295  1F23                     	;# 
  1296  1F24                     	;# 
  1297  1F25                     	;# 
  1298  1F38                     	;# 
  1299  1F39                     	;# 
  1300  1F3A                     	;# 
  1301  1F3B                     	;# 
  1302  1F3C                     	;# 
  1303  1F3D                     	;# 
  1304  1F3E                     	;# 
  1305  1F3F                     	;# 
  1306  1F4E                     	;# 
  1307  1F4F                     	;# 
  1308  1F50                     	;# 
  1309  1F51                     	;# 
  1310  1F52                     	;# 
  1311  1F53                     	;# 
  1312  1F54                     	;# 
  1313  1F55                     	;# 
  1314  1FE4                     	;# 
  1315  1FE5                     	;# 
  1316  1FE6                     	;# 
  1317  1FE7                     	;# 
  1318  1FE8                     	;# 
  1319  1FE8                     	;# 
  1320  1FE9                     	;# 
  1321  1FEA                     	;# 
  1322  1FEA                     	;# 
  1323  1FEB                     	;# 
  1324  1FED                     	;# 
  1325  1FEE                     	;# 
  1326  1FEF                     	;# 
  1327                           
  1328                           	psect	idataBANK0
  1329  070B                     __pidataBANK0:	
  1330                           
  1331                           ;initializer for _dir
  1332  070B  3401               	retlw	1
  1333  0012                     _TRISAbits	set	18
  1334  0014                     _TRISCbits	set	20
  1335  000B                     _INTCONbits	set	11
  1336  000B                     _INTCON	set	11
  1337  0014                     _TRISC	set	20
  1338  0012                     _TRISA	set	18
  1339  0075                     _RC5	set	117
  1340  0062                     _RA2	set	98
  1341  0065                     _RA5	set	101
  1342  009C                     _ADRESH	set	156
  1343  009D                     _ADCON0bits	set	157
  1344  009D                     _ADCON0	set	157
  1345  009E                     _ADCON1	set	158
  1346  018C                     _SSP1BUF	set	396
  1347  0191                     _SSP1CON2bits	set	401
  1348  018F                     _SSP1STAT	set	399
  1349  018D                     _SSP1ADD	set	397
  1350  0191                     _SSP1CON2	set	401
  1351  0190                     _SSP1CON1	set	400
  1352  020C                     _TMR1L	set	524
  1353  020D                     _TMR1H	set	525
  1354  0211                     _T1CLK	set	529
  1355  020F                     _T1GCONbits	set	527
  1356  020E                     _T1CON	set	526
  1357  1070                     _TMR1ON	set	4208
  1358  028D                     _PR2	set	653
  1359  0290                     _T2CLKCON	set	656
  1360  028C                     _TMR2	set	652
  1361  1473                     _T2OUTPS3	set	5235
  1362  1472                     _T2OUTPS2	set	5234
  1363  1471                     _T2OUTPS1	set	5233
  1364  1470                     _T2OUTPS0	set	5232
  1365  1476                     _T2CKPS2	set	5238
  1366  1475                     _T2CKPS1	set	5237
  1367  1474                     _T2CKPS0	set	5236
  1368  1477                     _TMR2ON	set	5239
  1369  031C                     _PWM5DCL	set	796
  1370  031D                     _PWM5DCH	set	797
  1371  031E                     _PWM5CON	set	798
  1372  0318                     _PWM4DCL	set	792
  1373  0319                     _PWM4DCH	set	793
  1374  031A                     _PWM4CON	set	794
  1375  0314                     _PWM3DCL	set	788
  1376  0315                     _PWM3DCH	set	789
  1377  0316                     _PWM3CON	set	790
  1378  18F7                     _PWM5EN	set	6391
  1379  18D7                     _PWM4EN	set	6359
  1380  18B7                     _PWM3EN	set	6327
  1381  0716                     _PIE0bits	set	1814
  1382  38D0                     _TMR1IE	set	14544
  1383  3881                     _TMR2IF	set	14465
  1384  3880                     _TMR1IF	set	14464
  1385  0812                     _VREGCON	set	2066
  1386  1E8F                     _PPSLOCK	set	7823
  1387  1EC5                     _SSP1CLKPPS	set	7877
  1388  1EC6                     _SSP1DATPPS	set	7878
  1389  1F24                     _RC4PPS	set	7972
  1390  1F23                     _RC3PPS	set	7971
  1391  1F22                     _RC2PPS	set	7970
  1392  1F20                     _RC0PPS	set	7968
  1393  1F21                     _RC1PPS	set	7969
  1394  1F3F                     _IOCAF	set	7999
  1395  1F3E                     _IOCAN	set	7998
  1396  1F3D                     _IOCAP	set	7997
  1397  1F39                     _WPUA	set	7993
  1398  1F4E                     _ANSELC	set	8014
  1399  1F38                     _ANSELA	set	7992
  1400  F9FD                     _IOCAF5	set	63997
  1401                           
  1402                           ; #config settings
  1403  0000                     
  1404                           	psect	cinit
  1405  001A                     start_initialization:	
  1406  001A                     __initialization:	
  1407                           
  1408                           ; Initialize objects allocated to BANK0
  1409  001A  3187  270B  3180   	fcall	__pidataBANK0	;fetch initializer
  1410  001D  00CD               	movwf	__pdataBANK0& (0+127)
  1411                           
  1412                           ; Clear objects allocated to COMMON
  1413  001E  01FC               	clrf	__pbssCOMMON& (0+127)
  1414  001F  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  1415                           
  1416                           ; Clear objects allocated to BANK0
  1417  0020  01C2               	clrf	__pbssBANK0& (0+127)
  1418  0021  01C3               	clrf	(__pbssBANK0+1)& (0+127)
  1419  0022  01C4               	clrf	(__pbssBANK0+2)& (0+127)
  1420  0023  01C5               	clrf	(__pbssBANK0+3)& (0+127)
  1421  0024  01C6               	clrf	(__pbssBANK0+4)& (0+127)
  1422  0025  01C7               	clrf	(__pbssBANK0+5)& (0+127)
  1423  0026  01C8               	clrf	(__pbssBANK0+6)& (0+127)
  1424  0027  01C9               	clrf	(__pbssBANK0+7)& (0+127)
  1425  0028  01CA               	clrf	(__pbssBANK0+8)& (0+127)
  1426  0029  01CB               	clrf	(__pbssBANK0+9)& (0+127)
  1427  002A  01CC               	clrf	(__pbssBANK0+10)& (0+127)
  1428  002B                     end_of_initialization:	
  1429                           ;End of C runtime variable initialization code
  1430                           
  1431  002B                     __end_of__initialization:	
  1432  002B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1433  002C  0140               	movlb	0
  1434  002D  3182  2AC6         	ljmp	_main	;jump to C main() function
  1435                           
  1436                           	psect	bssCOMMON
  1437  007C                     __pbssCOMMON:	
  1438  007C                     _c:	
  1439  007C                     	ds	1
  1440  007D                     _i:	
  1441  007D                     	ds	1
  1442                           
  1443                           	psect	bssBANK0
  1444  0042                     __pbssBANK0:	
  1445  0042                     _chrg_stat:	
  1446  0042                     	ds	1
  1447  0043                     _vbus_stat:	
  1448  0043                     	ds	1
  1449  0044                     _battery_volts:	
  1450  0044                     	ds	1
  1451  0045                     _color:	
  1452  0045                     	ds	1
  1453  0046                     _mode:	
  1454  0046                     	ds	1
  1455  0047                     _vbus_stat_temp:	
  1456  0047                     	ds	1
  1457  0048                     _mode_en:	
  1458  0048                     	ds	1
  1459  0049                     _battery_volts_temp:	
  1460  0049                     	ds	1
  1461  004A                     _mode_temp:	
  1462  004A                     	ds	1
  1463  004B                     _tmr1_count:	
  1464  004B                     	ds	1
  1465  004C                     _reg_state:	
  1466  004C                     	ds	1
  1467                           
  1468                           	psect	dataBANK0
  1469  004D                     __pdataBANK0:	
  1470  004D                     _dir:	
  1471  004D                     	ds	1
  1472                           
  1473                           	psect	cstackCOMMON
  1474  0070                     __pcstackCOMMON:	
  1475  0070                     ?_power_down:	
  1476  0070                     ?_charge_state:	
  1477                           ; 1 bytes @ 0x0
  1478                           
  1479  0070                     ?_battery_read:	
  1480                           ; 1 bytes @ 0x0
  1481                           
  1482  0070                     ?_set_battery_volts:	
  1483                           ; 1 bytes @ 0x0
  1484                           
  1485  0070                     ?_get_battery_volts:	
  1486                           ; 1 bytes @ 0x0
  1487                           
  1488  0070                     ?_set_mode:	
  1489                           ; 1 bytes @ 0x0
  1490                           
  1491  0070                     ?_power_up:	
  1492                           ; 1 bytes @ 0x0
  1493                           
  1494  0070                     ?_get_mode:	
  1495                           ; 1 bytes @ 0x0
  1496                           
  1497  0070                     ??_get_mode:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500  0070                     ?_PPS_unlock:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503  0070                     ?_PPS_lock:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506  0070                     ?_BQ_init:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509  0070                     ?_STUSB_9V_12V:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512  0070                     ?_PWM_init:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515  0070                     ?_chrg_led:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0070                     ?_led_modes:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0070                     ?_thermal_protection:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0070                     ?_read_bq_status:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0070                     ?_on_off_tact:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ?_ISR:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ?_PIC_init:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ?_main:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ?_RGB_fade:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ?_battery_fade:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ?_I2C_Master_Wait:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ?_I2C_Master_Start:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ?_I2C_Master_Stop:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ?_I2C_Master_Write:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ?_I2C_Master_Ack:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0070                     ?_I2C_Master_nAck:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0070                     ?_I2C_Master_Read:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0070                     ?i1_set_mode:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ??i1_set_mode:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0070                     ?i1_PPS_unlock:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0070                     ??i1_PPS_unlock:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578  0070                     ?i1_PPS_lock:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0070                     ??i1_PPS_lock:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0070                     ?i1_PWM_init:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0070                     ??i1_PWM_init:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0070                     ?i1_BQ_init:	
  1591                           ; 1 bytes @ 0x0
  1592                           
  1593  0070                     ?i1_power_down:	
  1594                           ; 1 bytes @ 0x0
  1595                           
  1596  0070                     ?i1_I2C_Master_Wait:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0070                     ??i1_I2C_Master_Wait:	
  1600                           ; 1 bytes @ 0x0
  1601                           
  1602  0070                     ?i1_I2C_Master_Start:	
  1603                           ; 1 bytes @ 0x0
  1604                           
  1605  0070                     ??i1_I2C_Master_Start:	
  1606                           ; 1 bytes @ 0x0
  1607                           
  1608  0070                     ?i1_I2C_Master_Stop:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611  0070                     ??i1_I2C_Master_Stop:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614  0070                     ?i1_I2C_Master_Write:	
  1615                           ; 1 bytes @ 0x0
  1616                           
  1617  0070                     ??i1_I2C_Master_Write:	
  1618                           ; 1 bytes @ 0x0
  1619                           
  1620  0070                     ?i1_STUSB_9V_12V:	
  1621                           ; 1 bytes @ 0x0
  1622                           
  1623  0070                     i1I2C_Master_Write@data:	
  1624                           ; 1 bytes @ 0x0
  1625                           
  1626                           
  1627                           ; 1 bytes @ 0x0
  1628  0070                     	ds	1
  1629  0071                     ?i1_BQ_Write:	
  1630  0071                     ?i1_STUSB_Write:	
  1631                           ; 1 bytes @ 0x1
  1632                           
  1633  0071                     i1set_mode@mode_temp:	
  1634                           ; 1 bytes @ 0x1
  1635                           
  1636  0071                     i1BQ_Write@data:	
  1637                           ; 1 bytes @ 0x1
  1638                           
  1639  0071                     i1STUSB_Write@data_1:	
  1640                           ; 1 bytes @ 0x1
  1641                           
  1642                           
  1643                           ; 1 bytes @ 0x1
  1644  0071                     	ds	1
  1645  0072                     ??i1_BQ_Write:	
  1646  0072                     i1BQ_Write@reg:	
  1647                           ; 1 bytes @ 0x2
  1648                           
  1649  0072                     i1STUSB_Write@data_2:	
  1650                           ; 1 bytes @ 0x2
  1651                           
  1652                           
  1653                           ; 1 bytes @ 0x2
  1654  0072                     	ds	1
  1655  0073                     ??i1_BQ_init:	
  1656  0073                     ??i1_power_down:	
  1657                           ; 1 bytes @ 0x3
  1658                           
  1659  0073                     i1STUSB_Write@data_3:	
  1660                           ; 1 bytes @ 0x3
  1661                           
  1662                           
  1663                           ; 1 bytes @ 0x3
  1664  0073                     	ds	1
  1665  0074                     i1power_down@ship_mode:	
  1666  0074                     i1STUSB_Write@data_4:	
  1667                           ; 1 bytes @ 0x4
  1668                           
  1669                           
  1670                           ; 1 bytes @ 0x4
  1671  0074                     	ds	1
  1672  0075                     ??i1_STUSB_Write:	
  1673  0075                     i1STUSB_Write@reg:	
  1674                           ; 1 bytes @ 0x5
  1675                           
  1676                           
  1677                           ; 1 bytes @ 0x5
  1678  0075                     	ds	1
  1679  0076                     ??i1_STUSB_9V_12V:	
  1680                           
  1681                           ; 1 bytes @ 0x6
  1682  0076                     	ds	3
  1683  0079                     ??_power_up:	
  1684  0079                     ??_on_off_tact:	
  1685                           ; 1 bytes @ 0x9
  1686                           
  1687                           
  1688                           ; 1 bytes @ 0x9
  1689  0079                     	ds	1
  1690  007A                     on_off_tact@exit:	
  1691                           
  1692                           ; 1 bytes @ 0xA
  1693  007A                     	ds	1
  1694  007B                     on_off_tact@count:	
  1695                           
  1696                           ; 1 bytes @ 0xB
  1697  007B                     	ds	1
  1698  007C                     ??_ISR:	
  1699                           
  1700                           	psect	cstackBANK0
  1701  0020                     __pcstackBANK0:	
  1702                           ; 1 bytes @ 0xC
  1703                           
  1704  0020                     ??_set_battery_volts:	
  1705  0020                     ??_get_battery_volts:	
  1706                           ; 1 bytes @ 0x0
  1707                           
  1708  0020                     ??_set_mode:	
  1709                           ; 1 bytes @ 0x0
  1710                           
  1711  0020                     ??_PPS_unlock:	
  1712                           ; 1 bytes @ 0x0
  1713                           
  1714  0020                     ??_PPS_lock:	
  1715                           ; 1 bytes @ 0x0
  1716                           
  1717  0020                     ??_PWM_init:	
  1718                           ; 1 bytes @ 0x0
  1719                           
  1720  0020                     ??_chrg_led:	
  1721                           ; 1 bytes @ 0x0
  1722                           
  1723  0020                     ??_PIC_init:	
  1724                           ; 1 bytes @ 0x0
  1725                           
  1726  0020                     ??_RGB_fade:	
  1727                           ; 1 bytes @ 0x0
  1728                           
  1729  0020                     ??_I2C_Master_Wait:	
  1730                           ; 1 bytes @ 0x0
  1731                           
  1732  0020                     ??_I2C_Master_Start:	
  1733                           ; 1 bytes @ 0x0
  1734                           
  1735  0020                     ??_I2C_Master_Stop:	
  1736                           ; 1 bytes @ 0x0
  1737                           
  1738  0020                     ??_I2C_Master_Write:	
  1739                           ; 1 bytes @ 0x0
  1740                           
  1741  0020                     ??_I2C_Master_Ack:	
  1742                           ; 1 bytes @ 0x0
  1743                           
  1744  0020                     ??_I2C_Master_nAck:	
  1745                           ; 1 bytes @ 0x0
  1746                           
  1747  0020                     ??_I2C_Master_Read:	
  1748                           ; 1 bytes @ 0x0
  1749                           
  1750  0020                     ?_readADC:	
  1751                           ; 1 bytes @ 0x0
  1752                           
  1753  0020                     ?___wmul:	
  1754                           ; 2 bytes @ 0x0
  1755                           
  1756  0020                     ?___lldiv:	
  1757                           ; 2 bytes @ 0x0
  1758                           
  1759  0020                     I2C_Master_Write@data:	
  1760                           ; 4 bytes @ 0x0
  1761                           
  1762  0020                     ___wmul@multiplier:	
  1763                           ; 1 bytes @ 0x0
  1764                           
  1765  0020                     ___lldiv@divisor:	
  1766                           ; 2 bytes @ 0x0
  1767                           
  1768                           
  1769                           ; 4 bytes @ 0x0
  1770  0020                     	ds	1
  1771  0021                     ?_BQ_Write:	
  1772  0021                     ?_STUSB_Write:	
  1773                           ; 1 bytes @ 0x1
  1774                           
  1775  0021                     set_mode@mode_temp:	
  1776                           ; 1 bytes @ 0x1
  1777                           
  1778  0021                     set_battery_volts@battery_volts_temp:	
  1779                           ; 1 bytes @ 0x1
  1780                           
  1781  0021                     I2C_Master_Read@ack:	
  1782                           ; 1 bytes @ 0x1
  1783                           
  1784  0021                     BQ_Write@data:	
  1785                           ; 1 bytes @ 0x1
  1786                           
  1787  0021                     STUSB_Write@data_1:	
  1788                           ; 1 bytes @ 0x1
  1789                           
  1790                           
  1791                           ; 1 bytes @ 0x1
  1792  0021                     	ds	1
  1793  0022                     ??_readADC:	
  1794  0022                     ??_BQ_Write:	
  1795                           ; 1 bytes @ 0x2
  1796                           
  1797  0022                     I2C_Master_Read@data:	
  1798                           ; 1 bytes @ 0x2
  1799                           
  1800  0022                     BQ_Write@reg:	
  1801                           ; 1 bytes @ 0x2
  1802                           
  1803  0022                     STUSB_Write@data_2:	
  1804                           ; 1 bytes @ 0x2
  1805                           
  1806  0022                     ___wmul@multiplicand:	
  1807                           ; 1 bytes @ 0x2
  1808                           
  1809                           
  1810                           ; 2 bytes @ 0x2
  1811  0022                     	ds	1
  1812  0023                     ??_power_down:	
  1813  0023                     ??_BQ_init:	
  1814                           ; 1 bytes @ 0x3
  1815                           
  1816  0023                     ?_BQ_Read:	
  1817                           ; 1 bytes @ 0x3
  1818                           
  1819  0023                     STUSB_Write@data_3:	
  1820                           ; 2 bytes @ 0x3
  1821                           
  1822                           
  1823                           ; 1 bytes @ 0x3
  1824  0023                     	ds	1
  1825  0024                     ??___wmul:	
  1826  0024                     power_down@ship_mode:	
  1827                           ; 1 bytes @ 0x4
  1828                           
  1829  0024                     STUSB_Write@data_4:	
  1830                           ; 1 bytes @ 0x4
  1831                           
  1832  0024                     ___wmul@product:	
  1833                           ; 1 bytes @ 0x4
  1834                           
  1835  0024                     ___lldiv@dividend:	
  1836                           ; 2 bytes @ 0x4
  1837                           
  1838                           
  1839                           ; 4 bytes @ 0x4
  1840  0024                     	ds	1
  1841  0025                     ??_BQ_Read:	
  1842  0025                     ??_thermal_protection:	
  1843                           ; 1 bytes @ 0x5
  1844                           
  1845  0025                     ??_STUSB_Write:	
  1846                           ; 1 bytes @ 0x5
  1847                           
  1848  0025                     STUSB_Write@reg:	
  1849                           ; 1 bytes @ 0x5
  1850                           
  1851                           
  1852                           ; 1 bytes @ 0x5
  1853  0025                     	ds	1
  1854  0026                     ??_STUSB_9V_12V:	
  1855  0026                     ?___awdiv:	
  1856                           ; 1 bytes @ 0x6
  1857                           
  1858  0026                     ___awdiv@divisor:	
  1859                           ; 2 bytes @ 0x6
  1860                           
  1861                           
  1862                           ; 2 bytes @ 0x6
  1863  0026                     	ds	1
  1864  0027                     BQ_Read@reg:	
  1865                           
  1866                           ; 1 bytes @ 0x7
  1867  0027                     	ds	1
  1868  0028                     ??___lldiv:	
  1869  0028                     BQ_Read@data:	
  1870                           ; 1 bytes @ 0x8
  1871                           
  1872  0028                     ___awdiv@dividend:	
  1873                           ; 1 bytes @ 0x8
  1874                           
  1875                           
  1876                           ; 2 bytes @ 0x8
  1877  0028                     	ds	1
  1878  0029                     ??_charge_state:	
  1879  0029                     ??_battery_read:	
  1880                           ; 1 bytes @ 0x9
  1881                           
  1882  0029                     ___lldiv@quotient:	
  1883                           ; 1 bytes @ 0x9
  1884                           
  1885                           
  1886                           ; 4 bytes @ 0x9
  1887  0029                     	ds	1
  1888  002A                     ??___awdiv:	
  1889                           
  1890                           ; 1 bytes @ 0xA
  1891  002A                     	ds	1
  1892  002B                     charge_state@temp:	
  1893  002B                     ___awdiv@counter:	
  1894                           ; 1 bytes @ 0xB
  1895                           
  1896                           
  1897                           ; 1 bytes @ 0xB
  1898  002B                     	ds	1
  1899  002C                     ??_read_bq_status:	
  1900  002C                     ___awdiv@sign:	
  1901                           ; 1 bytes @ 0xC
  1902                           
  1903                           
  1904                           ; 1 bytes @ 0xC
  1905  002C                     	ds	1
  1906  002D                     ___lldiv@counter:	
  1907  002D                     ___awdiv@quotient:	
  1908                           ; 1 bytes @ 0xD
  1909                           
  1910                           
  1911                           ; 2 bytes @ 0xD
  1912  002D                     	ds	1
  1913  002E                     ?_I2C_Master_Init:	
  1914  002E                     I2C_Master_Init@clk:	
  1915                           ; 1 bytes @ 0xE
  1916                           
  1917                           
  1918                           ; 4 bytes @ 0xE
  1919  002E                     	ds	1
  1920  002F                     ?_Map:	
  1921  002F                     Map@x:	
  1922                           ; 1 bytes @ 0xF
  1923                           
  1924                           
  1925                           ; 2 bytes @ 0xF
  1926  002F                     	ds	2
  1927  0031                     Map@inMin:	
  1928                           
  1929                           ; 1 bytes @ 0x11
  1930  0031                     	ds	1
  1931  0032                     ??_I2C_Master_Init:	
  1932  0032                     Map@inMax:	
  1933                           ; 1 bytes @ 0x12
  1934                           
  1935                           
  1936                           ; 1 bytes @ 0x12
  1937  0032                     	ds	1
  1938  0033                     Map@outMin:	
  1939                           
  1940                           ; 1 bytes @ 0x13
  1941  0033                     	ds	1
  1942  0034                     Map@outMax:	
  1943                           
  1944                           ; 1 bytes @ 0x14
  1945  0034                     	ds	1
  1946  0035                     ??_Map:	
  1947                           
  1948                           ; 1 bytes @ 0x15
  1949  0035                     	ds	2
  1950  0037                     ??_battery_fade:	
  1951                           
  1952                           ; 1 bytes @ 0x17
  1953  0037                     	ds	8
  1954  003F                     battery_fade@v:	
  1955                           
  1956                           ; 1 bytes @ 0x1F
  1957  003F                     	ds	1
  1958  0040                     ??_led_modes:	
  1959                           
  1960                           ; 1 bytes @ 0x20
  1961  0040                     	ds	2
  1962  0042                     ??_main:	
  1963                           
  1964                           	psect	maintext
  1965  02C6                     __pmaintext:	
  1966                           ; 1 bytes @ 0x22
  1967 ;;
  1968 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1969 ;;
  1970 ;; *************** function _main *****************
  1971 ;; Defined at:
  1972 ;;		line 202 in file "main.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;		None
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;		None
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      void 
  1979 ;; Registers used:
  1980 ;;		wreg, status,2, status,0, pclath, cstack
  1981 ;; Tracked objects:
  1982 ;;		On entry : B3F/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1986 ;;      Params:         0       0       0       0       0       0       0       0
  1987 ;;      Locals:         0       0       0       0       0       0       0       0
  1988 ;;      Temps:          0       0       0       0       0       0       0       0
  1989 ;;      Totals:         0       0       0       0       0       0       0       0
  1990 ;;Total ram usage:        0 bytes
  1991 ;; Hardware stack levels required when called:   13
  1992 ;; This function calls:
  1993 ;;		_BQ_init
  1994 ;;		_I2C_Master_Init
  1995 ;;		_PIC_init
  1996 ;;		_PPS_lock
  1997 ;;		_PPS_unlock
  1998 ;;		_PWM_init
  1999 ;;		_STUSB_9V_12V
  2000 ;;		_chrg_led
  2001 ;;		_led_modes
  2002 ;;		_read_bq_status
  2003 ;; This function is called by:
  2004 ;;		Startup code after reset
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           
  2009                           ;psect for function _main
  2010  02C6                     _main:	
  2011  02C6                     l2199:	
  2012                           ;incstack = 0
  2013                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  2014                           
  2015                           
  2016                           ;main.c: 205: PIC_init();
  2017  02C6  3183  2390  3182   	fcall	_PIC_init
  2018                           
  2019                           ;main.c: 208: PPS_unlock();
  2020  02C9  3186  26D0  3182   	fcall	_PPS_unlock
  2021  02CC                     l2201:	
  2022                           
  2023                           ;main.c: 209: SSP1DATPPS = 0x11;
  2024  02CC  3011               	movlw	17
  2025  02CD  017D               	movlb	61	; select bank61
  2026  02CE  00C6               	movwf	70	;volatile
  2027  02CF                     l2203:	
  2028                           
  2029                           ;main.c: 210: RC1PPS = 0x16;
  2030  02CF  3016               	movlw	22
  2031  02D0  017E               	movlb	62	; select bank62
  2032  02D1  00A1               	movwf	33	;volatile
  2033  02D2                     l2205:	
  2034                           
  2035                           ;main.c: 211: SSP1CLKPPS = 0x10;
  2036  02D2  3010               	movlw	16
  2037  02D3  017D               	movlb	61	; select bank61
  2038  02D4  00C5               	movwf	69	;volatile
  2039  02D5                     l2207:	
  2040                           
  2041                           ;main.c: 212: RC0PPS = 0x15;
  2042  02D5  3015               	movlw	21
  2043  02D6  017E               	movlb	62	; select bank62
  2044  02D7  00A0               	movwf	32	;volatile
  2045                           
  2046                           ;main.c: 213: PPS_lock();
  2047  02D8  3186  26AA  3182   	fcall	_PPS_lock
  2048                           
  2049                           ;main.c: 215: I2C_Master_Init(100000);
  2050  02DB  3000               	movlw	0
  2051  02DC  0140               	movlb	0	; select bank0
  2052  02DD  00B1               	movwf	I2C_Master_Init@clk+3
  2053  02DE  3001               	movlw	1
  2054  02DF  00B0               	movwf	I2C_Master_Init@clk+2
  2055  02E0  3086               	movlw	134
  2056  02E1  00AF               	movwf	I2C_Master_Init@clk+1
  2057  02E2  30A0               	movlw	160
  2058  02E3  00AE               	movwf	I2C_Master_Init@clk
  2059  02E4  3184  2467  3182   	fcall	_I2C_Master_Init
  2060                           
  2061                           ;main.c: 218: BQ_init();
  2062  02E7  3183  2352  3182   	fcall	_BQ_init
  2063                           
  2064                           ;main.c: 221: STUSB_9V_12V();
  2065  02EA  3185  250A  3182   	fcall	_STUSB_9V_12V
  2066                           
  2067                           ;main.c: 224: PWM_init();
  2068  02ED  3183  23FF  3182   	fcall	_PWM_init
  2069  02F0  0063               	sleep	;# 
  2070  02F1                     l2209:	
  2071                           
  2072                           ;main.c: 230: if(reg_state == 1) {
  2073  02F1  0140               	movlb	0	; select bank0
  2074  02F2  034C               	decf	_reg_state,w
  2075  02F3  1D03               	btfss	3,2
  2076  02F4  2AF6               	goto	u1491
  2077  02F5  2AF7               	goto	u1490
  2078  02F6                     u1491:	
  2079  02F6  2B08               	goto	l172
  2080  02F7                     u1490:	
  2081  02F7                     l2211:	
  2082                           
  2083                           ;main.c: 232: read_bq_status();
  2084  02F7  3182  2232  3182   	fcall	_read_bq_status
  2085  02FA                     l2213:	
  2086                           
  2087                           ;main.c: 234: if(vbus_stat_temp != 0) {
  2088  02FA  0140               	movlb	0	; select bank0
  2089  02FB  0847               	movf	_vbus_stat_temp,w
  2090  02FC  1903               	btfsc	3,2
  2091  02FD  2AFF               	goto	u1501
  2092  02FE  2B00               	goto	u1500
  2093  02FF                     u1501:	
  2094  02FF  2B04               	goto	l2217
  2095  0300                     u1500:	
  2096  0300                     l2215:	
  2097                           
  2098                           ;main.c: 235: chrg_led();
  2099  0300  3181  21DF  3182   	fcall	_chrg_led
  2100                           
  2101                           ;main.c: 237: }
  2102  0303  2AF1               	goto	l2209
  2103  0304                     l2217:	
  2104                           
  2105                           ;main.c: 239: else {;main.c: 240: led_modes();
  2106  0304  3182  227F  3182   	fcall	_led_modes
  2107  0307  2AF1               	goto	l2209
  2108  0308                     l172:	
  2109  0308  0063               	sleep	;# 
  2110  0309  2AF1               	goto	l2209
  2111  030A  3180  2818         	ljmp	start
  2112  030C                     __end_of_main:	
  2113                           
  2114                           	psect	text1
  2115  0232                     __ptext1:	
  2116 ;; *************** function _read_bq_status *****************
  2117 ;; Defined at:
  2118 ;;		line 34 in file "main.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;		None
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;		None
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  1    wreg      void 
  2125 ;; Registers used:
  2126 ;;		wreg, status,2, status,0, pclath, cstack
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2132 ;;      Params:         0       0       0       0       0       0       0       0
  2133 ;;      Locals:         0       0       0       0       0       0       0       0
  2134 ;;      Temps:          0       1       0       0       0       0       0       0
  2135 ;;      Totals:         0       1       0       0       0       0       0       0
  2136 ;;Total ram usage:        1 bytes
  2137 ;; Hardware stack levels used:    1
  2138 ;; Hardware stack levels required when called:   12
  2139 ;; This function calls:
  2140 ;;		_battery_read
  2141 ;;		_charge_state
  2142 ;;		_get_battery_volts
  2143 ;;		_set_battery_volts
  2144 ;;		_set_mode
  2145 ;;		_thermal_protection
  2146 ;; This function is called by:
  2147 ;;		_main
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           
  2152                           ;psect for function _read_bq_status
  2153  0232                     _read_bq_status:	
  2154  0232                     l1953:	
  2155                           ;incstack = 0
  2156                           ; Regs used in _read_bq_status: [wreg+status,2+status,0+pclath+cstack]
  2157                           
  2158                           
  2159                           ;main.c: 36: if(reg_state && TMR1IF) {
  2160  0232  0140               	movlb	0	; select bank0
  2161  0233  084C               	movf	_reg_state,w
  2162  0234  1903               	btfsc	3,2
  2163  0235  2A37               	goto	u1161
  2164  0236  2A38               	goto	u1160
  2165  0237                     u1161:	
  2166  0237  2A7E               	goto	l135
  2167  0238                     u1160:	
  2168  0238                     l1955:	
  2169  0238  014E               	movlb	14	; select bank14
  2170  0239  1C10               	btfss	16,0	;volatile
  2171  023A  2A3C               	goto	u1171
  2172  023B  2A3D               	goto	u1170
  2173  023C                     u1171:	
  2174  023C  2A7E               	goto	l135
  2175  023D                     u1170:	
  2176  023D                     l1957:	
  2177                           
  2178                           ;main.c: 37: TMR1IF = 0;
  2179  023D  1010               	bcf	16,0	;volatile
  2180  023E                     l1959:	
  2181                           
  2182                           ;main.c: 38: tmr1_count++;
  2183  023E  3001               	movlw	1
  2184  023F  0140               	movlb	0	; select bank0
  2185  0240  00AC               	movwf	??_read_bq_status
  2186  0241  082C               	movf	??_read_bq_status,w
  2187  0242  07CB               	addwf	_tmr1_count,f
  2188  0243                     l1961:	
  2189                           
  2190                           ;main.c: 41: if(tmr1_count >= 10) {
  2191  0243  300A               	movlw	10
  2192  0244  024B               	subwf	_tmr1_count,w
  2193  0245  1C03               	skipc
  2194  0246  2A48               	goto	u1181
  2195  0247  2A49               	goto	u1180
  2196  0248                     u1181:	
  2197  0248  2A7E               	goto	l135
  2198  0249                     u1180:	
  2199  0249                     l1963:	
  2200                           
  2201                           ;main.c: 42: tmr1_count = 0;
  2202  0249  01CB               	clrf	_tmr1_count
  2203  024A                     l1965:	
  2204                           
  2205                           ;main.c: 45: vbus_stat_temp = charge_state();
  2206  024A  3185  2575  3182   	fcall	_charge_state
  2207  024D  0140               	movlb	0	; select bank0
  2208  024E  00AC               	movwf	??_read_bq_status
  2209  024F  082C               	movf	??_read_bq_status,w
  2210  0250  00C7               	movwf	_vbus_stat_temp
  2211  0251                     l1967:	
  2212                           
  2213                           ;main.c: 48: if(vbus_stat_temp != 0) {
  2214  0251  0847               	movf	_vbus_stat_temp,w
  2215  0252  1903               	btfsc	3,2
  2216  0253  2A55               	goto	u1191
  2217  0254  2A56               	goto	u1190
  2218  0255                     u1191:	
  2219  0255  2A58               	goto	l131
  2220  0256                     u1190:	
  2221  0256                     l1969:	
  2222                           
  2223                           ;main.c: 49: mode_en = 0;
  2224  0256  01C8               	clrf	_mode_en
  2225                           
  2226                           ;main.c: 50: }
  2227  0257  2A5A               	goto	l1971
  2228  0258                     l131:	
  2229                           
  2230                           ;main.c: 51: else {;main.c: 52: mode_en = 1;
  2231  0258  01C8               	clrf	_mode_en
  2232  0259  0AC8               	incf	_mode_en,f
  2233  025A                     l1971:	
  2234                           
  2235                           ;main.c: 53: };main.c: 56: battery_volts_temp = battery_read();
  2236  025A  3185  25F3  3182   	fcall	_battery_read
  2237  025D  0140               	movlb	0	; select bank0
  2238  025E  00AC               	movwf	??_read_bq_status
  2239  025F  082C               	movf	??_read_bq_status,w
  2240  0260  00C9               	movwf	_battery_volts_temp
  2241                           
  2242                           ;main.c: 58: set_battery_volts(battery_volts_temp);
  2243  0261  0849               	movf	_battery_volts_temp,w
  2244  0262  3186  26C9  3182   	fcall	_set_battery_volts
  2245  0265                     l1973:	
  2246                           
  2247                           ;main.c: 61: if(get_battery_volts() <= 4) {
  2248  0265  3187  2705  3182   	fcall	_get_battery_volts
  2249  0268                     l1975:	
  2250                           
  2251                           ;main.c: 64: };main.c: 69: if(get_battery_volts() <= 50) {
  2252  0268  3187  2705  3182   	fcall	_get_battery_volts
  2253  026B  0140               	movlb	0	; select bank0
  2254  026C  00AC               	movwf	??_read_bq_status
  2255  026D  3033               	movlw	51
  2256  026E  022C               	subwf	??_read_bq_status,w
  2257  026F  1803               	skipnc
  2258  0270  2A72               	goto	u1201
  2259  0271  2A73               	goto	u1200
  2260  0272                     u1201:	
  2261  0272  2A7B               	goto	l1981
  2262  0273                     u1200:	
  2263  0273                     l1977:	
  2264                           
  2265                           ;main.c: 70: mode_temp = 2;
  2266  0273  3002               	movlw	2
  2267  0274  00AC               	movwf	??_read_bq_status
  2268  0275  082C               	movf	??_read_bq_status,w
  2269  0276  00CA               	movwf	_mode_temp
  2270  0277                     l1979:	
  2271                           
  2272                           ;main.c: 71: set_mode(mode_temp);
  2273  0277  084A               	movf	_mode_temp,w
  2274  0278  3186  26C2  3182   	fcall	_set_mode
  2275  027B                     l1981:	
  2276                           
  2277                           ;main.c: 72: };main.c: 74: thermal_protection();
  2278  027B  3186  2668  3182   	fcall	_thermal_protection
  2279  027E                     l135:	
  2280  027E  0008               	return
  2281  027F                     __end_of_read_bq_status:	
  2282                           
  2283                           	psect	text2
  2284  0668                     __ptext2:	
  2285 ;; *************** function _thermal_protection *****************
  2286 ;; Defined at:
  2287 ;;		line 23 in file "main.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;		None
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;		None
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      void 
  2294 ;; Registers used:
  2295 ;;		wreg, status,2, status,0, pclath, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2301 ;;      Params:         0       0       0       0       0       0       0       0
  2302 ;;      Locals:         0       0       0       0       0       0       0       0
  2303 ;;      Temps:          0       0       0       0       0       0       0       0
  2304 ;;      Totals:         0       0       0       0       0       0       0       0
  2305 ;;Total ram usage:        0 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:   11
  2308 ;; This function calls:
  2309 ;;		_power_down
  2310 ;;		_readADC
  2311 ;; This function is called by:
  2312 ;;		_read_bq_status
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           
  2317                           ;psect for function _thermal_protection
  2318  0668                     _thermal_protection:	
  2319  0668                     l1805:	
  2320                           ;incstack = 0
  2321                           ; Regs used in _thermal_protection: [wreg+status,2+status,0+pclath+cstack]
  2322                           
  2323                           
  2324                           ;main.c: 27: if(readADC() >= 222) {
  2325  0668  3185  25D6  3186   	fcall	_readADC
  2326  066B  3000               	movlw	0
  2327  066C  0140               	movlb	0	; select bank0
  2328  066D  0221               	subwf	?_readADC+1,w
  2329  066E  30DE               	movlw	222
  2330  066F  1903               	skipnz
  2331  0670  0220               	subwf	?_readADC,w
  2332  0671  1C03               	skipc
  2333  0672  2E74               	goto	u971
  2334  0673  2E75               	goto	u970
  2335  0674                     u971:	
  2336  0674  2E7A               	goto	l126
  2337  0675                     u970:	
  2338  0675                     l1807:	
  2339                           
  2340                           ;main.c: 28: reg_state = 0;
  2341  0675  01CC               	clrf	_reg_state
  2342  0676                     l1809:	
  2343                           
  2344                           ;main.c: 29: power_down(1);
  2345  0676  3001               	movlw	1
  2346  0677  3186  2610  3186   	fcall	_power_down
  2347  067A                     l126:	
  2348  067A  0008               	return
  2349  067B                     __end_of_thermal_protection:	
  2350                           
  2351                           	psect	text3
  2352  05D6                     __ptext3:	
  2353 ;; *************** function _readADC *****************
  2354 ;; Defined at:
  2355 ;;		line 29 in file "Functions.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;		None
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;		None
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  2    0[BANK0 ] unsigned int 
  2362 ;; Registers used:
  2363 ;;		wreg
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2369 ;;      Params:         0       2       0       0       0       0       0       0
  2370 ;;      Locals:         0       0       0       0       0       0       0       0
  2371 ;;      Temps:          0       2       0       0       0       0       0       0
  2372 ;;      Totals:         0       4       0       0       0       0       0       0
  2373 ;;Total ram usage:        4 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    7
  2376 ;; This function calls:
  2377 ;;		Nothing
  2378 ;; This function is called by:
  2379 ;;		_thermal_protection
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           
  2384                           ;psect for function _readADC
  2385  05D6                     _readADC:	
  2386  05D6                     l1735:	
  2387                           ;incstack = 0
  2388                           ; Regs used in _readADC: [wreg]
  2389                           
  2390                           
  2391                           ;Functions.c: 31: ADCON1 = 0b01100000;
  2392  05D6  3060               	movlw	96
  2393  05D7  0141               	movlb	1	; select bank1
  2394  05D8  009E               	movwf	30	;volatile
  2395                           
  2396                           ;Functions.c: 32: ADCON0 = 0b00010001;
  2397  05D9  3011               	movlw	17
  2398  05DA  009D               	movwf	29	;volatile
  2399                           
  2400                           ;Functions.c: 34: _delay((unsigned long)((5)*(32000000/4000.0)));
  2401  05DB  3034               	movlw	52
  2402  05DC  0140               	movlb	0	; select bank0
  2403  05DD  00A2               	movwf	??_readADC
  2404  05DE  30F1               	movlw	241
  2405  05DF                     u1517:	
  2406  05DF  0B89               	decfsz	9,f
  2407  05E0  2DDF               	goto	u1517
  2408  05E1  0BA2               	decfsz	??_readADC,f
  2409  05E2  2DDF               	goto	u1517
  2410  05E3  3200               	nop2
  2411  05E4                     l1737:	
  2412                           
  2413                           ;Functions.c: 36: ADCON0bits.GOnDONE = 1;
  2414  05E4  0141               	movlb	1	; select bank1
  2415  05E5  149D               	bsf	29,1	;volatile
  2416  05E6                     l258:	
  2417                           ;Functions.c: 37: while (ADCON0bits.GOnDONE);
  2418                           
  2419  05E6  189D               	btfsc	29,1	;volatile
  2420  05E7  2DE9               	goto	u951
  2421  05E8  2DEA               	goto	u950
  2422  05E9                     u951:	
  2423  05E9  2DE6               	goto	l258
  2424  05EA                     u950:	
  2425  05EA                     l1739:	
  2426                           
  2427                           ;Functions.c: 40: return ADRESH;
  2428  05EA  081C               	movf	28,w	;volatile
  2429  05EB  0140               	movlb	0	; select bank0
  2430  05EC  00A2               	movwf	??_readADC
  2431  05ED  01A3               	clrf	??_readADC+1
  2432  05EE  0822               	movf	??_readADC,w
  2433  05EF  00A0               	movwf	?_readADC
  2434  05F0  0823               	movf	??_readADC+1,w
  2435  05F1  00A1               	movwf	?_readADC+1
  2436  05F2                     l261:	
  2437  05F2  0008               	return
  2438  05F3                     __end_of_readADC:	
  2439                           
  2440                           	psect	text4
  2441  0610                     __ptext4:	
  2442 ;; *************** function _power_down *****************
  2443 ;; Defined at:
  2444 ;;		line 208 in file "Functions.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;  ship_mode       1    wreg     unsigned char 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;  ship_mode       1    4[BANK0 ] unsigned char 
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, status,2, status,0, pclath, cstack
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2458 ;;      Params:         0       0       0       0       0       0       0       0
  2459 ;;      Locals:         0       1       0       0       0       0       0       0
  2460 ;;      Temps:          0       1       0       0       0       0       0       0
  2461 ;;      Totals:         0       2       0       0       0       0       0       0
  2462 ;;Total ram usage:        2 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; Hardware stack levels required when called:   10
  2465 ;; This function calls:
  2466 ;;		_BQ_Write
  2467 ;; This function is called by:
  2468 ;;		_thermal_protection
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           
  2473                           ;psect for function _power_down
  2474  0610                     _power_down:	
  2475                           
  2476                           ;incstack = 0
  2477                           ; Regs used in _power_down: [wreg+status,2+status,0+pclath+cstack]
  2478                           ;power_down@ship_mode stored from wreg
  2479  0610  0140               	movlb	0	; select bank0
  2480  0611  00A4               	movwf	power_down@ship_mode
  2481  0612                     l1743:	
  2482                           
  2483                           ;Functions.c: 210: TRISCbits.TRISC5 = 1;
  2484  0612  1694               	bsf	20,5	;volatile
  2485                           
  2486                           ;Functions.c: 213: PWM3EN = 0;
  2487  0613  0146               	movlb	6	; select bank6
  2488  0614  1396               	bcf	22,7	;volatile
  2489                           
  2490                           ;Functions.c: 214: PWM4EN = 0;
  2491  0615  139A               	bcf	26,7	;volatile
  2492                           
  2493                           ;Functions.c: 215: PWM5EN = 0;
  2494  0616  139E               	bcf	30,7	;volatile
  2495  0617                     l1745:	
  2496                           
  2497                           ;Functions.c: 217: if (ship_mode) {
  2498  0617  0140               	movlb	0	; select bank0
  2499  0618  0824               	movf	power_down@ship_mode,w
  2500  0619  1903               	btfsc	3,2
  2501  061A  2E1C               	goto	u961
  2502  061B  2E1D               	goto	u960
  2503  061C                     u961:	
  2504  061C  2E25               	goto	l314
  2505  061D                     u960:	
  2506  061D                     l1747:	
  2507                           
  2508                           ;Functions.c: 218: BQ_Write(0x09, 0b01100100);
  2509  061D  3064               	movlw	100
  2510  061E  00A3               	movwf	??_power_down
  2511  061F  0823               	movf	??_power_down,w
  2512  0620  00A1               	movwf	BQ_Write@data
  2513  0621  3009               	movlw	9
  2514  0622  3186  2627  3186   	fcall	_BQ_Write
  2515  0625                     l314:	
  2516  0625  0063               	sleep	;# 
  2517  0626                     l315:	
  2518  0626  0008               	return
  2519  0627                     __end_of_power_down:	
  2520                           
  2521                           	psect	text5
  2522  06C2                     __ptext5:	
  2523 ;; *************** function _set_mode *****************
  2524 ;; Defined at:
  2525 ;;		line 47 in file "Functions.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  mode_temp       1    wreg     unsigned char 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  mode_temp       1    1[BANK0 ] unsigned char 
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  1    wreg      void 
  2532 ;; Registers used:
  2533 ;;		wreg
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2539 ;;      Params:         0       0       0       0       0       0       0       0
  2540 ;;      Locals:         0       1       0       0       0       0       0       0
  2541 ;;      Temps:          0       1       0       0       0       0       0       0
  2542 ;;      Totals:         0       2       0       0       0       0       0       0
  2543 ;;Total ram usage:        2 bytes
  2544 ;; Hardware stack levels used:    1
  2545 ;; Hardware stack levels required when called:    7
  2546 ;; This function calls:
  2547 ;;		Nothing
  2548 ;; This function is called by:
  2549 ;;		_read_bq_status
  2550 ;; This function uses a non-reentrant model
  2551 ;;
  2552                           
  2553                           
  2554                           ;psect for function _set_mode
  2555  06C2                     _set_mode:	
  2556                           
  2557                           ;incstack = 0
  2558                           ; Regs used in _set_mode: [wreg]
  2559                           ;set_mode@mode_temp stored from wreg
  2560  06C2  0140               	movlb	0	; select bank0
  2561  06C3  00A1               	movwf	set_mode@mode_temp
  2562  06C4                     l1835:	
  2563                           
  2564                           ;Functions.c: 48: mode = mode_temp;
  2565  06C4  0821               	movf	set_mode@mode_temp,w
  2566  06C5  00A0               	movwf	??_set_mode
  2567  06C6  0820               	movf	??_set_mode,w
  2568  06C7  00C6               	movwf	_mode
  2569  06C8                     l267:	
  2570  06C8  0008               	return
  2571  06C9                     __end_of_set_mode:	
  2572                           
  2573                           	psect	text6
  2574  06C9                     __ptext6:	
  2575 ;; *************** function _set_battery_volts *****************
  2576 ;; Defined at:
  2577 ;;		line 55 in file "Functions.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;  battery_volt    1    wreg     unsigned char 
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;  battery_volt    1    1[BANK0 ] unsigned char 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      void 
  2584 ;; Registers used:
  2585 ;;		wreg
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2591 ;;      Params:         0       0       0       0       0       0       0       0
  2592 ;;      Locals:         0       1       0       0       0       0       0       0
  2593 ;;      Temps:          0       1       0       0       0       0       0       0
  2594 ;;      Totals:         0       2       0       0       0       0       0       0
  2595 ;;Total ram usage:        2 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:    7
  2598 ;; This function calls:
  2599 ;;		Nothing
  2600 ;; This function is called by:
  2601 ;;		_read_bq_status
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605                           
  2606                           ;psect for function _set_battery_volts
  2607  06C9                     _set_battery_volts:	
  2608                           
  2609                           ;incstack = 0
  2610                           ; Regs used in _set_battery_volts: [wreg]
  2611                           ;set_battery_volts@battery_volts_temp stored from wreg
  2612  06C9  0140               	movlb	0	; select bank0
  2613  06CA  00A1               	movwf	set_battery_volts@battery_volts_temp
  2614  06CB                     l1829:	
  2615                           
  2616                           ;Functions.c: 56: battery_volts = battery_volts_temp;
  2617  06CB  0821               	movf	set_battery_volts@battery_volts_temp,w
  2618  06CC  00A0               	movwf	??_set_battery_volts
  2619  06CD  0820               	movf	??_set_battery_volts,w
  2620  06CE  00C4               	movwf	_battery_volts
  2621  06CF                     l273:	
  2622  06CF  0008               	return
  2623  06D0                     __end_of_set_battery_volts:	
  2624                           
  2625                           	psect	text7
  2626  0705                     __ptext7:	
  2627 ;; *************** function _get_battery_volts *****************
  2628 ;; Defined at:
  2629 ;;		line 51 in file "Functions.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;		None
  2632 ;; Auto vars:     Size  Location     Type
  2633 ;;		None
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      unsigned char 
  2636 ;; Registers used:
  2637 ;;		wreg
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2643 ;;      Params:         0       0       0       0       0       0       0       0
  2644 ;;      Locals:         0       0       0       0       0       0       0       0
  2645 ;;      Temps:          0       0       0       0       0       0       0       0
  2646 ;;      Totals:         0       0       0       0       0       0       0       0
  2647 ;;Total ram usage:        0 bytes
  2648 ;; Hardware stack levels used:    1
  2649 ;; Hardware stack levels required when called:    7
  2650 ;; This function calls:
  2651 ;;		Nothing
  2652 ;; This function is called by:
  2653 ;;		_read_bq_status
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           
  2658                           ;psect for function _get_battery_volts
  2659  0705                     _get_battery_volts:	
  2660  0705                     l1831:	
  2661                           ;incstack = 0
  2662                           ; Regs used in _get_battery_volts: [wreg]
  2663                           
  2664                           
  2665                           ;Functions.c: 52: return battery_volts;
  2666  0705  0140               	movlb	0	; select bank0
  2667  0706  0844               	movf	_battery_volts,w
  2668  0707                     l270:	
  2669  0707  0008               	return
  2670  0708                     __end_of_get_battery_volts:	
  2671                           
  2672                           	psect	text8
  2673  0575                     __ptext8:	
  2674 ;; *************** function _charge_state *****************
  2675 ;; Defined at:
  2676 ;;		line 121 in file "Functions.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;		None
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;  temp            1   11[BANK0 ] unsigned char 
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      unsigned char 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0, pclath, cstack
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2690 ;;      Params:         0       0       0       0       0       0       0       0
  2691 ;;      Locals:         0       1       0       0       0       0       0       0
  2692 ;;      Temps:          0       2       0       0       0       0       0       0
  2693 ;;      Totals:         0       3       0       0       0       0       0       0
  2694 ;;Total ram usage:        3 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:   10
  2697 ;; This function calls:
  2698 ;;		_BQ_Read
  2699 ;; This function is called by:
  2700 ;;		_read_bq_status
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           
  2705                           ;psect for function _charge_state
  2706  0575                     _charge_state:	
  2707  0575                     l1811:	
  2708                           ;incstack = 0
  2709                           ; Regs used in _charge_state: [wreg+status,2+status,0+pclath+cstack]
  2710                           
  2711                           
  2712                           ;Functions.c: 123: char temp = BQ_Read(0x0B);
  2713  0575  300B               	movlw	11
  2714  0576  3184  2496  3185   	fcall	_BQ_Read
  2715  0579  0140               	movlb	0	; select bank0
  2716  057A  0823               	movf	?_BQ_Read,w
  2717  057B  00A9               	movwf	??_charge_state
  2718  057C  0829               	movf	??_charge_state,w
  2719  057D  00AB               	movwf	charge_state@temp
  2720  057E                     l1813:	
  2721                           
  2722                           ;Functions.c: 125: vbus_stat = (temp >> 4) & 0b00000111;
  2723  057E  082B               	movf	charge_state@temp,w
  2724  057F  00A9               	movwf	??_charge_state
  2725  0580  3004               	movlw	4
  2726  0581                     u985:	
  2727  0581  36A9               	lsrf	??_charge_state,f
  2728  0582  0B89               	decfsz	9,f
  2729  0583  2D81               	goto	u985
  2730  0584  0829               	movf	??_charge_state,w
  2731  0585  3907               	andlw	7
  2732  0586  00AA               	movwf	??_charge_state+1
  2733  0587  082A               	movf	??_charge_state+1,w
  2734  0588  00C3               	movwf	_vbus_stat
  2735  0589                     l1815:	
  2736                           
  2737                           ;Functions.c: 126: chrg_stat = (temp >> 2) & 0b00000011;
  2738  0589  082B               	movf	charge_state@temp,w
  2739  058A  00A9               	movwf	??_charge_state
  2740  058B  3002               	movlw	2
  2741  058C                     u995:	
  2742  058C  36A9               	lsrf	??_charge_state,f
  2743  058D  0B89               	decfsz	9,f
  2744  058E  2D8C               	goto	u995
  2745  058F  0829               	movf	??_charge_state,w
  2746  0590  3903               	andlw	3
  2747  0591  00AA               	movwf	??_charge_state+1
  2748  0592  082A               	movf	??_charge_state+1,w
  2749  0593  00C2               	movwf	_chrg_stat
  2750  0594                     l1817:	
  2751                           
  2752                           ;Functions.c: 128: return vbus_stat;
  2753  0594  0843               	movf	_vbus_stat,w
  2754  0595                     l291:	
  2755  0595  0008               	return
  2756  0596                     __end_of_charge_state:	
  2757                           
  2758                           	psect	text9
  2759  05F3                     __ptext9:	
  2760 ;; *************** function _battery_read *****************
  2761 ;; Defined at:
  2762 ;;		line 114 in file "Functions.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;		None
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      unsigned char 
  2769 ;; Registers used:
  2770 ;;		wreg, status,2, status,0, pclath, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2776 ;;      Params:         0       0       0       0       0       0       0       0
  2777 ;;      Locals:         0       0       0       0       0       0       0       0
  2778 ;;      Temps:          0       2       0       0       0       0       0       0
  2779 ;;      Totals:         0       2       0       0       0       0       0       0
  2780 ;;Total ram usage:        2 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; Hardware stack levels required when called:   10
  2783 ;; This function calls:
  2784 ;;		_BQ_Read
  2785 ;;		_BQ_Write
  2786 ;; This function is called by:
  2787 ;;		_read_bq_status
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           
  2792                           ;psect for function _battery_read
  2793  05F3                     _battery_read:	
  2794  05F3                     l1821:	
  2795                           ;incstack = 0
  2796                           ; Regs used in _battery_read: [wreg+status,2+status,0+pclath+cstack]
  2797                           
  2798                           
  2799                           ;Functions.c: 116: BQ_Write(0x02, 0b10010001);
  2800  05F3  3091               	movlw	145
  2801  05F4  0140               	movlb	0	; select bank0
  2802  05F5  00A9               	movwf	??_battery_read
  2803  05F6  0829               	movf	??_battery_read,w
  2804  05F7  00A1               	movwf	BQ_Write@data
  2805  05F8  3002               	movlw	2
  2806  05F9  3186  2627  3185   	fcall	_BQ_Write
  2807  05FC                     l1823:	
  2808                           
  2809                           ;Functions.c: 117: _delay((unsigned long)((500)*(32000000/4000.0)));
  2810  05FC  3015               	movlw	21
  2811  05FD  0140               	movlb	0	; select bank0
  2812  05FE  00AA               	movwf	??_battery_read+1
  2813  05FF  304B               	movlw	75
  2814  0600  00A9               	movwf	??_battery_read
  2815  0601  30BE               	movlw	190
  2816  0602                     u1527:	
  2817  0602  0B89               	decfsz	9,f
  2818  0603  2E02               	goto	u1527
  2819  0604  0BA9               	decfsz	??_battery_read,f
  2820  0605  2E02               	goto	u1527
  2821  0606  0BAA               	decfsz	??_battery_read+1,f
  2822  0607  2E02               	goto	u1527
  2823  0608  0000               	nop
  2824  0609                     l1825:	
  2825                           
  2826                           ;Functions.c: 118: return BQ_Read(0x0E);
  2827  0609  300E               	movlw	14
  2828  060A  3184  2496  3185   	fcall	_BQ_Read
  2829  060D  0140               	movlb	0	; select bank0
  2830  060E  0823               	movf	?_BQ_Read,w
  2831  060F                     l288:	
  2832  060F  0008               	return
  2833  0610                     __end_of_battery_read:	
  2834                           
  2835                           	psect	text10
  2836  0496                     __ptext10:	
  2837 ;; *************** function _BQ_Read *****************
  2838 ;; Defined at:
  2839 ;;		line 94 in file "I2C.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  reg             1    wreg     unsigned char 
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;  reg             1    7[BANK0 ] unsigned char 
  2844 ;;  data            1    8[BANK0 ] unsigned char 
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  2    3[BANK0 ] unsigned short 
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0, pclath, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2854 ;;      Params:         0       2       0       0       0       0       0       0
  2855 ;;      Locals:         0       2       0       0       0       0       0       0
  2856 ;;      Temps:          0       2       0       0       0       0       0       0
  2857 ;;      Totals:         0       6       0       0       0       0       0       0
  2858 ;;Total ram usage:        6 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    9
  2861 ;; This function calls:
  2862 ;;		_I2C_Master_Read
  2863 ;;		_I2C_Master_Start
  2864 ;;		_I2C_Master_Stop
  2865 ;;		_I2C_Master_Write
  2866 ;; This function is called by:
  2867 ;;		_battery_read
  2868 ;;		_charge_state
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function _BQ_Read
  2874  0496                     _BQ_Read:	
  2875                           
  2876                           ;incstack = 0
  2877                           ; Regs used in _BQ_Read: [wreg+status,2+status,0+pclath+cstack]
  2878                           ;BQ_Read@reg stored from wreg
  2879  0496  0140               	movlb	0	; select bank0
  2880  0497  00A7               	movwf	BQ_Read@reg
  2881  0498                     l1753:	
  2882                           
  2883                           ;I2C.c: 96: unsigned char data;;I2C.c: 98: I2C_Master_Start();
  2884  0498  3186  26EB  3184   	fcall	_I2C_Master_Start
  2885                           
  2886                           ;I2C.c: 99: I2C_Master_Write(0x6A << 1);
  2887  049B  30D4               	movlw	212
  2888  049C  3186  26A0  3184   	fcall	_I2C_Master_Write
  2889                           
  2890                           ;I2C.c: 100: I2C_Master_Write(reg);
  2891  049F  0140               	movlb	0	; select bank0
  2892  04A0  0827               	movf	BQ_Read@reg,w
  2893  04A1  3186  26A0  3184   	fcall	_I2C_Master_Write
  2894                           
  2895                           ;I2C.c: 102: I2C_Master_Start();
  2896  04A4  3186  26EB  3184   	fcall	_I2C_Master_Start
  2897                           
  2898                           ;I2C.c: 103: I2C_Master_Write(0b11010101);
  2899  04A7  30D5               	movlw	213
  2900  04A8  3186  26A0  3184   	fcall	_I2C_Master_Write
  2901                           
  2902                           ;I2C.c: 104: data=I2C_Master_Read(1);
  2903  04AB  3001               	movlw	1
  2904  04AC  3185  252F  3184   	fcall	_I2C_Master_Read
  2905  04AF  0140               	movlb	0	; select bank0
  2906  04B0  00A5               	movwf	??_BQ_Read
  2907  04B1  0825               	movf	??_BQ_Read,w
  2908  04B2  00A8               	movwf	BQ_Read@data
  2909                           
  2910                           ;I2C.c: 105: I2C_Master_Stop();
  2911  04B3  3186  26E5  3184   	fcall	_I2C_Master_Stop
  2912  04B6                     l1755:	
  2913                           
  2914                           ;I2C.c: 106: return data;
  2915  04B6  0140               	movlb	0	; select bank0
  2916  04B7  0828               	movf	BQ_Read@data,w
  2917  04B8  00A5               	movwf	??_BQ_Read
  2918  04B9  01A6               	clrf	??_BQ_Read+1
  2919  04BA  0825               	movf	??_BQ_Read,w
  2920  04BB  00A3               	movwf	?_BQ_Read
  2921  04BC  0826               	movf	??_BQ_Read+1,w
  2922  04BD  00A4               	movwf	?_BQ_Read+1
  2923  04BE                     l394:	
  2924  04BE  0008               	return
  2925  04BF                     __end_of_BQ_Read:	
  2926                           
  2927                           	psect	text11
  2928  052F                     __ptext11:	
  2929 ;; *************** function _I2C_Master_Read *****************
  2930 ;; Defined at:
  2931 ;;		line 60 in file "I2C.c"
  2932 ;; Parameters:    Size  Location     Type
  2933 ;;  ack             1    wreg     unsigned char 
  2934 ;; Auto vars:     Size  Location     Type
  2935 ;;  ack             1    1[BANK0 ] unsigned char 
  2936 ;;  data            1    2[BANK0 ] unsigned char 
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      unsigned char 
  2939 ;; Registers used:
  2940 ;;		wreg, status,2, status,0, pclath, cstack
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2946 ;;      Params:         0       0       0       0       0       0       0       0
  2947 ;;      Locals:         0       2       0       0       0       0       0       0
  2948 ;;      Temps:          0       1       0       0       0       0       0       0
  2949 ;;      Totals:         0       3       0       0       0       0       0       0
  2950 ;;Total ram usage:        3 bytes
  2951 ;; Hardware stack levels used:    1
  2952 ;; Hardware stack levels required when called:    8
  2953 ;; This function calls:
  2954 ;;		_I2C_Master_Ack
  2955 ;;		_I2C_Master_Wait
  2956 ;;		_I2C_Master_nAck
  2957 ;; This function is called by:
  2958 ;;		_BQ_Read
  2959 ;;		_STUSB_Read
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           
  2964                           ;psect for function _I2C_Master_Read
  2965  052F                     _I2C_Master_Read:	
  2966                           
  2967                           ;incstack = 0
  2968                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2969                           ;I2C_Master_Read@ack stored from wreg
  2970  052F  0140               	movlb	0	; select bank0
  2971  0530  00A1               	movwf	I2C_Master_Read@ack
  2972  0531                     l1649:	
  2973                           
  2974                           ;I2C.c: 62: I2C_Master_Wait();
  2975  0531  3186  2688  3185   	fcall	_I2C_Master_Wait
  2976  0534                     l1651:	
  2977                           
  2978                           ;I2C.c: 63: SSP1CON2bits.RCEN = 1;
  2979  0534  0143               	movlb	3	; select bank3
  2980  0535  1591               	bsf	17,3	;volatile
  2981                           
  2982                           ;I2C.c: 64: I2C_Master_Wait();
  2983  0536  3186  2688  3185   	fcall	_I2C_Master_Wait
  2984  0539                     l1653:	
  2985                           
  2986                           ;I2C.c: 66: unsigned char data = SSP1BUF;
  2987  0539  0143               	movlb	3	; select bank3
  2988  053A  080C               	movf	12,w	;volatile
  2989  053B  0140               	movlb	0	; select bank0
  2990  053C  00A0               	movwf	??_I2C_Master_Read
  2991  053D  0820               	movf	??_I2C_Master_Read,w
  2992  053E  00A2               	movwf	I2C_Master_Read@data
  2993  053F                     l1655:	
  2994                           
  2995                           ;I2C.c: 67: I2C_Master_Wait();
  2996  053F  3186  2688  3185   	fcall	_I2C_Master_Wait
  2997  0542                     l1657:	
  2998                           
  2999                           ;I2C.c: 69: if (ack)
  3000  0542  0140               	movlb	0	; select bank0
  3001  0543  0821               	movf	I2C_Master_Read@ack,w
  3002  0544  1903               	btfsc	3,2
  3003  0545  2D47               	goto	u801
  3004  0546  2D48               	goto	u800
  3005  0547                     u801:	
  3006  0547  2D4C               	goto	l1661
  3007  0548                     u800:	
  3008  0548                     l1659:	
  3009                           
  3010                           ;I2C.c: 70: I2C_Master_nAck();
  3011  0548  3186  26FD  3185   	fcall	_I2C_Master_nAck
  3012  054B  2D4F               	goto	l1663
  3013  054C                     l1661:	
  3014                           
  3015                           ;I2C.c: 71: else;I2C.c: 72: I2C_Master_Ack();
  3016  054C  3187  2701  3185   	fcall	_I2C_Master_Ack
  3017  054F                     l1663:	
  3018                           
  3019                           ;I2C.c: 74: return data;
  3020  054F  0140               	movlb	0	; select bank0
  3021  0550  0822               	movf	I2C_Master_Read@data,w
  3022  0551                     l385:	
  3023  0551  0008               	return
  3024  0552                     __end_of_I2C_Master_Read:	
  3025                           
  3026                           	psect	text12
  3027  06FD                     __ptext12:	
  3028 ;; *************** function _I2C_Master_nAck *****************
  3029 ;; Defined at:
  3030 ;;		line 54 in file "I2C.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		None
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3044 ;;      Params:         0       0       0       0       0       0       0       0
  3045 ;;      Locals:         0       0       0       0       0       0       0       0
  3046 ;;      Temps:          0       0       0       0       0       0       0       0
  3047 ;;      Totals:         0       0       0       0       0       0       0       0
  3048 ;;Total ram usage:        0 bytes
  3049 ;; Hardware stack levels used:    1
  3050 ;; Hardware stack levels required when called:    7
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		_I2C_Master_Read
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058                           
  3059                           ;psect for function _I2C_Master_nAck
  3060  06FD                     _I2C_Master_nAck:	
  3061  06FD                     l1633:	
  3062                           ;incstack = 0
  3063                           ; Regs used in _I2C_Master_nAck: []
  3064                           
  3065                           
  3066                           ;I2C.c: 56: SSP1CON2bits.ACKDT = 1;
  3067  06FD  0143               	movlb	3	; select bank3
  3068  06FE  1691               	bsf	17,5	;volatile
  3069                           
  3070                           ;I2C.c: 57: SSP1CON2bits.ACKEN = 1;
  3071  06FF  1611               	bsf	17,4	;volatile
  3072  0700                     l380:	
  3073  0700  0008               	return
  3074  0701                     __end_of_I2C_Master_nAck:	
  3075                           
  3076                           	psect	text13
  3077  0701                     __ptext13:	
  3078 ;; *************** function _I2C_Master_Ack *****************
  3079 ;; Defined at:
  3080 ;;		line 48 in file "I2C.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;		None
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		None
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3094 ;;      Params:         0       0       0       0       0       0       0       0
  3095 ;;      Locals:         0       0       0       0       0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0
  3097 ;;      Totals:         0       0       0       0       0       0       0       0
  3098 ;;Total ram usage:        0 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    7
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_I2C_Master_Read
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           
  3109                           ;psect for function _I2C_Master_Ack
  3110  0701                     _I2C_Master_Ack:	
  3111  0701                     l1631:	
  3112                           ;incstack = 0
  3113                           ; Regs used in _I2C_Master_Ack: []
  3114                           
  3115                           
  3116                           ;I2C.c: 50: SSP1CON2bits.ACKDT = 0;
  3117  0701  0143               	movlb	3	; select bank3
  3118  0702  1291               	bcf	17,5	;volatile
  3119                           
  3120                           ;I2C.c: 51: SSP1CON2bits.ACKEN = 1;
  3121  0703  1611               	bsf	17,4	;volatile
  3122  0704                     l377:	
  3123  0704  0008               	return
  3124  0705                     __end_of_I2C_Master_Ack:	
  3125                           
  3126                           	psect	text14
  3127  027F                     __ptext14:	
  3128 ;; *************** function _led_modes *****************
  3129 ;; Defined at:
  3130 ;;		line 289 in file "Functions.c"
  3131 ;; Parameters:    Size  Location     Type
  3132 ;;		None
  3133 ;; Auto vars:     Size  Location     Type
  3134 ;;		None
  3135 ;; Return value:  Size  Location     Type
  3136 ;;                  1    wreg      void 
  3137 ;; Registers used:
  3138 ;;		wreg, status,2, status,0, pclath, cstack
  3139 ;; Tracked objects:
  3140 ;;		On entry : 0/0
  3141 ;;		On exit  : 0/0
  3142 ;;		Unchanged: 0/0
  3143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3144 ;;      Params:         0       0       0       0       0       0       0       0
  3145 ;;      Locals:         0       0       0       0       0       0       0       0
  3146 ;;      Temps:          0       2       0       0       0       0       0       0
  3147 ;;      Totals:         0       2       0       0       0       0       0       0
  3148 ;;Total ram usage:        2 bytes
  3149 ;; Hardware stack levels used:    1
  3150 ;; Hardware stack levels required when called:   10
  3151 ;; This function calls:
  3152 ;;		_RGB_fade
  3153 ;;		_battery_fade
  3154 ;; This function is called by:
  3155 ;;		_main
  3156 ;; This function uses a non-reentrant model
  3157 ;;
  3158                           
  3159                           
  3160                           ;psect for function _led_modes
  3161  027F                     _led_modes:	
  3162  027F                     l2165:	
  3163                           ;incstack = 0
  3164                           ; Regs used in _led_modes: [wreg+status,2+status,0+pclath+cstack]
  3165                           
  3166                           
  3167                           ;Functions.c: 293: if (mode == 0) {
  3168  027F  0140               	movlb	0	; select bank0
  3169  0280  0846               	movf	_mode,w
  3170  0281  1D03               	btfss	3,2
  3171  0282  2A84               	goto	u1441
  3172  0283  2A85               	goto	u1440
  3173  0284                     u1441:	
  3174  0284  2A8A               	goto	l2169
  3175  0285                     u1440:	
  3176  0285                     l2167:	
  3177                           
  3178                           ;Functions.c: 294: PWM3DCH = 0;
  3179  0285  0146               	movlb	6	; select bank6
  3180  0286  0195               	clrf	21	;volatile
  3181                           
  3182                           ;Functions.c: 295: PWM4DCH = 0;
  3183  0287  0199               	clrf	25	;volatile
  3184                           
  3185                           ;Functions.c: 296: PWM5DCH = 0;
  3186  0288  019D               	clrf	29	;volatile
  3187                           
  3188                           ;Functions.c: 297: }
  3189  0289  2AC5               	goto	l341
  3190  028A                     l2169:	
  3191                           
  3192                           ;Functions.c: 299: else if (mode == 1) {
  3193  028A  0346               	decf	_mode,w
  3194  028B  1D03               	btfss	3,2
  3195  028C  2A8E               	goto	u1451
  3196  028D  2A8F               	goto	u1450
  3197  028E                     u1451:	
  3198  028E  2A93               	goto	l2173
  3199  028F                     u1450:	
  3200  028F                     l2171:	
  3201                           
  3202                           ;Functions.c: 300: RGB_fade();
  3203  028F  3183  230C  3182   	fcall	_RGB_fade
  3204                           
  3205                           ;Functions.c: 301: }
  3206  0292  2AC5               	goto	l341
  3207  0293                     l2173:	
  3208                           
  3209                           ;Functions.c: 304: else if (mode == 2) {
  3210  0293  3002               	movlw	2
  3211  0294  0646               	xorwf	_mode,w
  3212  0295  1D03               	btfss	3,2
  3213  0296  2A98               	goto	u1461
  3214  0297  2A99               	goto	u1460
  3215  0298                     u1461:	
  3216  0298  2A9D               	goto	l2177
  3217  0299                     u1460:	
  3218  0299                     l2175:	
  3219                           
  3220                           ;Functions.c: 305: battery_fade();
  3221  0299  3180  20AC  3182   	fcall	_battery_fade
  3222                           
  3223                           ;Functions.c: 306: }
  3224  029C  2AC5               	goto	l341
  3225  029D                     l2177:	
  3226                           
  3227                           ;Functions.c: 308: else if (mode == 3) {
  3228  029D  3003               	movlw	3
  3229  029E  0646               	xorwf	_mode,w
  3230  029F  1D03               	btfss	3,2
  3231  02A0  2AA2               	goto	u1471
  3232  02A1  2AA3               	goto	u1470
  3233  02A2                     u1471:	
  3234  02A2  2AC5               	goto	l337
  3235  02A3                     u1470:	
  3236  02A3                     l2179:	
  3237                           
  3238                           ;Functions.c: 310: PWM3DCH = 0;
  3239  02A3  0146               	movlb	6	; select bank6
  3240  02A4  0195               	clrf	21	;volatile
  3241                           
  3242                           ;Functions.c: 311: PWM4DCH = 0;
  3243  02A5  0199               	clrf	25	;volatile
  3244  02A6                     l2181:	
  3245                           
  3246                           ;Functions.c: 312: PWM5DCH = 255;
  3247  02A6  30FF               	movlw	255
  3248  02A7  009D               	movwf	29	;volatile
  3249  02A8                     l2183:	
  3250                           
  3251                           ;Functions.c: 314: _delay((unsigned long)((400)*(32000000/4000.0)));
  3252  02A8  3011               	movlw	17
  3253  02A9  0140               	movlb	0	; select bank0
  3254  02AA  00C1               	movwf	??_led_modes+1
  3255  02AB  303C               	movlw	60
  3256  02AC  00C0               	movwf	??_led_modes
  3257  02AD  30CB               	movlw	203
  3258  02AE                     u1537:	
  3259  02AE  0B89               	decfsz	9,f
  3260  02AF  2AAE               	goto	u1537
  3261  02B0  0BC0               	decfsz	??_led_modes,f
  3262  02B1  2AAE               	goto	u1537
  3263  02B2  0BC1               	decfsz	??_led_modes+1,f
  3264  02B3  2AAE               	goto	u1537
  3265                           
  3266                           ;Functions.c: 316: PWM3DCH = 0;
  3267  02B4  0146               	movlb	6	; select bank6
  3268  02B5  0195               	clrf	21	;volatile
  3269                           
  3270                           ;Functions.c: 317: PWM4DCH = 0;
  3271  02B6  0199               	clrf	25	;volatile
  3272                           
  3273                           ;Functions.c: 318: PWM5DCH = 0;
  3274  02B7  019D               	clrf	29	;volatile
  3275  02B8                     l2185:	
  3276                           
  3277                           ;Functions.c: 320: _delay((unsigned long)((400)*(32000000/4000.0)));
  3278  02B8  3011               	movlw	17
  3279  02B9  0140               	movlb	0	; select bank0
  3280  02BA  00C1               	movwf	??_led_modes+1
  3281  02BB  303C               	movlw	60
  3282  02BC  00C0               	movwf	??_led_modes
  3283  02BD  30CB               	movlw	203
  3284  02BE                     u1547:	
  3285  02BE  0B89               	decfsz	9,f
  3286  02BF  2ABE               	goto	u1547
  3287  02C0  0BC0               	decfsz	??_led_modes,f
  3288  02C1  2ABE               	goto	u1547
  3289  02C2  0BC1               	decfsz	??_led_modes+1,f
  3290  02C3  2ABE               	goto	u1547
  3291  02C4  2AC5               	goto	l341
  3292  02C5                     l337:	
  3293  02C5                     l341:	
  3294  02C5  0008               	return
  3295  02C6                     __end_of_led_modes:	
  3296                           
  3297                           	psect	text15
  3298  00AC                     __ptext15:	
  3299 ;; *************** function _battery_fade *****************
  3300 ;; Defined at:
  3301 ;;		line 255 in file "Functions.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;		None
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;  v               1   31[BANK0 ] unsigned char 
  3306 ;;  battery_max     1    0        unsigned char 
  3307 ;;  battery_min     1    0        unsigned char 
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  1    wreg      void 
  3310 ;; Registers used:
  3311 ;;		wreg, status,2, status,0, pclath, cstack
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3317 ;;      Params:         0       0       0       0       0       0       0       0
  3318 ;;      Locals:         0       3       0       0       0       0       0       0
  3319 ;;      Temps:          0       6       0       0       0       0       0       0
  3320 ;;      Totals:         0       9       0       0       0       0       0       0
  3321 ;;Total ram usage:        9 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; Hardware stack levels required when called:    9
  3324 ;; This function calls:
  3325 ;;		_Map
  3326 ;; This function is called by:
  3327 ;;		_led_modes
  3328 ;; This function uses a non-reentrant model
  3329 ;;
  3330                           
  3331                           
  3332                           ;psect for function _battery_fade
  3333  00AC                     _battery_fade:	
  3334  00AC                     l1885:	
  3335                           ;incstack = 0
  3336                           ; Regs used in _battery_fade: [wreg+status,2+status,0+pclath+cstack]
  3337                           
  3338                           
  3339                           ;Functions.c: 258: char v = battery_volts;
  3340  00AC  0140               	movlb	0	; select bank0
  3341  00AD  0844               	movf	_battery_volts,w
  3342  00AE  00B7               	movwf	??_battery_fade
  3343  00AF  0837               	movf	??_battery_fade,w
  3344  00B0  00BF               	movwf	battery_fade@v
  3345  00B1                     l1887:	
  3346  00B1                     l1889:	
  3347  00B1                     l1891:	
  3348                           
  3349                           ;Functions.c: 264: if (v > battery_max) {
  3350  00B1  3063               	movlw	99
  3351  00B2  023F               	subwf	battery_fade@v,w
  3352  00B3  1C03               	skipc
  3353  00B4  28B6               	goto	u1051
  3354  00B5  28B7               	goto	u1050
  3355  00B6                     u1051:	
  3356  00B6  28BB               	goto	l1897
  3357  00B7                     u1050:	
  3358  00B7                     l1893:	
  3359                           
  3360                           ;Functions.c: 265: v = battery_max;
  3361  00B7  3062               	movlw	98
  3362  00B8  00B7               	movwf	??_battery_fade
  3363  00B9  0837               	movf	??_battery_fade,w
  3364  00BA  00BF               	movwf	battery_fade@v
  3365  00BB                     l1897:	
  3366                           
  3367                           ;Functions.c: 269: };Functions.c: 271: v = Map(v, battery_min, battery_max, 0, 127);
  3368  00BB  083F               	movf	battery_fade@v,w
  3369  00BC  00B7               	movwf	??_battery_fade
  3370  00BD  01B8               	clrf	??_battery_fade+1
  3371  00BE  0837               	movf	??_battery_fade,w
  3372  00BF  00AF               	movwf	Map@x
  3373  00C0  0838               	movf	??_battery_fade+1,w
  3374  00C1  00B0               	movwf	Map@x+1
  3375  00C2  01B1               	clrf	Map@inMin
  3376  00C3  3062               	movlw	98
  3377  00C4  00B9               	movwf	??_battery_fade+2
  3378  00C5  0839               	movf	??_battery_fade+2,w
  3379  00C6  00B2               	movwf	Map@inMax
  3380  00C7  01B3               	clrf	Map@outMin
  3381  00C8  307F               	movlw	127
  3382  00C9  00BA               	movwf	??_battery_fade+3
  3383  00CA  083A               	movf	??_battery_fade+3,w
  3384  00CB  00B4               	movwf	Map@outMax
  3385  00CC  3184  24E5  3180   	fcall	_Map
  3386  00CF  0140               	movlb	0	; select bank0
  3387  00D0  00BB               	movwf	??_battery_fade+4
  3388  00D1  083B               	movf	??_battery_fade+4,w
  3389  00D2  00BF               	movwf	battery_fade@v
  3390  00D3                     l1899:	
  3391                           
  3392                           ;Functions.c: 274: if (v <= 63) {
  3393  00D3  3040               	movlw	64
  3394  00D4  023F               	subwf	battery_fade@v,w
  3395  00D5  1803               	skipnc
  3396  00D6  28D8               	goto	u1061
  3397  00D7  28D9               	goto	u1060
  3398  00D8                     u1061:	
  3399  00D8  28FA               	goto	l1909
  3400  00D9                     u1060:	
  3401  00D9                     l1901:	
  3402                           
  3403                           ;Functions.c: 275: v = Map(v, 0, 63, 0, 255);
  3404  00D9  083F               	movf	battery_fade@v,w
  3405  00DA  00B7               	movwf	??_battery_fade
  3406  00DB  01B8               	clrf	??_battery_fade+1
  3407  00DC  0837               	movf	??_battery_fade,w
  3408  00DD  00AF               	movwf	Map@x
  3409  00DE  0838               	movf	??_battery_fade+1,w
  3410  00DF  00B0               	movwf	Map@x+1
  3411  00E0  01B1               	clrf	Map@inMin
  3412  00E1  303F               	movlw	63
  3413  00E2  00B9               	movwf	??_battery_fade+2
  3414  00E3  0839               	movf	??_battery_fade+2,w
  3415  00E4  00B2               	movwf	Map@inMax
  3416  00E5  01B3               	clrf	Map@outMin
  3417  00E6  30FF               	movlw	255
  3418  00E7  00BA               	movwf	??_battery_fade+3
  3419  00E8  083A               	movf	??_battery_fade+3,w
  3420  00E9  00B4               	movwf	Map@outMax
  3421  00EA  3184  24E5  3180   	fcall	_Map
  3422  00ED  0140               	movlb	0	; select bank0
  3423  00EE  00BB               	movwf	??_battery_fade+4
  3424  00EF  083B               	movf	??_battery_fade+4,w
  3425  00F0  00BF               	movwf	battery_fade@v
  3426  00F1                     l1903:	
  3427                           
  3428                           ;Functions.c: 276: PWM3DCH = 0;
  3429  00F1  0146               	movlb	6	; select bank6
  3430  00F2  0195               	clrf	21	;volatile
  3431  00F3                     l1905:	
  3432                           
  3433                           ;Functions.c: 277: PWM4DCH = v;
  3434  00F3  0140               	movlb	0	; select bank0
  3435  00F4  083F               	movf	battery_fade@v,w
  3436  00F5  0146               	movlb	6	; select bank6
  3437  00F6  0099               	movwf	25	;volatile
  3438  00F7                     l1907:	
  3439                           
  3440                           ;Functions.c: 278: PWM5DCH = 255;
  3441  00F7  30FF               	movlw	255
  3442  00F8  009D               	movwf	29	;volatile
  3443                           
  3444                           ;Functions.c: 279: }
  3445  00F9  2923               	goto	l331
  3446  00FA                     l1909:	
  3447                           
  3448                           ;Functions.c: 281: else if (v >= 63) {
  3449  00FA  303F               	movlw	63
  3450  00FB  023F               	subwf	battery_fade@v,w
  3451  00FC  1C03               	skipc
  3452  00FD  28FF               	goto	u1071
  3453  00FE  2900               	goto	u1070
  3454  00FF                     u1071:	
  3455  00FF  2923               	goto	l331
  3456  0100                     u1070:	
  3457  0100                     l1911:	
  3458                           
  3459                           ;Functions.c: 282: v = Map(v, 63, 127, 0, 255);
  3460  0100  083F               	movf	battery_fade@v,w
  3461  0101  00B7               	movwf	??_battery_fade
  3462  0102  01B8               	clrf	??_battery_fade+1
  3463  0103  0837               	movf	??_battery_fade,w
  3464  0104  00AF               	movwf	Map@x
  3465  0105  0838               	movf	??_battery_fade+1,w
  3466  0106  00B0               	movwf	Map@x+1
  3467  0107  303F               	movlw	63
  3468  0108  00B9               	movwf	??_battery_fade+2
  3469  0109  0839               	movf	??_battery_fade+2,w
  3470  010A  00B1               	movwf	Map@inMin
  3471  010B  307F               	movlw	127
  3472  010C  00BA               	movwf	??_battery_fade+3
  3473  010D  083A               	movf	??_battery_fade+3,w
  3474  010E  00B2               	movwf	Map@inMax
  3475  010F  01B3               	clrf	Map@outMin
  3476  0110  30FF               	movlw	255
  3477  0111  00BB               	movwf	??_battery_fade+4
  3478  0112  083B               	movf	??_battery_fade+4,w
  3479  0113  00B4               	movwf	Map@outMax
  3480  0114  3184  24E5  3180   	fcall	_Map
  3481  0117  0140               	movlb	0	; select bank0
  3482  0118  00BC               	movwf	??_battery_fade+5
  3483  0119  083C               	movf	??_battery_fade+5,w
  3484  011A  00BF               	movwf	battery_fade@v
  3485  011B                     l1913:	
  3486                           
  3487                           ;Functions.c: 283: PWM3DCH = 0;
  3488  011B  0146               	movlb	6	; select bank6
  3489  011C  0195               	clrf	21	;volatile
  3490  011D                     l1915:	
  3491                           
  3492                           ;Functions.c: 284: PWM4DCH = 255;
  3493  011D  30FF               	movlw	255
  3494  011E  0099               	movwf	25	;volatile
  3495  011F                     l1917:	
  3496                           
  3497                           ;Functions.c: 285: PWM5DCH = 255 - v;
  3498  011F  0140               	movlb	0	; select bank0
  3499  0120  093F               	comf	battery_fade@v,w
  3500  0121  0146               	movlb	6	; select bank6
  3501  0122  009D               	movwf	29	;volatile
  3502  0123                     l331:	
  3503  0123  0008               	return
  3504  0124                     __end_of_battery_fade:	
  3505                           
  3506                           	psect	text16
  3507  04E5                     __ptext16:	
  3508 ;; *************** function _Map *****************
  3509 ;; Defined at:
  3510 ;;		line 24 in file "Functions.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;  x               2   15[BANK0 ] int 
  3513 ;;  inMin           1   17[BANK0 ] unsigned char 
  3514 ;;  inMax           1   18[BANK0 ] unsigned char 
  3515 ;;  outMin          1   19[BANK0 ] unsigned char 
  3516 ;;  outMax          1   20[BANK0 ] unsigned char 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;		None
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      unsigned char 
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0, pclath, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3528 ;;      Params:         0       6       0       0       0       0       0       0
  3529 ;;      Locals:         0       0       0       0       0       0       0       0
  3530 ;;      Temps:          0       2       0       0       0       0       0       0
  3531 ;;      Totals:         0       8       0       0       0       0       0       0
  3532 ;;Total ram usage:        8 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:    8
  3535 ;; This function calls:
  3536 ;;		___awdiv
  3537 ;;		___wmul
  3538 ;; This function is called by:
  3539 ;;		_battery_fade
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           
  3544                           ;psect for function _Map
  3545  04E5                     _Map:	
  3546  04E5                     l1749:	
  3547                           ;incstack = 0
  3548                           ; Regs used in _Map: [wreg+status,2+status,0+pclath+cstack]
  3549                           
  3550                           
  3551                           ;Functions.c: 26: return (((x - inMin) * (outMax - outMin)) / (inMax - inMin)) +outMin;
  3552  04E5  0140               	movlb	0	; select bank0
  3553  04E6  0831               	movf	Map@inMin,w
  3554  04E7  0232               	subwf	Map@inMax,w
  3555  04E8  00A6               	movwf	___awdiv@divisor
  3556  04E9  01A7               	clrf	___awdiv@divisor+1
  3557  04EA  1C03               	skipc
  3558  04EB  03A7               	decf	___awdiv@divisor+1,f
  3559  04EC  0831               	movf	Map@inMin,w
  3560  04ED  00B5               	movwf	??_Map
  3561  04EE  01B6               	clrf	??_Map+1
  3562  04EF  0835               	movf	??_Map,w
  3563  04F0  022F               	subwf	Map@x,w
  3564  04F1  00A0               	movwf	___wmul@multiplier
  3565  04F2  0836               	movf	??_Map+1,w
  3566  04F3  3B30               	subwfb	Map@x+1,w
  3567  04F4  00A1               	movwf	___wmul@multiplier+1
  3568  04F5  0833               	movf	Map@outMin,w
  3569  04F6  0234               	subwf	Map@outMax,w
  3570  04F7  00A2               	movwf	___wmul@multiplicand
  3571  04F8  01A3               	clrf	___wmul@multiplicand+1
  3572  04F9  1C03               	skipc
  3573  04FA  03A3               	decf	___wmul@multiplicand+1,f
  3574  04FB  3185  2596  3184   	fcall	___wmul
  3575  04FE  0140               	movlb	0	; select bank0
  3576  04FF  0821               	movf	?___wmul+1,w
  3577  0500  00A9               	movwf	___awdiv@dividend+1
  3578  0501  0820               	movf	?___wmul,w
  3579  0502  00A8               	movwf	___awdiv@dividend
  3580  0503  3181  2124  3184   	fcall	___awdiv
  3581  0506  0140               	movlb	0	; select bank0
  3582  0507  0826               	movf	?___awdiv,w
  3583  0508  0733               	addwf	Map@outMin,w
  3584  0509                     l255:	
  3585  0509  0008               	return
  3586  050A                     __end_of_Map:	
  3587                           
  3588                           	psect	text17
  3589  0596                     __ptext17:	
  3590 ;; *************** function ___wmul *****************
  3591 ;; Defined at:
  3592 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3595 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3596 ;; Auto vars:     Size  Location     Type
  3597 ;;  product         2    4[BANK0 ] unsigned int 
  3598 ;; Return value:  Size  Location     Type
  3599 ;;                  2    0[BANK0 ] unsigned int 
  3600 ;; Registers used:
  3601 ;;		wreg, status,2, status,0
  3602 ;; Tracked objects:
  3603 ;;		On entry : 0/0
  3604 ;;		On exit  : 0/0
  3605 ;;		Unchanged: 0/0
  3606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3607 ;;      Params:         0       4       0       0       0       0       0       0
  3608 ;;      Locals:         0       2       0       0       0       0       0       0
  3609 ;;      Temps:          0       0       0       0       0       0       0       0
  3610 ;;      Totals:         0       6       0       0       0       0       0       0
  3611 ;;Total ram usage:        6 bytes
  3612 ;; Hardware stack levels used:    1
  3613 ;; Hardware stack levels required when called:    7
  3614 ;; This function calls:
  3615 ;;		Nothing
  3616 ;; This function is called by:
  3617 ;;		_Map
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           
  3622                           ;psect for function ___wmul
  3623  0596                     ___wmul:	
  3624  0596                     l1667:	
  3625                           ;incstack = 0
  3626                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3627                           
  3628  0596  0140               	movlb	0	; select bank0
  3629  0597  01A4               	clrf	___wmul@product
  3630  0598  01A5               	clrf	___wmul@product+1
  3631  0599                     l1669:	
  3632  0599  1C20               	btfss	___wmul@multiplier,0
  3633  059A  2D9C               	goto	u811
  3634  059B  2D9D               	goto	u810
  3635  059C                     u811:	
  3636  059C  2DA1               	goto	l479
  3637  059D                     u810:	
  3638  059D                     l1671:	
  3639  059D  0822               	movf	___wmul@multiplicand,w
  3640  059E  07A4               	addwf	___wmul@product,f
  3641  059F  0823               	movf	___wmul@multiplicand+1,w
  3642  05A0  3DA5               	addwfc	___wmul@product+1,f
  3643  05A1                     l479:	
  3644  05A1  3001               	movlw	1
  3645  05A2                     u825:	
  3646  05A2  35A2               	lslf	___wmul@multiplicand,f
  3647  05A3  0DA3               	rlf	___wmul@multiplicand+1,f
  3648  05A4  0B89               	decfsz	9,f
  3649  05A5  2DA2               	goto	u825
  3650  05A6                     l1673:	
  3651  05A6  3001               	movlw	1
  3652  05A7                     u835:	
  3653  05A7  36A1               	lsrf	___wmul@multiplier+1,f
  3654  05A8  0CA0               	rrf	___wmul@multiplier,f
  3655  05A9  0B89               	decfsz	9,f
  3656  05AA  2DA7               	goto	u835
  3657  05AB                     l1675:	
  3658  05AB  0820               	movf	___wmul@multiplier,w
  3659  05AC  0421               	iorwf	___wmul@multiplier+1,w
  3660  05AD  1D03               	btfss	3,2
  3661  05AE  2DB0               	goto	u841
  3662  05AF  2DB1               	goto	u840
  3663  05B0                     u841:	
  3664  05B0  2D99               	goto	l1669
  3665  05B1                     u840:	
  3666  05B1                     l1677:	
  3667  05B1  0825               	movf	___wmul@product+1,w
  3668  05B2  00A1               	movwf	?___wmul+1
  3669  05B3  0824               	movf	___wmul@product,w
  3670  05B4  00A0               	movwf	?___wmul
  3671  05B5                     l481:	
  3672  05B5  0008               	return
  3673  05B6                     __end_of___wmul:	
  3674                           
  3675                           	psect	text18
  3676  0124                     __ptext18:	
  3677 ;; *************** function ___awdiv *****************
  3678 ;; Defined at:
  3679 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;  divisor         2    6[BANK0 ] int 
  3682 ;;  dividend        2    8[BANK0 ] int 
  3683 ;; Auto vars:     Size  Location     Type
  3684 ;;  quotient        2   13[BANK0 ] int 
  3685 ;;  sign            1   12[BANK0 ] unsigned char 
  3686 ;;  counter         1   11[BANK0 ] unsigned char 
  3687 ;; Return value:  Size  Location     Type
  3688 ;;                  2    6[BANK0 ] int 
  3689 ;; Registers used:
  3690 ;;		wreg, status,2, status,0
  3691 ;; Tracked objects:
  3692 ;;		On entry : 0/0
  3693 ;;		On exit  : 0/0
  3694 ;;		Unchanged: 0/0
  3695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3696 ;;      Params:         0       4       0       0       0       0       0       0
  3697 ;;      Locals:         0       4       0       0       0       0       0       0
  3698 ;;      Temps:          0       1       0       0       0       0       0       0
  3699 ;;      Totals:         0       9       0       0       0       0       0       0
  3700 ;;Total ram usage:        9 bytes
  3701 ;; Hardware stack levels used:    1
  3702 ;; Hardware stack levels required when called:    7
  3703 ;; This function calls:
  3704 ;;		Nothing
  3705 ;; This function is called by:
  3706 ;;		_Map
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           
  3711                           ;psect for function ___awdiv
  3712  0124                     ___awdiv:	
  3713  0124                     l1681:	
  3714                           ;incstack = 0
  3715                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3716                           
  3717  0124  0140               	movlb	0	; select bank0
  3718  0125  01AC               	clrf	___awdiv@sign
  3719  0126                     l1683:	
  3720  0126  1FA7               	btfss	___awdiv@divisor+1,7
  3721  0127  2929               	goto	u851
  3722  0128  292A               	goto	u850
  3723  0129                     u851:	
  3724  0129  2931               	goto	l1689
  3725  012A                     u850:	
  3726  012A                     l1685:	
  3727  012A  09A6               	comf	___awdiv@divisor,f
  3728  012B  09A7               	comf	___awdiv@divisor+1,f
  3729  012C  0AA6               	incf	___awdiv@divisor,f
  3730  012D  1903               	skipnz
  3731  012E  0AA7               	incf	___awdiv@divisor+1,f
  3732  012F                     l1687:	
  3733  012F  01AC               	clrf	___awdiv@sign
  3734  0130  0AAC               	incf	___awdiv@sign,f
  3735  0131                     l1689:	
  3736  0131  1FA9               	btfss	___awdiv@dividend+1,7
  3737  0132  2934               	goto	u861
  3738  0133  2935               	goto	u860
  3739  0134                     u861:	
  3740  0134  293E               	goto	l1695
  3741  0135                     u860:	
  3742  0135                     l1691:	
  3743  0135  09A8               	comf	___awdiv@dividend,f
  3744  0136  09A9               	comf	___awdiv@dividend+1,f
  3745  0137  0AA8               	incf	___awdiv@dividend,f
  3746  0138  1903               	skipnz
  3747  0139  0AA9               	incf	___awdiv@dividend+1,f
  3748  013A                     l1693:	
  3749  013A  3001               	movlw	1
  3750  013B  00AA               	movwf	??___awdiv
  3751  013C  082A               	movf	??___awdiv,w
  3752  013D  06AC               	xorwf	___awdiv@sign,f
  3753  013E                     l1695:	
  3754  013E  01AD               	clrf	___awdiv@quotient
  3755  013F  01AE               	clrf	___awdiv@quotient+1
  3756  0140                     l1697:	
  3757  0140  0826               	movf	___awdiv@divisor,w
  3758  0141  0427               	iorwf	___awdiv@divisor+1,w
  3759  0142  1903               	btfsc	3,2
  3760  0143  2945               	goto	u871
  3761  0144  2946               	goto	u870
  3762  0145                     u871:	
  3763  0145  2975               	goto	l1717
  3764  0146                     u870:	
  3765  0146                     l1699:	
  3766  0146  01AB               	clrf	___awdiv@counter
  3767  0147  0AAB               	incf	___awdiv@counter,f
  3768  0148  2952               	goto	l1705
  3769  0149                     l1701:	
  3770  0149  3001               	movlw	1
  3771  014A                     u885:	
  3772  014A  35A6               	lslf	___awdiv@divisor,f
  3773  014B  0DA7               	rlf	___awdiv@divisor+1,f
  3774  014C  0B89               	decfsz	9,f
  3775  014D  294A               	goto	u885
  3776  014E                     l1703:	
  3777  014E  3001               	movlw	1
  3778  014F  00AA               	movwf	??___awdiv
  3779  0150  082A               	movf	??___awdiv,w
  3780  0151  07AB               	addwf	___awdiv@counter,f
  3781  0152                     l1705:	
  3782  0152  1FA7               	btfss	___awdiv@divisor+1,7
  3783  0153  2955               	goto	u891
  3784  0154  2956               	goto	u890
  3785  0155                     u891:	
  3786  0155  2949               	goto	l1701
  3787  0156                     u890:	
  3788  0156                     l1707:	
  3789  0156  3001               	movlw	1
  3790  0157                     u905:	
  3791  0157  35AD               	lslf	___awdiv@quotient,f
  3792  0158  0DAE               	rlf	___awdiv@quotient+1,f
  3793  0159  0B89               	decfsz	9,f
  3794  015A  2957               	goto	u905
  3795  015B  0827               	movf	___awdiv@divisor+1,w
  3796  015C  0229               	subwf	___awdiv@dividend+1,w
  3797  015D  1D03               	skipz
  3798  015E  2961               	goto	u915
  3799  015F  0826               	movf	___awdiv@divisor,w
  3800  0160  0228               	subwf	___awdiv@dividend,w
  3801  0161                     u915:	
  3802  0161  1C03               	skipc
  3803  0162  2964               	goto	u911
  3804  0163  2965               	goto	u910
  3805  0164                     u911:	
  3806  0164  296A               	goto	l1713
  3807  0165                     u910:	
  3808  0165                     l1709:	
  3809  0165  0826               	movf	___awdiv@divisor,w
  3810  0166  02A8               	subwf	___awdiv@dividend,f
  3811  0167  0827               	movf	___awdiv@divisor+1,w
  3812  0168  3BA9               	subwfb	___awdiv@dividend+1,f
  3813  0169                     l1711:	
  3814  0169  142D               	bsf	___awdiv@quotient,0
  3815  016A                     l1713:	
  3816  016A  3001               	movlw	1
  3817  016B                     u925:	
  3818  016B  36A7               	lsrf	___awdiv@divisor+1,f
  3819  016C  0CA6               	rrf	___awdiv@divisor,f
  3820  016D  0B89               	decfsz	9,f
  3821  016E  296B               	goto	u925
  3822  016F                     l1715:	
  3823  016F  3001               	movlw	1
  3824  0170  02AB               	subwf	___awdiv@counter,f
  3825  0171  1D03               	btfss	3,2
  3826  0172  2974               	goto	u931
  3827  0173  2975               	goto	u930
  3828  0174                     u931:	
  3829  0174  2956               	goto	l1707
  3830  0175                     u930:	
  3831  0175                     l1717:	
  3832  0175  082C               	movf	___awdiv@sign,w
  3833  0176  1903               	btfsc	3,2
  3834  0177  2979               	goto	u941
  3835  0178  297A               	goto	u940
  3836  0179                     u941:	
  3837  0179  297F               	goto	l1721
  3838  017A                     u940:	
  3839  017A                     l1719:	
  3840  017A  09AD               	comf	___awdiv@quotient,f
  3841  017B  09AE               	comf	___awdiv@quotient+1,f
  3842  017C  0AAD               	incf	___awdiv@quotient,f
  3843  017D  1903               	skipnz
  3844  017E  0AAE               	incf	___awdiv@quotient+1,f
  3845  017F                     l1721:	
  3846  017F  082E               	movf	___awdiv@quotient+1,w
  3847  0180  00A7               	movwf	?___awdiv+1
  3848  0181  082D               	movf	___awdiv@quotient,w
  3849  0182  00A6               	movwf	?___awdiv
  3850  0183                     l632:	
  3851  0183  0008               	return
  3852  0184                     __end_of___awdiv:	
  3853                           
  3854                           	psect	text19
  3855  030C                     __ptext19:	
  3856 ;; *************** function _RGB_fade *****************
  3857 ;; Defined at:
  3858 ;;		line 224 in file "Functions.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;		None
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;		None
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  1    wreg      void 
  3865 ;; Registers used:
  3866 ;;		wreg, status,2, status,0
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3872 ;;      Params:         0       0       0       0       0       0       0       0
  3873 ;;      Locals:         0       0       0       0       0       0       0       0
  3874 ;;      Temps:          0       1       0       0       0       0       0       0
  3875 ;;      Totals:         0       1       0       0       0       0       0       0
  3876 ;;Total ram usage:        1 bytes
  3877 ;; Hardware stack levels used:    1
  3878 ;; Hardware stack levels required when called:    7
  3879 ;; This function calls:
  3880 ;;		Nothing
  3881 ;; This function is called by:
  3882 ;;		_led_modes
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           
  3887                           ;psect for function _RGB_fade
  3888  030C                     _RGB_fade:	
  3889  030C                     l1853:	
  3890                           ;incstack = 0
  3891                           ; Regs used in _RGB_fade: [wreg+status,2+status,0]
  3892                           
  3893                           
  3894                           ;Functions.c: 226: if (i >= 255) {
  3895  030C  0A7D               	incf	_i,w
  3896  030D  1D03               	btfss	3,2
  3897  030E  2B10               	goto	u1001
  3898  030F  2B11               	goto	u1000
  3899  0310                     u1001:	
  3900  0310  2B1E               	goto	l1863
  3901  0311                     u1000:	
  3902  0311                     l1855:	
  3903                           
  3904                           ;Functions.c: 227: i = 0;
  3905  0311  01FD               	clrf	_i
  3906  0312                     l1857:	
  3907                           
  3908                           ;Functions.c: 228: color++;
  3909  0312  3001               	movlw	1
  3910  0313  0140               	movlb	0	; select bank0
  3911  0314  00A0               	movwf	??_RGB_fade
  3912  0315  0820               	movf	??_RGB_fade,w
  3913  0316  07C5               	addwf	_color,f
  3914  0317                     l1859:	
  3915                           
  3916                           ;Functions.c: 229: if (color > 2) {
  3917  0317  3003               	movlw	3
  3918  0318  0245               	subwf	_color,w
  3919  0319  1C03               	skipc
  3920  031A  2B1C               	goto	u1011
  3921  031B  2B1D               	goto	u1010
  3922  031C                     u1011:	
  3923  031C  2B1E               	goto	l1863
  3924  031D                     u1010:	
  3925  031D                     l1861:	
  3926                           
  3927                           ;Functions.c: 230: color = 0;
  3928  031D  01C5               	clrf	_color
  3929  031E                     l1863:	
  3930                           
  3931                           ;Functions.c: 231: };Functions.c: 232: };Functions.c: 233: i++;
  3932  031E  3001               	movlw	1
  3933  031F  0140               	movlb	0	; select bank0
  3934  0320  00A0               	movwf	??_RGB_fade
  3935  0321  0820               	movf	??_RGB_fade,w
  3936  0322  07FD               	addwf	_i,f
  3937  0323                     l1865:	
  3938                           
  3939                           ;Functions.c: 234: _delay((unsigned long)((12)*(32000000/4000.0)));
  3940  0323  307D               	movlw	125
  3941  0324  0140               	movlb	0	; select bank0
  3942  0325  00A0               	movwf	??_RGB_fade
  3943  0326  30AB               	movlw	171
  3944  0327                     u1557:	
  3945  0327  0B89               	decfsz	9,f
  3946  0328  2B27               	goto	u1557
  3947  0329  0BA0               	decfsz	??_RGB_fade,f
  3948  032A  2B27               	goto	u1557
  3949  032B  3200               	nop2
  3950  032C                     l1867:	
  3951                           
  3952                           ;Functions.c: 236: if (color == 0) {
  3953  032C  0140               	movlb	0	; select bank0
  3954  032D  0845               	movf	_color,w
  3955  032E  1D03               	btfss	3,2
  3956  032F  2B31               	goto	u1021
  3957  0330  2B32               	goto	u1020
  3958  0331                     u1021:	
  3959  0331  2B38               	goto	l1873
  3960  0332                     u1020:	
  3961  0332                     l1869:	
  3962                           
  3963                           ;Functions.c: 237: PWM3DCH = 255 - i;
  3964  0332  097D               	comf	_i,w
  3965  0333  0146               	movlb	6	; select bank6
  3966  0334  0095               	movwf	21	;volatile
  3967  0335                     l1871:	
  3968                           
  3969                           ;Functions.c: 238: PWM4DCH = i;
  3970  0335  087D               	movf	_i,w
  3971  0336  0099               	movwf	25	;volatile
  3972                           
  3973                           ;Functions.c: 239: PWM5DCH = 0;
  3974  0337  019D               	clrf	29	;volatile
  3975  0338                     l1873:	
  3976                           
  3977                           ;Functions.c: 240: };Functions.c: 242: if (color == 1) {
  3978  0338  0140               	movlb	0	; select bank0
  3979  0339  0345               	decf	_color,w
  3980  033A  1D03               	btfss	3,2
  3981  033B  2B3D               	goto	u1031
  3982  033C  2B3E               	goto	u1030
  3983  033D                     u1031:	
  3984  033D  2B44               	goto	l1879
  3985  033E                     u1030:	
  3986  033E                     l1875:	
  3987                           
  3988                           ;Functions.c: 243: PWM3DCH = 0;
  3989  033E  0146               	movlb	6	; select bank6
  3990  033F  0195               	clrf	21	;volatile
  3991  0340                     l1877:	
  3992                           
  3993                           ;Functions.c: 244: PWM4DCH = 255 - i;
  3994  0340  097D               	comf	_i,w
  3995  0341  0099               	movwf	25	;volatile
  3996                           
  3997                           ;Functions.c: 245: PWM5DCH = i;
  3998  0342  087D               	movf	_i,w
  3999  0343  009D               	movwf	29	;volatile
  4000  0344                     l1879:	
  4001                           
  4002                           ;Functions.c: 246: };Functions.c: 248: if (color == 2) {
  4003  0344  3002               	movlw	2
  4004  0345  0140               	movlb	0	; select bank0
  4005  0346  0645               	xorwf	_color,w
  4006  0347  1D03               	btfss	3,2
  4007  0348  2B4A               	goto	u1041
  4008  0349  2B4B               	goto	u1040
  4009  034A                     u1041:	
  4010  034A  2B51               	goto	l323
  4011  034B                     u1040:	
  4012  034B                     l1881:	
  4013                           
  4014                           ;Functions.c: 249: PWM3DCH = i;
  4015  034B  087D               	movf	_i,w
  4016  034C  0146               	movlb	6	; select bank6
  4017  034D  0095               	movwf	21	;volatile
  4018  034E                     l1883:	
  4019                           
  4020                           ;Functions.c: 250: PWM4DCH = 0;
  4021  034E  0199               	clrf	25	;volatile
  4022                           
  4023                           ;Functions.c: 251: PWM5DCH = 255 - i;
  4024  034F  097D               	comf	_i,w
  4025  0350  009D               	movwf	29	;volatile
  4026  0351                     l323:	
  4027  0351  0008               	return
  4028  0352                     __end_of_RGB_fade:	
  4029                           
  4030                           	psect	text20
  4031  01DF                     __ptext20:	
  4032 ;; *************** function _chrg_led *****************
  4033 ;; Defined at:
  4034 ;;		line 131 in file "Functions.c"
  4035 ;; Parameters:    Size  Location     Type
  4036 ;;		None
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;		None
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  1    wreg      void 
  4041 ;; Registers used:
  4042 ;;		wreg, status,2, status,0
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4048 ;;      Params:         0       0       0       0       0       0       0       0
  4049 ;;      Locals:         0       0       0       0       0       0       0       0
  4050 ;;      Temps:          0       1       0       0       0       0       0       0
  4051 ;;      Totals:         0       1       0       0       0       0       0       0
  4052 ;;Total ram usage:        1 bytes
  4053 ;; Hardware stack levels used:    1
  4054 ;; Hardware stack levels required when called:    7
  4055 ;; This function calls:
  4056 ;;		Nothing
  4057 ;; This function is called by:
  4058 ;;		_main
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062                           
  4063                           ;psect for function _chrg_led
  4064  01DF                     _chrg_led:	
  4065  01DF                     l2123:	
  4066                           ;incstack = 0
  4067                           ; Regs used in _chrg_led: [wreg+status,2+status,0]
  4068                           
  4069                           
  4070                           ;Functions.c: 133: if(c >= 255) {
  4071  01DF  0A7C               	incf	_c,w
  4072  01E0  1D03               	btfss	3,2
  4073  01E1  29E3               	goto	u1371
  4074  01E2  29E4               	goto	u1370
  4075  01E3                     u1371:	
  4076  01E3  29E6               	goto	l2127
  4077  01E4                     u1370:	
  4078  01E4                     l2125:	
  4079                           
  4080                           ;Functions.c: 134: dir = 0;
  4081  01E4  0140               	movlb	0	; select bank0
  4082  01E5  01CD               	clrf	_dir
  4083  01E6                     l2127:	
  4084                           
  4085                           ;Functions.c: 135: };Functions.c: 137: if(c <= 1) {
  4086  01E6  3002               	movlw	2
  4087  01E7  027C               	subwf	_c,w
  4088  01E8  1803               	skipnc
  4089  01E9  29EB               	goto	u1381
  4090  01EA  29EC               	goto	u1380
  4091  01EB                     u1381:	
  4092  01EB  29EF               	goto	l2131
  4093  01EC                     u1380:	
  4094  01EC                     l2129:	
  4095                           
  4096                           ;Functions.c: 138: dir = 1;
  4097  01EC  0140               	movlb	0	; select bank0
  4098  01ED  01CD               	clrf	_dir
  4099  01EE  0ACD               	incf	_dir,f
  4100  01EF                     l2131:	
  4101                           
  4102                           ;Functions.c: 139: };Functions.c: 141: if(dir == 1) {
  4103  01EF  0140               	movlb	0	; select bank0
  4104  01F0  034D               	decf	_dir,w
  4105  01F1  1D03               	btfss	3,2
  4106  01F2  29F4               	goto	u1391
  4107  01F3  29F5               	goto	u1390
  4108  01F4                     u1391:	
  4109  01F4  29FA               	goto	l2135
  4110  01F5                     u1390:	
  4111  01F5                     l2133:	
  4112                           
  4113                           ;Functions.c: 142: c++;
  4114  01F5  3001               	movlw	1
  4115  01F6  00A0               	movwf	??_chrg_led
  4116  01F7  0820               	movf	??_chrg_led,w
  4117  01F8  07FC               	addwf	_c,f
  4118                           
  4119                           ;Functions.c: 143: }
  4120  01F9  2A01               	goto	l2139
  4121  01FA                     l2135:	
  4122                           
  4123                           ;Functions.c: 144: else if(dir == 0) {
  4124  01FA  084D               	movf	_dir,w
  4125  01FB  1D03               	btfss	3,2
  4126  01FC  29FE               	goto	u1401
  4127  01FD  29FF               	goto	u1400
  4128  01FE                     u1401:	
  4129  01FE  2A01               	goto	l2139
  4130  01FF                     u1400:	
  4131  01FF                     l2137:	
  4132                           
  4133                           ;Functions.c: 145: c--;
  4134  01FF  3001               	movlw	1
  4135  0200  02FC               	subwf	_c,f
  4136  0201                     l2139:	
  4137                           
  4138                           ;Functions.c: 146: };Functions.c: 148: _delay((unsigned long)((5)*(32000000/4000.0)));
  4139  0201  3034               	movlw	52
  4140  0202  0140               	movlb	0	; select bank0
  4141  0203  00A0               	movwf	??_chrg_led
  4142  0204  30F1               	movlw	241
  4143  0205                     u1567:	
  4144  0205  0B89               	decfsz	9,f
  4145  0206  2A05               	goto	u1567
  4146  0207  0BA0               	decfsz	??_chrg_led,f
  4147  0208  2A05               	goto	u1567
  4148  0209  3200               	nop2
  4149  020A                     l2141:	
  4150                           
  4151                           ;Functions.c: 150: if (chrg_stat == 0b01) {
  4152  020A  0140               	movlb	0	; select bank0
  4153  020B  0342               	decf	_chrg_stat,w
  4154  020C  1D03               	btfss	3,2
  4155  020D  2A0F               	goto	u1411
  4156  020E  2A10               	goto	u1410
  4157  020F                     u1411:	
  4158  020F  2A16               	goto	l2147
  4159  0210                     u1410:	
  4160  0210                     l2143:	
  4161                           
  4162                           ;Functions.c: 152: PWM3DCH = 0;
  4163  0210  0146               	movlb	6	; select bank6
  4164  0211  0195               	clrf	21	;volatile
  4165                           
  4166                           ;Functions.c: 153: PWM4DCH = 0;
  4167  0212  0199               	clrf	25	;volatile
  4168  0213                     l2145:	
  4169                           
  4170                           ;Functions.c: 154: PWM5DCH = c;
  4171  0213  087C               	movf	_c,w
  4172  0214  009D               	movwf	29	;volatile
  4173                           
  4174                           ;Functions.c: 156: } else if (chrg_stat == 0b10) {
  4175  0215  2A31               	goto	l305
  4176  0216                     l2147:	
  4177  0216  3002               	movlw	2
  4178  0217  0642               	xorwf	_chrg_stat,w
  4179  0218  1D03               	btfss	3,2
  4180  0219  2A1B               	goto	u1421
  4181  021A  2A1C               	goto	u1420
  4182  021B                     u1421:	
  4183  021B  2A21               	goto	l2155
  4184  021C                     u1420:	
  4185  021C                     l2149:	
  4186                           
  4187                           ;Functions.c: 158: PWM3DCH = 0;
  4188  021C  0146               	movlb	6	; select bank6
  4189  021D  0195               	clrf	21	;volatile
  4190  021E                     l2151:	
  4191                           
  4192                           ;Functions.c: 159: PWM4DCH = c;
  4193  021E  087C               	movf	_c,w
  4194  021F  0099               	movwf	25	;volatile
  4195  0220  2A13               	goto	l2145
  4196  0221                     l2155:	
  4197  0221  3003               	movlw	3
  4198  0222  0642               	xorwf	_chrg_stat,w
  4199  0223  1D03               	btfss	3,2
  4200  0224  2A26               	goto	u1431
  4201  0225  2A27               	goto	u1430
  4202  0226                     u1431:	
  4203  0226  2A2D               	goto	l2163
  4204  0227                     u1430:	
  4205  0227                     l2157:	
  4206                           
  4207                           ;Functions.c: 164: PWM3DCH = 0;
  4208  0227  0146               	movlb	6	; select bank6
  4209  0228  0195               	clrf	21	;volatile
  4210  0229                     l2159:	
  4211                           
  4212                           ;Functions.c: 165: PWM4DCH = c;
  4213  0229  087C               	movf	_c,w
  4214  022A  0099               	movwf	25	;volatile
  4215  022B                     l2161:	
  4216                           
  4217                           ;Functions.c: 166: PWM5DCH = 0;
  4218  022B  019D               	clrf	29	;volatile
  4219                           
  4220                           ;Functions.c: 168: } else {
  4221  022C  2A31               	goto	l305
  4222  022D                     l2163:	
  4223                           
  4224                           ;Functions.c: 169: PWM3DCH = 0;
  4225  022D  0146               	movlb	6	; select bank6
  4226  022E  0195               	clrf	21	;volatile
  4227                           
  4228                           ;Functions.c: 170: PWM4DCH = 0;
  4229  022F  0199               	clrf	25	;volatile
  4230                           
  4231                           ;Functions.c: 171: PWM5DCH = 0;
  4232  0230  019D               	clrf	29	;volatile
  4233  0231                     l305:	
  4234  0231  0008               	return
  4235  0232                     __end_of_chrg_led:	
  4236                           
  4237                           	psect	text21
  4238  050A                     __ptext21:	
  4239 ;; *************** function _STUSB_9V_12V *****************
  4240 ;; Defined at:
  4241 ;;		line 41 in file "STUSB4500.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;		None
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;		None
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  1    wreg      void 
  4248 ;; Registers used:
  4249 ;;		wreg, status,2, status,0, pclath, cstack
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4255 ;;      Params:         0       0       0       0       0       0       0       0
  4256 ;;      Locals:         0       0       0       0       0       0       0       0
  4257 ;;      Temps:          0       3       0       0       0       0       0       0
  4258 ;;      Totals:         0       3       0       0       0       0       0       0
  4259 ;;Total ram usage:        3 bytes
  4260 ;; Hardware stack levels used:    1
  4261 ;; Hardware stack levels required when called:   10
  4262 ;; This function calls:
  4263 ;;		_STUSB_Write
  4264 ;; This function is called by:
  4265 ;;		_main
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           
  4270                           ;psect for function _STUSB_9V_12V
  4271  050A                     _STUSB_9V_12V:	
  4272  050A                     l2079:	
  4273                           ;incstack = 0
  4274                           ; Regs used in _STUSB_9V_12V: [wreg+status,2+status,0+pclath+cstack]
  4275                           
  4276                           
  4277                           ;STUSB4500.c: 60: STUSB_Write(0x89, 0b00101100, 0b11010001, 0b00000010, 0x00);
  4278  050A  302C               	movlw	44
  4279  050B  0140               	movlb	0	; select bank0
  4280  050C  00A6               	movwf	??_STUSB_9V_12V
  4281  050D  0826               	movf	??_STUSB_9V_12V,w
  4282  050E  00A1               	movwf	STUSB_Write@data_1
  4283  050F  30D1               	movlw	209
  4284  0510  00A7               	movwf	??_STUSB_9V_12V+1
  4285  0511  0827               	movf	??_STUSB_9V_12V+1,w
  4286  0512  00A2               	movwf	STUSB_Write@data_2
  4287  0513  3002               	movlw	2
  4288  0514  00A8               	movwf	??_STUSB_9V_12V+2
  4289  0515  0828               	movf	??_STUSB_9V_12V+2,w
  4290  0516  00A3               	movwf	STUSB_Write@data_3
  4291  0517  01A4               	clrf	STUSB_Write@data_4
  4292  0518  3089               	movlw	137
  4293  0519  3184  24BF  3185   	fcall	_STUSB_Write
  4294                           
  4295                           ;STUSB4500.c: 63: STUSB_Write(0x8D, 0b11001000, 0b11000000, 0b00000011, 0x00);
  4296  051C  30C8               	movlw	200
  4297  051D  0140               	movlb	0	; select bank0
  4298  051E  00A6               	movwf	??_STUSB_9V_12V
  4299  051F  0826               	movf	??_STUSB_9V_12V,w
  4300  0520  00A1               	movwf	STUSB_Write@data_1
  4301  0521  30C0               	movlw	192
  4302  0522  00A7               	movwf	??_STUSB_9V_12V+1
  4303  0523  0827               	movf	??_STUSB_9V_12V+1,w
  4304  0524  00A2               	movwf	STUSB_Write@data_2
  4305  0525  3003               	movlw	3
  4306  0526  00A8               	movwf	??_STUSB_9V_12V+2
  4307  0527  0828               	movf	??_STUSB_9V_12V+2,w
  4308  0528  00A3               	movwf	STUSB_Write@data_3
  4309  0529  01A4               	clrf	STUSB_Write@data_4
  4310  052A  308D               	movlw	141
  4311  052B  3184  24BF  3185   	fcall	_STUSB_Write
  4312  052E                     l411:	
  4313  052E  0008               	return
  4314  052F                     __end_of_STUSB_9V_12V:	
  4315                           
  4316                           	psect	text22
  4317  04BF                     __ptext22:	
  4318 ;; *************** function _STUSB_Write *****************
  4319 ;; Defined at:
  4320 ;;		line 12 in file "STUSB4500.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;  reg             1    wreg     unsigned char 
  4323 ;;  data_1          1    1[BANK0 ] unsigned char 
  4324 ;;  data_2          1    2[BANK0 ] unsigned char 
  4325 ;;  data_3          1    3[BANK0 ] unsigned char 
  4326 ;;  data_4          1    4[BANK0 ] unsigned char 
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;  reg             1    5[BANK0 ] unsigned char 
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  1    wreg      void 
  4331 ;; Registers used:
  4332 ;;		wreg, status,2, status,0, pclath, cstack
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4338 ;;      Params:         0       4       0       0       0       0       0       0
  4339 ;;      Locals:         0       1       0       0       0       0       0       0
  4340 ;;      Temps:          0       0       0       0       0       0       0       0
  4341 ;;      Totals:         0       5       0       0       0       0       0       0
  4342 ;;Total ram usage:        5 bytes
  4343 ;; Hardware stack levels used:    1
  4344 ;; Hardware stack levels required when called:    9
  4345 ;; This function calls:
  4346 ;;		_I2C_Master_Start
  4347 ;;		_I2C_Master_Stop
  4348 ;;		_I2C_Master_Write
  4349 ;; This function is called by:
  4350 ;;		_STUSB_9V_12V
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           
  4355                           ;psect for function _STUSB_Write
  4356  04BF                     _STUSB_Write:	
  4357                           
  4358                           ;incstack = 0
  4359                           ; Regs used in _STUSB_Write: [wreg+status,2+status,0+pclath+cstack]
  4360                           ;STUSB_Write@reg stored from wreg
  4361  04BF  0140               	movlb	0	; select bank0
  4362  04C0  00A5               	movwf	STUSB_Write@reg
  4363  04C1                     l1919:	
  4364                           
  4365                           ;STUSB4500.c: 14: I2C_Master_Start();
  4366  04C1  3186  26EB  3184   	fcall	_I2C_Master_Start
  4367                           
  4368                           ;STUSB4500.c: 15: I2C_Master_Write(0b0101000 << 1);
  4369  04C4  3050               	movlw	80
  4370  04C5  3186  26A0  3184   	fcall	_I2C_Master_Write
  4371                           
  4372                           ;STUSB4500.c: 16: I2C_Master_Write(reg);
  4373  04C8  0140               	movlb	0	; select bank0
  4374  04C9  0825               	movf	STUSB_Write@reg,w
  4375  04CA  3186  26A0  3184   	fcall	_I2C_Master_Write
  4376                           
  4377                           ;STUSB4500.c: 17: I2C_Master_Write(data_1);
  4378  04CD  0140               	movlb	0	; select bank0
  4379  04CE  0821               	movf	STUSB_Write@data_1,w
  4380  04CF  3186  26A0  3184   	fcall	_I2C_Master_Write
  4381                           
  4382                           ;STUSB4500.c: 18: I2C_Master_Write(data_2);
  4383  04D2  0140               	movlb	0	; select bank0
  4384  04D3  0822               	movf	STUSB_Write@data_2,w
  4385  04D4  3186  26A0  3184   	fcall	_I2C_Master_Write
  4386                           
  4387                           ;STUSB4500.c: 19: I2C_Master_Write(data_3);
  4388  04D7  0140               	movlb	0	; select bank0
  4389  04D8  0823               	movf	STUSB_Write@data_3,w
  4390  04D9  3186  26A0  3184   	fcall	_I2C_Master_Write
  4391                           
  4392                           ;STUSB4500.c: 20: I2C_Master_Write(data_4);
  4393  04DC  0140               	movlb	0	; select bank0
  4394  04DD  0824               	movf	STUSB_Write@data_4,w
  4395  04DE  3186  26A0  3184   	fcall	_I2C_Master_Write
  4396                           
  4397                           ;STUSB4500.c: 21: I2C_Master_Stop();
  4398  04E1  3186  26E5  3184   	fcall	_I2C_Master_Stop
  4399  04E4                     l405:	
  4400  04E4  0008               	return
  4401  04E5                     __end_of_STUSB_Write:	
  4402                           
  4403                           	psect	text23
  4404  03FF                     __ptext23:	
  4405 ;; *************** function _PWM_init *****************
  4406 ;; Defined at:
  4407 ;;		line 71 in file "Functions.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;		None
  4410 ;; Auto vars:     Size  Location     Type
  4411 ;;		None
  4412 ;; Return value:  Size  Location     Type
  4413 ;;                  1    wreg      void 
  4414 ;; Registers used:
  4415 ;;		wreg, status,2, status,0, pclath, cstack
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4421 ;;      Params:         0       0       0       0       0       0       0       0
  4422 ;;      Locals:         0       0       0       0       0       0       0       0
  4423 ;;      Temps:          0       0       0       0       0       0       0       0
  4424 ;;      Totals:         0       0       0       0       0       0       0       0
  4425 ;;Total ram usage:        0 bytes
  4426 ;; Hardware stack levels used:    1
  4427 ;; Hardware stack levels required when called:    8
  4428 ;; This function calls:
  4429 ;;		_PPS_lock
  4430 ;;		_PPS_unlock
  4431 ;; This function is called by:
  4432 ;;		_main
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436                           
  4437                           ;psect for function _PWM_init
  4438  03FF                     _PWM_init:	
  4439  03FF                     l2081:	
  4440                           ;incstack = 0
  4441                           ; Regs used in _PWM_init: [wreg+status,2+status,0+pclath+cstack]
  4442                           
  4443                           
  4444                           ;Functions.c: 73: PPS_unlock();
  4445  03FF  3186  26D0  3183   	fcall	_PPS_unlock
  4446  0402                     l2083:	
  4447                           
  4448                           ;Functions.c: 74: RC2PPS = 0x0B;
  4449  0402  300B               	movlw	11
  4450  0403  017E               	movlb	62	; select bank62
  4451  0404  00A2               	movwf	34	;volatile
  4452  0405                     l2085:	
  4453                           
  4454                           ;Functions.c: 75: RC3PPS = 0x0C;
  4455  0405  300C               	movlw	12
  4456  0406  00A3               	movwf	35	;volatile
  4457  0407                     l2087:	
  4458                           
  4459                           ;Functions.c: 76: RC4PPS = 0x0D;
  4460  0407  300D               	movlw	13
  4461  0408  00A4               	movwf	36	;volatile
  4462  0409                     l2089:	
  4463                           
  4464                           ;Functions.c: 77: PPS_lock();
  4465  0409  3186  26AA  3183   	fcall	_PPS_lock
  4466  040C                     l2091:	
  4467                           
  4468                           ;Functions.c: 79: PWM3CON = 0;
  4469  040C  0146               	movlb	6	; select bank6
  4470  040D  0196               	clrf	22	;volatile
  4471  040E                     l2093:	
  4472                           
  4473                           ;Functions.c: 80: PR2 = 255;
  4474  040E  30FF               	movlw	255
  4475  040F  0145               	movlb	5	; select bank5
  4476  0410  008D               	movwf	13	;volatile
  4477                           
  4478                           ;Functions.c: 81: PWM3DCH = 0;
  4479  0411  0146               	movlb	6	; select bank6
  4480  0412  0195               	clrf	21	;volatile
  4481  0413                     l2095:	
  4482                           
  4483                           ;Functions.c: 82: PWM3DCL = 0b00111111;
  4484  0413  303F               	movlw	63
  4485  0414  0094               	movwf	20	;volatile
  4486  0415                     l2097:	
  4487                           
  4488                           ;Functions.c: 83: PWM3CON = 0b10000000;
  4489  0415  3080               	movlw	128
  4490  0416  0096               	movwf	22	;volatile
  4491  0417                     l2099:	
  4492                           
  4493                           ;Functions.c: 84: TRISCbits.TRISC2 = 0;
  4494  0417  0140               	movlb	0	; select bank0
  4495  0418  1114               	bcf	20,2	;volatile
  4496  0419                     l2101:	
  4497                           
  4498                           ;Functions.c: 85: PWM3CON = 0b11100000;
  4499  0419  30E0               	movlw	224
  4500  041A  0146               	movlb	6	; select bank6
  4501  041B  0096               	movwf	22	;volatile
  4502  041C                     l2103:	
  4503                           
  4504                           ;Functions.c: 87: PWM4CON = 0;
  4505  041C  019A               	clrf	26	;volatile
  4506  041D                     l2105:	
  4507                           
  4508                           ;Functions.c: 88: PWM4DCH = 0;
  4509  041D  0199               	clrf	25	;volatile
  4510  041E                     l2107:	
  4511                           
  4512                           ;Functions.c: 89: PWM4DCL = 0b00111111;
  4513  041E  303F               	movlw	63
  4514  041F  0098               	movwf	24	;volatile
  4515  0420                     l2109:	
  4516                           
  4517                           ;Functions.c: 90: PWM4CON = 0b10000000;
  4518  0420  3080               	movlw	128
  4519  0421  009A               	movwf	26	;volatile
  4520  0422                     l2111:	
  4521                           
  4522                           ;Functions.c: 91: TRISCbits.TRISC3 = 0;
  4523  0422  0140               	movlb	0	; select bank0
  4524  0423  1194               	bcf	20,3	;volatile
  4525  0424                     l2113:	
  4526                           
  4527                           ;Functions.c: 92: PWM4CON = 0b11100000;
  4528  0424  30E0               	movlw	224
  4529  0425  0146               	movlb	6	; select bank6
  4530  0426  009A               	movwf	26	;volatile
  4531                           
  4532                           ;Functions.c: 94: PWM5CON = 0;
  4533  0427  019E               	clrf	30	;volatile
  4534                           
  4535                           ;Functions.c: 95: PWM5DCH = 0;
  4536  0428  019D               	clrf	29	;volatile
  4537  0429                     l2115:	
  4538                           
  4539                           ;Functions.c: 96: PWM5DCL = 0b00111111;
  4540  0429  303F               	movlw	63
  4541  042A  009C               	movwf	28	;volatile
  4542  042B                     l2117:	
  4543                           
  4544                           ;Functions.c: 97: PWM5CON = 0b10000000;
  4545  042B  3080               	movlw	128
  4546  042C  009E               	movwf	30	;volatile
  4547  042D                     l2119:	
  4548                           
  4549                           ;Functions.c: 98: TRISCbits.TRISC4 = 0;
  4550  042D  0140               	movlb	0	; select bank0
  4551  042E  1214               	bcf	20,4	;volatile
  4552  042F                     l2121:	
  4553                           
  4554                           ;Functions.c: 99: PWM5CON = 0b11100000;
  4555  042F  30E0               	movlw	224
  4556  0430  0146               	movlb	6	; select bank6
  4557  0431  009E               	movwf	30	;volatile
  4558  0432                     l282:	
  4559  0432  0008               	return
  4560  0433                     __end_of_PWM_init:	
  4561                           
  4562                           	psect	text24
  4563  06D0                     __ptext24:	
  4564 ;; *************** function _PPS_unlock *****************
  4565 ;; Defined at:
  4566 ;;		line 59 in file "Functions.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;		None
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;		None
  4571 ;; Return value:  Size  Location     Type
  4572 ;;                  1    wreg      void 
  4573 ;; Registers used:
  4574 ;;		wreg, status,2
  4575 ;; Tracked objects:
  4576 ;;		On entry : 0/0
  4577 ;;		On exit  : 0/0
  4578 ;;		Unchanged: 0/0
  4579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4580 ;;      Params:         0       0       0       0       0       0       0       0
  4581 ;;      Locals:         0       0       0       0       0       0       0       0
  4582 ;;      Temps:          0       0       0       0       0       0       0       0
  4583 ;;      Totals:         0       0       0       0       0       0       0       0
  4584 ;;Total ram usage:        0 bytes
  4585 ;; Hardware stack levels used:    1
  4586 ;; Hardware stack levels required when called:    7
  4587 ;; This function calls:
  4588 ;;		Nothing
  4589 ;; This function is called by:
  4590 ;;		_main
  4591 ;;		_PWM_init
  4592 ;; This function uses a non-reentrant model
  4593 ;;
  4594                           
  4595                           
  4596                           ;psect for function _PPS_unlock
  4597  06D0                     _PPS_unlock:	
  4598  06D0                     l1847:	
  4599                           ;incstack = 0
  4600                           ; Regs used in _PPS_unlock: [wreg+status,2]
  4601                           
  4602                           
  4603                           ;Functions.c: 60: PPSLOCK = 0x55;
  4604  06D0  3055               	movlw	85
  4605  06D1  017D               	movlb	61	; select bank61
  4606  06D2  008F               	movwf	15	;volsfr
  4607                           
  4608                           ;Functions.c: 61: PPSLOCK = 0xAA;
  4609  06D3  30AA               	movlw	170
  4610  06D4  008F               	movwf	15	;volsfr
  4611  06D5                     l1849:	
  4612                           
  4613                           ;Functions.c: 62: PPSLOCK = 0;
  4614  06D5  018F               	clrf	15	;volsfr
  4615  06D6                     l276:	
  4616  06D6  0008               	return
  4617  06D7                     __end_of_PPS_unlock:	
  4618                           
  4619                           	psect	text25
  4620  06AA                     __ptext25:	
  4621 ;; *************** function _PPS_lock *****************
  4622 ;; Defined at:
  4623 ;;		line 65 in file "Functions.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;		None
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;		None
  4628 ;; Return value:  Size  Location     Type
  4629 ;;                  1    wreg      void 
  4630 ;; Registers used:
  4631 ;;		wreg
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4637 ;;      Params:         0       0       0       0       0       0       0       0
  4638 ;;      Locals:         0       0       0       0       0       0       0       0
  4639 ;;      Temps:          0       0       0       0       0       0       0       0
  4640 ;;      Totals:         0       0       0       0       0       0       0       0
  4641 ;;Total ram usage:        0 bytes
  4642 ;; Hardware stack levels used:    1
  4643 ;; Hardware stack levels required when called:    7
  4644 ;; This function calls:
  4645 ;;		Nothing
  4646 ;; This function is called by:
  4647 ;;		_main
  4648 ;;		_PWM_init
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           
  4653                           ;psect for function _PPS_lock
  4654  06AA                     _PPS_lock:	
  4655  06AA                     l1851:	
  4656                           ;incstack = 0
  4657                           ; Regs used in _PPS_lock: [wreg]
  4658                           
  4659                           
  4660                           ;Functions.c: 66: PPSLOCK = 0x55;
  4661  06AA  3055               	movlw	85
  4662  06AB  017D               	movlb	61	; select bank61
  4663  06AC  008F               	movwf	15	;volsfr
  4664                           
  4665                           ;Functions.c: 67: PPSLOCK = 0xAA;
  4666  06AD  30AA               	movlw	170
  4667  06AE  008F               	movwf	15	;volsfr
  4668                           
  4669                           ;Functions.c: 68: PPSLOCK = 1;
  4670  06AF  3001               	movlw	1
  4671  06B0  008F               	movwf	15	;volsfr
  4672  06B1                     l279:	
  4673  06B1  0008               	return
  4674  06B2                     __end_of_PPS_lock:	
  4675                           
  4676                           	psect	text26
  4677  0390                     __ptext26:	
  4678 ;; *************** function _PIC_init *****************
  4679 ;; Defined at:
  4680 ;;		line 150 in file "main.c"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;		None
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;		None
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  1    wreg      void 
  4687 ;; Registers used:
  4688 ;;		wreg, status,2
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4694 ;;      Params:         0       0       0       0       0       0       0       0
  4695 ;;      Locals:         0       0       0       0       0       0       0       0
  4696 ;;      Temps:          0       0       0       0       0       0       0       0
  4697 ;;      Totals:         0       0       0       0       0       0       0       0
  4698 ;;Total ram usage:        0 bytes
  4699 ;; Hardware stack levels used:    1
  4700 ;; Hardware stack levels required when called:    7
  4701 ;; This function calls:
  4702 ;;		Nothing
  4703 ;; This function is called by:
  4704 ;;		_main
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708                           
  4709                           ;psect for function _PIC_init
  4710  0390                     _PIC_init:	
  4711  0390                     l2025:	
  4712                           ;incstack = 0
  4713                           ; Regs used in _PIC_init: [wreg+status,2]
  4714                           
  4715                           
  4716                           ;main.c: 154: VREGCON = 0b00000011;
  4717  0390  3003               	movlw	3
  4718  0391  0150               	movlb	16	; select bank16
  4719  0392  0092               	movwf	18	;volatile
  4720  0393                     l2027:	
  4721                           
  4722                           ;main.c: 155: TMR1ON = 0;
  4723  0393  0144               	movlb	4	; select bank4
  4724  0394  100E               	bcf	14,0	;volatile
  4725                           
  4726                           ;main.c: 158: TRISA = 0b11111111;
  4727  0395  30FF               	movlw	255
  4728  0396  0140               	movlb	0	; select bank0
  4729  0397  0092               	movwf	18	;volatile
  4730                           
  4731                           ;main.c: 159: TRISC = 0b11111111;
  4732  0398  30FF               	movlw	255
  4733  0399  0094               	movwf	20	;volatile
  4734                           
  4735                           ;main.c: 161: ANSELA = 0b00010000;
  4736  039A  3010               	movlw	16
  4737  039B  017E               	movlb	62	; select bank62
  4738  039C  00B8               	movwf	56	;volatile
  4739  039D                     l2029:	
  4740                           
  4741                           ;main.c: 162: ANSELC = 0;
  4742  039D  01CE               	clrf	78	;volatile
  4743  039E                     l2031:	
  4744                           
  4745                           ;main.c: 164: WPUA = 0b00100000;
  4746  039E  3020               	movlw	32
  4747  039F  00B9               	movwf	57	;volatile
  4748  03A0                     l2033:	
  4749                           
  4750                           ;main.c: 167: T2CLKCON = 0b00000011;
  4751  03A0  3003               	movlw	3
  4752  03A1  0145               	movlb	5	; select bank5
  4753  03A2  0090               	movwf	16	;volatile
  4754  03A3                     l2035:	
  4755                           
  4756                           ;main.c: 168: TMR2ON = 1;
  4757  03A3  178E               	bsf	14,7	;volatile
  4758  03A4                     l2037:	
  4759                           
  4760                           ;main.c: 169: T2CKPS0 = 0;
  4761  03A4  120E               	bcf	14,4	;volatile
  4762  03A5                     l2039:	
  4763                           
  4764                           ;main.c: 170: T2CKPS1 = 0;
  4765  03A5  128E               	bcf	14,5	;volatile
  4766  03A6                     l2041:	
  4767                           
  4768                           ;main.c: 171: T2CKPS2 = 1;
  4769  03A6  170E               	bsf	14,6	;volatile
  4770  03A7                     l2043:	
  4771                           
  4772                           ;main.c: 173: T2OUTPS0 = 1;
  4773  03A7  140E               	bsf	14,0	;volatile
  4774  03A8                     l2045:	
  4775                           
  4776                           ;main.c: 174: T2OUTPS1 = 1;
  4777  03A8  148E               	bsf	14,1	;volatile
  4778  03A9                     l2047:	
  4779                           
  4780                           ;main.c: 175: T2OUTPS2 = 1;
  4781  03A9  150E               	bsf	14,2	;volatile
  4782  03AA                     l2049:	
  4783                           
  4784                           ;main.c: 176: T2OUTPS3 = 1;
  4785  03AA  158E               	bsf	14,3	;volatile
  4786  03AB                     l2051:	
  4787                           
  4788                           ;main.c: 178: TMR2 = 0;
  4789  03AB  018C               	clrf	12	;volatile
  4790                           
  4791                           ;main.c: 179: PR2 = 255;
  4792  03AC  30FF               	movlw	255
  4793  03AD  008D               	movwf	13	;volatile
  4794  03AE                     l2053:	
  4795                           
  4796                           ;main.c: 180: TMR2IF = 0;
  4797  03AE  014E               	movlb	14	; select bank14
  4798  03AF  1090               	bcf	16,1	;volatile
  4799                           
  4800                           ;main.c: 183: T1CON = 0b00110101;
  4801  03B0  3035               	movlw	53
  4802  03B1  0144               	movlb	4	; select bank4
  4803  03B2  008E               	movwf	14	;volatile
  4804  03B3                     l2055:	
  4805                           
  4806                           ;main.c: 184: T1GCONbits.GE = 1;
  4807  03B3  178F               	bsf	15,7	;volatile
  4808                           
  4809                           ;main.c: 185: T1CLK = 0b00000011;
  4810  03B4  3003               	movlw	3
  4811  03B5  0091               	movwf	17	;volatile
  4812                           
  4813                           ;main.c: 186: TMR1H = 0xFF;
  4814  03B6  30FF               	movlw	255
  4815  03B7  008D               	movwf	13	;volatile
  4816                           
  4817                           ;main.c: 187: TMR1L = 0xFF;
  4818  03B8  30FF               	movlw	255
  4819  03B9  008C               	movwf	12	;volatile
  4820  03BA                     l2057:	
  4821                           
  4822                           ;main.c: 188: TMR1IE = 0;
  4823  03BA  014E               	movlb	14	; select bank14
  4824  03BB  101A               	bcf	26,0	;volatile
  4825  03BC                     l2059:	
  4826                           
  4827                           ;main.c: 191: PIE0bits.IOCIE = 1;
  4828  03BC  1616               	bsf	22,4	;volatile
  4829                           
  4830                           ;main.c: 192: IOCAP = 0b00100000;
  4831  03BD  3020               	movlw	32
  4832  03BE  017E               	movlb	62	; select bank62
  4833  03BF  00BD               	movwf	61	;volatile
  4834                           
  4835                           ;main.c: 193: IOCAN = 0b00100000;
  4836  03C0  3020               	movlw	32
  4837  03C1  00BE               	movwf	62	;volatile
  4838  03C2                     l2061:	
  4839                           
  4840                           ;main.c: 194: IOCAF = 0x00;
  4841  03C2  01BF               	clrf	63	;volatile
  4842  03C3                     l2063:	
  4843                           
  4844                           ;main.c: 195: INTCON = 0b11001000;
  4845  03C3  30C8               	movlw	200
  4846  03C4  008B               	movwf	11	;volatile
  4847  03C5                     l2065:	
  4848                           
  4849                           ;main.c: 197: INTCONbits.GIE = 1;
  4850  03C5  178B               	bsf	11,7	;volatile
  4851  03C6                     l2067:	
  4852                           
  4853                           ;main.c: 198: INTCONbits.PEIE = 1;
  4854  03C6  170B               	bsf	11,6	;volatile
  4855  03C7                     l166:	
  4856  03C7  0008               	return
  4857  03C8                     __end_of_PIC_init:	
  4858                           
  4859                           	psect	text27
  4860  0467                     __ptext27:	
  4861 ;; *************** function _I2C_Master_Init *****************
  4862 ;; Defined at:
  4863 ;;		line 11 in file "I2C.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;  clk             4   14[BANK0 ] const unsigned long 
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;		None
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  1    wreg      void 
  4870 ;; Registers used:
  4871 ;;		wreg, status,2, status,0, pclath, cstack
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4877 ;;      Params:         0       4       0       0       0       0       0       0
  4878 ;;      Locals:         0       0       0       0       0       0       0       0
  4879 ;;      Temps:          0       4       0       0       0       0       0       0
  4880 ;;      Totals:         0       8       0       0       0       0       0       0
  4881 ;;Total ram usage:        8 bytes
  4882 ;; Hardware stack levels used:    1
  4883 ;; Hardware stack levels required when called:    8
  4884 ;; This function calls:
  4885 ;;		___lldiv
  4886 ;; This function is called by:
  4887 ;;		_main
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           
  4892                           ;psect for function _I2C_Master_Init
  4893  0467                     _I2C_Master_Init:	
  4894  0467                     l2069:	
  4895                           ;incstack = 0
  4896                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  4897                           
  4898                           
  4899                           ;I2C.c: 13: SSP1CON1 = 0b00101000;
  4900  0467  3028               	movlw	40
  4901  0468  0143               	movlb	3	; select bank3
  4902  0469  0090               	movwf	16	;volatile
  4903  046A                     l2071:	
  4904                           
  4905                           ;I2C.c: 14: SSP1CON2 = 0x00;
  4906  046A  0191               	clrf	17	;volatile
  4907  046B                     l2073:	
  4908                           
  4909                           ;I2C.c: 15: SSP1ADD = (32000000 / (4*clk)) - 1;
  4910  046B  0140               	movlb	0	; select bank0
  4911  046C  082E               	movf	I2C_Master_Init@clk,w
  4912  046D  00B2               	movwf	??_I2C_Master_Init
  4913  046E  082F               	movf	I2C_Master_Init@clk+1,w
  4914  046F  00B3               	movwf	??_I2C_Master_Init+1
  4915  0470  0830               	movf	I2C_Master_Init@clk+2,w
  4916  0471  00B4               	movwf	??_I2C_Master_Init+2
  4917  0472  0831               	movf	I2C_Master_Init@clk+3,w
  4918  0473  00B5               	movwf	??_I2C_Master_Init+3
  4919  0474  3002               	movlw	2
  4920  0475                     u1365:	
  4921  0475  35B2               	lslf	??_I2C_Master_Init,f
  4922  0476  0DB3               	rlf	??_I2C_Master_Init+1,f
  4923  0477  0DB4               	rlf	??_I2C_Master_Init+2,f
  4924  0478  0DB5               	rlf	??_I2C_Master_Init+3,f
  4925  0479                     u1360:	
  4926  0479  0B89               	decfsz	9,f
  4927  047A  2C75               	goto	u1365
  4928  047B  0835               	movf	??_I2C_Master_Init+3,w
  4929  047C  00A3               	movwf	___lldiv@divisor+3
  4930  047D  0834               	movf	??_I2C_Master_Init+2,w
  4931  047E  00A2               	movwf	___lldiv@divisor+2
  4932  047F  0833               	movf	??_I2C_Master_Init+1,w
  4933  0480  00A1               	movwf	___lldiv@divisor+1
  4934  0481  0832               	movf	??_I2C_Master_Init,w
  4935  0482  00A0               	movwf	___lldiv@divisor
  4936  0483  3001               	movlw	1
  4937  0484  00A7               	movwf	___lldiv@dividend+3
  4938  0485  30E8               	movlw	232
  4939  0486  00A6               	movwf	___lldiv@dividend+2
  4940  0487  3048               	movlw	72
  4941  0488  00A5               	movwf	___lldiv@dividend+1
  4942  0489  3000               	movlw	0
  4943  048A  00A4               	movwf	___lldiv@dividend
  4944  048B  3181  2184  3184   	fcall	___lldiv
  4945  048E  0140               	movlb	0	; select bank0
  4946  048F  0820               	movf	?___lldiv,w
  4947  0490  3EFF               	addlw	255
  4948  0491  0143               	movlb	3	; select bank3
  4949  0492  008D               	movwf	13	;volatile
  4950  0493                     l2075:	
  4951                           
  4952                           ;I2C.c: 16: SSP1STAT = 0b10000000;
  4953  0493  3080               	movlw	128
  4954  0494  008F               	movwf	15	;volatile
  4955  0495                     l356:	
  4956  0495  0008               	return
  4957  0496                     __end_of_I2C_Master_Init:	
  4958                           
  4959                           	psect	text28
  4960  0184                     __ptext28:	
  4961 ;; *************** function ___lldiv *****************
  4962 ;; Defined at:
  4963 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;  divisor         4    0[BANK0 ] unsigned long 
  4966 ;;  dividend        4    4[BANK0 ] unsigned long 
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;  quotient        4    9[BANK0 ] unsigned long 
  4969 ;;  counter         1   13[BANK0 ] unsigned char 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  4    0[BANK0 ] unsigned long 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4979 ;;      Params:         0       8       0       0       0       0       0       0
  4980 ;;      Locals:         0       5       0       0       0       0       0       0
  4981 ;;      Temps:          0       1       0       0       0       0       0       0
  4982 ;;      Totals:         0      14       0       0       0       0       0       0
  4983 ;;Total ram usage:       14 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:    7
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		_I2C_Master_Init
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           
  4994                           ;psect for function ___lldiv
  4995  0184                     ___lldiv:	
  4996  0184                     l1921:	
  4997                           ;incstack = 0
  4998                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4999                           
  5000  0184  3000               	movlw	0
  5001  0185  0140               	movlb	0	; select bank0
  5002  0186  00AC               	movwf	___lldiv@quotient+3
  5003  0187  3000               	movlw	0
  5004  0188  00AB               	movwf	___lldiv@quotient+2
  5005  0189  3000               	movlw	0
  5006  018A  00AA               	movwf	___lldiv@quotient+1
  5007  018B  3000               	movlw	0
  5008  018C  00A9               	movwf	___lldiv@quotient
  5009  018D  0823               	movf	___lldiv@divisor+3,w
  5010  018E  0422               	iorwf	___lldiv@divisor+2,w
  5011  018F  0421               	iorwf	___lldiv@divisor+1,w
  5012  0190  0420               	iorwf	___lldiv@divisor,w
  5013  0191  1903               	skipnz
  5014  0192  2994               	goto	u1081
  5015  0193  2995               	goto	u1080
  5016  0194                     u1081:	
  5017  0194  29D6               	goto	l1941
  5018  0195                     u1080:	
  5019  0195                     l1923:	
  5020  0195  01AD               	clrf	___lldiv@counter
  5021  0196  0AAD               	incf	___lldiv@counter,f
  5022  0197  29A3               	goto	l1927
  5023  0198                     l1925:	
  5024  0198  3001               	movlw	1
  5025  0199                     u1095:	
  5026  0199  35A0               	lslf	___lldiv@divisor,f
  5027  019A  0DA1               	rlf	___lldiv@divisor+1,f
  5028  019B  0DA2               	rlf	___lldiv@divisor+2,f
  5029  019C  0DA3               	rlf	___lldiv@divisor+3,f
  5030  019D  0B89               	decfsz	9,f
  5031  019E  2999               	goto	u1095
  5032  019F  3001               	movlw	1
  5033  01A0  00A8               	movwf	??___lldiv
  5034  01A1  0828               	movf	??___lldiv,w
  5035  01A2  07AD               	addwf	___lldiv@counter,f
  5036  01A3                     l1927:	
  5037  01A3  1FA3               	btfss	___lldiv@divisor+3,7
  5038  01A4  29A6               	goto	u1101
  5039  01A5  29A7               	goto	u1100
  5040  01A6                     u1101:	
  5041  01A6  2998               	goto	l1925
  5042  01A7                     u1100:	
  5043  01A7                     l1929:	
  5044  01A7  3001               	movlw	1
  5045  01A8                     u1115:	
  5046  01A8  35A9               	lslf	___lldiv@quotient,f
  5047  01A9  0DAA               	rlf	___lldiv@quotient+1,f
  5048  01AA  0DAB               	rlf	___lldiv@quotient+2,f
  5049  01AB  0DAC               	rlf	___lldiv@quotient+3,f
  5050  01AC  0B89               	decfsz	9,f
  5051  01AD  29A8               	goto	u1115
  5052  01AE                     l1931:	
  5053  01AE  0823               	movf	___lldiv@divisor+3,w
  5054  01AF  0227               	subwf	___lldiv@dividend+3,w
  5055  01B0  1D03               	skipz
  5056  01B1  29BC               	goto	u1125
  5057  01B2  0822               	movf	___lldiv@divisor+2,w
  5058  01B3  0226               	subwf	___lldiv@dividend+2,w
  5059  01B4  1D03               	skipz
  5060  01B5  29BC               	goto	u1125
  5061  01B6  0821               	movf	___lldiv@divisor+1,w
  5062  01B7  0225               	subwf	___lldiv@dividend+1,w
  5063  01B8  1D03               	skipz
  5064  01B9  29BC               	goto	u1125
  5065  01BA  0820               	movf	___lldiv@divisor,w
  5066  01BB  0224               	subwf	___lldiv@dividend,w
  5067  01BC                     u1125:	
  5068  01BC  1C03               	skipc
  5069  01BD  29BF               	goto	u1121
  5070  01BE  29C0               	goto	u1120
  5071  01BF                     u1121:	
  5072  01BF  29C9               	goto	l1937
  5073  01C0                     u1120:	
  5074  01C0                     l1933:	
  5075  01C0  0820               	movf	___lldiv@divisor,w
  5076  01C1  02A4               	subwf	___lldiv@dividend,f
  5077  01C2  0821               	movf	___lldiv@divisor+1,w
  5078  01C3  3BA5               	subwfb	___lldiv@dividend+1,f
  5079  01C4  0822               	movf	___lldiv@divisor+2,w
  5080  01C5  3BA6               	subwfb	___lldiv@dividend+2,f
  5081  01C6  0823               	movf	___lldiv@divisor+3,w
  5082  01C7  3BA7               	subwfb	___lldiv@dividend+3,f
  5083  01C8                     l1935:	
  5084  01C8  1429               	bsf	___lldiv@quotient,0
  5085  01C9                     l1937:	
  5086  01C9  3001               	movlw	1
  5087  01CA                     u1135:	
  5088  01CA  36A3               	lsrf	___lldiv@divisor+3,f
  5089  01CB  0CA2               	rrf	___lldiv@divisor+2,f
  5090  01CC  0CA1               	rrf	___lldiv@divisor+1,f
  5091  01CD  0CA0               	rrf	___lldiv@divisor,f
  5092  01CE  0B89               	decfsz	9,f
  5093  01CF  29CA               	goto	u1135
  5094  01D0                     l1939:	
  5095  01D0  3001               	movlw	1
  5096  01D1  02AD               	subwf	___lldiv@counter,f
  5097  01D2  1D03               	btfss	3,2
  5098  01D3  29D5               	goto	u1141
  5099  01D4  29D6               	goto	u1140
  5100  01D5                     u1141:	
  5101  01D5  29A7               	goto	l1929
  5102  01D6                     u1140:	
  5103  01D6                     l1941:	
  5104  01D6  082C               	movf	___lldiv@quotient+3,w
  5105  01D7  00A3               	movwf	?___lldiv+3
  5106  01D8  082B               	movf	___lldiv@quotient+2,w
  5107  01D9  00A2               	movwf	?___lldiv+2
  5108  01DA  082A               	movf	___lldiv@quotient+1,w
  5109  01DB  00A1               	movwf	?___lldiv+1
  5110  01DC  0829               	movf	___lldiv@quotient,w
  5111  01DD  00A0               	movwf	?___lldiv
  5112  01DE                     l515:	
  5113  01DE  0008               	return
  5114  01DF                     __end_of___lldiv:	
  5115                           
  5116                           	psect	text29
  5117  0352                     __ptext29:	
  5118 ;; *************** function _BQ_init *****************
  5119 ;; Defined at:
  5120 ;;		line 102 in file "Functions.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;		None
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;		None
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  1    wreg      void 
  5127 ;; Registers used:
  5128 ;;		wreg, status,2, status,0, pclath, cstack
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5134 ;;      Params:         0       0       0       0       0       0       0       0
  5135 ;;      Locals:         0       0       0       0       0       0       0       0
  5136 ;;      Temps:          0       1       0       0       0       0       0       0
  5137 ;;      Totals:         0       1       0       0       0       0       0       0
  5138 ;;Total ram usage:        1 bytes
  5139 ;; Hardware stack levels used:    1
  5140 ;; Hardware stack levels required when called:   10
  5141 ;; This function calls:
  5142 ;;		_BQ_Write
  5143 ;; This function is called by:
  5144 ;;		_main
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           
  5149                           ;psect for function _BQ_init
  5150  0352                     _BQ_init:	
  5151  0352                     l2077:	
  5152                           ;incstack = 0
  5153                           ; Regs used in _BQ_init: [wreg+status,2+status,0+pclath+cstack]
  5154                           
  5155                           
  5156                           ;Functions.c: 104: BQ_Write(0x00, 0b01111010);
  5157  0352  307A               	movlw	122
  5158  0353  0140               	movlb	0	; select bank0
  5159  0354  00A3               	movwf	??_BQ_init
  5160  0355  0823               	movf	??_BQ_init,w
  5161  0356  00A1               	movwf	BQ_Write@data
  5162  0357  3000               	movlw	0
  5163  0358  3186  2627  3183   	fcall	_BQ_Write
  5164                           
  5165                           ;Functions.c: 105: BQ_Write(0x03, 0b00011010);
  5166  035B  301A               	movlw	26
  5167  035C  0140               	movlb	0	; select bank0
  5168  035D  00A3               	movwf	??_BQ_init
  5169  035E  0823               	movf	??_BQ_init,w
  5170  035F  00A1               	movwf	BQ_Write@data
  5171  0360  3003               	movlw	3
  5172  0361  3186  2627  3183   	fcall	_BQ_Write
  5173                           
  5174                           ;Functions.c: 106: BQ_Write(0x04, 0b01100000);
  5175  0364  3060               	movlw	96
  5176  0365  0140               	movlb	0	; select bank0
  5177  0366  00A3               	movwf	??_BQ_init
  5178  0367  0823               	movf	??_BQ_init,w
  5179  0368  00A1               	movwf	BQ_Write@data
  5180  0369  3004               	movlw	4
  5181  036A  3186  2627  3183   	fcall	_BQ_Write
  5182                           
  5183                           ;Functions.c: 107: BQ_Write(0x07, 0b11001101);
  5184  036D  30CD               	movlw	205
  5185  036E  0140               	movlb	0	; select bank0
  5186  036F  00A3               	movwf	??_BQ_init
  5187  0370  0823               	movf	??_BQ_init,w
  5188  0371  00A1               	movwf	BQ_Write@data
  5189  0372  3007               	movlw	7
  5190  0373  3186  2627  3183   	fcall	_BQ_Write
  5191                           
  5192                           ;Functions.c: 108: BQ_Write(0x02, 0b00110101);
  5193  0376  3035               	movlw	53
  5194  0377  0140               	movlb	0	; select bank0
  5195  0378  00A3               	movwf	??_BQ_init
  5196  0379  0823               	movf	??_BQ_init,w
  5197  037A  00A1               	movwf	BQ_Write@data
  5198  037B  3002               	movlw	2
  5199  037C  3186  2627  3183   	fcall	_BQ_Write
  5200                           
  5201                           ;Functions.c: 109: BQ_Write(0x0D, 0xFF);
  5202  037F  30FF               	movlw	255
  5203  0380  0140               	movlb	0	; select bank0
  5204  0381  00A3               	movwf	??_BQ_init
  5205  0382  0823               	movf	??_BQ_init,w
  5206  0383  00A1               	movwf	BQ_Write@data
  5207  0384  300D               	movlw	13
  5208  0385  3186  2627  3183   	fcall	_BQ_Write
  5209                           
  5210                           ;Functions.c: 110: BQ_Write(0x08, 0b00000001);
  5211  0388  0140               	movlb	0	; select bank0
  5212  0389  01A1               	clrf	BQ_Write@data
  5213  038A  0AA1               	incf	BQ_Write@data,f
  5214  038B  3008               	movlw	8
  5215  038C  3186  2627  3183   	fcall	_BQ_Write
  5216  038F                     l285:	
  5217  038F  0008               	return
  5218  0390                     __end_of_BQ_init:	
  5219                           
  5220                           	psect	text30
  5221  0627                     __ptext30:	
  5222 ;; *************** function _BQ_Write *****************
  5223 ;; Defined at:
  5224 ;;		line 77 in file "I2C.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;  reg             1    wreg     unsigned char 
  5227 ;;  data            1    1[BANK0 ] unsigned char 
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;  reg             1    2[BANK0 ] unsigned char 
  5230 ;; Return value:  Size  Location     Type
  5231 ;;                  1    wreg      void 
  5232 ;; Registers used:
  5233 ;;		wreg, status,2, status,0, pclath, cstack
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5239 ;;      Params:         0       1       0       0       0       0       0       0
  5240 ;;      Locals:         0       1       0       0       0       0       0       0
  5241 ;;      Temps:          0       0       0       0       0       0       0       0
  5242 ;;      Totals:         0       2       0       0       0       0       0       0
  5243 ;;Total ram usage:        2 bytes
  5244 ;; Hardware stack levels used:    1
  5245 ;; Hardware stack levels required when called:    9
  5246 ;; This function calls:
  5247 ;;		_I2C_Master_Start
  5248 ;;		_I2C_Master_Stop
  5249 ;;		_I2C_Master_Write
  5250 ;; This function is called by:
  5251 ;;		_BQ_init
  5252 ;;		_battery_read
  5253 ;;		_power_down
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           
  5258                           ;psect for function _BQ_Write
  5259  0627                     _BQ_Write:	
  5260                           
  5261                           ;incstack = 0
  5262                           ; Regs used in _BQ_Write: [wreg+status,2+status,0+pclath+cstack]
  5263                           ;BQ_Write@reg stored from wreg
  5264  0627  0140               	movlb	0	; select bank0
  5265  0628  00A2               	movwf	BQ_Write@reg
  5266  0629                     l1647:	
  5267                           
  5268                           ;I2C.c: 79: I2C_Master_Start();
  5269  0629  3186  26EB  3186   	fcall	_I2C_Master_Start
  5270                           
  5271                           ;I2C.c: 80: I2C_Master_Write(0x6A << 1);
  5272  062C  30D4               	movlw	212
  5273  062D  3186  26A0  3186   	fcall	_I2C_Master_Write
  5274                           
  5275                           ;I2C.c: 81: I2C_Master_Write(reg);
  5276  0630  0140               	movlb	0	; select bank0
  5277  0631  0822               	movf	BQ_Write@reg,w
  5278  0632  3186  26A0  3186   	fcall	_I2C_Master_Write
  5279                           
  5280                           ;I2C.c: 82: I2C_Master_Write(data);
  5281  0635  0140               	movlb	0	; select bank0
  5282  0636  0821               	movf	BQ_Write@data,w
  5283  0637  3186  26A0  3186   	fcall	_I2C_Master_Write
  5284                           
  5285                           ;I2C.c: 83: I2C_Master_Stop();
  5286  063A  3186  26E5  3186   	fcall	_I2C_Master_Stop
  5287  063D                     l388:	
  5288  063D  0008               	return
  5289  063E                     __end_of_BQ_Write:	
  5290                           
  5291                           	psect	text31
  5292  06A0                     __ptext31:	
  5293 ;; *************** function _I2C_Master_Write *****************
  5294 ;; Defined at:
  5295 ;;		line 42 in file "I2C.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;  data            1    wreg     unsigned char 
  5298 ;; Auto vars:     Size  Location     Type
  5299 ;;  data            1    0[BANK0 ] unsigned char 
  5300 ;; Return value:  Size  Location     Type
  5301 ;;                  1    wreg      void 
  5302 ;; Registers used:
  5303 ;;		wreg, status,2, status,0, pclath, cstack
  5304 ;; Tracked objects:
  5305 ;;		On entry : 0/0
  5306 ;;		On exit  : 0/0
  5307 ;;		Unchanged: 0/0
  5308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5309 ;;      Params:         0       0       0       0       0       0       0       0
  5310 ;;      Locals:         0       1       0       0       0       0       0       0
  5311 ;;      Temps:          0       0       0       0       0       0       0       0
  5312 ;;      Totals:         0       1       0       0       0       0       0       0
  5313 ;;Total ram usage:        1 bytes
  5314 ;; Hardware stack levels used:    1
  5315 ;; Hardware stack levels required when called:    8
  5316 ;; This function calls:
  5317 ;;		_I2C_Master_Wait
  5318 ;; This function is called by:
  5319 ;;		_BQ_Write
  5320 ;;		_BQ_Read
  5321 ;;		_STUSB_Write
  5322 ;;		_LM_Write
  5323 ;;		_STUSB_Read
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327                           
  5328                           ;psect for function _I2C_Master_Write
  5329  06A0                     _I2C_Master_Write:	
  5330                           
  5331                           ;incstack = 0
  5332                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  5333                           ;I2C_Master_Write@data stored from wreg
  5334  06A0  0140               	movlb	0	; select bank0
  5335  06A1  00A0               	movwf	I2C_Master_Write@data
  5336  06A2                     l1627:	
  5337                           
  5338                           ;I2C.c: 44: I2C_Master_Wait();
  5339  06A2  3186  2688  3186   	fcall	_I2C_Master_Wait
  5340  06A5                     l1629:	
  5341                           
  5342                           ;I2C.c: 45: SSP1BUF = data;
  5343  06A5  0140               	movlb	0	; select bank0
  5344  06A6  0820               	movf	I2C_Master_Write@data,w
  5345  06A7  0143               	movlb	3	; select bank3
  5346  06A8  008C               	movwf	12	;volatile
  5347  06A9                     l374:	
  5348  06A9  0008               	return
  5349  06AA                     __end_of_I2C_Master_Write:	
  5350                           
  5351                           	psect	text32
  5352  06E5                     __ptext32:	
  5353 ;; *************** function _I2C_Master_Stop *****************
  5354 ;; Defined at:
  5355 ;;		line 36 in file "I2C.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;		None
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;		None
  5360 ;; Return value:  Size  Location     Type
  5361 ;;                  1    wreg      void 
  5362 ;; Registers used:
  5363 ;;		wreg, status,2, status,0, pclath, cstack
  5364 ;; Tracked objects:
  5365 ;;		On entry : 0/0
  5366 ;;		On exit  : 0/0
  5367 ;;		Unchanged: 0/0
  5368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5369 ;;      Params:         0       0       0       0       0       0       0       0
  5370 ;;      Locals:         0       0       0       0       0       0       0       0
  5371 ;;      Temps:          0       0       0       0       0       0       0       0
  5372 ;;      Totals:         0       0       0       0       0       0       0       0
  5373 ;;Total ram usage:        0 bytes
  5374 ;; Hardware stack levels used:    1
  5375 ;; Hardware stack levels required when called:    8
  5376 ;; This function calls:
  5377 ;;		_I2C_Master_Wait
  5378 ;; This function is called by:
  5379 ;;		_BQ_Write
  5380 ;;		_BQ_Read
  5381 ;;		_STUSB_Write
  5382 ;;		_LM_Write
  5383 ;;		_STUSB_Read
  5384 ;; This function uses a non-reentrant model
  5385 ;;
  5386                           
  5387                           
  5388                           ;psect for function _I2C_Master_Stop
  5389  06E5                     _I2C_Master_Stop:	
  5390  06E5                     l1623:	
  5391                           ;incstack = 0
  5392                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  5393                           
  5394                           
  5395                           ;I2C.c: 38: I2C_Master_Wait();
  5396  06E5  3186  2688  3186   	fcall	_I2C_Master_Wait
  5397  06E8                     l1625:	
  5398                           
  5399                           ;I2C.c: 39: SSP1CON2bits.PEN = 1;
  5400  06E8  0143               	movlb	3	; select bank3
  5401  06E9  1511               	bsf	17,2	;volatile
  5402  06EA                     l371:	
  5403  06EA  0008               	return
  5404  06EB                     __end_of_I2C_Master_Stop:	
  5405                           
  5406                           	psect	text33
  5407  06EB                     __ptext33:	
  5408 ;; *************** function _I2C_Master_Start *****************
  5409 ;; Defined at:
  5410 ;;		line 24 in file "I2C.c"
  5411 ;; Parameters:    Size  Location     Type
  5412 ;;		None
  5413 ;; Auto vars:     Size  Location     Type
  5414 ;;		None
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  1    wreg      void 
  5417 ;; Registers used:
  5418 ;;		wreg, status,2, status,0, pclath, cstack
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5424 ;;      Params:         0       0       0       0       0       0       0       0
  5425 ;;      Locals:         0       0       0       0       0       0       0       0
  5426 ;;      Temps:          0       0       0       0       0       0       0       0
  5427 ;;      Totals:         0       0       0       0       0       0       0       0
  5428 ;;Total ram usage:        0 bytes
  5429 ;; Hardware stack levels used:    1
  5430 ;; Hardware stack levels required when called:    8
  5431 ;; This function calls:
  5432 ;;		_I2C_Master_Wait
  5433 ;; This function is called by:
  5434 ;;		_BQ_Write
  5435 ;;		_BQ_Read
  5436 ;;		_STUSB_Write
  5437 ;;		_LM_Write
  5438 ;;		_STUSB_Read
  5439 ;; This function uses a non-reentrant model
  5440 ;;
  5441                           
  5442                           
  5443                           ;psect for function _I2C_Master_Start
  5444  06EB                     _I2C_Master_Start:	
  5445  06EB                     l1619:	
  5446                           ;incstack = 0
  5447                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  5448                           
  5449                           
  5450                           ;I2C.c: 26: I2C_Master_Wait();
  5451  06EB  3186  2688  3186   	fcall	_I2C_Master_Wait
  5452  06EE                     l1621:	
  5453                           
  5454                           ;I2C.c: 27: SSP1CON2bits.SEN = 1;
  5455  06EE  0143               	movlb	3	; select bank3
  5456  06EF  1411               	bsf	17,0	;volatile
  5457  06F0                     l365:	
  5458  06F0  0008               	return
  5459  06F1                     __end_of_I2C_Master_Start:	
  5460                           
  5461                           	psect	text34
  5462  0688                     __ptext34:	
  5463 ;; *************** function _I2C_Master_Wait *****************
  5464 ;; Defined at:
  5465 ;;		line 19 in file "I2C.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;		None
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;		None
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      void 
  5472 ;; Registers used:
  5473 ;;		wreg, status,2
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5479 ;;      Params:         0       0       0       0       0       0       0       0
  5480 ;;      Locals:         0       0       0       0       0       0       0       0
  5481 ;;      Temps:          0       0       0       0       0       0       0       0
  5482 ;;      Totals:         0       0       0       0       0       0       0       0
  5483 ;;Total ram usage:        0 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:    7
  5486 ;; This function calls:
  5487 ;;		Nothing
  5488 ;; This function is called by:
  5489 ;;		_I2C_Master_Start
  5490 ;;		_I2C_Master_Stop
  5491 ;;		_I2C_Master_Write
  5492 ;;		_I2C_Master_Read
  5493 ;;		_I2C_Master_Repeated_Start
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           
  5498                           ;psect for function _I2C_Master_Wait
  5499  0688                     _I2C_Master_Wait:	
  5500  0688                     l1611:	
  5501                           ;incstack = 0
  5502                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  5503                           
  5504  0688                     l359:	
  5505                           ;I2C.c: 21: while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
  5506                           
  5507  0688  0143               	movlb	3	; select bank3
  5508  0689  190F               	btfsc	15,2	;volatile
  5509  068A  2E8C               	goto	u761
  5510  068B  2E8D               	goto	u760
  5511  068C                     u761:	
  5512  068C  2E88               	goto	l359
  5513  068D                     u760:	
  5514  068D                     l1613:	
  5515  068D  0811               	movf	17,w	;volatile
  5516  068E  391F               	andlw	31
  5517  068F  1D03               	btfss	3,2
  5518  0690  2E92               	goto	u771
  5519  0691  2E93               	goto	u770
  5520  0692                     u771:	
  5521  0692  2E88               	goto	l359
  5522  0693                     u770:	
  5523  0693                     l362:	
  5524  0693  0008               	return
  5525  0694                     __end_of_I2C_Master_Wait:	
  5526                           
  5527                           	psect	intentry
  5528  0004                     __pintentry:	
  5529 ;; *************** function _ISR *****************
  5530 ;; Defined at:
  5531 ;;		line 134 in file "main.c"
  5532 ;; Parameters:    Size  Location     Type
  5533 ;;		None
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;		None
  5536 ;; Return value:  Size  Location     Type
  5537 ;;                  1    wreg      void 
  5538 ;; Registers used:
  5539 ;;		wreg, status,2, status,0, pclath, cstack
  5540 ;; Tracked objects:
  5541 ;;		On entry : 0/0
  5542 ;;		On exit  : 0/0
  5543 ;;		Unchanged: 0/0
  5544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5545 ;;      Params:         0       0       0       0       0       0       0       0
  5546 ;;      Locals:         0       0       0       0       0       0       0       0
  5547 ;;      Temps:          0       0       0       0       0       0       0       0
  5548 ;;      Totals:         0       0       0       0       0       0       0       0
  5549 ;;Total ram usage:        0 bytes
  5550 ;; Hardware stack levels used:    1
  5551 ;; Hardware stack levels required when called:    6
  5552 ;; This function calls:
  5553 ;;		_on_off_tact
  5554 ;; This function is called by:
  5555 ;;		Interrupt level 1
  5556 ;; This function uses a non-reentrant model
  5557 ;;
  5558                           
  5559  0004                     _ISR:	
  5560                           
  5561                           ;incstack = 0
  5562  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5563                           
  5564                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  5565  0005  3180               	pagesel	$
  5566  0006                     i1l2187:	
  5567                           
  5568                           ;main.c: 136: TMR2 = 0;
  5569  0006  0145               	movlb	5	; select bank5
  5570  0007  018C               	clrf	12	;volatile
  5571  0008                     i1l2189:	
  5572                           
  5573                           ;main.c: 137: TMR2IF = 0;
  5574  0008  014E               	movlb	14	; select bank14
  5575  0009  1090               	bcf	16,1	;volatile
  5576  000A                     i1l2191:	
  5577                           
  5578                           ;main.c: 139: on_off_tact();
  5579  000A  3180  202F  3180   	fcall	_on_off_tact
  5580  000D                     i1l2193:	
  5581                           
  5582                           ;main.c: 142: IOCAF5 = 0;
  5583  000D  017E               	movlb	62	; select bank62
  5584  000E  12BF               	bcf	63,5	;volatile
  5585  000F                     i1l2195:	
  5586                           
  5587                           ;main.c: 144: if(reg_state == 0) {
  5588  000F  0140               	movlb	0	; select bank0
  5589  0010  084C               	movf	_reg_state,w
  5590  0011  1D03               	btfss	3,2
  5591  0012  2814               	goto	u148_21
  5592  0013  2815               	goto	u148_20
  5593  0014                     u148_21:	
  5594  0014  2816               	goto	i1l163
  5595  0015                     u148_20:	
  5596  0015                     i1l2197:	
  5597  0015  0063               	sleep	;# 
  5598  0016                     i1l163:	
  5599  0016  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5600  0017  0009               	retfie
  5601  0018                     __end_of_ISR:	
  5602                           
  5603                           	psect	text36
  5604  002F                     __ptext36:	
  5605 ;; *************** function _on_off_tact *****************
  5606 ;; Defined at:
  5607 ;;		line 80 in file "main.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;		None
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;  count           1   11[COMMON] unsigned char 
  5612 ;;  exit            1   10[COMMON] unsigned char 
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  1    wreg      void 
  5615 ;; Registers used:
  5616 ;;		wreg, status,2, status,0, pclath, cstack
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5622 ;;      Params:         0       0       0       0       0       0       0       0
  5623 ;;      Locals:         2       0       0       0       0       0       0       0
  5624 ;;      Temps:          1       0       0       0       0       0       0       0
  5625 ;;      Totals:         3       0       0       0       0       0       0       0
  5626 ;;Total ram usage:        3 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; Hardware stack levels required when called:    5
  5629 ;; This function calls:
  5630 ;;		_get_mode
  5631 ;;		_power_up
  5632 ;;		i1_power_down
  5633 ;;		i1_set_mode
  5634 ;; This function is called by:
  5635 ;;		_ISR
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           
  5640                           ;psect for function _on_off_tact
  5641  002F                     _on_off_tact:	
  5642  002F                     i1l1983:	
  5643                           ;incstack = 0
  5644                           ; Regs used in _on_off_tact: [wreg+status,2+status,0+pclath+cstack]
  5645                           
  5646                           
  5647                           ;main.c: 85: char count = 0;
  5648  002F  01FB               	clrf	on_off_tact@count
  5649                           
  5650                           ;main.c: 86: char exit = 0;
  5651  0030  01FA               	clrf	on_off_tact@exit
  5652                           
  5653                           ;main.c: 88: while(RA5 == 0 && exit == 0) {
  5654  0031  2844               	goto	i1l138
  5655  0032                     i1l139:	
  5656                           
  5657                           ;main.c: 89: if(TMR2IF == 1) {
  5658  0032  014E               	movlb	14	; select bank14
  5659  0033  1C90               	btfss	16,1	;volatile
  5660  0034  2836               	goto	u121_21
  5661  0035  2837               	goto	u121_20
  5662  0036                     u121_21:	
  5663  0036  283C               	goto	i1l1989
  5664  0037                     u121_20:	
  5665  0037                     i1l1985:	
  5666                           
  5667                           ;main.c: 90: count++;
  5668  0037  3001               	movlw	1
  5669  0038  00F9               	movwf	??_on_off_tact
  5670  0039  0879               	movf	??_on_off_tact,w
  5671  003A  07FB               	addwf	on_off_tact@count,f
  5672  003B                     i1l1987:	
  5673                           
  5674                           ;main.c: 91: TMR2IF = 0;
  5675  003B  1090               	bcf	16,1	;volatile
  5676  003C                     i1l1989:	
  5677                           
  5678                           ;main.c: 92: };main.c: 93: if(count >= 120) {
  5679  003C  3078               	movlw	120
  5680  003D  027B               	subwf	on_off_tact@count,w
  5681  003E  1C03               	skipc
  5682  003F  2841               	goto	u122_21
  5683  0040  2842               	goto	u122_20
  5684  0041                     u122_21:	
  5685  0041  2844               	goto	i1l138
  5686  0042                     u122_20:	
  5687  0042                     i1l1991:	
  5688                           
  5689                           ;main.c: 94: exit = 1;
  5690  0042  01FA               	clrf	on_off_tact@exit
  5691  0043  0AFA               	incf	on_off_tact@exit,f
  5692  0044                     i1l138:	
  5693  0044  0140               	movlb	0	; select bank0
  5694  0045  1A8C               	btfsc	12,5	;volatile
  5695  0046  2848               	goto	u123_21
  5696  0047  2849               	goto	u123_20
  5697  0048                     u123_21:	
  5698  0048  284E               	goto	i1l1995
  5699  0049                     u123_20:	
  5700  0049                     i1l1993:	
  5701  0049  087A               	movf	on_off_tact@exit,w
  5702  004A  1903               	btfsc	3,2
  5703  004B  284D               	goto	u124_21
  5704  004C  284E               	goto	u124_20
  5705  004D                     u124_21:	
  5706  004D  2832               	goto	i1l139
  5707  004E                     u124_20:	
  5708  004E                     i1l1995:	
  5709                           
  5710                           ;main.c: 95: };main.c: 96: };main.c: 98: if(count >= 120){
  5711  004E  3078               	movlw	120
  5712  004F  027B               	subwf	on_off_tact@count,w
  5713  0050  1C03               	skipc
  5714  0051  2853               	goto	u125_21
  5715  0052  2854               	goto	u125_20
  5716  0053                     u125_21:	
  5717  0053  2883               	goto	i1l2009
  5718  0054                     u125_20:	
  5719  0054                     i1l1997:	
  5720                           
  5721                           ;main.c: 99: reg_state =! reg_state;
  5722  0054  084C               	movf	_reg_state,w
  5723  0055  1903               	btfsc	3,2
  5724  0056  2858               	goto	u126_21
  5725  0057  285A               	goto	u126_20
  5726  0058                     u126_21:	
  5727  0058  3001               	movlw	1
  5728  0059  285B               	goto	u127_20
  5729  005A                     u126_20:	
  5730  005A  3000               	movlw	0
  5731  005B                     u127_20:	
  5732  005B  00F9               	movwf	??_on_off_tact
  5733  005C  0879               	movf	??_on_off_tact,w
  5734  005D  00CC               	movwf	_reg_state
  5735                           
  5736                           ;main.c: 101: if(reg_state == 1){
  5737  005E  034C               	decf	_reg_state,w
  5738  005F  1D03               	btfss	3,2
  5739  0060  2862               	goto	u128_21
  5740  0061  2863               	goto	u128_20
  5741  0062                     u128_21:	
  5742  0062  2867               	goto	i1l2001
  5743  0063                     u128_20:	
  5744  0063                     i1l1999:	
  5745                           
  5746                           ;main.c: 102: power_up();
  5747  0063  3186  267B  3180   	fcall	_power_up
  5748                           
  5749                           ;main.c: 103: }
  5750  0066  287D               	goto	i1l151
  5751  0067                     i1l2001:	
  5752                           
  5753                           ;main.c: 105: else if(reg_state == 0){
  5754  0067  084C               	movf	_reg_state,w
  5755  0068  1D03               	btfss	3,2
  5756  0069  286B               	goto	u129_21
  5757  006A  286C               	goto	u129_20
  5758  006B                     u129_21:	
  5759  006B  287D               	goto	i1l151
  5760  006C                     u129_20:	
  5761  006C                     i1l2003:	
  5762                           
  5763                           ;main.c: 107: if(get_mode() == 3) {
  5764  006C  3187  2708  3180   	fcall	_get_mode
  5765  006F  3A03               	xorlw	3
  5766  0070  1D03               	skipz
  5767  0071  2873               	goto	u130_21
  5768  0072  2874               	goto	u130_20
  5769  0073                     u130_21:	
  5770  0073  2879               	goto	i1l2007
  5771  0074                     u130_20:	
  5772  0074                     i1l2005:	
  5773                           
  5774                           ;main.c: 108: power_down(1);
  5775  0074  3001               	movlw	1
  5776  0075  3186  263E  3180   	fcall	i1_power_down
  5777                           
  5778                           ;main.c: 109: }
  5779  0078  287D               	goto	i1l151
  5780  0079                     i1l2007:	
  5781                           
  5782                           ;main.c: 111: else {;main.c: 112: power_down(0);
  5783  0079  3000               	movlw	0
  5784  007A  3186  263E  3180   	fcall	i1_power_down
  5785  007D                     i1l151:	
  5786  007D  0140               	movlb	0	; select bank0
  5787  007E  1E8C               	btfss	12,5	;volatile
  5788  007F  2881               	goto	u131_21
  5789  0080  2882               	goto	u131_20
  5790  0081                     u131_21:	
  5791  0081  287D               	goto	i1l151
  5792  0082                     u131_20:	
  5793  0082  28AB               	goto	i1l157
  5794  0083                     i1l2009:	
  5795                           
  5796                           ;main.c: 121: else if(count >= 2 && reg_state && mode_en) {
  5797  0083  3002               	movlw	2
  5798  0084  027B               	subwf	on_off_tact@count,w
  5799  0085  1C03               	skipc
  5800  0086  2888               	goto	u132_21
  5801  0087  2889               	goto	u132_20
  5802  0088                     u132_21:	
  5803  0088  28AB               	goto	i1l157
  5804  0089                     u132_20:	
  5805  0089                     i1l2011:	
  5806  0089  084C               	movf	_reg_state,w
  5807  008A  1903               	btfsc	3,2
  5808  008B  288D               	goto	u133_21
  5809  008C  288E               	goto	u133_20
  5810  008D                     u133_21:	
  5811  008D  28AB               	goto	i1l157
  5812  008E                     u133_20:	
  5813  008E                     i1l2013:	
  5814  008E  0848               	movf	_mode_en,w
  5815  008F  1903               	btfsc	3,2
  5816  0090  2892               	goto	u134_21
  5817  0091  2893               	goto	u134_20
  5818  0092                     u134_21:	
  5819  0092  28AB               	goto	i1l157
  5820  0093                     u134_20:	
  5821  0093                     i1l2015:	
  5822                           
  5823                           ;main.c: 122: mode_temp++;
  5824  0093  3001               	movlw	1
  5825  0094  00F9               	movwf	??_on_off_tact
  5826  0095  0879               	movf	??_on_off_tact,w
  5827  0096  07CA               	addwf	_mode_temp,f
  5828  0097                     i1l2017:	
  5829                           
  5830                           ;main.c: 123: set_mode(mode_temp);
  5831  0097  084A               	movf	_mode_temp,w
  5832  0098  3186  26D7  3180   	fcall	i1_set_mode
  5833  009B                     i1l2019:	
  5834                           
  5835                           ;main.c: 126: if(get_mode() > 3) {
  5836  009B  3187  2708  3180   	fcall	_get_mode
  5837  009E  00F9               	movwf	??_on_off_tact
  5838  009F  3004               	movlw	4
  5839  00A0  0279               	subwf	??_on_off_tact,w
  5840  00A1  1C03               	skipc
  5841  00A2  28A4               	goto	u135_21
  5842  00A3  28A5               	goto	u135_20
  5843  00A4                     u135_21:	
  5844  00A4  28AB               	goto	i1l157
  5845  00A5                     u135_20:	
  5846  00A5                     i1l2021:	
  5847                           
  5848                           ;main.c: 127: mode_temp = 0;
  5849  00A5  0140               	movlb	0	; select bank0
  5850  00A6  01CA               	clrf	_mode_temp
  5851  00A7                     i1l2023:	
  5852                           
  5853                           ;main.c: 128: set_mode(mode_temp);
  5854  00A7  084A               	movf	_mode_temp,w
  5855  00A8  3186  26D7  3180   	fcall	i1_set_mode
  5856  00AB                     i1l157:	
  5857  00AB  0008               	return
  5858  00AC                     __end_of_on_off_tact:	
  5859                           
  5860                           	psect	text37
  5861  06D7                     __ptext37:	
  5862 ;; *************** function i1_set_mode *****************
  5863 ;; Defined at:
  5864 ;;		line 47 in file "Functions.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;  mode_temp       1    wreg     unsigned char 
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;  mode_temp       1    1[COMMON] unsigned char 
  5869 ;; Return value:  Size  Location     Type
  5870 ;;                  1    wreg      void 
  5871 ;; Registers used:
  5872 ;;		wreg
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 0/0
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5878 ;;      Params:         0       0       0       0       0       0       0       0
  5879 ;;      Locals:         1       0       0       0       0       0       0       0
  5880 ;;      Temps:          1       0       0       0       0       0       0       0
  5881 ;;      Totals:         2       0       0       0       0       0       0       0
  5882 ;;Total ram usage:        2 bytes
  5883 ;; Hardware stack levels used:    1
  5884 ;; This function calls:
  5885 ;;		Nothing
  5886 ;; This function is called by:
  5887 ;;		_on_off_tact
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           
  5892                           ;psect for function i1_set_mode
  5893  06D7                     i1_set_mode:	
  5894                           
  5895                           ;incstack = 0
  5896                           ; Regs used in i1_set_mode: [wreg]
  5897                           ;i1set_mode@mode_temp stored from wreg
  5898  06D7  00F1               	movwf	i1set_mode@mode_temp
  5899  06D8                     i1l1945:	
  5900                           
  5901                           ;Functions.c: 48: mode = mode_temp;
  5902  06D8  0871               	movf	i1set_mode@mode_temp,w
  5903  06D9  00F0               	movwf	??i1_set_mode
  5904  06DA  0870               	movf	??i1_set_mode,w
  5905  06DB  0140               	movlb	0	; select bank0
  5906  06DC  00C6               	movwf	_mode
  5907  06DD                     i1l267:	
  5908  06DD  0008               	return
  5909  06DE                     __end_ofi1_set_mode:	
  5910                           
  5911                           	psect	text38
  5912  063E                     __ptext38:	
  5913 ;; *************** function i1_power_down *****************
  5914 ;; Defined at:
  5915 ;;		line 208 in file "Functions.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;  ship_mode       1    wreg     unsigned char 
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;  ship_mode       1    4[COMMON] unsigned char 
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  1    wreg      void 
  5922 ;; Registers used:
  5923 ;;		wreg, status,2, status,0, pclath, cstack
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5929 ;;      Params:         0       0       0       0       0       0       0       0
  5930 ;;      Locals:         1       0       0       0       0       0       0       0
  5931 ;;      Temps:          1       0       0       0       0       0       0       0
  5932 ;;      Totals:         2       0       0       0       0       0       0       0
  5933 ;;Total ram usage:        2 bytes
  5934 ;; Hardware stack levels used:    1
  5935 ;; Hardware stack levels required when called:    3
  5936 ;; This function calls:
  5937 ;;		i1_BQ_Write
  5938 ;; This function is called by:
  5939 ;;		_on_off_tact
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           
  5944                           ;psect for function i1_power_down
  5945  063E                     i1_power_down:	
  5946                           
  5947                           ;incstack = 0
  5948                           ; Regs used in i1_power_down: [wreg+status,2+status,0+pclath+cstack]
  5949                           ;i1power_down@ship_mode stored from wreg
  5950  063E  00F4               	movwf	i1power_down@ship_mode
  5951  063F                     i1l1947:	
  5952                           
  5953                           ;Functions.c: 210: TRISCbits.TRISC5 = 1;
  5954  063F  0140               	movlb	0	; select bank0
  5955  0640  1694               	bsf	20,5	;volatile
  5956                           
  5957                           ;Functions.c: 213: PWM3EN = 0;
  5958  0641  0146               	movlb	6	; select bank6
  5959  0642  1396               	bcf	22,7	;volatile
  5960                           
  5961                           ;Functions.c: 214: PWM4EN = 0;
  5962  0643  139A               	bcf	26,7	;volatile
  5963                           
  5964                           ;Functions.c: 215: PWM5EN = 0;
  5965  0644  139E               	bcf	30,7	;volatile
  5966  0645                     i1l1949:	
  5967                           
  5968                           ;Functions.c: 217: if (ship_mode) {
  5969  0645  0874               	movf	i1power_down@ship_mode,w
  5970  0646  1903               	btfsc	3,2
  5971  0647  2E49               	goto	u115_21
  5972  0648  2E4A               	goto	u115_20
  5973  0649                     u115_21:	
  5974  0649  2E52               	goto	i1l314
  5975  064A                     u115_20:	
  5976  064A                     i1l1951:	
  5977                           
  5978                           ;Functions.c: 218: BQ_Write(0x09, 0b01100100);
  5979  064A  3064               	movlw	100
  5980  064B  00F3               	movwf	??i1_power_down
  5981  064C  0873               	movf	??i1_power_down,w
  5982  064D  00F1               	movwf	i1BQ_Write@data
  5983  064E  3009               	movlw	9
  5984  064F  3186  2654  3186   	fcall	i1_BQ_Write
  5985  0652                     i1l314:	
  5986  0652  0063               	sleep	;# 
  5987  0653                     i1l315:	
  5988  0653  0008               	return
  5989  0654                     __end_ofi1_power_down:	
  5990                           
  5991                           	psect	text39
  5992  067B                     __ptext39:	
  5993 ;; *************** function _power_up *****************
  5994 ;; Defined at:
  5995 ;;		line 189 in file "Functions.c"
  5996 ;; Parameters:    Size  Location     Type
  5997 ;;		None
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;		None
  6000 ;; Return value:  Size  Location     Type
  6001 ;;                  1    wreg      void 
  6002 ;; Registers used:
  6003 ;;		wreg, status,2, status,0, pclath, cstack
  6004 ;; Tracked objects:
  6005 ;;		On entry : 0/0
  6006 ;;		On exit  : 0/0
  6007 ;;		Unchanged: 0/0
  6008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6009 ;;      Params:         0       0       0       0       0       0       0       0
  6010 ;;      Locals:         0       0       0       0       0       0       0       0
  6011 ;;      Temps:          0       0       0       0       0       0       0       0
  6012 ;;      Totals:         0       0       0       0       0       0       0       0
  6013 ;;Total ram usage:        0 bytes
  6014 ;; Hardware stack levels used:    1
  6015 ;; Hardware stack levels required when called:    4
  6016 ;; This function calls:
  6017 ;;		i1_BQ_init
  6018 ;;		i1_PWM_init
  6019 ;;		i1_STUSB_9V_12V
  6020 ;; This function is called by:
  6021 ;;		_on_off_tact
  6022 ;; This function uses a non-reentrant model
  6023 ;;
  6024                           
  6025                           
  6026                           ;psect for function _power_up
  6027  067B                     _power_up:	
  6028  067B                     i1l1837:	
  6029                           ;incstack = 0
  6030                           ; Regs used in _power_up: [wreg+status,2+status,0+pclath+cstack]
  6031                           
  6032                           
  6033                           ;Functions.c: 192: BQ_init();
  6034  067B  3183  23C8  3186   	fcall	i1_BQ_init
  6035                           
  6036                           ;Functions.c: 195: STUSB_9V_12V();
  6037  067E  3185  2552  3186   	fcall	i1_STUSB_9V_12V
  6038  0681                     i1l1839:	
  6039                           
  6040                           ;Functions.c: 198: TRISCbits.TRISC5 = 0;
  6041  0681  0140               	movlb	0	; select bank0
  6042  0682  1294               	bcf	20,5	;volatile
  6043  0683                     i1l1841:	
  6044                           
  6045                           ;Functions.c: 199: RC5 = 1;
  6046  0683  168E               	bsf	14,5	;volatile
  6047                           
  6048                           ;Functions.c: 204: PWM_init();
  6049  0684  3184  2433  3186   	fcall	i1_PWM_init
  6050  0687                     i1l311:	
  6051  0687  0008               	return
  6052  0688                     __end_of_power_up:	
  6053                           
  6054                           	psect	text40
  6055  0552                     __ptext40:	
  6056 ;; *************** function i1_STUSB_9V_12V *****************
  6057 ;; Defined at:
  6058 ;;		line 41 in file "STUSB4500.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;		None
  6061 ;; Auto vars:     Size  Location     Type
  6062 ;;		None
  6063 ;; Return value:  Size  Location     Type
  6064 ;;                  1    wreg      void 
  6065 ;; Registers used:
  6066 ;;		wreg, status,2, status,0, pclath, cstack
  6067 ;; Tracked objects:
  6068 ;;		On entry : 0/0
  6069 ;;		On exit  : 0/0
  6070 ;;		Unchanged: 0/0
  6071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6072 ;;      Params:         0       0       0       0       0       0       0       0
  6073 ;;      Locals:         0       0       0       0       0       0       0       0
  6074 ;;      Temps:          3       0       0       0       0       0       0       0
  6075 ;;      Totals:         3       0       0       0       0       0       0       0
  6076 ;;Total ram usage:        3 bytes
  6077 ;; Hardware stack levels used:    1
  6078 ;; Hardware stack levels required when called:    3
  6079 ;; This function calls:
  6080 ;;		i1_STUSB_Write
  6081 ;; This function is called by:
  6082 ;;		_power_up
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           
  6087                           ;psect for function i1_STUSB_9V_12V
  6088  0552                     i1_STUSB_9V_12V:	
  6089  0552                     i1l1803:	
  6090                           ;incstack = 0
  6091                           ; Regs used in i1_STUSB_9V_12V: [wreg+status,2+status,0+pclath+cstack]
  6092                           
  6093                           
  6094                           ;STUSB4500.c: 60: STUSB_Write(0x89, 0b00101100, 0b11010001, 0b00000010, 0x00);
  6095  0552  302C               	movlw	44
  6096  0553  00F6               	movwf	??i1_STUSB_9V_12V
  6097  0554  0876               	movf	??i1_STUSB_9V_12V,w
  6098  0555  00F1               	movwf	i1STUSB_Write@data_1
  6099  0556  30D1               	movlw	209
  6100  0557  00F7               	movwf	??i1_STUSB_9V_12V+1
  6101  0558  0877               	movf	??i1_STUSB_9V_12V+1,w
  6102  0559  00F2               	movwf	i1STUSB_Write@data_2
  6103  055A  3002               	movlw	2
  6104  055B  00F8               	movwf	??i1_STUSB_9V_12V+2
  6105  055C  0878               	movf	??i1_STUSB_9V_12V+2,w
  6106  055D  00F3               	movwf	i1STUSB_Write@data_3
  6107  055E  01F4               	clrf	i1STUSB_Write@data_4
  6108  055F  3089               	movlw	137
  6109  0560  3185  25B6  3185   	fcall	i1_STUSB_Write
  6110                           
  6111                           ;STUSB4500.c: 63: STUSB_Write(0x8D, 0b11001000, 0b11000000, 0b00000011, 0x00);
  6112  0563  30C8               	movlw	200
  6113  0564  00F6               	movwf	??i1_STUSB_9V_12V
  6114  0565  0876               	movf	??i1_STUSB_9V_12V,w
  6115  0566  00F1               	movwf	i1STUSB_Write@data_1
  6116  0567  30C0               	movlw	192
  6117  0568  00F7               	movwf	??i1_STUSB_9V_12V+1
  6118  0569  0877               	movf	??i1_STUSB_9V_12V+1,w
  6119  056A  00F2               	movwf	i1STUSB_Write@data_2
  6120  056B  3003               	movlw	3
  6121  056C  00F8               	movwf	??i1_STUSB_9V_12V+2
  6122  056D  0878               	movf	??i1_STUSB_9V_12V+2,w
  6123  056E  00F3               	movwf	i1STUSB_Write@data_3
  6124  056F  01F4               	clrf	i1STUSB_Write@data_4
  6125  0570  308D               	movlw	141
  6126  0571  3185  25B6  3185   	fcall	i1_STUSB_Write
  6127  0574                     i1l411:	
  6128  0574  0008               	return
  6129  0575                     __end_ofi1_STUSB_9V_12V:	
  6130                           
  6131                           	psect	text41
  6132  05B6                     __ptext41:	
  6133 ;; *************** function i1_STUSB_Write *****************
  6134 ;; Defined at:
  6135 ;;		line 12 in file "STUSB4500.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;  reg             1    wreg     unsigned char 
  6138 ;;  data_1          1    1[COMMON] unsigned char 
  6139 ;;  data_2          1    2[COMMON] unsigned char 
  6140 ;;  data_3          1    3[COMMON] unsigned char 
  6141 ;;  data_4          1    4[COMMON] unsigned char 
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;  reg             1    5[COMMON] unsigned char 
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  1    wreg      void 
  6146 ;; Registers used:
  6147 ;;		wreg, status,2, status,0, pclath, cstack
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6153 ;;      Params:         4       0       0       0       0       0       0       0
  6154 ;;      Locals:         1       0       0       0       0       0       0       0
  6155 ;;      Temps:          0       0       0       0       0       0       0       0
  6156 ;;      Totals:         5       0       0       0       0       0       0       0
  6157 ;;Total ram usage:        5 bytes
  6158 ;; Hardware stack levels used:    1
  6159 ;; Hardware stack levels required when called:    2
  6160 ;; This function calls:
  6161 ;;		i1_I2C_Master_Start
  6162 ;;		i1_I2C_Master_Stop
  6163 ;;		i1_I2C_Master_Write
  6164 ;; This function is called by:
  6165 ;;		i1_STUSB_9V_12V
  6166 ;; This function uses a non-reentrant model
  6167 ;;
  6168                           
  6169                           
  6170                           ;psect for function i1_STUSB_Write
  6171  05B6                     i1_STUSB_Write:	
  6172                           
  6173                           ;incstack = 0
  6174                           ; Regs used in i1_STUSB_Write: [wreg+status,2+status,0+pclath+cstack]
  6175                           ;i1STUSB_Write@reg stored from wreg
  6176  05B6  00F5               	movwf	i1STUSB_Write@reg
  6177  05B7                     i1l1733:	
  6178                           
  6179                           ;STUSB4500.c: 14: I2C_Master_Start();
  6180  05B7  3186  26F7  3185   	fcall	i1_I2C_Master_Start
  6181                           
  6182                           ;STUSB4500.c: 15: I2C_Master_Write(0b0101000 << 1);
  6183  05BA  3050               	movlw	80
  6184  05BB  3186  26BA  3185   	fcall	i1_I2C_Master_Write
  6185                           
  6186                           ;STUSB4500.c: 16: I2C_Master_Write(reg);
  6187  05BE  0875               	movf	i1STUSB_Write@reg,w
  6188  05BF  3186  26BA  3185   	fcall	i1_I2C_Master_Write
  6189                           
  6190                           ;STUSB4500.c: 17: I2C_Master_Write(data_1);
  6191  05C2  0871               	movf	i1STUSB_Write@data_1,w
  6192  05C3  3186  26BA  3185   	fcall	i1_I2C_Master_Write
  6193                           
  6194                           ;STUSB4500.c: 18: I2C_Master_Write(data_2);
  6195  05C6  0872               	movf	i1STUSB_Write@data_2,w
  6196  05C7  3186  26BA  3185   	fcall	i1_I2C_Master_Write
  6197                           
  6198                           ;STUSB4500.c: 19: I2C_Master_Write(data_3);
  6199  05CA  0873               	movf	i1STUSB_Write@data_3,w
  6200  05CB  3186  26BA  3185   	fcall	i1_I2C_Master_Write
  6201                           
  6202                           ;STUSB4500.c: 20: I2C_Master_Write(data_4);
  6203  05CE  0874               	movf	i1STUSB_Write@data_4,w
  6204  05CF  3186  26BA  3185   	fcall	i1_I2C_Master_Write
  6205                           
  6206                           ;STUSB4500.c: 21: I2C_Master_Stop();
  6207  05D2  3186  26F1  3185   	fcall	i1_I2C_Master_Stop
  6208  05D5                     i1l405:	
  6209  05D5  0008               	return
  6210  05D6                     __end_ofi1_STUSB_Write:	
  6211                           
  6212                           	psect	text42
  6213  0433                     __ptext42:	
  6214 ;; *************** function i1_PWM_init *****************
  6215 ;; Defined at:
  6216 ;;		line 71 in file "Functions.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;		None
  6219 ;; Auto vars:     Size  Location     Type
  6220 ;;		None
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  1    wreg      void 
  6223 ;; Registers used:
  6224 ;;		wreg, status,2, status,0, pclath, cstack
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6230 ;;      Params:         0       0       0       0       0       0       0       0
  6231 ;;      Locals:         0       0       0       0       0       0       0       0
  6232 ;;      Temps:          0       0       0       0       0       0       0       0
  6233 ;;      Totals:         0       0       0       0       0       0       0       0
  6234 ;;Total ram usage:        0 bytes
  6235 ;; Hardware stack levels used:    1
  6236 ;; Hardware stack levels required when called:    1
  6237 ;; This function calls:
  6238 ;;		i1_PPS_lock
  6239 ;;		i1_PPS_unlock
  6240 ;; This function is called by:
  6241 ;;		_power_up
  6242 ;; This function uses a non-reentrant model
  6243 ;;
  6244                           
  6245                           
  6246                           ;psect for function i1_PWM_init
  6247  0433                     i1_PWM_init:	
  6248  0433                     i1l1759:	
  6249                           ;incstack = 0
  6250                           ; Regs used in i1_PWM_init: [wreg+status,2+status,0+pclath+cstack]
  6251                           
  6252                           
  6253                           ;Functions.c: 73: PPS_unlock();
  6254  0433  3186  26DE  3184   	fcall	i1_PPS_unlock
  6255  0436                     i1l1761:	
  6256                           
  6257                           ;Functions.c: 74: RC2PPS = 0x0B;
  6258  0436  300B               	movlw	11
  6259  0437  017E               	movlb	62	; select bank62
  6260  0438  00A2               	movwf	34	;volatile
  6261  0439                     i1l1763:	
  6262                           
  6263                           ;Functions.c: 75: RC3PPS = 0x0C;
  6264  0439  300C               	movlw	12
  6265  043A  00A3               	movwf	35	;volatile
  6266  043B                     i1l1765:	
  6267                           
  6268                           ;Functions.c: 76: RC4PPS = 0x0D;
  6269  043B  300D               	movlw	13
  6270  043C  00A4               	movwf	36	;volatile
  6271  043D                     i1l1767:	
  6272                           
  6273                           ;Functions.c: 77: PPS_lock();
  6274  043D  3186  26B2  3184   	fcall	i1_PPS_lock
  6275  0440                     i1l1769:	
  6276                           
  6277                           ;Functions.c: 79: PWM3CON = 0;
  6278  0440  0146               	movlb	6	; select bank6
  6279  0441  0196               	clrf	22	;volatile
  6280  0442                     i1l1771:	
  6281                           
  6282                           ;Functions.c: 80: PR2 = 255;
  6283  0442  30FF               	movlw	255
  6284  0443  0145               	movlb	5	; select bank5
  6285  0444  008D               	movwf	13	;volatile
  6286                           
  6287                           ;Functions.c: 81: PWM3DCH = 0;
  6288  0445  0146               	movlb	6	; select bank6
  6289  0446  0195               	clrf	21	;volatile
  6290  0447                     i1l1773:	
  6291                           
  6292                           ;Functions.c: 82: PWM3DCL = 0b00111111;
  6293  0447  303F               	movlw	63
  6294  0448  0094               	movwf	20	;volatile
  6295  0449                     i1l1775:	
  6296                           
  6297                           ;Functions.c: 83: PWM3CON = 0b10000000;
  6298  0449  3080               	movlw	128
  6299  044A  0096               	movwf	22	;volatile
  6300  044B                     i1l1777:	
  6301                           
  6302                           ;Functions.c: 84: TRISCbits.TRISC2 = 0;
  6303  044B  0140               	movlb	0	; select bank0
  6304  044C  1114               	bcf	20,2	;volatile
  6305  044D                     i1l1779:	
  6306                           
  6307                           ;Functions.c: 85: PWM3CON = 0b11100000;
  6308  044D  30E0               	movlw	224
  6309  044E  0146               	movlb	6	; select bank6
  6310  044F  0096               	movwf	22	;volatile
  6311  0450                     i1l1781:	
  6312                           
  6313                           ;Functions.c: 87: PWM4CON = 0;
  6314  0450  019A               	clrf	26	;volatile
  6315  0451                     i1l1783:	
  6316                           
  6317                           ;Functions.c: 88: PWM4DCH = 0;
  6318  0451  0199               	clrf	25	;volatile
  6319  0452                     i1l1785:	
  6320                           
  6321                           ;Functions.c: 89: PWM4DCL = 0b00111111;
  6322  0452  303F               	movlw	63
  6323  0453  0098               	movwf	24	;volatile
  6324  0454                     i1l1787:	
  6325                           
  6326                           ;Functions.c: 90: PWM4CON = 0b10000000;
  6327  0454  3080               	movlw	128
  6328  0455  009A               	movwf	26	;volatile
  6329  0456                     i1l1789:	
  6330                           
  6331                           ;Functions.c: 91: TRISCbits.TRISC3 = 0;
  6332  0456  0140               	movlb	0	; select bank0
  6333  0457  1194               	bcf	20,3	;volatile
  6334  0458                     i1l1791:	
  6335                           
  6336                           ;Functions.c: 92: PWM4CON = 0b11100000;
  6337  0458  30E0               	movlw	224
  6338  0459  0146               	movlb	6	; select bank6
  6339  045A  009A               	movwf	26	;volatile
  6340                           
  6341                           ;Functions.c: 94: PWM5CON = 0;
  6342  045B  019E               	clrf	30	;volatile
  6343                           
  6344                           ;Functions.c: 95: PWM5DCH = 0;
  6345  045C  019D               	clrf	29	;volatile
  6346  045D                     i1l1793:	
  6347                           
  6348                           ;Functions.c: 96: PWM5DCL = 0b00111111;
  6349  045D  303F               	movlw	63
  6350  045E  009C               	movwf	28	;volatile
  6351  045F                     i1l1795:	
  6352                           
  6353                           ;Functions.c: 97: PWM5CON = 0b10000000;
  6354  045F  3080               	movlw	128
  6355  0460  009E               	movwf	30	;volatile
  6356  0461                     i1l1797:	
  6357                           
  6358                           ;Functions.c: 98: TRISCbits.TRISC4 = 0;
  6359  0461  0140               	movlb	0	; select bank0
  6360  0462  1214               	bcf	20,4	;volatile
  6361  0463                     i1l1799:	
  6362                           
  6363                           ;Functions.c: 99: PWM5CON = 0b11100000;
  6364  0463  30E0               	movlw	224
  6365  0464  0146               	movlb	6	; select bank6
  6366  0465  009E               	movwf	30	;volatile
  6367  0466                     i1l282:	
  6368  0466  0008               	return
  6369  0467                     __end_ofi1_PWM_init:	
  6370                           
  6371                           	psect	text43
  6372  06DE                     __ptext43:	
  6373 ;; *************** function i1_PPS_unlock *****************
  6374 ;; Defined at:
  6375 ;;		line 59 in file "Functions.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;		None
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;		None
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  1    wreg      void 
  6382 ;; Registers used:
  6383 ;;		wreg, status,2
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6389 ;;      Params:         0       0       0       0       0       0       0       0
  6390 ;;      Locals:         0       0       0       0       0       0       0       0
  6391 ;;      Temps:          0       0       0       0       0       0       0       0
  6392 ;;      Totals:         0       0       0       0       0       0       0       0
  6393 ;;Total ram usage:        0 bytes
  6394 ;; Hardware stack levels used:    1
  6395 ;; This function calls:
  6396 ;;		Nothing
  6397 ;; This function is called by:
  6398 ;;		i1_PWM_init
  6399 ;; This function uses a non-reentrant model
  6400 ;;
  6401                           
  6402                           
  6403                           ;psect for function i1_PPS_unlock
  6404  06DE                     i1_PPS_unlock:	
  6405  06DE                     i1l1725:	
  6406                           ;incstack = 0
  6407                           ; Regs used in i1_PPS_unlock: [wreg+status,2]
  6408                           
  6409                           
  6410                           ;Functions.c: 60: PPSLOCK = 0x55;
  6411  06DE  3055               	movlw	85
  6412  06DF  017D               	movlb	61	; select bank61
  6413  06E0  008F               	movwf	15	;volsfr
  6414                           
  6415                           ;Functions.c: 61: PPSLOCK = 0xAA;
  6416  06E1  30AA               	movlw	170
  6417  06E2  008F               	movwf	15	;volsfr
  6418  06E3                     i1l1727:	
  6419                           
  6420                           ;Functions.c: 62: PPSLOCK = 0;
  6421  06E3  018F               	clrf	15	;volsfr
  6422  06E4                     i1l276:	
  6423  06E4  0008               	return
  6424  06E5                     __end_ofi1_PPS_unlock:	
  6425                           
  6426                           	psect	text44
  6427  06B2                     __ptext44:	
  6428 ;; *************** function i1_PPS_lock *****************
  6429 ;; Defined at:
  6430 ;;		line 65 in file "Functions.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;		None
  6433 ;; Auto vars:     Size  Location     Type
  6434 ;;		None
  6435 ;; Return value:  Size  Location     Type
  6436 ;;                  1    wreg      void 
  6437 ;; Registers used:
  6438 ;;		wreg
  6439 ;; Tracked objects:
  6440 ;;		On entry : 0/0
  6441 ;;		On exit  : 0/0
  6442 ;;		Unchanged: 0/0
  6443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6444 ;;      Params:         0       0       0       0       0       0       0       0
  6445 ;;      Locals:         0       0       0       0       0       0       0       0
  6446 ;;      Temps:          0       0       0       0       0       0       0       0
  6447 ;;      Totals:         0       0       0       0       0       0       0       0
  6448 ;;Total ram usage:        0 bytes
  6449 ;; Hardware stack levels used:    1
  6450 ;; This function calls:
  6451 ;;		Nothing
  6452 ;; This function is called by:
  6453 ;;		i1_PWM_init
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457                           
  6458                           ;psect for function i1_PPS_lock
  6459  06B2                     i1_PPS_lock:	
  6460  06B2                     i1l1729:	
  6461                           ;incstack = 0
  6462                           ; Regs used in i1_PPS_lock: [wreg]
  6463                           
  6464                           
  6465                           ;Functions.c: 66: PPSLOCK = 0x55;
  6466  06B2  3055               	movlw	85
  6467  06B3  017D               	movlb	61	; select bank61
  6468  06B4  008F               	movwf	15	;volsfr
  6469                           
  6470                           ;Functions.c: 67: PPSLOCK = 0xAA;
  6471  06B5  30AA               	movlw	170
  6472  06B6  008F               	movwf	15	;volsfr
  6473                           
  6474                           ;Functions.c: 68: PPSLOCK = 1;
  6475  06B7  3001               	movlw	1
  6476  06B8  008F               	movwf	15	;volsfr
  6477  06B9                     i1l279:	
  6478  06B9  0008               	return
  6479  06BA                     __end_ofi1_PPS_lock:	
  6480                           
  6481                           	psect	text45
  6482  03C8                     __ptext45:	
  6483 ;; *************** function i1_BQ_init *****************
  6484 ;; Defined at:
  6485 ;;		line 102 in file "Functions.c"
  6486 ;; Parameters:    Size  Location     Type
  6487 ;;		None
  6488 ;; Auto vars:     Size  Location     Type
  6489 ;;		None
  6490 ;; Return value:  Size  Location     Type
  6491 ;;                  1    wreg      void 
  6492 ;; Registers used:
  6493 ;;		wreg, status,2, status,0, pclath, cstack
  6494 ;; Tracked objects:
  6495 ;;		On entry : 0/0
  6496 ;;		On exit  : 0/0
  6497 ;;		Unchanged: 0/0
  6498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6499 ;;      Params:         0       0       0       0       0       0       0       0
  6500 ;;      Locals:         0       0       0       0       0       0       0       0
  6501 ;;      Temps:          1       0       0       0       0       0       0       0
  6502 ;;      Totals:         1       0       0       0       0       0       0       0
  6503 ;;Total ram usage:        1 bytes
  6504 ;; Hardware stack levels used:    1
  6505 ;; Hardware stack levels required when called:    3
  6506 ;; This function calls:
  6507 ;;		i1_BQ_Write
  6508 ;; This function is called by:
  6509 ;;		_power_up
  6510 ;; This function uses a non-reentrant model
  6511 ;;
  6512                           
  6513                           
  6514                           ;psect for function i1_BQ_init
  6515  03C8                     i1_BQ_init:	
  6516  03C8                     i1l1801:	
  6517                           ;incstack = 0
  6518                           ; Regs used in i1_BQ_init: [wreg+status,2+status,0+pclath+cstack]
  6519                           
  6520                           
  6521                           ;Functions.c: 104: BQ_Write(0x00, 0b01111010);
  6522  03C8  307A               	movlw	122
  6523  03C9  00F3               	movwf	??i1_BQ_init
  6524  03CA  0873               	movf	??i1_BQ_init,w
  6525  03CB  00F1               	movwf	i1BQ_Write@data
  6526  03CC  3000               	movlw	0
  6527  03CD  3186  2654  3183   	fcall	i1_BQ_Write
  6528                           
  6529                           ;Functions.c: 105: BQ_Write(0x03, 0b00011010);
  6530  03D0  301A               	movlw	26
  6531  03D1  00F3               	movwf	??i1_BQ_init
  6532  03D2  0873               	movf	??i1_BQ_init,w
  6533  03D3  00F1               	movwf	i1BQ_Write@data
  6534  03D4  3003               	movlw	3
  6535  03D5  3186  2654  3183   	fcall	i1_BQ_Write
  6536                           
  6537                           ;Functions.c: 106: BQ_Write(0x04, 0b01100000);
  6538  03D8  3060               	movlw	96
  6539  03D9  00F3               	movwf	??i1_BQ_init
  6540  03DA  0873               	movf	??i1_BQ_init,w
  6541  03DB  00F1               	movwf	i1BQ_Write@data
  6542  03DC  3004               	movlw	4
  6543  03DD  3186  2654  3183   	fcall	i1_BQ_Write
  6544                           
  6545                           ;Functions.c: 107: BQ_Write(0x07, 0b11001101);
  6546  03E0  30CD               	movlw	205
  6547  03E1  00F3               	movwf	??i1_BQ_init
  6548  03E2  0873               	movf	??i1_BQ_init,w
  6549  03E3  00F1               	movwf	i1BQ_Write@data
  6550  03E4  3007               	movlw	7
  6551  03E5  3186  2654  3183   	fcall	i1_BQ_Write
  6552                           
  6553                           ;Functions.c: 108: BQ_Write(0x02, 0b00110101);
  6554  03E8  3035               	movlw	53
  6555  03E9  00F3               	movwf	??i1_BQ_init
  6556  03EA  0873               	movf	??i1_BQ_init,w
  6557  03EB  00F1               	movwf	i1BQ_Write@data
  6558  03EC  3002               	movlw	2
  6559  03ED  3186  2654  3183   	fcall	i1_BQ_Write
  6560                           
  6561                           ;Functions.c: 109: BQ_Write(0x0D, 0xFF);
  6562  03F0  30FF               	movlw	255
  6563  03F1  00F3               	movwf	??i1_BQ_init
  6564  03F2  0873               	movf	??i1_BQ_init,w
  6565  03F3  00F1               	movwf	i1BQ_Write@data
  6566  03F4  300D               	movlw	13
  6567  03F5  3186  2654  3183   	fcall	i1_BQ_Write
  6568                           
  6569                           ;Functions.c: 110: BQ_Write(0x08, 0b00000001);
  6570  03F8  01F1               	clrf	i1BQ_Write@data
  6571  03F9  0AF1               	incf	i1BQ_Write@data,f
  6572  03FA  3008               	movlw	8
  6573  03FB  3186  2654  3183   	fcall	i1_BQ_Write
  6574  03FE                     i1l285:	
  6575  03FE  0008               	return
  6576  03FF                     __end_ofi1_BQ_init:	
  6577                           
  6578                           	psect	text46
  6579  0654                     __ptext46:	
  6580 ;; *************** function i1_BQ_Write *****************
  6581 ;; Defined at:
  6582 ;;		line 77 in file "I2C.c"
  6583 ;; Parameters:    Size  Location     Type
  6584 ;;  reg             1    wreg     unsigned char 
  6585 ;;  data            1    1[COMMON] unsigned char 
  6586 ;; Auto vars:     Size  Location     Type
  6587 ;;  reg             1    2[COMMON] unsigned char 
  6588 ;; Return value:  Size  Location     Type
  6589 ;;                  1    wreg      void 
  6590 ;; Registers used:
  6591 ;;		wreg, status,2, status,0, pclath, cstack
  6592 ;; Tracked objects:
  6593 ;;		On entry : 0/0
  6594 ;;		On exit  : 0/0
  6595 ;;		Unchanged: 0/0
  6596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6597 ;;      Params:         1       0       0       0       0       0       0       0
  6598 ;;      Locals:         1       0       0       0       0       0       0       0
  6599 ;;      Temps:          0       0       0       0       0       0       0       0
  6600 ;;      Totals:         2       0       0       0       0       0       0       0
  6601 ;;Total ram usage:        2 bytes
  6602 ;; Hardware stack levels used:    1
  6603 ;; Hardware stack levels required when called:    2
  6604 ;; This function calls:
  6605 ;;		i1_I2C_Master_Start
  6606 ;;		i1_I2C_Master_Stop
  6607 ;;		i1_I2C_Master_Write
  6608 ;; This function is called by:
  6609 ;;		i1_BQ_init
  6610 ;;		i1_power_down
  6611 ;; This function uses a non-reentrant model
  6612 ;;
  6613                           
  6614                           
  6615                           ;psect for function i1_BQ_Write
  6616  0654                     i1_BQ_Write:	
  6617                           
  6618                           ;incstack = 0
  6619                           ; Regs used in i1_BQ_Write: [wreg+status,2+status,0+pclath+cstack]
  6620                           ;i1BQ_Write@reg stored from wreg
  6621  0654  00F2               	movwf	i1BQ_Write@reg
  6622  0655                     i1l1731:	
  6623                           
  6624                           ;I2C.c: 79: I2C_Master_Start();
  6625  0655  3186  26F7  3186   	fcall	i1_I2C_Master_Start
  6626                           
  6627                           ;I2C.c: 80: I2C_Master_Write(0x6A << 1);
  6628  0658  30D4               	movlw	212
  6629  0659  3186  26BA  3186   	fcall	i1_I2C_Master_Write
  6630                           
  6631                           ;I2C.c: 81: I2C_Master_Write(reg);
  6632  065C  0872               	movf	i1BQ_Write@reg,w
  6633  065D  3186  26BA  3186   	fcall	i1_I2C_Master_Write
  6634                           
  6635                           ;I2C.c: 82: I2C_Master_Write(data);
  6636  0660  0871               	movf	i1BQ_Write@data,w
  6637  0661  3186  26BA  3186   	fcall	i1_I2C_Master_Write
  6638                           
  6639                           ;I2C.c: 83: I2C_Master_Stop();
  6640  0664  3186  26F1  3186   	fcall	i1_I2C_Master_Stop
  6641  0667                     i1l388:	
  6642  0667  0008               	return
  6643  0668                     __end_ofi1_BQ_Write:	
  6644                           
  6645                           	psect	text47
  6646  06BA                     __ptext47:	
  6647 ;; *************** function i1_I2C_Master_Write *****************
  6648 ;; Defined at:
  6649 ;;		line 42 in file "I2C.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;  data            1    wreg     unsigned char 
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;  data            1    0[COMMON] unsigned char 
  6654 ;; Return value:  Size  Location     Type
  6655 ;;                  1    wreg      void 
  6656 ;; Registers used:
  6657 ;;		wreg, status,2, status,0, pclath, cstack
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6663 ;;      Params:         0       0       0       0       0       0       0       0
  6664 ;;      Locals:         1       0       0       0       0       0       0       0
  6665 ;;      Temps:          0       0       0       0       0       0       0       0
  6666 ;;      Totals:         1       0       0       0       0       0       0       0
  6667 ;;Total ram usage:        1 bytes
  6668 ;; Hardware stack levels used:    1
  6669 ;; Hardware stack levels required when called:    1
  6670 ;; This function calls:
  6671 ;;		i1_I2C_Master_Wait
  6672 ;; This function is called by:
  6673 ;;		i1_BQ_Write
  6674 ;;		i1_STUSB_Write
  6675 ;; This function uses a non-reentrant model
  6676 ;;
  6677                           
  6678                           
  6679                           ;psect for function i1_I2C_Master_Write
  6680  06BA                     i1_I2C_Master_Write:	
  6681                           
  6682                           ;incstack = 0
  6683                           ; Regs used in i1_I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  6684                           ;i1I2C_Master_Write@data stored from wreg
  6685  06BA  00F0               	movwf	i1I2C_Master_Write@data
  6686  06BB                     i1l1643:	
  6687                           
  6688                           ;I2C.c: 44: I2C_Master_Wait();
  6689  06BB  3186  2694  3186   	fcall	i1_I2C_Master_Wait
  6690  06BE                     i1l1645:	
  6691                           
  6692                           ;I2C.c: 45: SSP1BUF = data;
  6693  06BE  0870               	movf	i1I2C_Master_Write@data,w
  6694  06BF  0143               	movlb	3	; select bank3
  6695  06C0  008C               	movwf	12	;volatile
  6696  06C1                     i1l374:	
  6697  06C1  0008               	return
  6698  06C2                     __end_ofi1_I2C_Master_Write:	
  6699                           
  6700                           	psect	text48
  6701  06F1                     __ptext48:	
  6702 ;; *************** function i1_I2C_Master_Stop *****************
  6703 ;; Defined at:
  6704 ;;		line 36 in file "I2C.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;		None
  6707 ;; Auto vars:     Size  Location     Type
  6708 ;;		None
  6709 ;; Return value:  Size  Location     Type
  6710 ;;                  1    wreg      void 
  6711 ;; Registers used:
  6712 ;;		wreg, status,2, status,0, pclath, cstack
  6713 ;; Tracked objects:
  6714 ;;		On entry : 0/0
  6715 ;;		On exit  : 0/0
  6716 ;;		Unchanged: 0/0
  6717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6718 ;;      Params:         0       0       0       0       0       0       0       0
  6719 ;;      Locals:         0       0       0       0       0       0       0       0
  6720 ;;      Temps:          0       0       0       0       0       0       0       0
  6721 ;;      Totals:         0       0       0       0       0       0       0       0
  6722 ;;Total ram usage:        0 bytes
  6723 ;; Hardware stack levels used:    1
  6724 ;; Hardware stack levels required when called:    1
  6725 ;; This function calls:
  6726 ;;		i1_I2C_Master_Wait
  6727 ;; This function is called by:
  6728 ;;		i1_BQ_Write
  6729 ;;		i1_STUSB_Write
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           
  6733                           
  6734                           ;psect for function i1_I2C_Master_Stop
  6735  06F1                     i1_I2C_Master_Stop:	
  6736  06F1                     i1l1639:	
  6737                           ;incstack = 0
  6738                           ; Regs used in i1_I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  6739                           
  6740                           
  6741                           ;I2C.c: 38: I2C_Master_Wait();
  6742  06F1  3186  2694  3186   	fcall	i1_I2C_Master_Wait
  6743  06F4                     i1l1641:	
  6744                           
  6745                           ;I2C.c: 39: SSP1CON2bits.PEN = 1;
  6746  06F4  0143               	movlb	3	; select bank3
  6747  06F5  1511               	bsf	17,2	;volatile
  6748  06F6                     i1l371:	
  6749  06F6  0008               	return
  6750  06F7                     __end_ofi1_I2C_Master_Stop:	
  6751                           
  6752                           	psect	text49
  6753  06F7                     __ptext49:	
  6754 ;; *************** function i1_I2C_Master_Start *****************
  6755 ;; Defined at:
  6756 ;;		line 24 in file "I2C.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;		None
  6759 ;; Auto vars:     Size  Location     Type
  6760 ;;		None
  6761 ;; Return value:  Size  Location     Type
  6762 ;;                  1    wreg      void 
  6763 ;; Registers used:
  6764 ;;		wreg, status,2, status,0, pclath, cstack
  6765 ;; Tracked objects:
  6766 ;;		On entry : 0/0
  6767 ;;		On exit  : 0/0
  6768 ;;		Unchanged: 0/0
  6769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6770 ;;      Params:         0       0       0       0       0       0       0       0
  6771 ;;      Locals:         0       0       0       0       0       0       0       0
  6772 ;;      Temps:          0       0       0       0       0       0       0       0
  6773 ;;      Totals:         0       0       0       0       0       0       0       0
  6774 ;;Total ram usage:        0 bytes
  6775 ;; Hardware stack levels used:    1
  6776 ;; Hardware stack levels required when called:    1
  6777 ;; This function calls:
  6778 ;;		i1_I2C_Master_Wait
  6779 ;; This function is called by:
  6780 ;;		i1_BQ_Write
  6781 ;;		i1_STUSB_Write
  6782 ;; This function uses a non-reentrant model
  6783 ;;
  6784                           
  6785                           
  6786                           ;psect for function i1_I2C_Master_Start
  6787  06F7                     i1_I2C_Master_Start:	
  6788  06F7                     i1l1635:	
  6789                           ;incstack = 0
  6790                           ; Regs used in i1_I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  6791                           
  6792                           
  6793                           ;I2C.c: 26: I2C_Master_Wait();
  6794  06F7  3186  2694  3186   	fcall	i1_I2C_Master_Wait
  6795  06FA                     i1l1637:	
  6796                           
  6797                           ;I2C.c: 27: SSP1CON2bits.SEN = 1;
  6798  06FA  0143               	movlb	3	; select bank3
  6799  06FB  1411               	bsf	17,0	;volatile
  6800  06FC                     i1l365:	
  6801  06FC  0008               	return
  6802  06FD                     __end_ofi1_I2C_Master_Start:	
  6803                           
  6804                           	psect	text50
  6805  0694                     __ptext50:	
  6806 ;; *************** function i1_I2C_Master_Wait *****************
  6807 ;; Defined at:
  6808 ;;		line 19 in file "I2C.c"
  6809 ;; Parameters:    Size  Location     Type
  6810 ;;		None
  6811 ;; Auto vars:     Size  Location     Type
  6812 ;;		None
  6813 ;; Return value:  Size  Location     Type
  6814 ;;                  1    wreg      void 
  6815 ;; Registers used:
  6816 ;;		wreg, status,2
  6817 ;; Tracked objects:
  6818 ;;		On entry : 0/0
  6819 ;;		On exit  : 0/0
  6820 ;;		Unchanged: 0/0
  6821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6822 ;;      Params:         0       0       0       0       0       0       0       0
  6823 ;;      Locals:         0       0       0       0       0       0       0       0
  6824 ;;      Temps:          0       0       0       0       0       0       0       0
  6825 ;;      Totals:         0       0       0       0       0       0       0       0
  6826 ;;Total ram usage:        0 bytes
  6827 ;; Hardware stack levels used:    1
  6828 ;; This function calls:
  6829 ;;		Nothing
  6830 ;; This function is called by:
  6831 ;;		i1_I2C_Master_Start
  6832 ;;		i1_I2C_Master_Stop
  6833 ;;		i1_I2C_Master_Write
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           
  6838                           ;psect for function i1_I2C_Master_Wait
  6839  0694                     i1_I2C_Master_Wait:	
  6840  0694                     i1l1615:	
  6841                           ;incstack = 0
  6842                           ; Regs used in i1_I2C_Master_Wait: [wreg+status,2]
  6843                           
  6844  0694                     i1l359:	
  6845                           ;I2C.c: 21: while ((SSP1STAT & 0x04) || (SSP1CON2 & 0x1F));
  6846                           
  6847  0694  0143               	movlb	3	; select bank3
  6848  0695  190F               	btfsc	15,2	;volatile
  6849  0696  2E98               	goto	u78_21
  6850  0697  2E99               	goto	u78_20
  6851  0698                     u78_21:	
  6852  0698  2E94               	goto	i1l359
  6853  0699                     u78_20:	
  6854  0699                     i1l1617:	
  6855  0699  0811               	movf	17,w	;volatile
  6856  069A  391F               	andlw	31
  6857  069B  1D03               	btfss	3,2
  6858  069C  2E9E               	goto	u79_21
  6859  069D  2E9F               	goto	u79_20
  6860  069E                     u79_21:	
  6861  069E  2E94               	goto	i1l359
  6862  069F                     u79_20:	
  6863  069F                     i1l362:	
  6864  069F  0008               	return
  6865  06A0                     __end_ofi1_I2C_Master_Wait:	
  6866                           
  6867                           	psect	text51
  6868  0708                     __ptext51:	
  6869 ;; *************** function _get_mode *****************
  6870 ;; Defined at:
  6871 ;;		line 43 in file "Functions.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;		None
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;		None
  6876 ;; Return value:  Size  Location     Type
  6877 ;;                  1    wreg      unsigned char 
  6878 ;; Registers used:
  6879 ;;		wreg
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6885 ;;      Params:         0       0       0       0       0       0       0       0
  6886 ;;      Locals:         0       0       0       0       0       0       0       0
  6887 ;;      Temps:          0       0       0       0       0       0       0       0
  6888 ;;      Totals:         0       0       0       0       0       0       0       0
  6889 ;;Total ram usage:        0 bytes
  6890 ;; Hardware stack levels used:    1
  6891 ;; This function calls:
  6892 ;;		Nothing
  6893 ;; This function is called by:
  6894 ;;		_on_off_tact
  6895 ;; This function uses a non-reentrant model
  6896 ;;
  6897                           
  6898                           
  6899                           ;psect for function _get_mode
  6900  0708                     _get_mode:	
  6901  0708                     i1l1843:	
  6902                           ;incstack = 0
  6903                           ; Regs used in _get_mode: [wreg]
  6904                           
  6905                           
  6906                           ;Functions.c: 44: return mode;
  6907  0708  0140               	movlb	0	; select bank0
  6908  0709  0846               	movf	_mode,w
  6909  070A                     i1l264:	
  6910  070A  0008               	return
  6911  070B                     __end_of_get_mode:	
  6912  007E                     btemp	set	126	;btemp
  6913  007E                     int$flags	set	126
  6914  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         13
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     34      46
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_on_off_tact
    i1_power_down->i1_BQ_Write
    _power_up->i1_STUSB_9V_12V
    i1_STUSB_9V_12V->i1_STUSB_Write
    i1_STUSB_Write->i1_I2C_Master_Write
    i1_BQ_init->i1_BQ_Write
    i1_BQ_Write->i1_I2C_Master_Write

Critical Paths under _main in BANK0

    _main->_led_modes
    _read_bq_status->_charge_state
    _thermal_protection->_power_down
    _power_down->_BQ_Write
    _charge_state->_BQ_Read
    _battery_read->_BQ_Read
    _BQ_Read->_I2C_Master_Read
    _led_modes->_battery_fade
    _battery_fade->_Map
    _Map->___awdiv
    ___awdiv->___wmul
    _STUSB_9V_12V->_STUSB_Write
    _STUSB_Write->_I2C_Master_Write
    _I2C_Master_Init->___lldiv
    _BQ_init->_BQ_Write
    _BQ_Write->_I2C_Master_Write

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6065
                            _BQ_init
                    _I2C_Master_Init
                           _PIC_init
                           _PPS_lock
                         _PPS_unlock
                           _PWM_init
                       _STUSB_9V_12V
                           _chrg_led
                          _led_modes
                     _read_bq_status
 ---------------------------------------------------------------------------------
 (1) _read_bq_status                                       1     1      0    1835
                                             12 BANK0      1     1      0
                       _battery_read
                       _charge_state
                  _get_battery_volts
                  _set_battery_volts
                           _set_mode
                 _thermal_protection
 ---------------------------------------------------------------------------------
 (2) _thermal_protection                                   0     0      0     772
                         _power_down
                            _readADC
 ---------------------------------------------------------------------------------
 (3) _readADC                                              4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _power_down                                           2     2      0     772
                                              3 BANK0      2     2      0
                           _BQ_Write
 ---------------------------------------------------------------------------------
 (2) _set_mode                                             2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _set_battery_volts                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_battery_volts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _charge_state                                         3     3      0     157
                                              9 BANK0      3     3      0
                            _BQ_Read
 ---------------------------------------------------------------------------------
 (2) _battery_read                                         2     2      0     862
                                              9 BANK0      2     2      0
                            _BQ_Read
                           _BQ_Write
 ---------------------------------------------------------------------------------
 (3) _BQ_Read                                              6     4      2     112
                                              3 BANK0      6     4      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Read                                      3     3      0      45
                                              0 BANK0      3     3      0
                     _I2C_Master_Ack
                    _I2C_Master_Wait
                    _I2C_Master_nAck
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_nAck                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Ack                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _led_modes                                            2     2      0    2328
                                             32 BANK0      2     2      0
                           _RGB_fade
                       _battery_fade
 ---------------------------------------------------------------------------------
 (2) _battery_fade                                         9     9      0    2328
                                             23 BANK0      9     9      0
                                _Map
 ---------------------------------------------------------------------------------
 (3) _Map                                                  8     2      6    1990
                                             15 BANK0      8     2      6
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     244
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     452
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _RGB_fade                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _chrg_led                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _STUSB_9V_12V                                         3     3      0     740
                                              6 BANK0      3     3      0
                        _STUSB_Write
 ---------------------------------------------------------------------------------
 (2) _STUSB_Write                                          5     1      4     740
                                              1 BANK0      5     1      4
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _PWM_init                                             0     0      0       0
                           _PPS_lock
                         _PPS_unlock
 ---------------------------------------------------------------------------------
 (2) _PPS_unlock                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PPS_lock                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     412
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     314
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _BQ_init                                              1     1      0     750
                                              3 BANK0      1     1      0
                           _BQ_Write
 ---------------------------------------------------------------------------------
 (4) _BQ_Write                                             2     1      1     750
                                              1 BANK0      2     1      1
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Write                                     1     1      0      22
                                              0 BANK0      1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  0     0      0    1024
                        _on_off_tact
 ---------------------------------------------------------------------------------
 (8) _on_off_tact                                          3     3      0    1024
                                              9 COMMON     3     3      0
                           _get_mode
                           _power_up
                       i1_power_down
                         i1_set_mode
 ---------------------------------------------------------------------------------
 (9) i1_set_mode                                           2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) i1_power_down                                         2     2      0     296
                                              3 COMMON     2     2      0
                         i1_BQ_Write
 ---------------------------------------------------------------------------------
 (9) _power_up                                             0     0      0     614
                          i1_BQ_init
                         i1_PWM_init
                     i1_STUSB_9V_12V
 ---------------------------------------------------------------------------------
 (10) i1_STUSB_9V_12V                                      3     3      0     340
                                              6 COMMON     3     3      0
                      i1_STUSB_Write
 ---------------------------------------------------------------------------------
 (11) i1_STUSB_Write                                       5     1      4     340
                                              1 COMMON     5     1      4
                 i1_I2C_Master_Start
                  i1_I2C_Master_Stop
                 i1_I2C_Master_Write
 ---------------------------------------------------------------------------------
 (10) i1_PWM_init                                          0     0      0       0
                         i1_PPS_lock
                       i1_PPS_unlock
 ---------------------------------------------------------------------------------
 (11) i1_PPS_unlock                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i1_PPS_lock                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_BQ_init                                           1     1      0     274
                                              3 COMMON     1     1      0
                         i1_BQ_Write
 ---------------------------------------------------------------------------------
 (10) i1_BQ_Write                                          2     1      1     274
                                              1 COMMON     2     1      1
                 i1_I2C_Master_Start
                  i1_I2C_Master_Stop
                 i1_I2C_Master_Write
 ---------------------------------------------------------------------------------
 (11) i1_I2C_Master_Write                                  1     1      0      22
                                              0 COMMON     1     1      0
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (11) i1_I2C_Master_Stop                                   0     0      0       0
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (11) i1_I2C_Master_Start                                  0     0      0       0
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (12) i1_I2C_Master_Wait                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _get_mode                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BQ_init
     _BQ_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _I2C_Master_Init
     ___lldiv
   _PIC_init
   _PPS_lock
   _PPS_unlock
   _PWM_init
     _PPS_lock
     _PPS_unlock
   _STUSB_9V_12V
     _STUSB_Write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _chrg_led
   _led_modes
     _RGB_fade
     _battery_fade
       _Map
         ___awdiv
           ___wmul (ARG)
         ___wmul
   _read_bq_status
     _battery_read
       _BQ_Read
         _I2C_Master_Read
           _I2C_Master_Ack
           _I2C_Master_Wait
           _I2C_Master_nAck
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
       _BQ_Write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _charge_state
       _BQ_Read
         _I2C_Master_Read
           _I2C_Master_Ack
           _I2C_Master_Wait
           _I2C_Master_nAck
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
     _get_battery_volts
     _set_battery_volts
     _set_mode
     _thermal_protection
       _power_down
         _BQ_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
       _readADC

 _ISR (ROOT)
   _on_off_tact
     _get_mode
     _power_up
       i1_BQ_init
         i1_BQ_Write
           i1_I2C_Master_Start
             i1_I2C_Master_Wait
           i1_I2C_Master_Stop
             i1_I2C_Master_Wait
           i1_I2C_Master_Write
             i1_I2C_Master_Wait
       i1_PWM_init
         i1_PPS_lock
         i1_PPS_unlock
       i1_STUSB_9V_12V
         i1_STUSB_Write
           i1_I2C_Master_Start
             i1_I2C_Master_Wait
           i1_I2C_Master_Stop
             i1_I2C_Master_Wait
           i1_I2C_Master_Write
             i1_I2C_Master_Wait
     i1_power_down
       i1_BQ_Write
         i1_I2C_Master_Start
           i1_I2C_Master_Wait
         i1_I2C_Master_Stop
           i1_I2C_Master_Wait
         i1_I2C_Master_Write
           i1_I2C_Master_Wait
     i1_set_mode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     22      2E       6       57.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      3C      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Sep 14 23:25:48 2019

                                  _c 007C                                    _i 007D  
                     _vbus_stat_temp 0047                          __CFG_CP$OFF 0000  
                       ___awdiv@sign 002C                  ___wmul@multiplicand 0022  
                         _PPS_unlock 06D0                          __CFG_LVP$ON 0000  
                                l131 0258                                  l126 067A  
                                l135 027E                                  l305 0231  
                                l314 0625                                  l411 052E  
                                l323 0351                                  l331 0123  
                                l315 0626                                  l172 0308  
                                l405 04E4                                  l341 02C5  
                                l261 05F2                                  l166 03C7  
                                l270 0707                                  l255 0509  
                                l337 02C5                                  l273 06CF  
                                l362 0693                                  l282 0432  
                                l258 05E6                                  l371 06EA  
                                l515 01DE                                  l291 0595  
                                l267 06C8                                  l356 0495  
                                l276 06D6                                  l380 0700  
                                l365 06F0                                  l285 038F  
                                l374 06A9                                  l359 0688  
                                l279 06B1                                  l632 0183  
                                l288 060F                                  l481 05B5  
                                l377 0704                                  l385 0551  
                                l394 04BE                                  l388 063D  
                                l479 05A1                                  _RA2 0062  
                                _RA5 0065                                  _RC5 0075  
                                _PR2 028D                                  _ISR 0004  
                                u800 0548                                  u801 0547  
                                u810 059D                                  u811 059C  
                                u910 0165                                  u911 0164  
                                u760 068D                                  u840 05B1  
                                u761 068C                                  u905 0157  
                                u841 05B0                                  u825 05A2  
                                u770 0693                                  u930 0175  
                                u850 012A                                  u771 0692  
                                u931 0174                                  u915 0161  
                                u851 0129                                  u835 05A7  
                                u940 017A                                  u860 0135  
                                u941 0179                                  u925 016B  
                                u861 0134                                  u870 0146  
                                u950 05EA                                  u871 0145  
                                u951 05E9                                  u960 061D  
                                u961 061C                                  u890 0156  
                                u970 0675                                  u891 0155  
                                u971 0674                                  u885 014A  
                                u985 0581                                  u995 058C  
                                _Map 04E5                                  _dir 004D  
                       __CFG_BORV$LO 0000                                  wreg 0009  
               __end_ofi1_power_down 0654                        __CFG_BBEN$OFF 0000  
                   ??_read_bq_status 002C                          _STUSB_Write 04BF  
                               ?_ISR 0070                         __CFG_ZCD$OFF 0000  
                               ?_Map 002F                                 l2101 0419  
                               l2031 039E                                 l2111 0422  
                               l2103 041C                                 l2041 03A6  
                               l2033 03A0                                 l2025 0390  
                               l2121 042F                                 l2113 0424  
                               l2105 041D                                 l2201 02CC  
                               l2051 03AB                                 l2043 03A7  
                               l2035 03A3                                 l2027 0393  
                               l2115 0429                                 l2107 041E  
                               l2131 01EF                                 l2123 01DF  
                               l2211 02F7                                 l2203 02CF  
                               l2061 03C2                                 l2053 03AE  
                               l2045 03A8                                 l2037 03A4  
                               l2029 039D                                 l2117 042B  
                               l2109 0420                                 l2141 020A  
                               l2133 01F5                                 l2125 01E4  
                               l2213 02FA                                 l2205 02D2  
                               l2071 046A                                 l2063 03C3  
                               l2055 03B3                                 l2047 03A9  
                               l2039 03A5                                 l2119 042D  
                               l2151 021E                                 l2143 0210  
                               l2135 01FA                                 l2127 01E6  
                               l2215 0300                                 l2207 02D5  
                               l2073 046B                                 l2065 03C5  
                               l2057 03BA                                 l2049 03AA  
                               l2081 03FF                                 l2161 022B  
                               l2145 0213                                 l2137 01FF  
                               l2129 01EC                                 l2217 0304  
                               l2209 02F1                                 l1611 0688  
                               l2075 0493                                 l2067 03C6  
                               l2059 03BC                                 l2091 040C  
                               l2083 0402                                 l2163 022D  
                               l2155 0221                                 l2147 0216  
                               l2139 0201                                 l2171 028F  
                               l1613 068D                                 l1621 06EE  
                               l2077 0352                                 l2069 0467  
                               l2093 040E                                 l2085 0405  
                               l2157 0227                                 l2149 021C  
                               l1701 0149                                 l2181 02A6  
                               l2173 0293                                 l2165 027F  
                               l1623 06E5                                 l2095 0413  
                               l2087 0407                                 l2079 050A  
                               l2159 0229                                 l1711 0169  
                               l1703 014E                                 l2183 02A8  
                               l2175 0299                                 l2167 0285  
                               l1631 0701                                 l1625 06E8  
                               l2097 0415                                 l2089 0409  
                               l1721 017F                                 l1713 016A  
                               l1705 0152                                 l2185 02B8  
                               l2177 029D                                 l2169 028A  
                               l1633 06FD                                 l1619 06EB  
                               l1627 06A2                                 l2099 0417  
                               l1715 016F                                 l1707 0156  
                               l2179 02A3                                 l1651 0534  
                               l1811 0575                                 l1629 06A5  
                               l1709 0165                                 l1717 0175  
                               l1901 00D9                                 l1661 054C  
                               l1653 0539                                 l1821 05F3  
                               l1813 057E                                 l1805 0668  
                               l1647 0629                                 l1719 017A  
                               l1671 059D                                 l1911 0100  
                               l1903 00F1                                 l1663 054F  
                               l1655 053F                                 l1823 05FC  
                               l1815 0589                                 l1831 0705  
                               l1743 0612                                 l1735 05D6  
                               l1807 0675                                 l2199 02C6  
                               l1921 0184                                 l1681 0124  
                               l1673 05A6                                 l1913 011B  
                               l1905 00F3                                 l1657 0542  
                               l1649 0531                                 l1753 0498  
                               l1825 0609                                 l1817 0594  
                               l1745 0617                                 l1737 05E4  
                               l1809 0676                                 l1931 01AE  
                               l1923 0195                                 l1851 06AA  
                               l1691 0135                                 l1683 0126  
                               l1675 05AB                                 l1667 0596  
                               l1915 011D                                 l1907 00F7  
                               l1659 0548                                 l1755 04B6  
                               l1835 06C4                                 l1747 061D  
                               l1739 05EA                                 l1933 01C0  
                               l1925 0198                                 l1941 01D6  
                               l1861 031D                                 l1853 030C  
                               l1693 013A                                 l1685 012A  
                               l1677 05B1                                 l1669 0599  
                               l1749 04E5                                 l1917 011F  
                               l1909 00FA                      __end_of_BQ_Read 04BF  
                               l1829 06CB                                 l1935 01C8  
                               l1927 01A3                                 l1847 06D0  
                               l1919 04C1                                 l1871 0335  
                               l1855 0311                                 l1863 031E  
                               l1695 013E                                 l1687 012F  
                               l1937 01C9                                 l1929 01A7  
                               l1849 06D5                                 l1881 034B  
                               l1873 0338                                 l1865 0323  
                               l1857 0312                                 l1697 0140  
                               l1689 0131                                 l1961 0243  
                               l1953 0232                                 l1939 01D0  
                               l1883 034E                                 l1875 033E  
                               l1867 032C                                 l1859 0317  
                               l1699 0146                                 l1891 00B1  
                               l1971 025A                                 l1963 0249  
                               l1955 0238                                 l1877 0340  
                               l1869 0332                                 l1893 00B7  
                               l1885 00AC                                 l1981 027B  
                               l1973 0265                                 l1965 024A  
                               l1957 023D                                 l1879 0344  
                               l1887 00B1                                 l1975 0268  
                               l1967 0251                                 l1959 023E  
                               l1897 00BB                                 l1889 00B1  
                               l1977 0273                                 l1969 0256  
                               l1899 00D3                                 l1979 0277  
                               u1000 0311                                 u1001 0310  
                               u1010 031D                                 u1011 031C  
                               u1100 01A7                                 u1020 0332  
                               u1101 01A6                                 u1021 0331  
                               u1030 033E                                 u1031 033D  
                               u1120 01C0                                 u1040 034B  
                               u1200 0273                                 u1121 01BF  
                               u1041 034A                                 u1201 0272  
                               u1050 00B7                                 u1115 01A8  
                               u1051 00B6                                 u1140 01D6  
                               u1060 00D9                                 u1141 01D5  
                               u1125 01BC                                 u1061 00D8  
                               u1070 0100                                 u1135 01CA  
                               u1071 00FF                                 u1080 0195  
                               u1400 01FF                                 u1160 0238  
                               u1081 0194                                 u1401 01FE  
                               u1161 0237                                 u1410 0210  
                               u1170 023D                                 u1411 020F  
                               u1171 023C                                 u1420 021C  
                               u1180 0249                                 u1500 0300  
                               u1421 021B                                 u1181 0248  
                               u1501 02FF                                 u1430 0227  
                               u1190 0256                                 u1095 0199  
                               u1431 0226                                 u1191 0255  
                               u1360 0479                                 u1440 0285  
                               u1441 0284                                 u1370 01E4  
                               u1450 028F                                 u1371 01E3  
                               u1451 028E                                 u1380 01EC  
                               u1460 0299                                 u1365 0475  
                               u1381 01EB                                 u1461 0298  
                               u1517 05DF                                 u1390 01F5  
                               u1470 02A3                                 u1391 01F4  
                               u1471 02A2                                 u1527 0602  
                               u1537 02AE                                 u1490 02F7  
                               u1547 02BE                                 u1491 02F6  
                               u1557 0327                                 u1567 0205  
                               Map@x 002F                                 _TMR2 028C  
               __end_of_charge_state 0596                      __end_of_BQ_init 0390  
                               _WPUA 1F39                         _STUSB_9V_12V 050A  
                      __CFG_FCMEN$ON 0000                                 _main 02C6  
                               _mode 0046                          ?i1_BQ_Write 0071  
                               btemp 007E                        __CFG_BOREN$ON 0000  
                         i1_set_mode 06D7                                 start 0018  
                      __CFG_CSWEN$ON 0000                                ??_ISR 007C  
                              ??_Map 0035                          ?i1_PPS_lock 0070  
               __end_of_battery_fade 0124                     ?_I2C_Master_Init 002E  
                   ?_I2C_Master_Read 0070                     ?_I2C_Master_Wait 0070  
               __end_of_battery_read 0610                     ?_I2C_Master_nAck 0070  
                   ?_I2C_Master_Stop 0070                   __size_ofi1_BQ_init 0037  
                        ?i1_PWM_init 0070                                ?_main 0070  
                    __end_of___awdiv 0184                        __CFG_WDTE$OFF 0000  
                    __end_of___lldiv 01DF                                _T1CLK 0211  
                    ___awdiv@divisor 0026                                _T1CON 020E  
                              _IOCAF 1F3F                                _IOCAN 1F3E  
                              _IOCAP 1F3D                     __end_of_BQ_Write 063E  
                              i1l311 0687                                i1l151 007D  
                              i1l314 0652                                i1l138 0044  
                              i1l411 0574                                i1l315 0653  
                              i1l139 0032                                i1l163 0016  
                              i1l405 05D5                                i1l157 00AB  
                              i1l264 070A                                i1l362 069F  
                              i1l282 0466                                i1l371 06F6  
                              i1l267 06DD                                i1l276 06E4  
                              i1l365 06FC                                i1l285 03FE  
                              i1l374 06C1                                i1l359 0694  
                              i1l279 06B9                                i1l388 0667  
                    ___awdiv@counter 002B                                _TMR1H 020D  
                              _TMR1L 020C                                _TRISA 0012  
                              _TRISC 0014                                u78_20 0699  
                              u78_21 0698                                u79_20 069F  
                              u79_21 069E                     __end_of_RGB_fade 0352  
                   __end_of_PIC_init 03C8                        __CFG_WRTB$OFF 0000  
                      __CFG_WRTC$OFF 0000                      __end_of_readADC 05F3  
                              _color 0045                __end_ofi1_STUSB_Write 05D6  
                   __end_of_PPS_lock 06B2                     __end_of_PWM_init 0433  
                              status 0003                                wtemp0 007E  
                     i1_STUSB_9V_12V 0552                       __CFG_MCLRE$OFF 0000  
                    __initialization 001A                         __end_of_main 030C  
                     __CFG_SAFEN$OFF 0000                         ?_on_off_tact 0070  
        __size_of_thermal_protection 0013  set_battery_volts@battery_volts_temp 0021  
                        ?_PPS_unlock 0070                               ??_main 0042  
                __size_ofi1_BQ_Write 0014                            ??_BQ_Read 0025  
                  ?_I2C_Master_Start 0070                    ?_I2C_Master_Write 0070  
                          ??_BQ_init 0023                          BQ_Read@data 0028  
                 ??_I2C_Master_Start 0020                               _ADCON0 009D  
                             _ADCON1 009E                   ??_I2C_Master_Write 0020  
                     STUSB_Write@reg 0025                               _ADRESH 009C  
                   ___awdiv@dividend 0028                               _ANSELA 1F38  
                             _ANSELC 1F4E                               _IOCAF5 F9FD  
                             _RC0PPS 1F20                               _RC1PPS 1F21  
                             _RC2PPS 1F22                               _RC3PPS 1F23  
                             i1l2001 0067                               i1l2011 0089  
                             i1l2003 006C                               _RC4PPS 1F24  
                             i1l2021 00A5                               i1l2013 008E  
                             i1l2005 0074                               i1l2023 00A7  
                             i1l2015 0093                               i1l2007 0079  
                             i1l2017 0097                               i1l2009 0083  
                             i1l2019 009B                               i1l1615 0694  
                             i1l2191 000A                               u121_20 0037  
                             i1l1617 0699                               i1l1641 06F4  
                             i1l1801 03C8                               u121_21 0036  
                             i1l2193 000D                               i1l1635 06F7  
                             i1l1643 06BB                               i1l1731 0655  
                             i1l1803 0552                               i1l2195 000F  
                             i1l2187 0006                               i1l1637 06FA  
                             i1l1645 06BE                               i1l1725 06DE  
                             i1l1733 05B7                               i1l2197 0015  
                             i1l2189 0008                               i1l1639 06F1  
                             i1l1727 06E3                               u130_20 0074  
                             u122_20 0042                               i1l1729 06B2  
                             i1l1761 0436                               i1l1841 0683  
                             u130_21 0073                               u122_21 0041  
                             i1l1843 0708                               i1l1771 0442  
                             i1l1763 0439                               i1l1781 0450  
                             i1l1773 0447                               i1l1765 043B  
                             i1l1837 067B                               i1l1791 0458  
                             i1l1783 0451                               i1l1775 0449  
                             i1l1767 043D                               i1l1759 0433  
                             i1l1839 0681                               i1l1951 064A  
                             u115_20 064A                               u131_20 0082  
                             u123_20 0049                               i1l1793 045D  
                             i1l1785 0452                               i1l1777 044B  
                             i1l1769 0440                               u115_21 0649  
                             i1l1945 06D8                               u131_21 0081  
                             u123_21 0048                               i1l1795 045F  
                             i1l1787 0454                               i1l1779 044D  
                             i1l1947 063F                               i1l1797 0461  
                             i1l1789 0456                               i1l1949 0645  
                             i1l1799 0463                               i1l1991 0042  
                             i1l1983 002F                               u132_20 0089  
                             u124_20 004E                               u132_21 0088  
                             u124_21 004D                               i1l1993 0049  
                             i1l1985 0037                       __CFG_WDTCCS$SC 0000  
                             i1l1995 004E                               i1l1987 003B  
                             i1l1997 0054                               i1l1989 003C  
                             i1l1999 0063                               u133_20 008E  
                             u125_20 0054                               u133_21 008D  
                             u125_21 0053                               u134_20 0093  
                             u126_20 005A                               u134_21 0092  
                             u126_21 0058                               u135_20 00A5  
                             u127_20 005B                               u135_21 00A4  
                             u128_20 0063                               u128_21 0062  
                             u129_20 006C                               _INTCON 000B  
                             u129_21 006B               __end_ofi1_STUSB_9V_12V 0575  
                             u148_20 0015                               u148_21 0014  
                __size_ofi1_PPS_lock 0008                    __end_ofi1_BQ_init 03FF  
                             _TMR1IE 38D0                               _TMR1IF 3880  
                             _PWM3EN 18B7                               _TMR2IF 3881  
                             _PWM4EN 18D7                               _PWM5EN 18F7  
                             _TMR1ON 1070                               _TMR2ON 1477  
                __size_ofi1_PWM_init 0034                    _get_battery_volts 0705  
                   charge_state@temp 002B                    _set_battery_volts 06C9  
                    on_off_tact@exit 007A                          ?i1_set_mode 0070  
                     __CFG_PWRTE$OFF 0000                     __end_of_chrg_led 0232  
                 ?_get_battery_volts 0070                   ?_set_battery_volts 0070  
                   __end_of_get_mode 070B                               ___wmul 0596  
                          ??___awdiv 002A                       __CFG_STVREN$ON 0000  
                          ??___lldiv 0028                  ??_get_battery_volts 0020  
                ??_set_battery_volts 0020                     ___awdiv@quotient 002D  
            __size_of_I2C_Master_Ack 0004                __size_ofi1_power_down 0016  
                          ??_readADC 0022          __size_ofi1_I2C_Master_Start 0006  
        __size_ofi1_I2C_Master_Write 0008                     __end_of_set_mode 06C9  
              __size_of_charge_state 0021                     __end_of_power_up 0688  
                        BQ_Write@reg 0022                      ?i1_STUSB_9V_12V 0070  
          __end_of_get_battery_volts 0708            __end_of_set_battery_volts 06D0  
            __end_of__initialization 002B                  __size_of_PPS_unlock 0007  
                          ?_BQ_Write 0021                __size_of_battery_fade 0078  
                       i1_power_down 063E                __size_of_battery_read 001D  
                     __pcstackCOMMON 0070                            ?_RGB_fade 0070  
                          ?_PIC_init 0070                         __pidataBANK0 070B  
                       _charge_state 0575                            ?_PPS_lock 0070  
                          ?_PWM_init 0070                  __size_ofi1_set_mode 0007  
                       ?_STUSB_Write 0021                   __size_of_led_modes 0047  
                         __pbssBANK0 0042                         _battery_fade 00AC  
                       _battery_read 05F3                        ?i1_PPS_unlock 0070  
                       ??i1_BQ_Write 0072                           ??_BQ_Write 0022  
                         __pmaintext 02C6                           ??_RGB_fade 0020  
                         ??_PIC_init 0020                i1power_down@ship_mode 0074  
                            ?___wmul 0020                           __pintentry 0004  
                       ??i1_PPS_lock 0070                         ??i1_PWM_init 0070  
                i1set_mode@mode_temp 0071                           ??_PPS_lock 0020  
               __size_of_on_off_tact 007D                              _T2CKPS0 1474  
                            _T2CKPS1 1475                              _T2CKPS2 1476  
                         ??_PWM_init 0020                              _BQ_Read 0496  
                 __end_ofi1_BQ_Write 0668                              _BQ_init 0352  
                            _PWM3DCH 0315                              _PWM3DCL 0314  
                            _PWM4DCH 0319                              _PWM4DCL 0318  
                            _PWM5DCH 031D                            ?_chrg_led 0070  
                            _PWM5DCL 031C                              _PWM3CON 0316  
                            _PWM4CON 031A                              _PWM5CON 031E  
                            _SSP1ADD 018D                              _PPSLOCK 1E8F  
                            _SSP1BUF 018C                              _VREGCON 0812  
                          ?_get_mode 0070                    STUSB_Write@data_1 0021  
                  STUSB_Write@data_2 0022                    STUSB_Write@data_3 0023  
                  STUSB_Write@data_4 0024                     on_off_tact@count 007B  
                     ??i1_PPS_unlock 0070           __size_of_get_battery_volts 0003  
         __size_of_set_battery_volts 0007                   __end_ofi1_PPS_lock 06BA  
                 __end_ofi1_PWM_init 0467                   _battery_volts_temp 0049  
                          ?_set_mode 0070                              ___awdiv 0124  
                          ?_power_up 0070                              ___lldiv 0184  
                  __end_of_led_modes 02C6                      __size_of___wmul 0020  
                     _I2C_Master_Ack 0701                         ??_PPS_unlock 0020  
                            __ptext1 0232                              __ptext2 0668  
                            __ptext3 05D6                              __ptext4 0610  
                            __ptext5 06C2                              __ptext6 06C9  
                            __ptext7 0705                              __ptext8 0575  
                            __ptext9 05F3                    i1_I2C_Master_Wait 0694  
                  i1_I2C_Master_Stop 06F1                      __CFG_WRTAPP$OFF 0000  
                            _readADC 05D6                         __size_of_ISR 0014  
                       __size_of_Map 0025                              _mode_en 0048  
                 ?i1_I2C_Master_Wait 0070                   ?i1_I2C_Master_Stop 0070  
                    __CFG_WRTSAF$OFF 0000             __size_of_I2C_Master_Init 002F  
           __size_of_I2C_Master_Read 0023             __size_of_I2C_Master_Wait 000C  
           __size_of_I2C_Master_nAck 0004             __size_of_I2C_Master_Stop 0006  
                         ??_chrg_led 0020                           ??_get_mode 0070  
               end_of_initialization 002B                  ??i1_I2C_Master_Wait 0070  
                ??i1_I2C_Master_Stop 0070                           _tmr1_count 004B  
                       ??i1_set_mode 0070            __size_of_I2C_Master_Start 0006  
                 __end_of_PPS_unlock 06D7            __size_of_I2C_Master_Write 000A  
                    ___lldiv@divisor 0020                            i1_BQ_init 03C8  
                    ___lldiv@counter 002D              __size_of_read_bq_status 004D  
                         ??_set_mode 0020                     i1STUSB_Write@reg 0075  
             __end_of_I2C_Master_Ack 0705           __end_of_thermal_protection 067B  
                         ??_power_up 0079               __size_ofi1_STUSB_Write 0020  
          __end_ofi1_I2C_Master_Wait 06A0            __end_ofi1_I2C_Master_Stop 06F7  
                       BQ_Write@data 0021                __CFG_WDTCPS$WDTCPS_31 0000  
                          Map@outMax 0034                            Map@outMin 0033  
                         _power_down 0610                            _TRISAbits 0012  
                          _TRISCbits 0014                   __end_ofi1_set_mode 06DE  
                   ??i1_STUSB_9V_12V 0076                     __CFG_FEXTOSC$OFF 0000  
               __size_of_STUSB_Write 0026                        battery_fade@v 003F  
                         ?i1_BQ_init 0070                      ?_I2C_Master_Ack 0070  
                  __size_of_BQ_Write 0017                       __end_of___wmul 05B6  
                  __size_of_RGB_fade 0046                    __size_of_PIC_init 0038  
         __end_ofi1_I2C_Master_Start 06FD           __end_ofi1_I2C_Master_Write 06C2  
               __end_ofi1_PPS_unlock 06E5                       i1BQ_Write@data 0071  
                  __size_of_PPS_lock 0008                  start_initialization 001A  
                        __end_of_ISR 0018                    __size_of_PWM_init 0034  
                        __end_of_Map 050A                        i1_STUSB_Write 05B6  
                      ?_STUSB_9V_12V 0070                    ??_I2C_Master_Init 0032  
                  ??_I2C_Master_Read 0020                    ??_I2C_Master_Wait 0020  
                  ??_I2C_Master_nAck 0020                           BQ_Read@reg 0027  
                  ??_I2C_Master_Stop 0020                     __CFG_LPBOREN$OFF 0000  
                           ??___wmul 0024                          __pdataBANK0 004D  
             i1I2C_Master_Write@data 0070           __size_ofi1_I2C_Master_Wait 000C  
         __size_ofi1_I2C_Master_Stop 0006                          __pbssCOMMON 007C  
                           ?_BQ_Read 0023                            ___latbits 0001  
                        ?_power_down 0070                        __pcstackBANK0 0020  
                           ?_BQ_init 0070                        _battery_volts 0044  
                     ?i1_STUSB_Write 0071                       ??_STUSB_9V_12V 0026  
                  __size_of_chrg_led 0053                    __size_of_get_mode 0003  
                   _I2C_Master_Start 06EB                     _I2C_Master_Write 06A0  
                     _read_bq_status 0232                          ??i1_BQ_init 0073  
                          _chrg_stat 0042                             ?___awdiv 0026  
                           ?___lldiv 0020                        ??_on_off_tact 0079  
                  __size_of_set_mode 0007                     __CFG_PPS1WAY$OFF 0000  
               I2C_Master_Write@data 0020                    __size_of_power_up 000D  
                          _led_modes 027F                             ?_readADC 0020  
               __CFG_RSTOSC$HFINTPLL 0000                             _T2CLKCON 0290  
                          _mode_temp 004A                             _T2OUTPS0 1470  
                           _T2OUTPS1 1471                             _T2OUTPS2 1472  
                           _T2OUTPS3 1473                            _reg_state 004C  
             __end_of_read_bq_status 027F                       ___wmul@product 0024  
                           _PIE0bits 0716                             _BQ_Write 0627  
                __size_of_power_down 0017                             _RGB_fade 030C  
                           _PIC_init 0390                    __CFG_BBSIZE$BB512 0000  
                           Map@inMax 0032                             Map@inMin 0031  
              __size_ofi1_PPS_unlock 0007                             _SSP1CON1 0190  
                           _SSP1CON2 0191                             _SSP1STAT 018F  
                i1STUSB_Write@data_1 0071                  i1STUSB_Write@data_2 0072  
                i1STUSB_Write@data_3 0073                  i1STUSB_Write@data_4 0074  
                          _vbus_stat 0043                           _ADCON0bits 009D  
                           _PPS_lock 06AA                    ___wmul@multiplier 0020  
                         ?_led_modes 0070                             _PWM_init 03FF  
                __end_of_on_off_tact 00AC                   _thermal_protection 0668  
                    ??i1_STUSB_Write 0075                     __size_of_BQ_Read 0029  
                I2C_Master_Read@data 0022                     __size_of_BQ_init 003E  
                      i1BQ_Write@reg 0072                  ?_thermal_protection 0070  
                    ?_read_bq_status 0070                         i1_PPS_unlock 06DE  
                   ??_I2C_Master_Ack 0020                        ?i1_power_down 0070  
                   __size_of___awdiv 0060                     __size_of___lldiv 005B  
               __end_of_STUSB_9V_12V 052F                 ??_thermal_protection 0025  
                      ?_charge_state 0070                      _I2C_Master_Init 0467  
                   __size_of_readADC 001D                      _I2C_Master_Read 052F  
                    _I2C_Master_Wait 0688                      _I2C_Master_nAck 06FD  
                    _I2C_Master_Stop 06E5                             _chrg_led 01DF  
                      ??_STUSB_Write 0025                             __ptext10 0496  
                           __ptext11 052F                             __ptext20 01DF  
                           __ptext12 06FD                             __ptext21 050A  
                           __ptext13 0701                           _T1GCONbits 020F  
                           __ptext30 0627                             __ptext22 04BF  
                           __ptext14 027F                             __ptext31 06A0  
                           __ptext23 03FF                             __ptext15 00AC  
                           __ptext40 0552                             __ptext32 06E5  
                           __ptext24 06D0                             __ptext16 04E5  
                           __ptext41 05B6                             __ptext33 06EB  
                           __ptext25 06AA                             __ptext17 0596  
                           __ptext50 0694                             __ptext42 0433  
                           __ptext34 0688                             __ptext26 0390  
                           __ptext18 0124                             __ptext51 0708  
                           __ptext43 06DE                             __ptext27 0467  
                           __ptext19 030C                             __ptext44 06B2  
                           __ptext36 002F                             __ptext28 0184  
                           __ptext45 03C8                             __ptext37 06D7  
                           __ptext29 0352                             __ptext46 0654  
                           __ptext38 063E                             __ptext47 06BA  
                           __ptext39 067B                             __ptext48 06F1  
                           __ptext49 06F7                         _SSP1CON2bits 0191  
                           _get_mode 0708                   i1_I2C_Master_Start 06F7  
                 i1_I2C_Master_Write 06BA                        ?_battery_fade 0070  
                      ?_battery_read 0070                        __size_of_main 0046  
                ?i1_I2C_Master_Start 0070                  ?i1_I2C_Master_Write 0070  
               __CFG_WDTCWS$WDTCWS_7 0000                       ??i1_power_down 0073  
                           _set_mode 06C2                  power_down@ship_mode 0024  
                           int$flags 007E                             _power_up 067B  
                     ??_charge_state 0029                          _on_off_tact 002F  
                 I2C_Master_Init@clk 002E                   I2C_Master_Read@ack 0021  
                        ??_led_modes 0040                 ??i1_I2C_Master_Start 0070  
               ??i1_I2C_Master_Write 0070             __end_of_I2C_Master_Start 06F1  
           __end_of_I2C_Master_Write 06AA                           _INTCONbits 000B  
                       ??_power_down 0023                       ??_battery_fade 0037  
                     ??_battery_read 0029                             intlevel1 0000  
                   ___lldiv@dividend 0024                           i1_BQ_Write 0654  
                __end_of_STUSB_Write 04E5                    __CFG_CLKOUTEN$OFF 0000  
            __size_ofi1_STUSB_9V_12V 0023                   __end_of_power_down 0627  
            __end_of_I2C_Master_Init 0496              __end_of_I2C_Master_Read 0552  
                         i1_PPS_lock 06B2              __end_of_I2C_Master_Wait 0694  
            __end_of_I2C_Master_nAck 0701              __end_of_I2C_Master_Stop 06EB  
                         i1_PWM_init 0433                           _SSP1DATPPS 1EC6  
                         _SSP1CLKPPS 1EC5                     ___lldiv@quotient 0029  
                  set_mode@mode_temp 0021                __size_of_STUSB_9V_12V 0025  
